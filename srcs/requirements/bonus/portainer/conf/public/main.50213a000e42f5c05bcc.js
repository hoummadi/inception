!function(e){function t(t){for(var a,o,s=t[0],l=t[1],c=t[2],u=0,p=[];u<s.length;u++)o=s[u],Object.prototype.hasOwnProperty.call(r,o)&&r[o]&&p.push(r[o][0]),r[o]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);for(d&&d(t);p.length;)p.shift()();return i.push.apply(i,c||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],a=!0,s=1;s<n.length;s++){var l=n[s];0!==r[l]&&(a=!1)}a&&(i.splice(t--,1),e=o(o.s=n[0]))}return e}var a={},r={0:0},i=[];function o(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=a,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)o.d(n,a,function(t){return e[t]}.bind(null,a));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="";var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var d=l;i.push([318,1]),n()}([,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"ResourceControlOwnership",(function(){return a}));var a=Object.freeze({PUBLIC:"public",PRIVATE:"private",RESTRICTED:"restricted",ADMINISTRATORS:"administrators"})},,,,function(e,t,n){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e){try{var t=JSON.parse(e);if(t&&"object"===a(t))return t}catch(e){}return!1}function i(e){var t="["+e.replace(/\n/g," ").replace(/\}\s*\{/g,"}, {")+"]";return angular.fromJson(t)}function o(e){var t={};return e?(r(e)?t=angular.fromJson(e):t.message=e,t):t}function s(e){return{logs:e}}function l(e){var t,n=[];if(r(e))if(t=e,"[object Array]"!==Object.prototype.toString.call(t)){var a=angular.fromJson(e);n.push(a)}else n=angular.fromJson(e);else n.push({message:e});return n}n.r(t),n.d(t,"jsonObjectsToArrayHandler",(function(){return i})),n.d(t,"genericHandler",(function(){return o})),n.d(t,"logsHandler",(function(){return s})),n.d(t,"deleteImageHandler",(function(){return l}))},,,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"RegistryTypes",(function(){return a}));var a=Object.freeze({QUAY:1,AZURE:2,CUSTOM:3,GITLAB:4})},,,,,,,,,function(e,t,n){"use strict";function a(){this.UseRegistry=!0,this.Registry={},this.Image=""}n.r(t),n.d(t,"PorImageRegistryModel",(function(){return a}))},,function(e,t,n){"use strict";n.r(t),n.d(t,"AccessControlFormData",(function(){return r}));var a=n(7);function r(){this.AccessControlEnabled=!0,this.Ownership=a.ResourceControlOwnership.PRIVATE,this.AuthorizedUsers=[],this.AuthorizedTeams=[]}},,function(e,t,n){"use strict";n.r(t),n.d(t,"ResourceControlViewModel",(function(){return r}));var a=n(7);function r(e){var t;this.Id=e.Id,this.Type=e.Type,this.ResourceId=e.ResourceId,this.UserAccesses=e.UserAccesses,this.TeamAccesses=e.TeamAccesses,this.Public=e.Public,this.System=e.System,this.Ownership=(t=this).Public?a.ResourceControlOwnership.PUBLIC:1===t.UserAccesses.length&&0===t.TeamAccesses.length?a.ResourceControlOwnership.PRIVATE:t.UserAccesses.length>1||t.TeamAccesses.length>0?a.ResourceControlOwnership.RESTRICTED:a.ResourceControlOwnership.ADMINISTRATORS}},,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";function a(e,t,n,a,r,i,o,s){this.Name=e,this.Os=t||"",this.Architecture=n||"",this.Size=a||0,this.ImageDigest=r||"",this.ImageId=i||"",this.ManifestV2=o||{},this.History=s||[]}function r(e,t,n,a){this.Name=e,this.ImageId=t,this.ImageDigest=n,this.ManifestV2=a}function i(e,t){this.Tag=e,this.Manifest=t}n.r(t),n.d(t,"RepositoryTagViewModel",(function(){return a})),n.d(t,"RepositoryShortTag",(function(){return r})),n.d(t,"RepositoryAddTagPayload",(function(){return i}))},,,,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"RegistryViewModel",(function(){return i})),n.d(t,"RegistryManagementConfigurationDefaultModel",(function(){return o})),n.d(t,"RegistryDefaultModel",(function(){return s})),n.d(t,"RegistryCreateRequest",(function(){return l}));var a=n(83),r=n(21);function i(e){this.Id=e.Id,this.Type=e.Type,this.Name=e.Name,this.URL=e.URL,this.Authentication=e.Authentication,this.Username=e.Username,this.Password=e.Password,this.AuthorizedUsers=e.AuthorizedUsers,this.AuthorizedTeams=e.AuthorizedTeams,this.UserAccessPolicies=e.UserAccessPolicies,this.TeamAccessPolicies=e.TeamAccessPolicies,this.Checked=!1,this.Gitlab=e.Gitlab}function o(e){this.Authentication=!1,this.Password="",this.TLS=!1,this.TLSSkipVerify=!1,this.TLSCACertFile=null,this.TLSCertFile=null,this.TLSKeyFile=null,e.Type!==r.RegistryTypes.QUAY&&e.Type!==r.RegistryTypes.AZURE||(this.Authentication=!0,this.Username=e.Username,this.TLS=!0),e.Type===r.RegistryTypes.CUSTOM&&e.Authentication&&(this.Authentication=!0,this.Username=e.Username)}function s(){this.Type=r.RegistryTypes.CUSTOM,this.URL="",this.Name="",this.Authentication=!1,this.Username="",this.Password=""}function l(e){this.Name=e.Name,this.Type=e.Type,this.URL=Object(a.a)(e.URL,/^https?\:\/\//i,""),this.Authentication=e.Authentication,e.Authentication&&(this.Username=e.Username,this.Password=e.Password),e.Type===r.RegistryTypes.GITLAB&&(this.Gitlab={ProjectId:e.Gitlab.ProjectId,InstanceURL:e.Gitlab.InstanceURL,ProjectPath:e.Gitlab.ProjectPath})}},function(e,t,n){"use strict";function a(){this.Directory="/cio/",this.Capacity=20,this.Redundancy=2,this.Provisioning="thin",this.Type="ssd",this.MinIOPS=100,this.MaxIOPS=2e3,this.MinBandwidth=1,this.MaxBandwidth=100,this.Filesystem="btrfs",this.SnapshotEnabled=!1,this.SnapshotInterval=1440,this.SnapshotMax=1,this.EncryptionEnabled=!1,this.InterfaceType="",this.InterfaceDriver="",this.InterfaceNetwork="",this.InterfaceConf="",this.Labels=[]}function r(e){this.Name=e,this.Checked=!1}function i(e,t){this.Name=e,this.Directory=t.directory,this.Capacity=t.capacity,this.Provisioning=t.provision,this.Type=t.type,this.Redundancy=t.level,t.iops&&(this.MinIOPS=t.iops.min,this.MaxIOPS=t.iops.max),t.bandwidth&&(this.MinBandwidth=t.bandwidth.min,this.MaxBandwidth=t.bandwidth.max),t.filesystem&&(this.Filesystem=t.filesystem.type);var n=t.service;n.snapshot?(this.SnapshotEnabled=n.snapshot.enabled,this.SnapshotInterval=n.snapshot.interval,this.SnapshotMax=n.snapshot.max):this.SnapshotEnabled=!1,n.encryption?this.EncryptionEnabled=n.encryption.enabled:this.EncryptionEnabled=!1,t.interface&&(this.InterfaceType=t.interface.type,this.InterfaceDriver=t.interface.driver,this.InterfaceNetwork=t.interface.network,this.InterfaceConf=t.interface.conf),t.label?this.Labels=t.label:this.Labels=[]}function o(e){this.name=e.Name,this.capacity=e.Capacity,this.directory=e.Directory,this.provision=e.Provisioning,this.type=e.Type,this.level=e.Redundancy,e.MinIOPS&&e.MaxIOPS&&(this.iops={min:e.MinIOPS,max:e.MaxIOPS}),e.MinBandwidth&&e.MaxBandwidth&&(this.bandwidth={min:e.MinBandwidth,max:e.MaxBandwidth}),this.filesystem={type:e.Filesystem};var t={};t.snapshot={enabled:e.SnapshotEnabled},e.SnapshotEnabled&&(t.snapshot.interval=e.SnapshotInterval,t.snapshot.max=e.SnapshotMax),t.encryption={enabled:e.EncryptionEnabled},this.service=t,this.interface={driver:e.InterfaceDriver,network:e.InterfaceNetwork,conf:e.InterfaceConf},e.InterfaceType&&(this.interface.type=e.InterfaceType),this.label=e.Labels}n.r(t),n.d(t,"StoridgeProfileDefaultModel",(function(){return a})),n.d(t,"StoridgeProfileListModel",(function(){return r})),n.d(t,"StoridgeProfileModel",(function(){return i})),n.d(t,"StoridgeCreateProfileRequest",(function(){return o}))},function(e,t,n){"use strict";n.r(t),n.d(t,"ScheduleDefaultModel",(function(){return i})),n.d(t,"ScheduleModel",(function(){return s})),n.d(t,"ScriptExecutionTaskModel",(function(){return c})),n.d(t,"ScheduleCreateRequest",(function(){return d})),n.d(t,"ScheduleUpdateRequest",(function(){return u}));var a=n(38),r=n(81);function i(){this.Name="",this.Recurring=!1,this.CronExpression="",this.JobType=1,this.Job=new o}function o(){this.Image="ubuntu:latest",this.Endpoints=[],this.FileContent="",this.File=null,this.Method="editor"}function s(e){this.Id=e.Id,this.Name=e.Name,this.Recurring=e.Recurring,this.JobType=e.JobType,this.CronExpression=e.CronExpression,this.Created=e.Created,this.EdgeSchedule=e.EdgeSchedule,1===this.JobType&&(this.Job=new l(e.ScriptExecutionJob,e.EdgeSchedule))}function l(e,t){this.Image=e.Image,this.Endpoints=e.Endpoints,null!==t&&(this.Endpoints=Object(a.a)(e.Endpoints,t.Endpoints)),this.FileContent="",this.Method="editor",this.RetryCount=e.RetryCount,this.RetryInterval=e.RetryInterval}function c(e){this.Id=e.Id,this.EndpointId=e.EndpointId,this.Status=Object(r.createStatus)(e.Status),this.Created=e.Created,this.Edge=e.Edge}function d(e){this.Name=e.Name,this.Recurring=e.Recurring,this.CronExpression=e.CronExpression,this.Image=e.Job.Image,this.Endpoints=e.Job.Endpoints,this.FileContent=e.Job.FileContent,this.RetryCount=e.Job.RetryCount,this.RetryInterval=e.Job.RetryInterval,this.File=e.Job.File}function u(e){this.id=e.Id,this.Name=e.Name,this.Recurring=e.Recurring,this.CronExpression=e.CronExpression,this.Image=e.Job.Image,this.Endpoints=e.Job.Endpoints,this.FileContent=e.Job.FileContent,this.RetryCount=e.Job.RetryCount,this.RetryInterval=e.Job.RetryInterval}},function(e,t,n){"use strict";n.r(t),n.d(t,"ResourceControlTypeString",(function(){return a})),n.d(t,"ResourceControlTypeInt",(function(){return r}));var a=Object.freeze({CONFIG:"config",CONTAINER:"container",NETWORK:"network",SECRET:"secret",SERVICE:"service",STACK:"stack",VOLUME:"volume"}),r=Object.freeze({CONTAINER:1,SERVICE:2,VOLUME:3,NETWORK:4,SECRET:5,STACK:6,CONFIG:7})},,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"createStatus",(function(){return s})),n.d(t,"ContainerViewModel",(function(){return l})),n.d(t,"ContainerStatsViewModel",(function(){return c})),n.d(t,"ContainerDetailsViewModel",(function(){return d}));var a=n(95),r=n(96),i=n(33),o=n(34);function s(e){var t=Object(i.a)(e);return t.indexOf("paused")>-1?"paused":t.indexOf("dead")>-1?"dead":t.indexOf("created")>-1?"created":t.indexOf("exited")>-1?"stopped":t.indexOf("(healthy)")>-1?"healthy":t.indexOf("(unhealthy)")>-1?"unhealthy":t.indexOf("(health: starting)")>-1?"starting":"running"}function l(e){if(this.Id=e.Id,this.Status=s(e.Status),this.State=e.State,this.Created=e.Created,this.Names=e.Names,e.NetworkSettings&&!Object(r.a)(e.NetworkSettings.Networks)&&(this.IP=e.NetworkSettings.Networks[Object.keys(e.NetworkSettings.Networks)[0]].IPAddress),this.NetworkSettings=e.NetworkSettings,this.Image=e.Image,this.ImageID=e.ImageID,this.Command=e.Command,this.Checked=!1,this.Labels=e.Labels,this.Labels&&this.Labels["com.docker.compose.project"]?this.StackName=this.Labels["com.docker.compose.project"]:this.Labels&&this.Labels["com.docker.stack.namespace"]&&(this.StackName=this.Labels["com.docker.stack.namespace"]),this.Mounts=e.Mounts,this.Ports=[],e.Ports)for(var t=0;t<e.Ports.length;++t){var n=e.Ports[t];n.PublicPort&&this.Ports.push({host:n.IP,private:n.PrivatePort,public:n.PublicPort})}e.Portainer&&(e.Portainer.ResourceControl&&(this.ResourceControl=new o.ResourceControlViewModel(e.Portainer.ResourceControl)),e.Portainer.Agent&&e.Portainer.Agent.NodeName&&(this.NodeName=e.Portainer.Agent.NodeName))}function c(e){this.read=e.read,this.preread=e.preread,void 0!==e.memory_stats.privateworkingset?(this.MemoryUsage=e.memory_stats.privateworkingset,this.MemoryCache=0,this.NumProcs=e.num_procs,this.isWindows=!0):void 0===e.memory_stats.stats||void 0===e.memory_stats.usage?this.MemoryUsage=this.MemoryCache=0:(this.MemoryUsage=e.memory_stats.usage-e.memory_stats.stats.cache,this.MemoryCache=e.memory_stats.stats.cache),this.PreviousCPUTotalUsage=e.precpu_stats.cpu_usage.total_usage,this.PreviousCPUSystemUsage=e.precpu_stats.system_cpu_usage,this.CurrentCPUTotalUsage=e.cpu_stats.cpu_usage.total_usage,this.CurrentCPUSystemUsage=e.cpu_stats.system_cpu_usage,e.cpu_stats.cpu_usage.percpu_usage&&(this.CPUCores=e.cpu_stats.cpu_usage.percpu_usage.length),this.Networks=Object(a.a)(e.networks)}function d(e){this.Model=e,this.Id=e.Id,this.State=e.State,this.Created=e.Created,this.Name=e.Name,this.NetworkSettings=e.NetworkSettings,this.Args=e.Args,this.Image=e.Image,this.Config=e.Config,this.HostConfig=e.HostConfig,this.Mounts=e.Mounts,e.Portainer&&e.Portainer.ResourceControl&&(this.ResourceControl=new o.ResourceControlViewModel(e.Portainer.ResourceControl))}},,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"TemplateDefaultModel",(function(){return i})),n.d(t,"TemplateCreateRequest",(function(){return o})),n.d(t,"TemplateUpdateRequest",(function(){return s})),n.d(t,"TemplateViewModel",(function(){return l}));var a=n(22),r=n(30);function i(){this.Type=1,this.AdministratorOnly=!1,this.Title="",this.Description="",this.Volumes=[],this.Ports=[],this.Env=[],this.Labels=[],this.RestartPolicy="always",this.RegistryModel=new r.PorImageRegistryModel}function o(e){this.Type=e.Type,this.Name=e.Name,this.Hostname=e.Hostname,this.Title=e.Title,this.Description=e.Description,this.Note=e.Note,this.Categories=e.Categories,this.Platform=e.Platform,this.Logo=e.Logo,this.Image=e.RegistryModel.Image,this.Registry=e.RegistryModel.Registry.URL,this.Command=e.Command,this.Network=e.Network&&e.Network.Name,this.Privileged=e.Privileged,this.Interactive=e.Interactive,this.RestartPolicy=e.RestartPolicy,this.Labels=e.Labels,this.Repository=e.Repository,this.Env=e.Env,this.AdministratorOnly=e.AdministratorOnly,this.Ports=[];for(var t=0;t<e.Ports.length;t++){var n=e.Ports[t];if(n.containerPort&&n.protocol){var a=n.hostPort?n.hostPort+":"+n.containerPort+"/"+n.protocol:n.containerPort+"/"+n.protocol;this.Ports.push(a)}}this.Volumes=e.Volumes}function s(e){o.call(this,e),this.id=e.Id}function l(e){this.Id=e.Id,this.Title=e.title,this.Type=e.type,this.Description=e.description,this.AdministratorOnly=e.AdministratorOnly,this.Name=e.name,this.Note=e.note,this.Categories=e.categories?e.categories:[],this.Platform=e.platform?e.platform:"",this.Logo=e.logo,this.Repository=e.repository,this.Hostname=e.hostname,this.RegistryModel=new r.PorImageRegistryModel,this.RegistryModel.Image=e.image,this.RegistryModel.Registry.URL=e.registry||"",this.Command=e.command?e.command:"",this.Network=e.network?e.network:"",this.Privileged=!!e.privileged&&e.privileged,this.Interactive=!!e.interactive&&e.interactive,this.RestartPolicy=e.restart_policy?e.restart_policy:"always",this.Labels=e.labels?e.labels:[],this.Hosts=e.hosts?e.hosts:[],this.Env=function(e){var t=[];e.env&&(t=e.env.map((function(e){if(e.type=2,e.value=e.default?e.default:"",e.preset&&(e.type=1),e.select){e.type=3;for(var t=0;t<e.select.length;t++){var n=e.select[t];if(n.default){e.value=n.value;break}}}return e})));return t}(e),this.Volumes=function(e){var t=[];e.volumes&&(t=e.volumes.map((function(e){return{container:e.container,readonly:e.readonly||!1,type:e.bind?"bind":"auto",bind:e.bind?e.bind:null}})));return t}(e),this.Ports=function(e){var t=[];e.ports&&(t=e.ports.map((function(e){var t=Object(a.a)(e,"/"),n=Object(a.a)(t[0],":");return{hostPort:n.length>1?n[0]:void 0,containerPort:n.length>1?n[1]:n[0],protocol:t[1]}})));return t}(e)}},,,,,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var a=n(414),r=n.n(a),i=n(415),o=n.n(i),s=n(416),l=n.n(s);function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,a;return t=e,a=[{key:"idsToTagNames",value:function(e,t){var n=l()(e,(function(e){return o()(t,e.Id)}));return r()(n,"Name")}}],(n=null)&&c(t.prototype,n),a&&c(t,a),e}()},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.UserId=e.UserID,this.TeamId=e.TeamID,this.Role=e.Role}n.r(t),n.d(t,"TeamMembershipModel",(function(){return a}))},,,function(e,t,n){"use strict";n.r(t);var a=n(68),r=n(5);function i(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function s(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var l=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,o;return t=e,o=[{key:"getIPV4Configs",value:function(e){return Object(r.a)(e,(function(e){return/^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))?$/.test(e.Subnet)}))}},{key:"getIPV6Configs",value:function(t){return a.a.apply(void 0,[t].concat(i(e.getIPV4Configs(t))))}}],(n=null)&&s(t.prototype,n),o&&s(t,o),e}();t.default=l},function(e,t,n){"use strict";function a(e){if(this.Id=e.Id,this.Tag=e.Tag,this.Repository=e.Repository,this.Created=e.Created,this.Checked=!1,this.RepoTags=e.RepoTags,!this.RepoTags&&e.RepoDigests){this.RepoTags=[];for(var t=0;t<e.RepoDigests.length;t++){var n=e.RepoDigests[t],a=n.substring(0,n.indexOf("@"));this.RepoTags.push(a+":<none>")}}this.VirtualSize=e.VirtualSize,this.ContainerCount=e.ContainerCount,e.Portainer&&e.Portainer.Agent&&e.Portainer.Agent.NodeName&&(this.NodeName=e.Portainer.Agent.NodeName)}function r(e){this.hasError=!1;for(var t=[],n=0;n<e.length;n++){var a=e[n];a.stream&&(a=a.stream.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,""),t.push(a)),a.errorDetail&&(t.push(a.errorDetail.message),this.hasError=!0)}this.buildLogs=t}n.r(t),n.d(t,"ImageViewModel",(function(){return a})),n.d(t,"ImageBuildModel",(function(){return r}))},function(e,t,n){"use strict";function a(){this.Name="",this.Description="",this.TagIds=[]}function r(e){this.Id=e.Id,this.Name=e.Name,this.Description=e.Description,this.TagIds=e.TagIds,this.AuthorizedUsers=e.AuthorizedUsers,this.AuthorizedTeams=e.AuthorizedTeams,this.UserAccessPolicies=e.UserAccessPolicies,this.TeamAccessPolicies=e.TeamAccessPolicies}function i(e,t){this.Name=e.Name,this.Description=e.Description,this.TagIds=e.TagIds,this.AssociatedEndpoints=t}function o(e,t){this.id=e.Id,this.Name=e.Name,this.Description=e.Description,this.TagIds=e.TagIds,this.AssociatedEndpoints=t,this.UserAccessPolicies=e.UserAccessPolicies,this.TeamAccessPolicies=e.TeamAccessPolicies}n.r(t),n.d(t,"EndpointGroupDefaultModel",(function(){return a})),n.d(t,"EndpointGroupModel",(function(){return r})),n.d(t,"EndpointGroupCreateRequest",(function(){return i})),n.d(t,"EndpointGroupUpdateRequest",(function(){return o}))},,function(e,t,n){"use strict";n.r(t),n.d(t,"StackViewModel",(function(){return r})),n.d(t,"ExternalStackViewModel",(function(){return i}));var a=n(34);function r(e){this.Id=e.Id,this.Type=e.Type,this.Name=e.Name,this.Checked=!1,this.EndpointId=e.EndpointId,this.SwarmId=e.SwarmId,this.Env=e.Env?e.Env:[],e.ResourceControl&&0!==e.ResourceControl.Id&&(this.ResourceControl=new a.ResourceControlViewModel(e.ResourceControl)),this.External=!1}function i(e,t){this.Name=e,this.Type=t,this.External=!0,this.Checked=!1}},,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";function a(){this.Location="",this.OSType="Linux",this.Name="",this.Image="",this.AllocatePublicIP=!0,this.Ports=[{container:80,host:80,protocol:"TCP"}],this.CPU=1,this.Memory=1}function r(e){this.Id=e.id,this.Name=e.name,this.Location=e.location,this.IPAddress=e.properties.ipAddress.ip,this.Ports=e.properties.ipAddress.ports}function i(e){this.location=e.Location;for(var t=[],n=[],a=0;a<e.Ports.length;a++){var r=e.Ports[a];t.push({port:r.container}),n.push({port:r.host,protocol:r.protocol})}this.properties={osType:e.OSType,containers:[{name:e.Name,properties:{image:e.Image,ports:t,resources:{requests:{cpu:e.CPU,memoryInGB:e.Memory}}}}],ipAddress:{type:e.AllocatePublicIP?"Public":"Private",ports:n}}}n.r(t),n.d(t,"ContainerGroupDefaultModel",(function(){return a})),n.d(t,"ContainerGroupViewModel",(function(){return r})),n.d(t,"CreateContainerGroupRequest",(function(){return i}))},,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"RegistryRepositoryViewModel",(function(){return r})),n.d(t,"RegistryRepositoryGitlabViewModel",(function(){return i}));var a=n(68);function r(e){e.name&&e.tags?(this.Name=e.name,this.TagsCount=Object(a.a)(e.tags,null).length):(this.Name=e,this.TagsCount=0)}function i(e){this.Name=e.path,this.TagsCount=e.tags.length}},,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"ContainerCapabilities",(function(){return r})),n.d(t,"ContainerCapability",(function(){return i}));var a={SETPCAP:"Modify process capabilities.",MKNOD:"Create special files using mknod(2).",AUDIT_WRITE:"Write records to kernel auditing log.",CHOWN:"Make arbitrary changes to file UIDs and GIDs (see chown(2)).",NET_RAW:"Use RAW and PACKET sockets.",DAC_OVERRIDE:"Bypass file read, write, and execute permission checks.",FOWNER:"Bypass permission checks on operations that normally require the file system UID of the process to match the UID of the file.",FSETID:"Don’t clear set-user-ID and set-group-ID permission bits when a file is modified.",KILL:"Bypass permission checks for sending signals.",SETGID:"Make arbitrary manipulations of process GIDs and supplementary GID list.",SETUID:"Make arbitrary manipulations of process UIDs.",NET_BIND_SERVICE:"Bind a socket to internet domain privileged ports (port numbers less than 1024).",SYS_CHROOT:"Use chroot(2), change root directory.",SETFCAP:"Set file capabilities.",SYS_MODULE:"Load and unload kernel modules.",SYS_RAWIO:"Perform I/O port operations (iopl(2) and ioperm(2)).",SYS_PACCT:"Use acct(2), switch process accounting on or off.",SYS_ADMIN:"Perform a range of system administration operations.",SYS_NICE:"Raise process nice value (nice(2), setpriority(2)) and change the nice value for arbitrary processes.",SYS_RESOURCE:"Override resource Limits.",SYS_TIME:"Set system clock (settimeofday(2), stime(2), adjtimex(2)); set real-time (hardware) clock.",SYS_TTY_CONFIG:"Use vhangup(2); employ various privileged ioctl(2) operations on virtual terminals.",AUDIT_CONTROL:"Enable and disable kernel auditing; change auditing filter rules; retrieve auditing status and filtering rules.",MAC_ADMIN:"Allow MAC configuration or state changes. Implemented for the Smack LSM.",MAC_OVERRIDE:"Override Mandatory Access Control (MAC). Implemented for the Smack Linux Security Module (LSM).",NET_ADMIN:"Perform various network-related operations.",SYSLOG:"Perform privileged syslog(2) operations.",DAC_READ_SEARCH:"Bypass file read permission checks and directory read and execute permission checks.",LINUX_IMMUTABLE:"Set the FS_APPEND_FL and FS_IMMUTABLE_FL i-node flags.",NET_BROADCAST:"Make socket broadcasts, and listen to multicasts.",IPC_LOCK:"Lock memory (mlock(2), mlockall(2), mmap(2), shmctl(2)).",IPC_OWNER:"Bypass permission checks for operations on System V IPC objects.",SYS_PTRACE:"Trace arbitrary processes using ptrace(2).",SYS_BOOT:"Use reboot(2) and kexec_load(2), reboot and load a new kernel for later execution.",LEASE:"Establish leases on arbitrary files (see fcntl(2)).",WAKE_ALARM:"Trigger something that will wake up the system.",BLOCK_SUSPEND:"Employ features that can block system suspend."};function r(){return[new i("SETPCAP",!0),new i("MKNOD",!0),new i("AUDIT_WRITE",!0),new i("CHOWN",!0),new i("NET_RAW",!0),new i("DAC_OVERRIDE",!0),new i("FOWNER",!0),new i("FSETID",!0),new i("KILL",!0),new i("SETGID",!0),new i("SETUID",!0),new i("NET_BIND_SERVICE",!0),new i("SYS_CHROOT",!0),new i("SETFCAP",!0),new i("SYS_MODULE",!1),new i("SYS_RAWIO",!1),new i("SYS_PACCT",!1),new i("SYS_ADMIN",!1),new i("SYS_NICE",!1),new i("SYS_RESOURCE",!1),new i("SYS_TIME",!1),new i("SYS_TTY_CONFIG",!1),new i("AUDIT_CONTROL",!1),new i("MAC_ADMIN",!1),new i("MAC_OVERRIDE",!1),new i("NET_ADMIN",!1),new i("SYSLOG",!1),new i("DAC_READ_SEARCH",!1),new i("LINUX_IMMUTABLE",!1),new i("NET_BROADCAST",!1),new i("IPC_LOCK",!1),new i("IPC_OWNER",!1),new i("SYS_PTRACE",!1),new i("SYS_BOOT",!1),new i("LEASE",!1),new i("WAKE_ALARM",!1),new i("BLOCK_SUSPEND",!1)].sort((function(e,t){return e.capability<t.capability?-1:1}))}function i(e,t){this.capability=e,this.allowed=t,this.description=a[e]}},function(e,t,n){"use strict";function a(e,t,n,a,r){this.EndpointId=t.Id,this.EndpointName=t.Name,this.RoleId=e.RoleId,this.RoleName=n[e.RoleId].Name,a&&(this.GroupId=a.Id,this.GroupName=a.Name),r&&(this.TeamId=r.Id,this.TeamName=r.Name),this.AccessLocation=a?"endpoint group":"endpoint"}n.r(t),n.d(t,"default",(function(){return a}))},function(e,t,n){"use strict";function a(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];this.AdministratorsOnly=e,this.Public=t,this.Users=n,this.Teams=a,this.SubResourceIDs=r}n.r(t),n.d(t,"ResourceControlOwnershipParameters",(function(){return a}))},,,,,,,,,,,,function(e,t,n){"use strict";function a(e){var t={};return t.file=e,t}n.r(t),n.d(t,"browseGetResponse",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Name="DockerHub",this.URL="",this.Authentication=e.Authentication,this.Username=e.Username,this.Password=e.Password}n.r(t),n.d(t,"DockerHubViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e,t){var n=angular.fromJson(e),a=t("link");if(a)for(var r=a.substring(a.indexOf("?")+1).split(">;")[0].split("&"),i=0;i<r.length;i++){var o=r[i].split("=");n[o[0]]=o[1]}return n}n.r(t),n.d(t,"default",(function(){return a}))},function(e,t,n){"use strict";function a(){this.TLS=!1,this.TLSMode="tls_client_ca",this.TLSCACert=null,this.TLSCert=null,this.TLSKey=null}n.r(t),n.d(t,"EndpointSecurityFormData",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Name=e.Username,this.Type="user",this.Inherited=!1,this.Override=!1,this.Role={Id:0,Name:"-"},this.icon='<i class="fa fa-user" aria-hidden="true"></i>'}function r(e){this.Id=e.Id,this.Name=e.Name,this.Type="team",this.Inherited=!1,this.Override=!1,this.Role={Id:0,Name:"-"},this.icon='<i class="fa fa-users" aria-hidden="true"></i>'}n.r(t),n.d(t,"UserAccessViewModel",(function(){return a})),n.d(t,"TeamAccessViewModel",(function(){return r}))},,,,function(e,t,n){"use strict";n.r(t),n.d(t,"VolumeViewModel",(function(){return r}));var a=n(34);function r(e){this.Id=e.Name,this.CreatedAt=e.CreatedAt,this.Driver=e.Driver,this.Options=e.Options,this.Labels=e.Labels,this.Labels&&this.Labels["com.docker.compose.project"]?this.StackName=this.Labels["com.docker.compose.project"]:this.Labels&&this.Labels["com.docker.stack.namespace"]&&(this.StackName=this.Labels["com.docker.stack.namespace"]),this.Mountpoint=e.Mountpoint,e.Portainer&&(e.Portainer.ResourceControl&&(this.ResourceControl=new a.ResourceControlViewModel(e.Portainer.ResourceControl)),e.Portainer.Agent&&e.Portainer.Agent.NodeName&&(this.NodeName=e.Portainer.Agent.NodeName))}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var a=n(135);function r(e){return function(e){if(Array.isArray(e))return i(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return i(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function o(e){return new c(e)}function s(e){return function(){return new l(e.apply(this,arguments))}}function l(e){var t,n;function a(t,n){try{var i=e[t](n),o=i.value,s=o instanceof c;Promise.resolve(s?o.wrapped:o).then((function(e){s?a("return"===t?"return":"next",e):r(i.done?"return":"normal",e)}),(function(e){a("throw",e)}))}catch(e){r("throw",e)}}function r(e,r){switch(e){case"return":t.resolve({value:r,done:!0});break;case"throw":t.reject(r);break;default:t.resolve({value:r,done:!1})}(t=t.next)?a(t.key,t.arg):n=null}this._invoke=function(e,r){return new Promise((function(i,o){var s={key:e,arg:r,resolve:i,reject:o,next:null};n?n=n.next=s:(t=n=s,a(e,r))}))},"function"!=typeof e.return&&(this.return=void 0)}function c(e){this.wrapped=e}function d(e){var t=Math.trunc(e/10);return t<10?t=10:t>100&&(t=100),t}function u(e,t,n,a){return p.apply(this,arguments)}function p(){return(p=s(regeneratorRuntime.mark((function e(t,n,i,s){var l,c,u,p,m,g,f,v,h;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:l=d(n.length),u=(c=0)+l,p=[];case 4:if(!(c<n.length)){e.next=18;break}for(m=Object(a.a)(n,c,u),g=[],f=0;f<m.length;f++)g.push(i.apply(void 0,r(s).concat([m[f]])));return e.next=10,c;case 10:return e.next=12,o(t.all(g));case 12:for(v=e.sent,h=0;h<v.length;h++)p.push(v[h]);c=u,u+=l,e.next=4;break;case 18:return e.next=20,n.length;case 20:return e.next=22,p;case 22:case"end":return e.stop()}}),e)})))).apply(this,arguments)}"function"==typeof Symbol&&Symbol.asyncIterator&&(l.prototype[Symbol.asyncIterator]=function(){return this}),l.prototype.next=function(e){return this._invoke("next",e)},l.prototype.throw=function(e){return this._invoke("throw",e)},l.prototype.return=function(e){return this._invoke("return",e)}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"ConfigViewModel",(function(){return r}));var a=n(34);function r(e){var t;this.Id=e.ID,this.CreatedAt=e.CreatedAt,this.UpdatedAt=e.UpdatedAt,this.Version=e.Version.Index,this.Name=e.Spec.Name,this.Labels=e.Spec.Labels,this.Data=(t=e.Spec.Data,decodeURIComponent(atob(t).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""))),e.Portainer&&e.Portainer.ResourceControl&&(this.ResourceControl=new a.ResourceControlViewModel(e.Portainer.ResourceControl))}},function(e,t,n){"use strict";n.r(t),n.d(t,"NetworkViewModel",(function(){return r}));var a=n(34);function r(e){this.Id=e.Id,this.Name=e.Name,this.Scope=e.Scope,this.Driver=e.Driver,this.Attachable=e.Attachable,this.Internal=e.Internal,this.IPAM=e.IPAM,this.Containers=e.Containers,this.Options=e.Options,this.Labels=e.Labels,this.Labels&&this.Labels["com.docker.compose.project"]?this.StackName=this.Labels["com.docker.compose.project"]:this.Labels&&this.Labels["com.docker.stack.namespace"]&&(this.StackName=this.Labels["com.docker.stack.namespace"]),e.Portainer&&(e.Portainer.ResourceControl&&(this.ResourceControl=new a.ResourceControlViewModel(e.Portainer.ResourceControl)),e.Portainer.Agent&&e.Portainer.Agent.NodeName&&(this.NodeName=e.Portainer.Agent.NodeName)),this.ConfigFrom=e.ConfigFrom,this.ConfigOnly=e.ConfigOnly}},function(e,t,n){"use strict";function a(e){this.Model=e,this.Id=e.ID,this.Version=e.Version.Index,this.Name=e.Spec.Name,this.Role=e.Spec.Role,this.CreatedAt=e.CreatedAt,this.UpdatedAt=e.UpdatedAt,this.Availability=e.Spec.Availability;var t=e.Spec.Labels;this.Labels=t?Object.keys(t).map((function(e){return{key:e,value:t[e],originalKey:e,originalValue:t[e],added:!0}})):[];var n=e.Description.Engine.Labels;this.EngineLabels=n?Object.keys(n).map((function(e){return{key:e,value:n[e]}})):[],this.Hostname=e.Description.Hostname,this.PlatformArchitecture=e.Description.Platform.Architecture,this.PlatformOS=e.Description.Platform.OS,this.CPUs=e.Description.Resources.NanoCPUs,this.Memory=e.Description.Resources.MemoryBytes,this.EngineVersion=e.Description.Engine.EngineVersion,this.Plugins=e.Description.Engine.Plugins,this.Status=e.Status.State,e.Status.Addr&&(this.Addr=e.Status.Addr),e.ManagerStatus&&(this.Leader=e.ManagerStatus.Leader,this.Reachability=e.ManagerStatus.Reachability,this.ManagerAddr=e.ManagerStatus.Addr)}n.r(t),n.d(t,"NodeViewModel",(function(){return a}))},function(e,t,n){"use strict";n.r(t),n.d(t,"SecretViewModel",(function(){return r}));var a=n(34);function r(e){this.Id=e.ID,this.CreatedAt=e.CreatedAt,this.UpdatedAt=e.UpdatedAt,this.Version=e.Version.Index,this.Name=e.Spec.Name,this.Labels=e.Spec.Labels,e.Portainer&&e.Portainer.ResourceControl&&(this.ResourceControl=new a.ResourceControlViewModel(e.Portainer.ResourceControl))}},function(e,t,n){"use strict";n.r(t),n.d(t,"ServiceViewModel",(function(){return i}));var a=n(34);function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t,n){this.Model=e,this.Id=e.ID,this.Tasks=[],this.Name=e.Spec.Name,this.CreatedAt=e.CreatedAt,this.UpdatedAt=e.UpdatedAt,this.Image=e.Spec.TaskTemplate.ContainerSpec.Image,this.Version=e.Version.Index,e.Spec.Mode.Replicated?(this.Mode="replicated",this.Replicas=e.Spec.Mode.Replicated.Replicas):(this.Mode="global",n&&(this.Replicas=n.length)),t&&(this.Running=t.length),e.Spec.TaskTemplate.Resources&&(e.Spec.TaskTemplate.Resources.Limits&&(this.LimitNanoCPUs=e.Spec.TaskTemplate.Resources.Limits.NanoCPUs,this.LimitMemoryBytes=e.Spec.TaskTemplate.Resources.Limits.MemoryBytes),e.Spec.TaskTemplate.Resources.Reservations&&(this.ReservationNanoCPUs=e.Spec.TaskTemplate.Resources.Reservations.NanoCPUs,this.ReservationMemoryBytes=e.Spec.TaskTemplate.Resources.Reservations.MemoryBytes)),e.Spec.TaskTemplate.RestartPolicy?(this.RestartCondition=e.Spec.TaskTemplate.RestartPolicy.Condition||"any",this.RestartDelay=e.Spec.TaskTemplate.RestartPolicy.Delay||5e9,this.RestartMaxAttempts=e.Spec.TaskTemplate.RestartPolicy.MaxAttempts||0,this.RestartWindow=e.Spec.TaskTemplate.RestartPolicy.Window||0):(this.RestartCondition="any",this.RestartDelay=5e9,this.RestartMaxAttempts=0,this.RestartWindow=0),e.Spec.TaskTemplate.LogDriver?(this.LogDriverName=e.Spec.TaskTemplate.LogDriver.Name||"",this.LogDriverOpts=e.Spec.TaskTemplate.LogDriver.Options||[]):(this.LogDriverName="",this.LogDriverOpts=[]),this.Constraints=e.Spec.TaskTemplate.Placement&&e.Spec.TaskTemplate.Placement.Constraints||[],this.Preferences=e.Spec.TaskTemplate.Placement&&e.Spec.TaskTemplate.Placement.Preferences||[],this.Platforms=e.Spec.TaskTemplate.Placement&&e.Spec.TaskTemplate.Placement.Platforms||[],this.Labels=e.Spec.Labels,this.Labels&&this.Labels["com.docker.stack.namespace"]&&(this.StackName=this.Labels["com.docker.stack.namespace"]);var i=e.Spec.TaskTemplate.ContainerSpec;i&&(this.ContainerLabels=i.Labels,this.Command=i.Command,this.Arguments=i.Args,this.Hostname=i.Hostname,this.Env=i.Env,this.Dir=i.Dir,this.User=i.User,this.Groups=i.Groups,this.TTY=i.TTY,this.OpenStdin=i.OpenStdin,this.ReadOnly=i.ReadOnly,this.Mounts=i.Mounts||[],this.StopSignal=i.StopSignal,this.StopGracePeriod=i.StopGracePeriod,this.HealthCheck=i.HealthCheck||{},this.Hosts=i.Hosts,this.DNSConfig=i.DNSConfig,this.Secrets=i.Secrets,this.Configs=i.Configs),e.Endpoint&&(this.Ports=e.Endpoint.Ports),this.LogDriver=e.Spec.TaskTemplate.LogDriver,this.Runtime=e.Spec.TaskTemplate.Runtime,this.VirtualIPs=e.Endpoint?e.Endpoint.VirtualIPs:[],e.Spec.UpdateConfig?(this.UpdateParallelism=void 0!==r(e.Spec.UpdateConfig.Parallelism)?e.Spec.UpdateConfig.Parallelism||0:1,this.UpdateDelay=e.Spec.UpdateConfig.Delay||0,this.UpdateFailureAction=e.Spec.UpdateConfig.FailureAction||"pause",this.UpdateOrder=e.Spec.UpdateConfig.Order||"stop-first"):(this.UpdateParallelism=1,this.UpdateDelay=0,this.UpdateFailureAction="pause",this.UpdateOrder="stop-first"),this.RollbackConfig=e.Spec.RollbackConfig,this.Checked=!1,this.Scale=!1,this.EditName=!1,e.Portainer&&e.Portainer.ResourceControl&&(this.ResourceControl=new a.ResourceControlViewModel(e.Portainer.ResourceControl))}},function(e,t,n){"use strict";function a(e){this.Id=e.ID,this.Created=e.CreatedAt,this.Updated=e.UpdatedAt,this.Slot=e.Slot,this.Spec=e.Spec,this.Status=e.Status,this.DesiredState=e.DesiredState,this.ServiceId=e.ServiceID,this.NodeId=e.NodeID,e.Status&&e.Status.ContainerStatus&&e.Status.ContainerStatus.ContainerID&&(this.ContainerId=e.Status.ContainerStatus.ContainerID)}n.r(t),n.d(t,"TaskViewModel",(function(){return a}))},,,,,function(e,t,n){"use strict";function a(e,t){var n={};try{n.data=angular.fromJson(e),n.next=t("X-Next-Page")}catch(t){n=e}return n}n.r(t),n.d(t,"default",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.driveid,this.Node=e.node,this.Use=e.use,this.Status=e.drivestatus.toLowerCase(),this.Size=e.size,this.Type=e.type,this.Device=e.device}n.r(t),n.d(t,"StoridgeDriveModel",(function(){return a}))},function(e,t,n){"use strict";function a(e,t){this.Name=e,this.IP=t.ip,this.Role=t.role,this.Status=t.status}function r(e,t){this.Name=e,this.Condition=t.condition,this.Domain=t.domain,this.DomainID=t.domainID,this.FreeBandwidth=t.freeBandwidth,this.FreeCapacity=t.freeCapacity,this.FreeIOPS=t.freeIOPS,this.Hdds=t.hdds,this.MetadataVersion=t.metadataVersion,this.Nodes=t.nodes,this.ProvisionedBandwidth=t.provisionedBandwidth,this.ProvisionedCapacity=t.provisionedCapacity,this.ProvisionedIOPS=t.provisionedIOPS,this.Ssds=t.ssds,this.Status=t.status,this.TotalBandwidth=t.totalBandwidth,this.TotalCapacity=t.totalCapacity,this.TotalIOPS=t.totalIOPS,this.UsedBandwidth=t.usedBandwidth,this.UsedCapacity=t.usedCapacity,this.UsedIOPS=t.usedIOPS,this.Vdisks=t.vdisks}n.r(t),n.d(t,"StoridgeNodeModel",(function(){return a})),n.d(t,"StoridgeNodeDetailedModel",(function(){return r}))},function(e,t,n){"use strict";function a(e){this.Id=e.identifier,this.Date=e.date,this.Description=e.description,this.SourceID=e.sourceid,this.Type=e.type,this.Directory=e.directory,this.Source=e.source}n.r(t),n.d(t,"StoridgeSnapshotModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Allocated=e.allocated,this.Capacity=e.capacity,this.Directory=e.directory,this.IOPSMax=e.maximumIOPS,this.IOPSMin=e.minimumIOPS,this.BandwidthMin=e.minimumBandwidth,this.BandwidthMax=e.maximumBandwidth,this.LocalDriveOnly=e.localDriveOnly,this.Name=e.name,this.Node=e.node,this.NodeID=e.nodeid,this.Provisioning=e.provisioning,this.Redundancy=e.redundancy,this.Uuid=e.uuid,this.Vdisk=e.vdisk,this.Labels=e.labels,this.IP=e.ipaddr,this.DriveType=e.driveType,this.Encryption=e.encryption,this.SnapshotEnabled=e.snapshot,this.SnapshotInterval=e.snapInterval,this.SnapshotMax=e.maximumSnapshots,this.Filesystem=e.filesystem}function r(e){this.name=e.Name,this.opts={node:e.Node,nodeid:e.NodeID,capacity:e.Capacity,iopsmin:e.IOPSMin,iopsmax:e.IOPSMax,bandwidthmin:e.BandwidthMin,bandwidthmax:e.BandwidthMax},this.labels=e.Labels}n.r(t),n.d(t,"StoridgeVolumeModel",(function(){return a})),n.d(t,"StoridgeVolumeUpdateModel",(function(){return r}))},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Name=e.Name,this.Enabled=e.Enabled,this.Description=e.Description,this.Price=e.Price,this.PriceDescription=e.PriceDescription,this.Available=e.Available,this.Deal=e.Deal,this.ShortDescription=e.ShortDescription,this.License=e.License,this.Version=e.Version,this.UpdateAvailable=e.UpdateAvailable,this.ShopURL=e.ShopURL,this.Images=e.Images,this.Logo=e.Logo}n.r(t),n.d(t,"ExtensionViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.LogoURL=e.LogoURL,this.BlackListedLabels=e.BlackListedLabels,this.AuthenticationMethod=e.AuthenticationMethod,this.LDAPSettings=e.LDAPSettings,this.OAuthSettings=new l(e.OAuthSettings),this.AllowBindMountsForRegularUsers=e.AllowBindMountsForRegularUsers,this.AllowPrivilegedModeForRegularUsers=e.AllowPrivilegedModeForRegularUsers,this.AllowVolumeBrowserForRegularUsers=e.AllowVolumeBrowserForRegularUsers,this.SnapshotInterval=e.SnapshotInterval,this.TemplatesURL=e.TemplatesURL,this.ExternalTemplates=e.ExternalTemplates,this.EnableHostManagementFeatures=e.EnableHostManagementFeatures,this.EdgeAgentCheckinInterval=e.EdgeAgentCheckinInterval,this.EnableEdgeComputeFeatures=e.EnableEdgeComputeFeatures,this.AllowStackManagementForRegularUsers=e.AllowStackManagementForRegularUsers,this.AllowHostNamespaceForRegularUsers=e.AllowHostNamespaceForRegularUsers,this.AllowDeviceMappingForRegularUsers=e.AllowDeviceMappingForRegularUsers,this.AllowContainerCapabilitiesForRegularUsers=e.AllowContainerCapabilitiesForRegularUsers}function r(e){this.AllowBindMountsForRegularUsers=e.AllowBindMountsForRegularUsers,this.AllowPrivilegedModeForRegularUsers=e.AllowPrivilegedModeForRegularUsers,this.AllowVolumeBrowserForRegularUsers=e.AllowVolumeBrowserForRegularUsers,this.AuthenticationMethod=e.AuthenticationMethod,this.EnableHostManagementFeatures=e.EnableHostManagementFeatures,this.ExternalTemplates=e.ExternalTemplates,this.EnableEdgeComputeFeatures=e.EnableEdgeComputeFeatures,this.LogoURL=e.LogoURL,this.OAuthLoginURI=e.OAuthLoginURI,this.AllowStackManagementForRegularUsers=e.AllowStackManagementForRegularUsers,this.AllowDeviceMappingForRegularUsers=e.AllowDeviceMappingForRegularUsers,this.AllowHostNamespaceForRegularUsers=e.AllowHostNamespaceForRegularUsers,this.AllowContainerCapabilitiesForRegularUsers=e.AllowContainerCapabilitiesForRegularUsers}function i(e){this.ReaderDN=e.ReaderDN,this.Password=e.Password,this.URL=e.URL,this.SearchSettings=e.SearchSettings,this.GroupSearchSettings=e.GroupSearchSettings,this.AutoCreateUsers=e.AutoCreateUsers}function o(e,t,n){this.BaseDN=e,this.UsernameAttribute=t,this.Filter=n}function s(e,t,n){this.GroupBaseDN=e,this.GroupAttribute=t,this.GroupFilter=n}function l(e){this.ClientID=e.ClientID,this.ClientSecret=e.ClientSecret,this.AccessTokenURI=e.AccessTokenURI,this.AuthorizationURI=e.AuthorizationURI,this.ResourceURI=e.ResourceURI,this.RedirectURI=e.RedirectURI,this.UserIdentifier=e.UserIdentifier,this.Scopes=e.Scopes,this.OAuthAutoCreateUsers=e.OAuthAutoCreateUsers,this.DefaultTeamID=e.DefaultTeamID}n.r(t),n.d(t,"SettingsViewModel",(function(){return a})),n.d(t,"PublicSettingsViewModel",(function(){return r})),n.d(t,"LDAPSettingsViewModel",(function(){return i})),n.d(t,"LDAPSearchSettings",(function(){return o})),n.d(t,"LDAPGroupSearchSettings",(function(){return s})),n.d(t,"OAuthSettingsViewModel",(function(){return l}))},function(e,t,n){"use strict";function a(e){this.Authentication=e.Authentication,this.Snapshot=e.Snapshot,this.EndpointManagement=e.EndpointManagement,this.Analytics=e.Analytics,this.Version=e.Version}function r(e){this.UpdateAvailable=e.UpdateAvailable,this.LatestVersion=e.LatestVersion}n.r(t),n.d(t,"StatusViewModel",(function(){return a})),n.d(t,"StatusVersionViewModel",(function(){return r}))},function(e,t,n){"use strict";function a(e){this.Id=e.ID,this.Name=e.Name}n.r(t),n.d(t,"TagViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Name=e.Name,this.Checked=!1}n.r(t),n.d(t,"TeamViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Username=e.Username,this.Role=e.Role,this.EndpointAuthorizations=e.EndpointAuthorizations,this.PortainerAuthorizations=e.PortainerAuthorizations,1===e.Role?this.RoleName="administrator":this.RoleName="user",this.AuthenticationMethod=e.AuthenticationMethod,this.Checked=!1}n.r(t),n.d(t,"UserViewModel",(function(){return a}))},,,,,,function(e,t,n){e.exports=n.p+"5da83cfb4883a59354abeff852cb7394.png"},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";function a(e){this.IPAddress=e.IPAddress,this.NodeName=e.NodeName,this.NodeRole=e.NodeRole}n.r(t),n.d(t,"AgentViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.id,this.SubscriptionId=e.subscriptionId,this.DisplayName=e.displayName,this.Name=e.name}n.r(t),n.d(t,"LocationViewModel",(function(){return a}))},function(e,t,n){"use strict";n.r(t),n.d(t,"ContainerInstanceProviderViewModel",(function(){return r}));var a=n(2);function r(e){this.Id=e.id,this.Namespace=e.namespace;var t=Object(a.a)(e.resourceTypes,{resourceType:"containerGroups"});this.Locations=t.locations}},function(e,t,n){"use strict";function a(e,t){this.Id=e.id,this.SubscriptionId=t,this.Name=e.name,this.Location=e.location}n.r(t),n.d(t,"ResourceGroupViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.subscriptionId,this.Name=e.displayName}n.r(t),n.d(t,"SubscriptionViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(){this.Scope="local",this.SelectedNetworkConfig="",this.DatatableState={selectedItems:[]},this.ParentNetworkCard=""}n.r(t),n.d(t,"MacvlanFormData",(function(){return a}))},function(e,t,n){"use strict";function a(){this.useCIFS=!1,this.serverAddress="",this.share="",this.version="CIFS v2.0 (Used by Windows Vista / Server 2008)",this.versions=["CIFS v1.0 (Used by Windows XP / Server 2003 and earlier)","CIFS v2.0 (Used by Windows Vista / Server 2008)","CIFS v2.1 (Used by Windows 7 / Server 2008 R2)","CIFS 3.0 (Used by Windows 8 / Server 2012 and newer)"],this.versionsNumber=["1.0","2.0","2.1","3.0"],this.username="",this.password=""}n.r(t),n.d(t,"VolumesCIFSFormData",(function(){return a}))},function(e,t,n){"use strict";function a(){this.useNFS=!1,this.serverAddress="",this.mountPoint="",this.version="NFS4",this.options="rw,noatime,rsize=8192,wsize=8192,tcp,timeo=14",this.versions=["NFS4","NFS"]}n.r(t),n.d(t,"VolumesNFSFormData",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Time=e.time,e.Type?(this.Type=e.Type,this.Details=function(e){var t=e.Actor.Attributes,n="";switch(e.Type){case"container":switch(e.Action){case"stop":n="Container "+t.name+" stopped";break;case"destroy":n="Container "+t.name+" deleted";break;case"create":n="Container "+t.name+" created";break;case"start":n="Container "+t.name+" started";break;case"kill":n="Container "+t.name+" killed";break;case"die":n="Container "+t.name+" exited with status code "+t.exitCode;break;case"commit":n="Container "+t.name+" committed";break;case"restart":n="Container "+t.name+" restarted";break;case"pause":n="Container "+t.name+" paused";break;case"unpause":n="Container "+t.name+" unpaused";break;case"attach":n="Container "+t.name+" attached";break;case"detach":n="Container "+t.name+" detached";break;case"copy":n="Container "+t.name+" copied";break;case"export":n="Container "+t.name+" exported";break;case"health_status":n="Container "+t.name+" executed health status";break;case"oom":n="Container "+t.name+" goes in out of memory";break;case"rename":n="Container "+t.name+" renamed";break;case"resize":n="Container "+t.name+" resized";break;case"top":n="Showed running processes for container "+t.name;break;case"update":n="Container "+t.name+" updated";break;default:n=0===e.Action.indexOf("exec_create")?"Exec instance created":0===e.Action.indexOf("exec_start")?"Exec instance started":"Unsupported event"}break;case"image":switch(e.Action){case"delete":n="Image deleted";break;case"import":n="Image "+e.Actor.ID+" imported";break;case"load":n="Image "+e.Actor.ID+" loaded";break;case"tag":n="New tag created for "+t.name;break;case"untag":n="Image untagged";break;case"save":n="Image "+e.Actor.ID+" saved";break;case"pull":n="Image "+e.Actor.ID+" pulled";break;case"push":n="Image "+e.Actor.ID+" pushed";break;default:n="Unsupported event"}break;case"network":switch(e.Action){case"create":n="Network "+t.name+" created";break;case"destroy":n="Network "+t.name+" deleted";break;case"remove":n="Network "+t.name+" removed";break;case"connect":n="Container connected to "+t.name+" network";break;case"disconnect":n="Container disconnected from "+t.name+" network";break;default:n="Unsupported event"}break;case"volume":switch(e.Action){case"create":n="Volume "+e.Actor.ID+" created";break;case"destroy":n="Volume "+e.Actor.ID+" deleted";break;case"mount":n="Volume "+e.Actor.ID+" mounted";break;case"unmount":n="Volume "+e.Actor.ID+" unmounted";break;default:n="Unsupported event"}break;default:n="Unsupported event"}return n}(e)):(this.Type=e.status,this.Details=e.from)}n.r(t),n.d(t,"EventViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Tag=e.Tag,this.Parent=e.Parent,this.Repository=e.Repository,this.Created=e.Created,this.Checked=!1,this.RepoTags=e.RepoTags,this.VirtualSize=e.VirtualSize,this.DockerVersion=e.DockerVersion,this.Os=e.Os,this.Architecture=e.Architecture,this.Author=e.Author,this.Command=e.Config.Cmd,this.Entrypoint=e.ContainerConfig.Entrypoint?e.ContainerConfig.Entrypoint:"",this.ExposedPorts=e.ContainerConfig.ExposedPorts?Object.keys(e.ContainerConfig.ExposedPorts):[],this.Volumes=e.ContainerConfig.Volumes?Object.keys(e.ContainerConfig.Volumes):[],this.Env=e.ContainerConfig.Env?e.ContainerConfig.Env:[]}n.r(t),n.d(t,"ImageDetailsViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e,t){this.Order=e,this.Id=t.Id,this.Created=t.Created,this.CreatedBy=t.CreatedBy,this.Size=t.Size,this.Comment=t.Comment,this.Tags=t.Tags}n.r(t),n.d(t,"ImageLayerViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Name=e.Name,this.Enabled=e.Enabled,this.Config=e.Config}n.r(t),n.d(t,"PluginViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.ID}n.r(t),n.d(t,"SwarmViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){var t={};return t.file=e,t}n.r(t),n.d(t,"imageGetResponse",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.ID=e.Id,this.Name=e.Name,this.Description=e.Description,this.Authorizations=e.Authorizations}n.r(t),n.d(t,"RoleViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.id,this.Description=e.description,this.Name=e.name,this.Namespace=e.namespace?e.namespace.name:"",this.PathWithNamespace=e.path_with_namespace,this.RegistryEnabled=e.container_registry_enabled}n.r(t),n.d(t,"RegistryGitlabProject",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.id,this.Parent=e.parent,this.Created=e.created,this.DockerVersion=e.docker_version,this.Os=e.os,this.Architecture=e.architecture,this.Author=e.author,this.Command=e.config.Cmd,this.Entrypoint=e.container_config.Entrypoint?e.container_config.Entrypoint:"",this.ExposedPorts=e.container_config.ExposedPorts?Object.keys(e.container_config.ExposedPorts):[],this.Volumes=e.container_config.Volumes?Object.keys(e.container_config.Volumes):[],this.Env=e.container_config.Env?e.container_config.Env:[]}n.r(t),n.d(t,"RegistryImageDetailsViewModel",(function(){return a}))},function(e,t,n){"use strict";n.r(t),n.d(t,"RegistryImageLayerViewModel",(function(){return r}));var a=n(55);function r(e,t){this.Order=e,this.Id=t.id,this.Created=t.created,this.CreatedBy=Object(a.a)(t.container_config.Cmd," ")}},function(e,t,n){"use strict";function a(e){this.Time=e.time,this.Category=e.category,this.Module=e.module,this.Content=e.content}n.r(t),n.d(t,"StoridgeEventModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Domain=e.domain,this.Nodes=e.nodes,this.Condition=e.condition,this.ProvisionedBandwidth=e.provisionedBandwidth,this.UsedBandwidth=e.usedBandwidth,this.FreeBandwidth=e.freeBandwidth,this.TotalBandwidth=e.totalBandwidth,this.ProvisionedIOPS=e.provisionedIOPS,this.UsedIOPS=e.usedIOPS,this.FreeIOPS=e.freeIOPS,this.TotalIOPS=e.totalIOPS,this.ProvisionedCapacity=e.provisionedCapacity,this.UsedCapacity=e.usedCapacity,this.FreeCapacity=e.freeCapacity,this.TotalCapacity=e.totalCapacity}n.r(t),n.d(t,"StoridgeInfoModel",(function(){return a}))},function(e,t,n){"use strict";n.r(t),n.d(t,"AccessControlPanelData",(function(){return r}));var a=n(7);function r(){this.Ownership=a.ResourceControlOwnership.ADMINISTRATORS,this.Ownership_Users=[],this.Ownership_Teams=[]}},function(e,t,n){"use strict";n.r(t);var a=n(55),r=n(1),i=n.n(r),o=n(110);function s(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var l=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.editEndpoint=this.editEndpoint.bind(this)}var t,n,r;return t=e,(n=[{key:"editEndpoint",value:function(e){e.stopPropagation(),this.onEdit(this.model.Id)}},{key:"joinTags",value:function(){if(!this.tags)return"Loading tags...";if(!this.model.TagIds||!this.model.TagIds.length)return"";var e=o.default.idsToTagNames(this.tags,this.model.TagIds);return Object(a.a)(e,",")}},{key:"$onInit",value:function(){this.endpointTags=this.joinTags()}},{key:"$onChanges",value:function(e){var t=e.tags,n=e.model;(t||n)&&(t.currentValue||n.currentValue)&&(this.endpointTags=this.joinTags())}}])&&s(t.prototype,n),r&&s(t,r),e}();i.a.module("portainer.app").controller("EndpointItemController",l),t.default=l},function(e,t,n){"use strict";n.r(t);var a=n(25),r=n(6),i=n(1),o=n.n(i);function s(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var l=function(){function e(t,n,a,r,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$q=t,this.EndpointService=n,this.GroupService=a,this.Notifications=r,this.Authentication=i,this.associateEndpoint=this.associateEndpoint.bind(this),this.dissociateEndpoint=this.dissociateEndpoint.bind(this),this.getPaginatedEndpointsByGroup=this.getPaginatedEndpointsByGroup.bind(this)}var t,n,i;return e.$inject=["$q","EndpointService","GroupService","Notifications","Authentication"],t=e,(n=[{key:"$onInit",value:function(){this.state={available:{limit:"10",filter:"",pageNumber:1,totalCount:0},associated:{limit:"10",filter:"",pageNumber:1,totalCount:0},allowCreateTag:this.Authentication.isAdmin()}}},{key:"associateEndpoint",value:function(e){var t=this;"create"!==this.pageType||Object(r.a)(this.associatedEndpoints,e)?"edit"===this.pageType&&this.GroupService.addEndpoint(this.model.Id,e).then((function(){t.Notifications.success("Success","Endpoint successfully added to group"),t.reloadTablesContent()})).catch((function(e){return t.Notifications.error("Error",e,"Unable to add endpoint to group")})):this.associatedEndpoints.push(e)}},{key:"dissociateEndpoint",value:function(e){var t=this;"create"===this.pageType?Object(a.a)(this.associatedEndpoints,(function(t){return t.Id===e.Id})):"edit"===this.pageType&&this.GroupService.removeEndpoint(this.model.Id,e.Id).then((function(){t.Notifications.success("Success","Endpoint successfully removed from group"),t.reloadTablesContent()})).catch((function(e){return t.Notifications.error("Error",e,"Unable to remove endpoint from group")}))}},{key:"reloadTablesContent",value:function(){var e=this;this.getPaginatedEndpointsByGroup(this.pageType,"available"),this.getPaginatedEndpointsByGroup(this.pageType,"associated"),this.GroupService.group(this.model.Id).then((function(t){e.model=t}))}},{key:"getPaginatedEndpointsByGroup",value:function(e,t){var n=this;if("available"===t){var a=this.state.available,r=(a.pageNumber-1)*a.limit+1;this.EndpointService.endpointsByGroup(r,a.limit,a.filter,1).then((function(e){n.availableEndpoints=e.value,n.state.available.totalCount=e.totalCount}))}else if("associated"===t&&"edit"===e){var i=this.model.Id?this.model.Id:1,o=this.state.associated,s=(o.pageNumber-1)*o.limit+1;this.EndpointService.endpointsByGroup(s,o.limit,o.filter,i).then((function(e){n.associatedEndpoints=e.value,n.state.associated.totalCount=e.totalCount}))}}}])&&s(t.prototype,n),i&&s(t,i),e}();o.a.module("portainer.app").controller("GroupFormController",l),t.default=l},function(e,t,n){"use strict";function a(e){this.Title=e.Title,this.Message=e.Message,this.Hash=e.Hash,this.Style=e.Style,this.ContentLayout=e.ContentLayout}n.r(t),n.d(t,"MotdViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Token=e.Token,this.ResourceId=e.ResourceID,this.EndpointId=e.EndpointID,this.WebhookType=e.WebhookType}n.r(t),n.d(t,"WebhookViewModel",(function(){return a}))},function(e,t,n){"use strict";function a(e,t){var n={};return n.value=angular.fromJson(e),n.totalCount=t("X-Total-Count"),n}n.r(t),n.d(t,"default",(function(){return a}))},,,,function(e,t,n){"use strict";n.r(t);n(424);var a=n(1),r=n.n(a);n(319),n(320),n(321),n(322),n(323);r.a.module("portainer",["ui.bootstrap","ui.router","ui.select","isteven-multi-select","ngCookies","ngSanitize","ngFileUpload","ngMessages","ngResource","angularUtils.directives.dirPagination","LocalStorageModule","angular-jwt","angular-google-analytics","angular-json-tree","angular-loading-bar","angular-clipboard","ngFileSaver","luegg.directives","portainer.app","portainer.agent","portainer.azure","portainer.docker","portainer.edge","portainer.extensions","portainer.integrations","rzModule","moment-picker"]);var i=n(506);i.keys().forEach((function(e){i(e)}))},function(e,t){angular.module("portainer.agent",[])},function(e,t,n){var a=n(426),r=n(427),i=n(428);angular.module("portainer.azure",["portainer.app"]).config(["$stateRegistryProvider",function(e){"use strict";var t={name:"azure.containerinstances",url:"/containerinstances",views:{"content@":{templateUrl:a,controller:"AzureContainerInstancesController"}}},n={name:"azure.containerinstances.new",url:"/new/",views:{"content@":{templateUrl:r,controller:"AzureCreateContainerInstanceController"}}},o={name:"azure.dashboard",url:"/dashboard",views:{"content@":{templateUrl:i,controller:"AzureDashboardController"}}};e.register({name:"azure",url:"/azure",parent:"root",abstract:!0}),e.register(t),e.register(n),e.register(o)}])},function(e,t,n){var a=n(429),r=n(430),i=n(431),o=n(432),s=n(433),l=n(434),c=n(435),d=n(436),u=n(437),p=n(438),m=n(439),g=n(440),f=n(441),v=n(442),h=n(443),b=n(444),y=n(445),x=n(446),w=n(447),k=n(448),S=n(449),C=n(450),$=n(451),I=n(452),P=n(453),T=n(454),A=n(455),D=n(456),R=n(457),E=n(458),N=n(459),U=n(460),O=n(461),_=n(462),V=n(463);angular.module("portainer.docker",["portainer.app"]).config(["$stateRegistryProvider",function(e){"use strict";var t={name:"docker.configs",url:"/configs",views:{"content@":{templateUrl:a,controller:"ConfigsController",controllerAs:"ctrl"}}},n={name:"docker.configs.config",url:"/:id",views:{"content@":{templateUrl:r,controller:"ConfigController"}}},L={name:"docker.configs.new",url:"/new?id",views:{"content@":{templateUrl:i,controller:"CreateConfigController",controllerAs:"ctrl"}}},M={name:"docker.containers",url:"/containers",views:{"content@":{templateUrl:o,controller:"ContainersController"}}},F={name:"docker.containers.container",url:"/:id?nodeName",views:{"content@":{templateUrl:s,controller:"ContainerController"}}},j={name:"docker.containers.container.attach",url:"/attach",views:{"content@":{templateUrl:l,controller:"ContainerConsoleController"}}},B={name:"docker.containers.container.exec",url:"/exec",views:{"content@":{templateUrl:c,controller:"ContainerConsoleController"}}},z={name:"docker.containers.new",url:"/new?nodeName&from",views:{"content@":{templateUrl:d,controller:"CreateContainerController"}}},G={name:"docker.containers.container.inspect",url:"/inspect",views:{"content@":{templateUrl:u,controller:"ContainerInspectController"}}},H={name:"docker.containers.container.logs",url:"/logs",views:{"content@":{templateUrl:p,controller:"ContainerLogsController"}}},q={name:"docker.containers.container.stats",url:"/stats",views:{"content@":{templateUrl:m,controller:"ContainerStatsController"}}},K={name:"docker.dashboard",url:"/dashboard",views:{"content@":{templateUrl:g,controller:"DashboardController"}}},W={name:"docker.events",url:"/events",views:{"content@":{templateUrl:f,controller:"EventsController"}}},Y={name:"docker.images",url:"/images",views:{"content@":{templateUrl:v,controller:"ImagesController"}}},J={name:"docker.images.image",url:"/:id?nodeName",views:{"content@":{templateUrl:h,controller:"ImageController"}}},Q={name:"docker.images.build",url:"/build",views:{"content@":{templateUrl:b,controller:"BuildImageController"}}},X={name:"docker.images.import",url:"/import",views:{"content@":{templateUrl:y,controller:"ImportImageController"}}},Z={name:"docker.networks",url:"/networks",views:{"content@":{templateUrl:x,controller:"NetworksController"}}},ee={name:"docker.networks.network",url:"/:id?nodeName",views:{"content@":{templateUrl:w,controller:"NetworkController"}}},te={name:"docker.networks.new",url:"/new",views:{"content@":{templateUrl:k,controller:"CreateNetworkController"}}},ne={name:"docker.secrets",url:"/secrets",views:{"content@":{templateUrl:S,controller:"SecretsController"}}},ae={name:"docker.secrets.secret",url:"/:id",views:{"content@":{templateUrl:C,controller:"SecretController"}}},re={name:"docker.secrets.new",url:"/new",views:{"content@":{templateUrl:$,controller:"CreateSecretController"}}},ie={name:"docker.services",url:"/services",views:{"content@":{templateUrl:I,controller:"ServicesController"}}},oe={name:"docker.services.service",url:"/:id",views:{"content@":{templateUrl:P,controller:"ServiceController"}}},se={name:"docker.services.new",url:"/new",views:{"content@":{templateUrl:T,controller:"CreateServiceController"}}},le={name:"docker.services.service.logs",url:"/logs",views:{"content@":{templateUrl:A,controller:"ServiceLogsController"}}},ce={name:"docker.swarm",url:"/swarm",views:{"content@":{templateUrl:D,controller:"SwarmController"}}},de={name:"docker.swarm.visualizer",url:"/visualizer",views:{"content@":{templateUrl:R,controller:"SwarmVisualizerController"}}},ue={name:"docker.tasks.task",url:"/:id",views:{"content@":{templateUrl:E,controller:"TaskController"}}},pe={name:"docker.tasks.task.logs",url:"/logs",views:{"content@":{templateUrl:N,controller:"TaskLogsController"}}},me={name:"docker.volumes",url:"/volumes",views:{"content@":{templateUrl:U,controller:"VolumesController"}}},ge={name:"docker.volumes.volume",url:"/:id?nodeName",views:{"content@":{templateUrl:O,controller:"VolumeController"}}},fe={name:"docker.volumes.volume.browse",url:"/browse",views:{"content@":{templateUrl:_,controller:"BrowseVolumeController"}}},ve={name:"docker.volumes.new",url:"/new",views:{"content@":{templateUrl:V,controller:"CreateVolumeController"}}};e.register(t),e.register(n),e.register(L),e.register(M),e.register(F),e.register(B),e.register(j),e.register(z),e.register(G),e.register(H),e.register(q),e.register({name:"docker",parent:"root",abstract:!0,resolve:{endpointID:["EndpointProvider","$state",function(e,t){if(!e.endpointID())return t.go("portainer.home")}]}}),e.register(K),e.register({name:"docker.host",url:"/host",views:{"content@":{component:"hostView"}}}),e.register({name:"docker.host.browser",url:"/browser",views:{"content@":{component:"hostBrowserView"}}}),e.register({name:"docker.host.job",url:"/job",views:{"content@":{component:"hostJobView"}}}),e.register(W),e.register(Y),e.register(J),e.register(Q),e.register(X),e.register(Z),e.register(ee),e.register(te),e.register({name:"docker.nodes",url:"/nodes",abstract:!0}),e.register({name:"docker.nodes.node",url:"/:id",views:{"content@":{component:"nodeDetailsView"}}}),e.register({name:"docker.nodes.node.browse",url:"/browse",views:{"content@":{component:"nodeBrowserView"}}}),e.register({name:"docker.nodes.node.job",url:"/job",views:{"content@":{component:"nodeJobView"}}}),e.register(ne),e.register(ae),e.register(re),e.register(ie),e.register(oe),e.register(se),e.register(le),e.register(ce),e.register(de),e.register({name:"docker.tasks",url:"/tasks",abstract:!0}),e.register(ue),e.register(pe),e.register(me),e.register(ge),e.register(fe),e.register(ve)}])},function(e,t,n){"use strict";n.r(t);var a=n(1);n.n(a).a.module("portainer.edge",[]).config(["$stateRegistryProvider",function(e){e.register({name:"edge",url:"/edge",parent:"root",abstract:!0}),e.register({name:"edge.groups",url:"/groups",views:{"content@":{component:"edgeGroupsView"}}}),e.register({name:"edge.groups.new",url:"/new",views:{"content@":{component:"createEdgeGroupView"}}}),e.register({name:"edge.groups.edit",url:"/:groupId",views:{"content@":{component:"editEdgeGroupView"}}}),e.register({name:"edge.stacks",url:"/stacks",views:{"content@":{component:"edgeStacksView"}}}),e.register({name:"edge.stacks.new",url:"/new",views:{"content@":{component:"createEdgeStackView"}}}),e.register({name:"edge.stacks.edit",url:"/:stackId",views:{"content@":{component:"editEdgeStackView"}},params:{tab:0}})}])},function(e,t,n){"use strict";n.r(t);var a=n(6);function r(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function i(e){return function(){var t=this,n=arguments;return new Promise((function(a,i){var o=e.apply(t,n);function s(e){r(o,a,i,s,l,"next",e)}function l(e){r(o,a,i,s,l,"throw",e)}s(void 0)}))}}var o=n(464),s=n(467),l=n(468),c=n(469),d=n(470),u=n(471),p=n(472),m=n(473),g=n(474),f=n(475),v=n(476),h=n(477),b=n(478),y=n(479),x=n(480),w=n(481),k=n(482),S=n(483),C=n(484),$=n(485),I=n(486),P=n(487),T=n(488),A=n(489),D=n(490),R=n(491),E=n(492),N=n(493),U=n(494),O=n(495),_=n(496),V=n(497),L=n(498),M=n(499),F=n(500),j=n(501),B=n(502),z=n(503),G=n(504),H=n(505);function q(e,t,n,a){return K.apply(this,arguments)}function K(){return(K=i(regeneratorRuntime.mark((function e(t,n,r,i){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.checkAuthOnRefresh(),r.$on("unauthenticated",(function(e,t){Object(a.a)(t.config.url,"/v2/")||Object(a.a)(t.config.url,"/api/v4/")||i.go("portainer.auth",{error:"Your session has expired"})})),e.next=4,n.init();case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}angular.module("portainer.app",[]).config(["$stateRegistryProvider",function(e){var t={name:"root",abstract:!0,resolve:{initStateManager:["StateManager","Authentication","Notifications","Analytics","authManager","$rootScope","$state","$async","$q",function(e,t,n,a,r,i,o,s,l){var c=l.defer();return e.getState().loading?e.initialize().then((function(e){if(e.application.analytics&&function(e,t){e.offline(!1),e.registerScriptTags(),e.registerTrackers(),t.$on("$stateChangeSuccess",(function(t,n){e.trackPage(n.url),e.pageView()}))}(a,i),e.application.authentication)return s(q,r,t,i,o)})).then((function(){return c.resolve()})).catch((function(e){n.error("Failure",e,"Unable to retrieve application settings"),c.reject(e)})):c.resolve(),c.promise}]},views:{"sidebar@":{templateUrl:o,controller:"SidebarController"}}},n={name:"portainer.about",url:"/about",views:{"content@":{templateUrl:s}}},a={name:"portainer.account",url:"/account",views:{"content@":{templateUrl:l,controller:"AccountController"}}},r={name:"portainer.auth",url:"/auth",params:{logout:!1,error:""},views:{"content@":{templateUrl:c,controller:"AuthenticationController",controllerAs:"ctrl"},"sidebar@":{}}},i={name:"portainer.endpoints",url:"/endpoints",views:{"content@":{templateUrl:d,controller:"EndpointsController"}}},K={name:"portainer.endpoints.endpoint",url:"/:id",views:{"content@":{templateUrl:u,controller:"EndpointController"}}},W={name:"portainer.endpoints.new",url:"/new",views:{"content@":{templateUrl:p,controller:"CreateEndpointController"}}},Y={name:"portainer.endpoints.endpoint.access",url:"/access",views:{"content@":{templateUrl:m,controller:"EndpointAccessController",controllerAs:"ctrl"}}},J={name:"portainer.groups",url:"/groups",views:{"content@":{templateUrl:g,controller:"GroupsController"}}},Q={name:"portainer.groups.group",url:"/:id",views:{"content@":{templateUrl:f,controller:"GroupController"}}},X={name:"portainer.groups.new",url:"/new",views:{"content@":{templateUrl:v,controller:"CreateGroupController"}}},Z={name:"portainer.groups.group.access",url:"/access",views:{"content@":{templateUrl:h,controller:"GroupAccessController"}}},ee={name:"portainer.home",url:"/home",views:{"content@":{templateUrl:b,controller:"HomeController"}}},te={name:"portainer.init.endpoint",url:"/endpoint",views:{"content@":{templateUrl:y,controller:"InitEndpointController"}}},ne={name:"portainer.init.admin",url:"/admin",views:{"content@":{templateUrl:x,controller:"InitAdminController"}}},ae={name:"portainer.extensions",url:"/extensions",views:{"content@":{templateUrl:w,controller:"ExtensionsController"}}},re={name:"portainer.extensions.extension",url:"/extension/:id",views:{"content@":{templateUrl:k,controller:"ExtensionController"}}},ie={name:"portainer.registries",url:"/registries",views:{"content@":{templateUrl:S,controller:"RegistriesController"}}},oe={name:"portainer.registries.registry",url:"/:id",views:{"content@":{templateUrl:C,controller:"RegistryController"}}},se={name:"portainer.registries.new",url:"/new",views:{"content@":{templateUrl:$,controller:"CreateRegistryController"}}},le={name:"portainer.registries.registry.access",url:"/access",views:{"content@":{templateUrl:I,controller:"RegistryAccessController"}}},ce={name:"portainer.schedules",url:"/schedules",views:{"content@":{templateUrl:P,controller:"SchedulesController"}}},de={name:"portainer.schedules.schedule",url:"/:id",views:{"content@":{templateUrl:T,controller:"ScheduleController"}}},ue={name:"portainer.schedules.new",url:"/new",views:{"content@":{templateUrl:A,controller:"CreateScheduleController"}}},pe={name:"portainer.settings",url:"/settings",views:{"content@":{templateUrl:D,controller:"SettingsController"}}},me={name:"portainer.settings.authentication",url:"/auth",views:{"content@":{templateUrl:R,controller:"SettingsAuthenticationController"}}},ge={name:"portainer.stacks",url:"/stacks",views:{"content@":{templateUrl:E,controller:"StacksController"}},resolve:{endpointID:["EndpointProvider","$state",function(e,t){if(!e.endpointID())return t.go("portainer.home")}]}},fe={name:"portainer.stacks.stack",url:"/:name?id&type&external",views:{"content@":{templateUrl:N,controller:"StackController"}}},ve={name:"portainer.stacks.newstack",url:"/newstack",views:{"content@":{templateUrl:U,controller:"CreateStackController"}}},he={name:"portainer.support",url:"/support",views:{"content@":{templateUrl:O,controller:"SupportController"}},params:{product:{}}},be={name:"portainer.support.product",url:"/product",views:{"content@":{templateUrl:_,controller:"SupportProductController"}}},ye={name:"portainer.tags",url:"/tags",views:{"content@":{templateUrl:V,controller:"TagsController"}}},xe={name:"portainer.updatePassword",url:"/update-password",views:{"content@":{templateUrl:L,controller:"UpdatePasswordController"},"sidebar@":{}}},we={name:"portainer.users",url:"/users",views:{"content@":{templateUrl:M,controller:"UsersController"}}},ke={name:"portainer.users.user",url:"/:id",views:{"content@":{templateUrl:F,controller:"UserController"}}},Se={name:"portainer.teams",url:"/teams",views:{"content@":{templateUrl:j,controller:"TeamsController"}}},Ce={name:"portainer.teams.team",url:"/:id",views:{"content@":{templateUrl:B,controller:"TeamController"}}},$e={name:"portainer.templates",url:"/templates",resolve:{endpointID:["EndpointProvider","$state",function(e,t){if(!e.endpointID())return t.go("portainer.home")}]},views:{"content@":{templateUrl:z,controller:"TemplatesController"}}},Ie={name:"portainer.templates.template",url:"/:id",views:{"content@":{templateUrl:G,controller:"TemplateController"}}},Pe={name:"portainer.templates.new",url:"/new",views:{"content@":{templateUrl:H,controller:"CreateTemplateController"}}};e.register(t),e.register({name:"portainer",parent:"root",abstract:!0}),e.register(n),e.register(a),e.register(r),e.register(i),e.register(K),e.register(Y),e.register(W),e.register(J),e.register(Q),e.register(Z),e.register(X),e.register(ee),e.register({name:"portainer.init",abstract:!0,url:"/init",views:{"sidebar@":{}}}),e.register(te),e.register(ne),e.register(ae),e.register(re),e.register(ie),e.register(oe),e.register(le),e.register(se),e.register(ce),e.register(de),e.register(ue),e.register(pe),e.register(me),e.register(ge),e.register(fe),e.register(ve),e.register(he),e.register(be),e.register(ye),e.register(xe),e.register(we),e.register(ke),e.register(Se),e.register(Ce),e.register($e),e.register(Ie),e.register(Pe)}])},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){},,function(e,t){var n="app/azure/views/containerinstances/containerinstances.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Container list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="azure.containerinstances" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Container instances</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <containergroups-datatable\n      title-text="Containers"\n      title-icon="fa-server"\n      dataset="containerGroups"\n      table-key="containergroups"\n      order-by="Name"\n      remove-action="deleteAction"\n    ></containergroups-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/azure/views/containerinstances/create/createcontainerinstance.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create container instance"></rd-header-title>\n  <rd-header-content> <a ui-sref="azure.containerinstances">Container instances</a> &gt; Add container </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" autocomplete="off">\n          <div class="col-sm-12 form-section-title">\n            Azure settings\n          </div>\n          \x3c!-- subscription-input --\x3e\n          <div class="form-group">\n            <label for="azure_subscription" class="col-sm-1 control-label text-left">Subscription</label>\n            <div class="col-sm-11">\n              <select\n                class="form-control"\n                name="azure_subscription"\n                ng-model="state.selectedSubscription"\n                ng-options="subscription.Name for subscription in subscriptions"\n                ng-change="changeSubscription()"\n              ></select>\n            </div>\n          </div>\n          \x3c!-- !subscription-input --\x3e\n          \x3c!-- resourcegroup-input --\x3e\n          <div class="form-group">\n            <label for="azure_resourcegroup" class="col-sm-1 control-label text-left">Resource group</label>\n            <div class="col-sm-11">\n              <select\n                class="form-control"\n                name="azure_resourcegroup"\n                ng-model="state.selectedResourceGroup"\n                ng-options="resourceGroup.Name for resourceGroup in resourceGroups"\n              ></select>\n            </div>\n          </div>\n          \x3c!-- !resourcegroup-input --\x3e\n          \x3c!-- location-input --\x3e\n          <div class="form-group">\n            <label for="azure_location" class="col-sm-1 control-label text-left">Location</label>\n            <div class="col-sm-11">\n              <select class="form-control" name="azure_location" ng-model="model.Location" ng-options="location for location in locations"></select>\n            </div>\n          </div>\n          \x3c!-- !location-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Container configuration\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="model.Name" name="container_name" placeholder="e.g. myContainer" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- image-input --\x3e\n          <div class="form-group">\n            <label for="image_name" class="col-sm-1 control-label text-left">Image</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="model.Image" name="image_name" placeholder="e.g. nginx:alpine" />\n            </div>\n          </div>\n          \x3c!-- !image-input --\x3e\n          \x3c!-- os-input --\x3e\n          <div class="form-group">\n            <label for="container_os" class="col-sm-1 control-label text-left">OS</label>\n            <div class="col-sm-11">\n              <select class="form-control" ng-model="model.OSType" name="container_os">\n                <option value="Linux">Linux</option>\n                <option value="Windows">Windows</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !os-input --\x3e\n          \x3c!-- port-mapping --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">Port mapping</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional port\n              </span>\n            </div>\n            \x3c!-- port-mapping-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="binding in model.Ports" style="margin-top: 2px;">\n                \x3c!-- host-port --\x3e\n                <div class="input-group col-sm-4 input-group-sm">\n                  <span class="input-group-addon">host</span>\n                  <input type="text" class="form-control" ng-model="binding.host" placeholder="e.g. 80" />\n                </div>\n                \x3c!-- !host-port --\x3e\n                <span style="margin: 0 10px 0 10px;">\n                  <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                </span>\n                \x3c!-- container-port --\x3e\n                <div class="input-group col-sm-4 input-group-sm">\n                  <span class="input-group-addon">container</span>\n                  <input type="text" class="form-control" ng-model="binding.container" placeholder="e.g. 80" />\n                </div>\n                \x3c!-- !container-port --\x3e\n                \x3c!-- protocol-actions --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="binding.protocol" uib-btn-radio="\'TCP\'">TCP</label>\n                    <label class="btn btn-primary" ng-model="binding.protocol" uib-btn-radio="\'UDP\'">UDP</label>\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n                \x3c!-- !protocol-actions --\x3e\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n          </div>\n          \x3c!-- !port-mapping --\x3e\n          \x3c!-- public-ip --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="public_ip" class="control-label text-left">\n                Allocate public IP address\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="public_ip" ng-model="model.AllocatePublicIP" /><i></i> </label>\n            </div>\n          </div>\n          \x3c!-- public-ip --\x3e\n          <div class="col-sm-12 form-section-title">\n            Container resources\n          </div>\n          \x3c!-- cpu-input --\x3e\n          <div class="form-group">\n            <label for="container_cpu" class="col-sm-1 control-label text-left">CPU</label>\n            <div class="col-sm-11">\n              <input type="number" class="form-control" ng-model="model.CPU" name="container_cpu" placeholder="1" />\n            </div>\n          </div>\n          \x3c!-- !cpu-input --\x3e\n          \x3c!-- memory-input --\x3e\n          <div class="form-group">\n            <label for="container_memory" class="col-sm-1 control-label text-left">Memory</label>\n            <div class="col-sm-11">\n              <input type="number" class="form-control" ng-model="model.Memory" name="container_memory" placeholder="1" />\n            </div>\n          </div>\n          \x3c!-- !memory-input --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress" ng-click="create()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">Deploy the container</span>\n                <span ng-show="state.actionInProgress">Deployment in progress...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/azure/views/dashboard/dashboard.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Home"></rd-header-title>\n  <rd-header-content>Dashboard</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="subscriptions">\n  <div class="col-sm-12 col-md-6">\n    <a ui-sref="azure.subscriptions">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-th-list"></i>\n          </div>\n          <div class="title">{{ subscriptions.length }}</div>\n          <div class="comment">Subscriptions</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-sm-12 col-md-6" ng-if="resourceGroups">\n    <a ui-sref="azure.resourceGroups">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-th-list"></i>\n          </div>\n          <div class="title">{{ resourceGroups.length }}</div>\n          <div class="comment">Resource groups</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/configs/configs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Configs list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.configs" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Configs</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <configs-datatable\n      title-text="Configs"\n      title-icon="fa-file-code"\n      dataset="ctrl.configs"\n      table-key="configs"\n      order-by="Name"\n      show-ownership-column="applicationState.application.authentication"\n      remove-action="ctrl.removeAction"\n      refresh-callback="ctrl.getConfigs"\n    ></configs-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/configs/edit/config.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Config details">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.configs.config({id: config.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.configs">Configs</a> &gt; <a ui-sref="docker.configs.config({id: config.Id})">{{ config.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-file-code" title-text="Config details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{{ config.Name }}</td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ config.Id }}\n                <button authorization="DockerConfigDelete" class="btn btn-xs btn-danger" ng-click="removeConfig(config.Id)"\n                  ><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Delete this config</button\n                >\n                <button authorization="DockerConfigCreate" class="btn btn-xs btn-primary" ui-sref="docker.configs.new({id: config.Id})"\n                  ><i class="fa fa-copy space-right" aria-hidden="true"></i>Clone config</button\n                >\n              </td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ config.CreatedAt | getisodate }}</td>\n            </tr>\n            <tr>\n              <td>Last updated</td>\n              <td>{{ config.UpdatedAt | getisodate }}</td>\n            </tr>\n            <tr ng-if="!(config.Labels | emptyobject)">\n              <td>Labels</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="(k, v) in config.Labels">\n                    <td>{{ k }}</td>\n                    <td>{{ v }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel ng-if="config && applicationState.application.authentication" resource-id="config.Id" resource-control="config.ResourceControl" resource-type="\'config\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div class="row" ng-if="config">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-file-code" title-text="Config content"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <div class="col-sm-12">\n              <code-editor identifier="config-editor" yml="false" read-only="true" value="config.Data"></code-editor>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/configs/create/createconfig.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create config"></rd-header-title>\n  <rd-header-content> <a ui-sref="docker.configs">Configs</a> &gt; Add config </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="config_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="ctrl.formValues.Name" id="config_name" placeholder="e.g. myConfig" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- config-data --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" ng-if="ctrl.formValues.displayCodeEditor">\n              <code-editor\n                identifier="config-creation-editor"\n                placeholder="Define or paste the content of your config here"\n                yml="false"\n                on-change="(ctrl.editorUpdate)"\n                value="ctrl.formValues.Data"\n              ></code-editor>\n            </div>\n          </div>\n          \x3c!-- !config-data --\x3e\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">Labels</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="ctrl.addLabel()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> add label\n              </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in ctrl.formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="label.name" placeholder="e.g. com.example.foo" />\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="ctrl.removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels--\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="ctrl.formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!ctrl.formValues.Name" ng-click="ctrl.create()">Create config</button>\n              <span class="text-danger" ng-if="ctrl.state.formValidationError" style="margin-left: 5px;">{{ ctrl.state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/containers.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Container list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.containers" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Containers</rd-header-content>\n</rd-header>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<div class="row">\n  <div class="col-sm-12" ng-if="containers">\n    <containers-datatable\n      title-text="Containers"\n      title-icon="fa-server"\n      dataset="containers"\n      table-key="containers"\n      order-by="Status"\n      show-ownership-column="applicationState.application.authentication"\n      show-host-column="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n      show-add-action="true"\n      offline-mode="offlineMode"\n      refresh-callback="getContainers"\n    ></containers-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/edit/container.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Container details"> </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">Containers</a> &gt; <a ui-sref="docker.containers.container({id: container.Id})">{{ container.Name | trimcontainername }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div\n  class="row"\n  authorization="DockerContainerStart, DockerContainerStop, DockerContainerKill, DockerContainerRestart, DockerContainerPause, DockerContainerUnpause, DockerContainerDelete, DockerContainerCreate"\n>\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title-text="Actions"></rd-widget-header>\n      <rd-widget-body classes="padding">\n        <div class="btn-group" role="group" aria-label="...">\n          <button authorization="DockerContainerStart" class="btn btn-success btn-sm" ng-click="start()" ng-disabled="container.State.Running"\n            ><i class="fa fa-play space-right" aria-hidden="true"></i>Start</button\n          >\n          <button authorization="DockerContainerStop" class="btn btn-danger btn-sm" ng-click="stop()" ng-disabled="!container.State.Running"\n            ><i class="fa fa-stop space-right" aria-hidden="true"></i>Stop</button\n          >\n          <button authorization="DockerContainerKill" class="btn btn-danger btn-sm" ng-click="kill()" ng-disabled="!container.State.Running"\n            ><i class="fa fa-bomb space-right" aria-hidden="true"></i>Kill</button\n          >\n          <button authorization="DockerContainerRestart" class="btn btn-primary btn-sm" ng-click="restart()" ng-disabled="!container.State.Running"\n            ><i class="fa fa-sync space-right" aria-hidden="true"></i>Restart</button\n          >\n          <button authorization="DockerContainerPause" class="btn btn-primary btn-sm" ng-click="pause()" ng-disabled="!container.State.Running || container.State.Paused"\n            ><i class="fa fa-pause space-right" aria-hidden="true"></i>Pause</button\n          >\n          <button authorization="DockerContainerUnpause" class="btn btn-primary btn-sm" ng-click="unpause()" ng-disabled="!container.State.Paused"\n            ><i class="fa fa-play space-right" aria-hidden="true"></i>Resume</button\n          >\n          <button authorization="DockerContainerDelete" class="btn btn-danger btn-sm" ng-click="confirmRemove()"\n            ><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove</button\n          >\n        </div>\n        <div class="btn-group" role="group" aria-label="..." ng-if="displayRecreateButton" authorization="DockerContainerCreate">\n          <button\n            type="button"\n            class="btn btn-danger btn-sm"\n            ng-disabled="state.recreateContainerInProgress"\n            ng-click="recreate()"\n            button-spinner="state.recreateContainerInProgress"\n          >\n            <span ng-hide="state.recreateContainerInProgress"><i class="fa fa-sync space-right" aria-hidden="true"></i>Recreate</span>\n            <span ng-show="state.recreateContainerInProgress">Recreation in progress...</span>\n          </button>\n          <a class="btn btn-primary btn-sm" type="button" ui-sref="docker.containers.new({ from: container.Id, nodeName: nodeName })"\n            ><i class="fa fa-copy space-right" aria-hidden="true"></i>Duplicate/Edit</a\n          >\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title-text="Container status"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>{{ container.Id }}</td>\n            </tr>\n            <tr>\n              <td>Name</td>\n              <td ng-if="!container.edit">\n                {{ container.Name | trimcontainername }}\n                <a authorization="DockerContainerRename" href="" data-toggle="tooltip" title="Edit container name" ng-click="container.edit = true;"><i class="fa fa-edit"></i></a>\n              </td>\n              <td ng-if="container.edit">\n                <form ng-submit="renameContainer()">\n                  <input type="text" class="containerNameInput" ng-model="container.newContainerName" />\n                  <a href="" ng-click="container.edit = false;"><i class="fa fa-times"></i></a>\n                  <a href="" ng-click="renameContainer()"><i class="fa fa-check-square"></i></a>\n                </form>\n              </td>\n            </tr>\n            <tr ng-if="container.NetworkSettings.IPAddress">\n              <td>IP address</td>\n              <td>{{ container.NetworkSettings.IPAddress }}</td>\n            </tr>\n            <tr>\n              <td>Status</td>\n              <td>\n                <i class="fa fa-heartbeat space-right green-icon" ng-if="container.State.Running"></i>\n                <i class="fa fa-heartbeat space-right red-icon" ng-if="!container.State.Running && container.State.Status !== \'created\'"></i>\n                {{ container.State | getstatetext }} for {{ activityTime\n                }}<span ng-if="!container.State.Running && container.State.Status !== \'created\'"> with exit code {{ container.State.ExitCode }}</span>\n              </td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ container.Created | getisodate }}</td>\n            </tr>\n            <tr ng-if="container.State.Running">\n              <td>Start time</td>\n              <td>{{ container.State.StartedAt | getisodate }}</td>\n            </tr>\n            <tr ng-if="!container.State.Running && container.State.Status !== \'created\'">\n              <td>Finished</td>\n              <td>{{ container.State.FinishedAt | getisodate }}</td>\n            </tr>\n            <tr authorization="DockerContainerLogs, DockerContainerInspect, DockerContainerStats, DockerExecStart">\n              <td colspan="2">\n                <div class="btn-group" role="group" aria-label="...">\n                  <a authorization="DockerContainerLogs" class="btn" type="button" ui-sref="docker.containers.container.logs({ id: container.Id })"\n                    ><i class="fa fa-file-alt space-right" aria-hidden="true"></i>Logs</a\n                  >\n                  <a authorization="DockerContainerInspect" class="btn" type="button" ui-sref="docker.containers.container.inspect({ id: container.Id })"\n                    ><i class="fa fa-info-circle space-right" aria-hidden="true"></i>Inspect</a\n                  >\n                  <a authorization="DockerContainerStats" class="btn" type="button" ui-sref="docker.containers.container.stats({ id: container.Id })"\n                    ><i class="fa fa-chart-area space-right" aria-hidden="true"></i>Stats</a\n                  >\n                  <a authorization="DockerExecStart" class="btn" type="button" ui-sref="docker.containers.container.exec({ id: container.Id })"\n                    ><i class="fa fa-terminal space-right" aria-hidden="true"></i>Console</a\n                  >\n                  <a authorization="DockerContainerAttach" class="btn" type="button" ui-sref="docker.containers.container.attach({ id: container.Id })"\n                    ><i class="fa fa-plug space-right" aria-hidden="true"></i>Attach</a\n                  >\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="container && applicationState.application.authentication"\n  resource-id="container.Id"\n  resource-control="container.ResourceControl"\n  resource-type="\'container\'"\n>\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div ng-if="container.State.Health" class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title-text="Container health"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Status</td>\n              <td>\n                <i\n                  ng-class="\n                    { healthy: \'fa fa-heartbeat space-right green-icon\', unhealthy: \'fa fa-heartbeat space-right red-icon\', starting: \'fa fa-heartbeat space-right orange-icon\' }[\n                      container.State.Health.Status\n                    ]\n                  "\n                ></i>\n                {{ container.State.Health.Status }}\n              </td>\n            </tr>\n            <tr>\n              <td>Failure count</td>\n              <td>{{ container.State.Health.FailingStreak }}</td>\n            </tr>\n            <tr>\n              <td>Last output</td>\n              <td>{{ container.State.Health.Log[container.State.Health.Log.length - 1].Output }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" authorization="DockerImageCreate">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title-text="Create image"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- tag-description --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                You can create an image from this container, this allows you to backup important data or save helpful configurations. You\'ll be able to spin up another container\n                based on this image afterward.\n              </span>\n            </div>\n          </div>\n          \x3c!-- !tag-description --\x3e\n          \x3c!-- image-and-registry --\x3e\n          <por-image-registry model="config.RegistryModel" auto-complete="true" label-class="col-sm-1" input-class="col-sm-11"></por-image-registry>\n          \x3c!-- !image-and-registry --\x3e\n          \x3c!-- tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">Note: if you don\'t specify the tag in the image name, <span class="label label-default">latest</span> will be used.</span>\n            </div>\n          </div>\n          \x3c!-- !tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!config.RegistryModel.Image || config.commitInProgress" ng-click="commit()">Create</button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title-text="Container details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Image</td>\n              <td\n                ><a ui-sref="docker.images.image({ id: container.Image, nodeName: nodeName })">{{ container.Config.Image }}@{{ container.Image }}</a></td\n              >\n            </tr>\n            <tr ng-if="portBindings.length > 0">\n              <td>Port configuration</td>\n              <td>\n                <div ng-repeat="portMapping in portBindings"> {{ portMapping.host }} <i class="fa fa-long-arrow-alt-right"></i> {{ portMapping.container }} </div>\n              </td>\n            </tr>\n            <tr>\n              <td>CMD</td>\n              <td\n                ><code>{{ container.Config.Cmd | command }}</code></td\n              >\n            </tr>\n            <tr>\n              <td>ENTRYPOINT</td>\n              <td\n                ><code>{{ container.Config.Entrypoint ? (container.Config.Entrypoint | command) : \'null\' }}</code></td\n              >\n            </tr>\n            <tr>\n              <td>ENV</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="var in container.Config.Env track by $index">\n                    <td>{{ var|key: \'=\' }}</td>\n                    <td>{{ var|value: \'=\' }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n            <tr ng-if="!(container.Config.Labels | emptyobject)">\n              <td>Labels</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="(k, v) in container.Config.Labels">\n                    <td>{{ k }}</td>\n                    <td>{{ v }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n            <tr>\n              <td>Restart policies</td>\n              <td>\n                <container-restart-policy\n                  ng-if="container"\n                  name="container.HostConfig.RestartPolicy.Name"\n                  maximum-retry-count="container.HostConfig.RestartPolicy.MaximumRetryCount"\n                  update-restart-policy="updateRestartPolicy(name, maximumRetryCount)"\n                >\n                </container-restart-policy>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="container.Mounts.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cubes" title-text="Volumes"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <tr>\n              <th>Host/volume</th>\n              <th>Path in container</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-repeat="vol in container.Mounts">\n              <td ng-if="vol.Type === \'bind\'">{{ vol.Source }}</td>\n              <td ng-if="vol.Type === \'volume\'"\n                ><a ui-sref="docker.volumes.volume({ id: vol.Name, nodeName: nodeName })">{{ vol.Name }}</a></td\n              >\n              <td>{{ vol.Destination }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <container-networks-datatable\n      ng-if="container.NetworkSettings.Networks"\n      title-text="Connected networks"\n      title-icon="fa-sitemap"\n      dataset="container.NetworkSettings.Networks"\n      table-key="container-networks"\n      container="container"\n      available-networks="availableNetworks"\n      join-network-action="containerJoinNetwork"\n      join-network-action-in-progress="state.joinNetworkInProgress"\n      leave-network-action="containerLeaveNetwork"\n      leave-network-action-in-progress="state.leaveNetworkInProgress"\n      node-name="nodeName"\n    ></container-networks-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/console/attach.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Container console"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">Containers</a> &gt; <a ui-sref="docker.containers.container({id: container.Id})">{{ container.Name | trimcontainername }}</a> &gt; Console\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-init="autoconnectAttachView()" ng-show="loaded">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-terminal" title-text="Attach"></rd-widget-header>\n      <rd-widget-body>\n        <div class="small text-warning" ng-if="!container.Config.OpenStdin">\n          <p>\n            <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n            The interactive-flag is not set. You might not be able to use the console properly.\n          </p>\n        </div>\n\n        <div class="small text-warning" ng-if="!container.Config.Tty">\n          <p>\n            <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n            The TTY-flag is not set. You might not be able to use the console properly.\n          </p>\n        </div>\n\n        <div class="small text-danger" ng-hide="container.State.Running">\n          <p>\n            <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n            The container is not running.\n          </p>\n        </div>\n\n        <button\n          type="button"\n          class="btn btn-primary"\n          ng-disabled="state === states.connecting || !container.State.Running"\n          ng-click="state == states.disconnected ? connectAttach() : disconnect()"\n        >\n          <span ng-show="state === states.disconnected">Attach to Container</span>\n          <span ng-show="state === states.connected">Detach</span>\n          <span ng-show="state === states.connecting">Attaching...</span>\n        </button>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <div id="terminal-container" class="terminal-container"></div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/console/exec.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Container console"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">Containers</a> &gt; <a ui-sref="docker.containers.container({id: container.Id})">{{ container.Name | trimcontainername }}</a> &gt; Console\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-init="initView()" ng-show="loaded">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-terminal" title-text="Execute"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div ng-if="state === states.disconnected">\n            \x3c!-- command-list --\x3e\n            <div class="form-group">\n              <label for="command" class="col-lg-1 text-left col-sm-2 control-label">Command</label>\n              <div class="col-lg-11 col-sm-10">\n                <div class="input-group" ng-if="!formValues.isCustomCommand">\n                  <span class="input-group-addon">\n                    <i class="fab fa-linux" aria-hidden="true" ng-if="imageOS == \'linux\'"></i>\n                    <i class="fab fa-windows" aria-hidden="true" ng-if="imageOS == \'windows\'"></i>\n                  </span>\n                  <select class="form-control" ng-model="formValues.command" id="command">\n                    <option value="ash" ng-if="imageOS == \'linux\'">/bin/ash</option>\n                    <option value="bash" ng-if="imageOS == \'linux\'">/bin/bash</option>\n                    <option value="sh" ng-if="imageOS == \'linux\'">/bin/sh</option>\n                    <option value="powershell" ng-if="imageOS == \'windows\'">powershell</option>\n                    <option value="cmd.exe" ng-if="imageOS == \'windows\'">cmd.exe</option>\n                    <option ng-repeat="command in containerCommands" value="{{ command.command }}">{{ command.title }}: {{ command.command }}</option>\n                  </select>\n                </div>\n                <input class="form-control" ng-if="formValues.isCustomCommand" type="text" name="custom-command" ng-model="formValues.customCommand" placeholder="e.g. ps aux" />\n              </div>\n            </div>\n            \x3c!-- !command-list --\x3e\n            <div class="form-group col-lg-12">\n              <label for="command" class="text-left control-label">Use custom command</label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.isCustomCommand" /><i></i> </label>\n            </div>\n            <div class="form-group">\n              <label for="username" class="col-lg-1 text-left col-sm-2 control-label">\n                User\n                <portainer-tooltip position="bottom" message="Format is one of: user, user:group, uid or uid:gid"></portainer-tooltip>\n              </label>\n              <div class="col-lg-11 col-sm-10">\n                <input class="form-control" type="text" name="username" ng-model="formValues.user" placeholder="root" />\n              </div>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button type="button" class="btn btn-primary" ng-disabled="!container.State.Running" ng-click="connectExec()">\n                  <span>Connect</span>\n                </button>\n                <span class="small text-danger" ng-hide="container.State.Running">\n                  <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n                  The container is not running.\n                </span>\n              </div>\n            </div>\n          </div>\n          <div ng-if="state !== states.disconnected">\n            <label\n              >Exec into container as <code>{{ ::formValues.user || \'default user\' }}</code> using command\n              <code>{{ formValues.isCustomCommand ? formValues.customCommand : formValues.command }}</code></label\n            >\n            <button type="button" class="btn btn-primary" ng-click="disconnect()">\n              <span ng-show="state === states.connected">Disconnect</span>\n              <span ng-show="state === states.connecting">Connecting...</span>\n            </button>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <div id="terminal-container" class="terminal-container"></div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/create/createcontainer.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create container"></rd-header-title>\n  <rd-header-content> <a ui-sref="docker.containers">Containers</a> &gt; Add container </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" autocomplete="off">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="config.name" id="container_name" placeholder="e.g. myContainer" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Image configuration\n          </div>\n          <div ng-if="!formValues.RegistryModel.Registry && fromContainer">\n            <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true"></i>\n            <span class="small text-danger" style="margin-left: 5px;"\n              >The Docker registry for the <code>{{ config.Image }}</code> image is not registered inside Portainer, you will not be able to create a container. Please register\n              that registry first.</span\n            >\n          </div>\n          <div ng-if="formValues.RegistryModel.Registry || !fromContainer">\n            \x3c!-- image-and-registry --\x3e\n            <por-image-registry\n              model="formValues.RegistryModel"\n              pull-warning="formValues.alwaysPull"\n              ng-if="formValues.RegistryModel.Registry"\n              auto-complete="true"\n              label-class="col-sm-1"\n              input-class="col-sm-11"\n            ></por-image-registry>\n            \x3c!-- !image-and-registry --\x3e\n            \x3c!-- always-pull --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="ownership" class="control-label text-left">\n                  Always pull the image\n                  <portainer-tooltip\n                    position="bottom"\n                    message="When enabled, Portainer will automatically try to pull the specified image before creating the container."\n                  ></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.alwaysPull" /><i></i> </label>\n              </div>\n            </div>\n            \x3c!-- !always-pull --\x3e\n          </div>\n          <div class="col-sm-12 form-section-title">\n            Network ports configuration\n          </div>\n          \x3c!-- publish-exposed-ports --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Publish all exposed network ports to random host ports\n                <portainer-tooltip\n                  position="bottom"\n                  message="When enabled, Portainer will let Docker automatically map a random port on the host to each one defined in the image Dockerfile."\n                ></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="config.HostConfig.PublishAllPorts" /><i></i> </label>\n            </div>\n          </div>\n          \x3c!-- !publish-exposed-ports --\x3e\n          \x3c!-- port-mapping --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Manual network port publishing\n                <portainer-tooltip\n                  position="bottom"\n                  message="When a range of ports on the host and a single port on the container is specified, Docker will randomly choose a single available port in the defined range and forward that to the container port."\n                ></portainer-tooltip>\n              </label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> publish a new network port\n              </span>\n            </div>\n            \x3c!-- port-mapping-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="portBinding in config.HostConfig.PortBindings" style="margin-top: 2px;">\n                \x3c!-- host-port --\x3e\n                <div class="input-group col-sm-4 input-group-sm">\n                  <span class="input-group-addon">host</span>\n                  <input type="text" class="form-control" ng-model="portBinding.hostPort" placeholder="e.g. 80, 80-88, ip:80 or ip:80-88 (optional)" />\n                </div>\n                \x3c!-- !host-port --\x3e\n                <span style="margin: 0 10px 0 10px;">\n                  <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                </span>\n                \x3c!-- container-port --\x3e\n                <div class="input-group col-sm-4 input-group-sm">\n                  <span class="input-group-addon">container</span>\n                  <input type="text" class="form-control" ng-model="portBinding.containerPort" placeholder="e.g. 80 or 80-88" />\n                </div>\n                \x3c!-- !container-port --\x3e\n                \x3c!-- protocol-actions --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                    <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'udp\'">UDP</label>\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n                \x3c!-- !protocol-actions --\x3e\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n          </div>\n          \x3c!-- !port-mapping --\x3e\n          <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n            <div class="col-sm-12 form-section-title">\n              Deployment\n            </div>\n            \x3c!-- node-selection --\x3e\n            <node-selector model="formValues.NodeName"> </node-selector>\n            \x3c!-- !node-selection --\x3e\n          </div>\n          \x3c!-- access-control --\x3e\n          <por-access-control-form\n            form-data="formValues.AccessControlData"\n            resource-control="fromContainer.ResourceControl"\n            ng-if="applicationState.application.authentication && fromContainer"\n          ></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          \x3c!-- autoremove --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="ownership" class="control-label text-left">\n                Auto remove\n                <portainer-tooltip\n                  position="bottom"\n                  message="When enabled, Portainer will automatically remove the container when it exits. This is useful when you want to use the container only once."\n                ></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="config.HostConfig.AutoRemove" /><i></i> </label>\n            </div>\n          </div>\n          \x3c!-- !autoremove --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !formValues.RegistryModel.Image || (!formValues.RegistryModel.Registry && fromContainer)"\n                ng-click="create()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Deploy the container</span>\n                <span ng-show="state.actionInProgress">Deployment in progress...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cog" title-text="Advanced container settings"></rd-widget-header>\n      <rd-widget-body>\n        <ul class="nav nav-pills nav-justified">\n          <li class="active interactive"><a data-target="#command" data-toggle="tab">Command & logging</a></li>\n          <li class="interactive"><a data-target="#volumes" data-toggle="tab">Volumes</a></li>\n          <li class="interactive"><a data-target="#network" data-toggle="tab">Network</a></li>\n          <li class="interactive"><a data-target="#env" data-toggle="tab">Env</a></li>\n          <li class="interactive"><a data-target="#labels" data-toggle="tab">Labels</a></li>\n          <li class="interactive"><a data-target="#restart-policy" data-toggle="tab">Restart policy</a></li>\n          <li class="interactive"><a data-target="#runtime-resources" ng-click="refreshSlider()" data-toggle="tab">Runtime & Resources</a></li>\n          <li ng-if="areContainerCapabilitiesEnabled" class="interactive"><a data-target="#container-capabilities" data-toggle="tab">Capabilities</a></li>\n        </ul>\n        \x3c!-- tab-content --\x3e\n        <div class="tab-content">\n          \x3c!-- tab-command --\x3e\n          <div class="tab-pane active" id="command">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- command-input --\x3e\n              <div class="form-group">\n                <label for="container_command" class="col-sm-2 col-lg-1 control-label text-left">Command</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Cmd" id="container_command" placeholder="e.g. /usr/bin/nginx -t -c /mynginx.conf" />\n                </div>\n              </div>\n              \x3c!-- !command-input --\x3e\n              \x3c!-- entrypoint-input --\x3e\n              <div class="form-group">\n                <label for="container_entrypoint" class="col-sm-2 col-lg-1 control-label text-left">Entry Point</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Entrypoint" id="container_entrypoint" placeholder="e.g. /bin/sh -c" />\n                </div>\n              </div>\n              \x3c!-- !entrypoint-input --\x3e\n              \x3c!-- workdir-user-input --\x3e\n              <div class="form-group">\n                <label for="container_workingdir" class="col-sm-2 col-lg-1 control-label text-left">Working Dir</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="config.WorkingDir" id="container_workingdir" placeholder="e.g. /myapp" />\n                </div>\n                <label for="container_user" class="col-sm-1 control-label text-left">User</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="config.User" id="container_user" placeholder="e.g. nginx" />\n                </div>\n              </div>\n              \x3c!-- !workdir-user-input --\x3e\n              \x3c!-- console --\x3e\n              <div class="form-group">\n                <label for="container_console" class="col-sm-2 col-lg-1 control-label text-left">Console</label>\n                <div class="col-sm-10 col-lg-11">\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="both" />\n                      Interactive & TTY <span class="small text-muted">(-i -t)</span>\n                    </label>\n                  </div>\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="interactive" />\n                      Interactive <span class="small text-muted">(-i)</span>\n                    </label>\n                  </div>\n                </div>\n                <div class="col-sm-offset-2 col-sm-10 col-lg-offset-1 col-lg-11">\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="tty" />\n                      TTY <span class="small text-muted">(-t)</span>\n                    </label>\n                  </div>\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="none" />\n                      None\n                    </label>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !console --\x3e\n\n              <div class="col-sm-12 form-section-title">\n                Logging\n              </div>\n              \x3c!-- logging-driver --\x3e\n              <div class="form-group">\n                <label for="log-driver" class="col-sm-2 col-lg-1 control-label text-left">Driver</label>\n                <div class="col-sm-4">\n                  <select class="form-control" ng-model="formValues.LogDriverName" id="log-driver">\n                    <option selected value="">Default logging driver</option>\n                    <option ng-repeat="driver in availableLoggingDrivers" ng-value="driver">{{ driver }}</option>\n                    <option value="none">none</option>\n                  </select>\n                </div>\n                <div class="col-sm-5">\n                  <p class="small text-muted">\n                    Logging driver that will override the default docker daemon driver. Select Default logging driver if you don\'t want to override it. Supported logging drivers\n                    can be found <a href="https://docs.docker.com/engine/admin/logging/overview/#supported-logging-drivers" target="_blank">in the Docker documentation</a>.\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !logging-driver --\x3e\n              \x3c!-- logging-opts --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">\n                    Options\n                    <portainer-tooltip\n                      position="top"\n                      message="Add button is disabled unless a driver other than none or default is selected. Options are specific to the selected driver, refer to the driver documentation."\n                    ></portainer-tooltip>\n                  </label>\n                  <span\n                    class="label label-default interactive"\n                    style="margin-left: 10px;"\n                    ng-click="!formValues.LogDriverName || formValues.LogDriverName === \'none\' || addLogDriverOpt(formValues.LogDriverName)"\n                  >\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add logging driver option\n                  </span>\n                </div>\n                \x3c!-- logging-opts-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="opt in formValues.LogDriverOpts" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">option</span>\n                      <input type="text" class="form-control" ng-model="opt.name" placeholder="e.g. FOO" />\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="opt.value" placeholder="e.g. bar" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLogDriverOpt($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- logging-opts-input-list --\x3e\n              </div>\n              \x3c!-- !logging-opts --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-command --\x3e\n          \x3c!-- tab-volume --\x3e\n          <div class="tab-pane" id="volumes">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- volumes --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Volume mapping</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addVolume()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional volume\n                  </span>\n                </div>\n                \x3c!-- volumes-input-list --\x3e\n                <div class="form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="volume in formValues.Volumes">\n                    \x3c!-- volume-line1 --\x3e\n                    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                      \x3c!-- container-path --\x3e\n                      <div class="input-group input-group-sm col-sm-6">\n                        <span class="input-group-addon">container</span>\n                        <input type="text" class="form-control" ng-model="volume.containerPath" placeholder="e.g. /path/in/container" />\n                      </div>\n                      \x3c!-- !container-path --\x3e\n                      \x3c!-- volume-type --\x3e\n                      <div class="input-group col-sm-5" style="margin-left: 5px;">\n                        <div class="btn-group btn-group-sm" ng-if="allowBindMounts">\n                          <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'volume\'" ng-click="volume.name = \'\'">Volume</label>\n                          <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'bind\'" ng-click="volume.name = \'\'">Bind</label>\n                        </div>\n                        <button class="btn btn-sm btn-danger" type="button" ng-click="removeVolume($index)">\n                          <i class="fa fa-trash" aria-hidden="true"></i>\n                        </button>\n                      </div>\n                      \x3c!-- !volume-type --\x3e\n                    </div>\n                    \x3c!-- !volume-line1 --\x3e\n                    \x3c!-- volume-line2 --\x3e\n                    <div class="col-sm-12 form-inline" style="margin-top: 5px;">\n                      <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                      \x3c!-- volume --\x3e\n                      <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'volume\'">\n                        <span class="input-group-addon">volume</span>\n                        <select class="form-control" ng-model="volume.name">\n                          <option selected disabled hidden value="">Select a volume</option>\n                          <option ng-repeat="vol in availableVolumes" ng-value="vol.Name">{{ vol.Name | truncate: 30 }} - {{ vol.Driver | truncate: 30 }}</option>\n                        </select>\n                      </div>\n                      \x3c!-- !volume --\x3e\n                      \x3c!-- bind --\x3e\n                      <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'bind\'">\n                        <span class="input-group-addon">host</span>\n                        <input type="text" class="form-control" ng-model="volume.name" placeholder="e.g. /path/on/host" />\n                      </div>\n                      \x3c!-- !bind --\x3e\n                      \x3c!-- read-only --\x3e\n                      <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                        <div class="btn-group btn-group-sm">\n                          <label class="btn btn-primary" ng-model="volume.readOnly" uib-btn-radio="false">Writable</label>\n                          <label class="btn btn-primary" ng-model="volume.readOnly" uib-btn-radio="true">Read-only</label>\n                        </div>\n                      </div>\n                      \x3c!-- !read-only --\x3e\n                    </div>\n                    \x3c!-- !volume-line2 --\x3e\n                  </div>\n                </div>\n                \x3c!-- !volumes-input-list --\x3e\n              </div>\n            </form>\n            \x3c!-- !volumes --\x3e\n          </div>\n          \x3c!-- !tab-volume --\x3e\n          \x3c!-- tab-network --\x3e\n          <div class="tab-pane" id="network">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              <div class="form-group" ng-if="globalNetworkCount === 0 && applicationState.endpoint.mode.provider !== \'DOCKER_SWARM_MODE\'">\n                <div class="col-sm-12">\n                  <span class="small text-muted">You don\'t have any shared network. Head over the <a ui-sref="docker.networks">networks view</a> to create one.</span>\n                </div>\n              </div>\n              \x3c!-- network-input --\x3e\n              <div class="form-group">\n                <label for="container_network" class="col-sm-2 col-lg-1 control-label text-left">Network</label>\n                <div class="col-sm-9">\n                  <select class="form-control" ng-model="config.HostConfig.NetworkMode" id="container_network" ng-change="resetNetworkConfig()">\n                    <option selected disabled hidden value="">Select a network</option>\n                    <option ng-repeat="net in availableNetworks | orderBy: \'Name\'" ng-value="net.Name">{{ net.Name }}</option>\n                  </select>\n                </div>\n              </div>\n              \x3c!-- !network-input --\x3e\n              \x3c!-- container-name-input --\x3e\n              <div class="form-group" ng-if="config.HostConfig.NetworkMode == \'container\'">\n                <label for="container_network_container" class="col-sm-2 col-lg-1 control-label text-left">Container</label>\n                <div class="col-sm-9">\n                  <select ng-options="container|containername for container in runningContainers" class="form-control" ng-model="formValues.NetworkContainer">\n                    <option selected disabled hidden value="">Select a container</option>\n                  </select>\n                </div>\n              </div>\n              \x3c!-- !container-name-input --\x3e\n              \x3c!-- hostname-input --\x3e\n              <div class="form-group">\n                <label for="container_hostname" class="col-sm-2 col-lg-1 control-label text-left">Hostname</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Hostname" id="container_hostname" placeholder="e.g. web01" />\n                </div>\n              </div>\n              \x3c!-- !hostname-input --\x3e\n              \x3c!-- domainname-input --\x3e\n              <div class="form-group">\n                <label for="container_domainname" class="col-sm-2 col-lg-1 control-label text-left">Domain Name</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Domainname" id="container_domainname" placeholder="e.g. example.com" />\n                </div>\n              </div>\n              \x3c!-- !domainname --\x3e\n              \x3c!-- mac-address-input --\x3e\n              <div class="form-group">\n                <label for="container_macaddress" class="col-sm-2 col-lg-1 control-label text-left">Mac Address</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.MacAddress" id="container_macaddress" placeholder="e.g. 12-34-56-78-9a-bc" />\n                </div>\n              </div>\n              \x3c!-- !mac-address-input --\x3e\n              \x3c!-- ipv4-input --\x3e\n              <div class="form-group">\n                <label for="container_ipv4" class="col-sm-2 col-lg-1 control-label text-left">IPv4 Address</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.IPv4" id="container_ipv4" placeholder="e.g. 172.20.0.7" />\n                </div>\n              </div>\n              \x3c!-- !ipv4-input --\x3e\n              \x3c!-- ipv6-input --\x3e\n              <div class="form-group">\n                <label for="container_ipv6" class="col-sm-2 col-lg-1 control-label text-left">IPv6 Address</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.IPv6" id="container_ipv6" placeholder="e.g. a:b:c:d::1234" />\n                </div>\n              </div>\n              \x3c!-- !ipv6-input --\x3e\n              \x3c!-- dns-primary-input --\x3e\n              <div class="form-group">\n                <label for="container_dns_primary" class="col-sm-2 col-lg-1 control-label text-left">Primary DNS Server</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.DnsPrimary" id="container_dns_primary" placeholder="e.g. 1.1.1.1, 2606:4700:4700::1111" />\n                </div>\n              </div>\n              \x3c!-- !dns-primary-input --\x3e\n              \x3c!-- dns-secondary-input --\x3e\n              <div class="form-group">\n                <label for="container_dns_secondary" class="col-sm-2 col-lg-1 control-label text-left">Secondary DNS Server</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.DnsSecondary" id="container_dns_secondary" placeholder="e.g. 1.0.0.1, 2606:4700:4700::1001" />\n                </div>\n              </div>\n              \x3c!-- !dns-secondary-input --\x3e\n              \x3c!-- extra-hosts-variables --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Hosts file entries</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addExtraHost()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add additional entry\n                  </span>\n                </div>\n                \x3c!-- extra-hosts-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in formValues.ExtraHosts" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="e.g. host:IP" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeExtraHost($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !extra-hosts-input-list --\x3e\n              </div>\n              \x3c!-- !extra-hosts-variables --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-network --\x3e\n          \x3c!-- tab-labels --\x3e\n          <div class="tab-pane" id="labels">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- labels --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Labels</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add label\n                  </span>\n                </div>\n                \x3c!-- labels-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="label.name" placeholder="e.g. com.example.foo" />\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !labels-input-list --\x3e\n              </div>\n              \x3c!-- !labels--\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-labels --\x3e\n          \x3c!-- tab-env --\x3e\n          <div class="tab-pane" id="env">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- environment-variables --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Environment variables</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addEnvironmentVariable()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add environment variable\n                  </span>\n                </div>\n                \x3c!-- environment-variable-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in config.Env" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="variable.name" placeholder="e.g. FOO" />\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="e.g. bar" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !environment-variable-input-list --\x3e\n              </div>\n              \x3c!-- !environment-variables --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-labels --\x3e\n          \x3c!-- tab-restart-policy --\x3e\n          <div class="tab-pane" id="restart-policy">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <label class="control-label text-left">\n                    Restart policy\n                  </label>\n                  <div class="btn-group btn-group-sm" style="margin-left: 20px;">\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'no\'">\n                      Never\n                    </label>\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'always\'">\n                      Always\n                    </label>\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'on-failure\'">\n                      On failure\n                    </label>\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'unless-stopped\'">\n                      Unless stopped\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          \x3c!-- !tab-restart-policy --\x3e\n          \x3c!-- tab-runtime-resources --\x3e\n          <div class="tab-pane" id="runtime-resources">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              <div class="col-sm-12 form-section-title">\n                Runtime\n              </div>\n              \x3c!-- privileged-mode --\x3e\n              <div class="form-group" ng-if="isAdmin || allowPrivilegedMode">\n                <div class="col-sm-12">\n                  <label for="privileged_mode" class="control-label text-left">\n                    Privileged mode\n                  </label>\n                  <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="privileged_mode" ng-model="config.HostConfig.Privileged" /><i></i> </label>\n                </div>\n              </div>\n              \x3c!-- !privileged-mode --\x3e\n              \x3c!-- init --\x3e\n              <div class="form-group" ng-if="applicationState.endpoint.apiVersion >= 1.37">\n                <div class="col-sm-12">\n                  <label for="init" class="control-label text-left">\n                    Init\n                  </label>\n                  <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="init" ng-model="config.HostConfig.Init" /><i></i> </label>\n                </div>\n              </div>\n              \x3c!-- !init --\x3e\n              \x3c!-- runtimes --\x3e\n              <div class="form-group">\n                <label for="container_runtime" class="col-sm-1 control-label text-left">Runtime</label>\n                <div class="col-sm-11">\n                  <select class="form-control" ng-model="config.HostConfig.Runtime" id="container_runtime" ng-options="runtime for runtime in availableRuntimes">\n                    <option selected value="">Default</option>\n                  </select>\n                </div>\n              </div>\n              \x3c!-- !runtimes --\x3e\n            </form>\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- devices --\x3e\n              <div ng-if="showDeviceMapping" class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Devices</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addDevice()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add device\n                  </span>\n                </div>\n                \x3c!-- devices-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="device in config.HostConfig.Devices" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">host</span>\n                      <input type="text" class="form-control" ng-model="device.pathOnHost" placeholder="e.g. /dev/tty0" />\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">container</span>\n                      <input type="text" class="form-control" ng-model="device.pathInContainer" placeholder="e.g. /dev/tty0" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeDevice($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !devices-input-list --\x3e\n              </div>\n              \x3c!-- !devices--\x3e\n              <div class="col-sm-12 form-section-title">\n                Resources\n              </div>\n              \x3c!-- memory-reservation-input --\x3e\n              <div class="form-group">\n                <label for="memory-reservation" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n                  Memory reservation\n                </label>\n                <div class="col-sm-3">\n                  <slider model="formValues.MemoryReservation" floor="0" ceil="state.sliderMaxMemory" step="256" ng-if="state.sliderMaxMemory"></slider>\n                </div>\n                <div class="col-sm-2">\n                  <input type="number" min="0" class="form-control" ng-model="formValues.MemoryReservation" id="memory-reservation" />\n                </div>\n                <div class="col-sm-4">\n                  <p class="small text-muted" style="margin-top: 7px;">\n                    Memory soft limit (<b>MB</b>)\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !memory-reservation-input --\x3e\n              \x3c!-- memory-limit-input --\x3e\n              <div class="form-group">\n                <label for="memory-limit" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n                  Memory limit\n                </label>\n                <div class="col-sm-3">\n                  <slider model="formValues.MemoryLimit" floor="0" ceil="state.sliderMaxMemory" step="256" ng-if="state.sliderMaxMemory"></slider>\n                </div>\n                <div class="col-sm-2">\n                  <input type="number" min="0" class="form-control" ng-model="formValues.MemoryLimit" id="memory-limit" />\n                </div>\n                <div class="col-sm-4">\n                  <p class="small text-muted" style="margin-top: 7px;">\n                    Memory limit (<b>MB</b>)\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !memory-limit-input --\x3e\n              \x3c!-- cpu-limit-input --\x3e\n              <div class="form-group">\n                <label for="cpu-limit" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n                  CPU limit\n                </label>\n                <div class="col-sm-5">\n                  <slider model="formValues.CpuLimit" floor="0" ceil="state.sliderMaxCpu" step="0.25" precision="2" ng-if="state.sliderMaxCpu"></slider>\n                </div>\n                <div class="col-sm-4" style="margin-top: 20px;">\n                  <p class="small text-muted">\n                    Maximum CPU usage\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !cpu-limit-input --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-runtime-resources --\x3e\n          \x3c!-- tab-container-capabilities --\x3e\n          <div class="tab-pane" id="container-capabilities">\n            <container-capabilities capabilities="formValues.capabilities"></container-capabilities>\n          </div>\n          \x3c!-- !tab-container-capabilities --\x3e\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/inspect/containerinspect.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Container inspect"> </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">Containers</a> &gt; <a ui-sref="docker.containers.container({id: containerInfo.Id})">{{ containerInfo.Name | trimcontainername }}</a> &gt;\n    Inspect\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-icon-circle" title-text="Inspect">\n        <span class="btn-group btn-group-sm">\n          <label class="btn btn-primary" ng-model="state.DisplayTextView" uib-btn-radio="false"><i class="fa fa-code space-right" aria-hidden="true"></i>Tree</label>\n          <label class="btn btn-primary" ng-model="state.DisplayTextView" uib-btn-radio="true"><i class="fa fa-file-alt space-right" aria-hidden="true"></i>Text</label>\n        </span>\n      </rd-widget-header>\n      <rd-widget-body>\n        <pre ng-show="state.DisplayTextView">{{ containerInfo | json: 4 }}</pre>\n        <json-tree ng-hide="state.DisplayTextView" object="containerInfo" root-name="containerInfo.Id" start-expanded="true"></json-tree>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/logs/containerlogs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Container logs"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">Containers</a> &gt; <a ui-sref="docker.containers.container({id: container.Id})">{{ container.Name | trimcontainername }}</a> &gt; Logs\n  </rd-header-content>\n</rd-header>\n\n<log-viewer\n  data="logs"\n  ng-if="logs"\n  log-collection-change="changeLogCollection"\n  display-timestamps="state.displayTimestamps"\n  line-count="state.lineCount"\n  since-timestamp="state.sinceTimestamp"\n></log-viewer>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/stats/containerstats.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Container statistics"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">Containers</a> &gt; <a ui-sref="docker.containers.container({id: container.Id})">{{ container.Name | trimcontainername }}</a> &gt; Stats\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-info-circle" title-text="About statistics"> </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                This view displays real-time statistics about the container <b>{{ container.Name | trimcontainername }}</b> as well as a list of the running processes inside this\n                container.\n              </span>\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="refreshRate" class="col-sm-3 col-md-2 col-lg-2 margin-sm-top control-label text-left">\n              Refresh rate\n            </label>\n            <div class="col-sm-3 col-md-2">\n              <select id="refreshRate" ng-model="state.refreshRate" ng-change="changeUpdateRepeater()" class="form-control">\n                <option value="1">1s</option>\n                <option value="3">3s</option>\n                <option value="5">5s</option>\n                <option value="10">10s</option>\n                <option value="30">30s</option>\n                <option value="60">60s</option>\n              </select>\n            </div>\n            <span>\n              <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n            </span>\n          </div>\n          <div class="form-group" ng-if="state.networkStatsUnavailable">\n            <div class="col-sm-12">\n              <span class="small text-muted"> <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true"></i> Network stats are unavailable for this container. </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div ng-class="{ true: \'col-md-6 col-sm-12\', false: \'col-lg-4 col-md-6 col-sm-12\' }[state.networkStatsUnavailable]">\n    <rd-widget>\n      <rd-widget-header icon="fa-chart-area" title-text="Memory usage"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="memoryChart" width="770" height="300"></canvas>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div ng-class="{ true: \'col-md-6 col-sm-12\', false: \'col-lg-4 col-md-6 col-sm-12\' }[state.networkStatsUnavailable]">\n    <rd-widget>\n      <rd-widget-header icon="fa-chart-area" title-text="CPU usage"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="cpuChart" width="770" height="300"></canvas>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-lg-4 col-md-12 col-sm-12" ng-if="!state.networkStatsUnavailable">\n    <rd-widget>\n      <rd-widget-header icon="fa-chart-area" title-text="Network usage (aggregate)"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="networkChart" width="770" height="300"></canvas>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n\n  <div class="col-sm-12" ng-if="applicationState.endpoint.mode.provider !== \'VMWARE_VIC\'">\n    <container-processes-datatable\n      title-text="Processes"\n      title-icon="fa-tasks"\n      dataset="processInfo.Processes"\n      headerset="processInfo.Titles"\n      table-key="container-processes"\n    ></container-processes-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/dashboard/dashboard.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Dashboard"></rd-header-title>\n  <rd-header-content>Endpoint summary</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n  <div class="col-sm-12">\n    <dashboard-cluster-agent-info></dashboard-cluster-agent-info>\n  </div>\n</div>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<information-panel\n  ng-if="\n    !applicationState.UI.dismissedInfoPanels[\'docker-dashboard-info-01\'] &&\n    !applicationState.endpoint.mode.agentProxy &&\n    applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'\n  "\n  title-text="Information"\n  dismiss-action="dismissInformationPanel(\'docker-dashboard-info-01\')"\n>\n  <span class="small">\n    <p class="text-muted" ng-if="applicationState.endpoint.mode.role === \'MANAGER\'">\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      Portainer is connected to a node that is part of a Swarm cluster. Some resources located on other nodes in the cluster might not be available for management, have a look at\n      <a href="http://portainer.readthedocs.io/en/stable/agent.html" target="_blank">our agent setup</a> for more details.\n    </p>\n    <p class="text-muted" ng-if="applicationState.endpoint.mode.role === \'WORKER\'">\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      Portainer is connected to a worker node. Swarm management features will not be available.\n    </p>\n  </span>\n</information-panel>\n\n<div class="row" ng-if="(!applicationState.endpoint.mode.agentProxy || applicationState.endpoint.mode.provider !== \'DOCKER_SWARM_MODE\') && info && endpoint">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tachometer-alt" title-text="Endpoint info"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Endpoint</td>\n              <td>\n                {{ endpoint.Name }}\n                <span class="small text-muted space-left">\n                  <i class="fa fa-microchip"></i> {{ endpoint.Snapshots[0].TotalCPU }} <i class="fa fa-memory space-left"></i> {{ endpoint.Snapshots[0].TotalMemory | humansize }}\n                </span>\n                <span class="small text-muted">\n                  - {{ info.Swarm && info.Swarm.NodeID !== \'\' ? \'Swarm\' : \'Standalone\' }} {{ info.ServerVersion }}\n                  <span ng-if="endpoint.Type === 2">+ <i class="fa fa-bolt" aria-hidden="true"></i> Agent</span></span\n                >\n              </td>\n            </tr>\n            <tr>\n              <td>URL</td>\n              <td>{{ endpoint.URL | stripprotocol }}</td>\n            </tr>\n            <tr>\n              <td>Tags</td>\n              <td>\n                <span ng-if="endpoint.Tags.length === 0">\n                  -\n                </span>\n                <span ng-if="endpoint.Tags.length > 0">\n                  <span ng-repeat="tag in endpoint.Tags"> {{ tag }}{{ $last ? \'\' : \', \' }} </span>\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\'">\n              <td colspan="2">\n                <div class="btn-group" role="group" aria-label="...">\n                  <a ui-sref="docker.swarm.visualizer"><i class="fa fa-object-group space-right" aria-hidden="true"></i>Go to cluster visualizer</a>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-xs-12 col-md-6" ng-if="showStacks">\n    <a ui-sref="portainer.stacks">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-th-list"></i>\n          </div>\n          <div class="title">{{ stackCount }}</div>\n          <div class="comment">{{ stackCount === 1 ? \'Stack\' : \'Stacks\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\'">\n    <a ui-sref="docker.services">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-list-alt"></i>\n          </div>\n          <div class="title">{{ serviceCount }}</div>\n          <div class="comment">{{ serviceCount === 1 ? \'Service\' : \'Services\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6" ng-if="containers">\n    <a ui-sref="docker.containers">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-server"></i>\n          </div>\n          <div class="pull-right" style="padding-left: 5px;">\n            <div><i class="fa fa-power-off space-right green-icon"></i>{{ containers | runningcontainers }} running</div>\n            <div><i class="fa fa-power-off space-right red-icon"></i>{{ containers | stoppedcontainers }} stopped</div>\n          </div>\n          <div class="pull-right" style="padding-right: 5px;">\n            <div><i class="fa fa-heartbeat space-right green-icon"></i>{{ containers | healthycontainers }} healthy</div>\n            <div><i class="fa fa-heartbeat space-right orange-icon"></i>{{ containers | unhealthycontainers }} unhealthy</div>\n          </div>\n          <div class="title">{{ containers.length }}</div>\n          <div class="comment">{{ containers.length === 1 ? \'Container\' : \'Containers\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6" ng-if="images">\n    <a ui-sref="docker.images">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-clone"></i>\n          </div>\n          <div class="pull-right">\n            <div><i class="fa fa-chart-pie space-right"></i>{{ images | imagestotalsize | humansize }}</div>\n          </div>\n          <div class="title">{{ images.length }}</div>\n          <div class="comment">{{ images.length === 1 ? \'Image\' : \'Images\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6">\n    <a ui-sref="docker.volumes">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-cubes"></i>\n          </div>\n          <div class="title">{{ volumeCount }}</div>\n          <div class="comment">{{ volumeCount === 1 ? \'Volume\' : \'Volumes\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6">\n    <a ui-sref="docker.networks">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-sitemap"></i>\n          </div>\n          <div class="title">{{ networkCount }}</div>\n          <div class="comment">{{ networkCount === 1 ? \'Network\' : \'Networks\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/events/events.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Event list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.events" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Events</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <events-datatable title-text="Events" title-icon="fa-history" dataset="events" table-key="events" order-by="Time" reverse-order="true"></events-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/images/images.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Image list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.images" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Images</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="!offlineMode" authorization="DockerImageCreate">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-download" title-text="Pull image "> </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- image-and-registry --\x3e\n          <por-image-registry model="formValues.RegistryModel" auto-complete="true" pull-warning="true" label-class="col-sm-1" input-class="col-sm-11"></por-image-registry>\n          \x3c!-- !image-and-registry --\x3e\n          <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n            <div class="col-sm-12 form-section-title">\n              Deployment\n            </div>\n            \x3c!-- node-selection --\x3e\n            <node-selector model="formValues.NodeName"> </node-selector>\n            \x3c!-- !node-selection --\x3e\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !formValues.RegistryModel.Image"\n                ng-click="pullImage()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Pull the image</span>\n                <span ng-show="state.actionInProgress">Download in progress...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<div class="row">\n  <div class="col-sm-12">\n    <images-datatable\n      title-text="Images"\n      title-icon="fa-clone"\n      dataset="images"\n      table-key="images"\n      order-by="RepoTags"\n      show-host-column="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n      download-action="downloadAction"\n      remove-action="removeAction"\n      force-remove-action="confirmRemovalAction"\n      export-in-progress="state.exportInProgress"\n      offline-mode="offlineMode"\n      refresh-callback="getImages"\n    ></images-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/images/edit/image.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Image details"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.images">Images</a> &gt; <a ui-sref="docker.images.image({id: image.Id})">{{ image.Id }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="image.RepoTags.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa fa-tags" title-text="Image tags"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <div class="row">\n              <div class="pull-left" ng-repeat="tag in image.RepoTags" style="display: table;">\n                <div class="input-group col-md-1" style="padding: 0 15px;">\n                  <span class="input-group-addon">{{ tag }}</span>\n                  <span class="input-group-btn" authorization="DockerImagePush, DockerImageCreate, DockerImageDelete">\n                    <a data-toggle="tooltip" class="btn btn-primary interactive" title="Push to registry" ng-click="pushTag(tag)" authorization="DockerImagePush">\n                      <span class="fa fa-upload white-icon" aria-hidden="true"></span>\n                    </a>\n                    <a data-toggle="tooltip" class="btn btn-primary interactive" title="Pull from registry" ng-click="pullTag(tag)" authorization="DockerImageCreate">\n                      <span class="fa fa-download white-icon" aria-hidden="true"></span>\n                    </a>\n                    <a data-toggle="tooltip" class="btn btn-primary interactive" title="Remove tag" ng-click="removeTag(tag)" authorization="DockerImageDelete">\n                      <span class="fa fa-trash-alt white-icon" aria-hidden="true"></span>\n                    </a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                Note: you can click on the upload icon <span class="fa fa-upload" aria-hidden="true"></span> to push an image or on the download icon\n                <span class="fa fa-download" aria-hidden="true"></span> to pull an image or on the trash icon <span class="fa fa-trash-alt" aria-hidden="true"></span> to delete a\n                tag.\n              </span>\n            </div>\n            <div class="col-sm-12">\n              <span id="downloadResourceHint" class="createResource" style="display: none; margin-left: 0;">\n                Download in progress...\n                <i class="fa fa-circle-notch fa-spin" aria-hidden="true" style="margin-left: 2px;"></i>\n              </span>\n              <span id="uploadResourceHint" class="createResource" style="display: none; margin-left: 0;">\n                Upload in progress...\n                <i class="fa fa-circle-notch fa-spin" aria-hidden="true" style="margin-left: 2px;"></i>\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" authorization="DockerImageCreate">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tag" title-text="Tag the image"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- image-and-registry --\x3e\n          <por-image-registry model="formValues.RegistryModel" label-class="col-sm-1" input-class="col-sm-11"></por-image-registry>\n          \x3c!-- !image-and-registry --\x3e\n          \x3c!-- tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">Note: if you don\'t specify the tag in the image name, <span class="label label-default">latest</span> will be used.</span>\n            </div>\n          </div>\n          \x3c!-- !tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.RegistryModel.Image" ng-click="tagImage()">Tag</button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title-text="Image details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ image.Id }}\n                <button authorization="DockerImageDelete" class="btn btn-xs btn-danger" ng-click="removeImage(image.Id)"\n                  ><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Delete this image</button\n                >\n                <button\n                  authorization="DockerImageGet"\n                  class="btn btn-xs btn-primary"\n                  ng-click="exportImage(image)"\n                  button-spinner="$ctrl.exportInProgress"\n                  ng-disabled="state.exportInProgress"\n                >\n                  <i class="fa fa-download space-right" aria-hidden="true"></i>\n                  <span ng-hide="state.exportInProgress">Export this image</span>\n                  <span ng-show="state.exportInProgress">Export in progress...</span>\n                </button>\n              </td>\n            </tr>\n            <tr ng-if="image.Parent">\n              <td>Parent</td>\n              <td\n                ><a ui-sref="docker.images.image({id: image.Parent})">{{ image.Parent }}</a></td\n              >\n            </tr>\n            <tr>\n              <td>Size</td>\n              <td>{{ image.VirtualSize | humansize }}</td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ image.Created | getisodate }}</td>\n            </tr>\n            <tr>\n              <td>Build</td>\n              <td>Docker {{ image.DockerVersion }} on {{ image.Os }}, {{ image.Architecture }}</td>\n            </tr>\n            <tr ng-if="image.Author">\n              <td>Author</td>\n              <td>{{ image.Author }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title-text="Dockerfile details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>CMD</td>\n              <td\n                ><code>{{ image.Command | command }}</code></td\n              >\n            </tr>\n            <tr ng-if="image.Entrypoint">\n              <td>ENTRYPOINT</td>\n              <td\n                ><code>{{ image.Entrypoint | command }}</code></td\n              >\n            </tr>\n            <tr ng-if="image.ExposedPorts.length > 0">\n              <td>EXPOSE</td>\n              <td>\n                <span class="label label-default space-right" ng-repeat="port in image.ExposedPorts">\n                  {{ port }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="image.Volumes.length > 0">\n              <td>VOLUME</td>\n              <td>\n                <span class="label label-default space-right" ng-repeat="volume in image.Volumes">\n                  {{ volume }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="image.Env.length > 0">\n              <td>ENV</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="var in image.Env">\n                    <td>{{ var|key: \'=\' }}</td>\n                    <td>{{ var|value: \'=\' }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n<div class="row" ng-if="history.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title-text="Image layers"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table id="image-layers" class="table">\n          <thead>\n            <th style="white-space: nowrap;">\n              <a ng-click="order(\'Order\')">\n                Order\n                <span ng-show="sortType == \'Order\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                <span ng-show="sortType == \'Order\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n              </a>\n            </th>\n            <th>\n              <a ng-click="order(\'Size\')">\n                Size\n                <span ng-show="sortType == \'Size\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                <span ng-show="sortType == \'Size\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n              </a>\n            </th>\n            <th>\n              <a ng-click="order(\'CreatedBy\')">\n                Layer\n                <span ng-show="sortType == \'CreatedBy\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                <span ng-show="sortType == \'CreatedBy\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n              </a>\n            </th>\n          </thead>\n          <tbody>\n            <tr ng-repeat="layer in history | orderBy:sortType:sortReverse">\n              <td style="white-space: nowrap;">\n                {{ layer.Order }}\n              </td>\n              <td style="white-space: nowrap;">\n                {{ layer.Size | humansize }}\n              </td>\n              <td class="expand">\n                <div ng-if="layer.CreatedBy.length > 130">\n                  <span id="layer-command-{{ $index }}-full" style="display: none;">\n                    {{ layer.CreatedBy | imagelayercommand }}\n                  </span>\n                  <span id="layer-command-{{ $index }}-short">\n                    {{ layer.CreatedBy | imagelayercommand | truncate: 130 }}\n                    <span ng-if="layer.CreatedBy.length > 130" style="margin-left: 5px;">\n                      <a id="layer-command-expander{{ $index }}" class="btn" ng-click="toggleLayerCommand($index)">\n                        <i class="fa fa-plus-circle" aria-hidden="true"></i>\n                      </a>\n                    </span>\n                  </span>\n                </div>\n                <div ng-if="layer.CreatedBy.length <= 130">\n                  <span id="layer-command-{{ $index }}-full">\n                    {{ layer.CreatedBy | imagelayercommand }}\n                  </span>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/images/build/buildimage.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Build image"></rd-header-title>\n  <rd-header-content> <a ui-sref="docker.images">Images</a> &gt; Build image </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <uib-tabset active="state.activeTab">\n          <uib-tab index="0">\n            <uib-tab-heading> <i class="fa fa-wrench space-right" aria-hidden="true"></i> Builder </uib-tab-heading>\n            <form class="form-horizontal">\n              <div class="col-sm-12 form-section-title">\n                Naming\n              </div>\n              \x3c!-- names --\x3e\n              <div class="form-group">\n                <span class="col-sm-12 text-muted small">\n                  You can specify multiple names to your image.\n                </span>\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <label class="control-label text-left">Names</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addImageName()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add additional name\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !names --\x3e\n              <div class="form-group" ng-if="formValues.ImageNames.length === 0">\n                <span class="col-sm-12 text-danger small">\n                  <i class="fa fa-exclamation-triangle space-right" aria-hidden="true"></i>You must specify at least one name for the image.\n                </span>\n              </div>\n              \x3c!-- name-input-list --\x3e\n              <div ng-if="formValues.ImageNames.length > 0">\n                <div class="form-group">\n                  <span class="col-sm-12 text-muted small">\n                    A name must be specified in one of the following formats: <code>name:tag</code>, <code>repository/name:tag</code> or\n                    <code>registryfqdn:port/repository/name:tag</code> format. If you omit the tag the default <b>latest</b> value is assumed.\n                  </span>\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12">\n                    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                      <div ng-repeat="item in formValues.ImageNames track by $index" style="margin-top: 2px;">\n                        \x3c!-- name-input --\x3e\n                        <div class="input-group col-sm-5 input-group-sm">\n                          <span class="input-group-addon">name</span>\n                          <input type="text" class="form-control" ng-model="item.Name" placeholder="e.g. myImage:myTag" auto-focus />\n                          <span class="input-group-addon"\n                            ><i ng-class="{ true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\' }[item.Name !== \'\']" aria-hidden="true"></i\n                          ></span>\n                        </div>\n                        \x3c!-- !name-input --\x3e\n                        \x3c!-- actions --\x3e\n                        <div class="input-group col-sm-2 input-group-sm">\n                          <button class="btn btn-sm btn-danger" type="button" ng-click="removeImageName($index)">\n                            <i class="fa fa-trash" aria-hidden="true"></i>\n                          </button>\n                        </div>\n                        \x3c!-- !actions --\x3e\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !name-input-list --\x3e\n              \x3c!-- build-method --\x3e\n              <div class="col-sm-12 form-section-title">\n                Build method\n              </div>\n              <div class="form-group"></div>\n              <div class="form-group" style="margin-bottom: 0;">\n                <div class="boxselector_wrapper">\n                  <div>\n                    <input type="radio" id="method_editor" ng-model="state.BuildType" value="editor" ng-click="toggleEditor()" />\n                    <label for="method_editor">\n                      <div class="boxselector_header">\n                        <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Web editor\n                      </div>\n                      <p>Use our Web editor</p>\n                    </label>\n                  </div>\n                  <div>\n                    <input type="radio" id="method_upload" ng-model="state.BuildType" value="upload" ng-click="saveEditorContent()" />\n                    <label for="method_upload">\n                      <div class="boxselector_header">\n                        <i class="fa fa-upload" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Upload\n                      </div>\n                      <p>Upload a tarball or a Dockerfile from your computer</p>\n                    </label>\n                  </div>\n                  <div>\n                    <input type="radio" id="method_url" ng-model="state.BuildType" value="url" ng-click="saveEditorContent()" />\n                    <label for="method_url">\n                      <div class="boxselector_header">\n                        <i class="fa fa-globe" aria-hidden="true" style="margin-right: 2px;"></i>\n                        URL\n                      </div>\n                      <p>Specify a URL to a file</p>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !build-method --\x3e\n              \x3c!-- web-editor --\x3e\n              <div ng-show="state.BuildType === \'editor\'">\n                <div class="col-sm-12 form-section-title">\n                  Web editor\n                </div>\n                <div class="form-group">\n                  <span class="col-sm-12 text-muted small">\n                    You can get more information about Dockerfile format in the\n                    <a href="https://docs.docker.com/engine/reference/builder/" target="_blank">official documentation</a>.\n                  </span>\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12">\n                    <code-editor\n                      identifier="image-build-editor"\n                      placeholder="Define or paste the content of your Dockerfile here"\n                      yml="false"\n                      on-change="(editorUpdate)"\n                    ></code-editor>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !web-editor --\x3e\n              \x3c!-- upload --\x3e\n              <div ng-show="state.BuildType === \'upload\'">\n                <div class="col-sm-12 form-section-title">\n                  Upload\n                </div>\n                <div class="form-group">\n                  <span class="col-sm-12 text-muted small">\n                    You can upload a Dockerfile or a tar archive containing a Dockerfile from your computer. When using a tarball, the root folder will be used as the build\n                    context.\n                  </span>\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12">\n                    <button class="btn btn-sm btn-primary" ngf-select ngf-min-size="10" ng-model="formValues.UploadFile">Select file</button>\n                    <span style="margin-left: 5px;">\n                      {{ formValues.UploadFile.name }}\n                      <i class="fa fa-times red-icon" ng-if="!formValues.UploadFile" aria-hidden="true"></i>\n                    </span>\n                  </div>\n                </div>\n                <div ng-if="formValues.UploadFile.type === \'application/gzip\' || formValues.UploadFile.type === \'application/x-tar\'">\n                  <div class="form-group">\n                    <span class="col-sm-12 text-muted small">\n                      Indicate the path to the Dockerfile within the tarball.\n                    </span>\n                  </div>\n                  <div class="form-group">\n                    <label for="image_path" class="col-sm-2 control-label text-left">Dockerfile path</label>\n                    <div class="col-sm-10">\n                      <input type="text" class="form-control" ng-model="formValues.Path" id="image_path" placeholder="Dockerfile" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !upload --\x3e\n              \x3c!-- url --\x3e\n              <div ng-show="state.BuildType === \'url\'">\n                <div class="col-sm-12 form-section-title">\n                  URL\n                </div>\n                <div class="form-group">\n                  <span class="col-sm-12 text-muted small">\n                    Specify the URL to a Dockerfile, a tarball or a public Git repository (suffixed by <b>.git</b>). When using a tarball or a Git repository URL, the root folder\n                    will be used as the build context.\n                  </span>\n                </div>\n                <div class="form-group">\n                  <label for="image_url" class="col-sm-2 control-label text-left">URL</label>\n                  <div class="col-sm-10">\n                    <input type="text" class="form-control" ng-model="formValues.URL" id="image_url" placeholder="https://myhost.mydomain/myimage.tar.gz" />\n                  </div>\n                </div>\n                <div class="form-group">\n                  <span class="col-sm-12 text-muted small">\n                    Indicate the path to the Dockerfile within the tarball/repository (ignored when using a Dockerfile).\n                  </span>\n                </div>\n                <div class="form-group">\n                  <label for="image_path" class="col-sm-2 control-label text-left">Dockerfile path</label>\n                  <div class="col-sm-10">\n                    <input type="text" class="form-control" ng-model="formValues.Path" id="image_path" placeholder="Dockerfile" />\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !url --\x3e\n              <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n                <div class="col-sm-12 form-section-title">\n                  Deployment\n                </div>\n                \x3c!-- node-selection --\x3e\n                <node-selector model="formValues.NodeName"> </node-selector>\n                \x3c!-- !node-selection --\x3e\n              </div>\n              \x3c!-- actions --\x3e\n              <div class="col-sm-12 form-section-title">\n                Actions\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button\n                    type="button"\n                    class="btn btn-primary btn-sm"\n                    ng-disabled="state.actionInProgress\n                    || (state.BuildType === \'upload\' && (!formValues.UploadFile || !formValues.Path))\n                    || (state.BuildType === \'url\' && (!formValues.URL || !formValues.Path))\n                    || (formValues.ImageNames.length === 0 || !validImageNames())"\n                    ng-click="buildImage()"\n                    button-spinner="state.actionInProgress"\n                  >\n                    <span ng-hide="state.actionInProgress">Build the image</span>\n                    <span ng-show="state.actionInProgress">Image building in progress...</span>\n                  </button>\n                  <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </form>\n          </uib-tab>\n          <uib-tab index="1" disable="!buildLogs">\n            <uib-tab-heading> <i class="fa fa-file-alt space-right" aria-hidden="true"></i> Output </uib-tab-heading>\n            <pre class="log_viewer">\n              <div ng-repeat="line in buildLogs track by $index" class="line"><p class="inner_line" ng-click="active=!active" ng-class="{\'line_selected\': active}">{{ line }}</p></div>\n              <div ng-if="!buildLogs.length" class="line"><p class="inner_line">No build output available.</p></div>\n            </pre>\n          </uib-tab>\n        </uib-tabset>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/images/import/importimage.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Import image"></rd-header-title>\n  <rd-header-content> <a ui-sref="docker.images">Images</a> &gt; Import image </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- upload --\x3e\n          <div class="col-sm-12 form-section-title">\n            Upload\n          </div>\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              You can upload a tar archive containing your images.\n            </span>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button class="btn btn-sm btn-primary" ngf-select ngf-min-size="10" ngf-accept="\'application/x-tar,application/x-gzip\'" ng-model="formValues.UploadFile"\n                >Select file</button\n              >\n              <span style="margin-left: 5px;">\n                {{ formValues.UploadFile.name }}\n                <i class="fa fa-times red-icon" ng-if="!formValues.UploadFile" aria-hidden="true"></i>\n              </span>\n            </div>\n          </div>\n          \x3c!-- !upload --\x3e\n          <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n            <div class="col-sm-12 form-section-title">\n              Deployment\n            </div>\n            \x3c!-- node-selection --\x3e\n            <node-selector model="formValues.NodeName"> </node-selector>\n            \x3c!-- !node-selection --\x3e\n          </div>\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !formValues.UploadFile"\n                ng-click="uploadImage()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Upload</span>\n                <span ng-show="state.actionInProgress">Images uploading in progress...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/networks/networks.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Network list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.networks" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Networks</rd-header-content>\n</rd-header>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<div class="row">\n  <div class="col-sm-12">\n    <networks-datatable\n      title-text="Networks"\n      title-icon="fa-sitemap"\n      dataset="networks"\n      table-key="networks"\n      order-by="Name"\n      remove-action="removeAction"\n      show-ownership-column="applicationState.application.authentication"\n      show-host-column="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n      offline-mode="offlineMode"\n      refresh-callback="getNetworks"\n    ></networks-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/networks/edit/network.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Network details"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.networks">Networks</a> &gt; <a ui-sref="docker.networks.network({id: network.Id})">{{ network.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-sitemap" title-text="Network details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{{ network.Name }}</td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ network.Id }}\n                <button authorization="DockerNetworkDelete" ng-if="allowRemove()" class="btn btn-xs btn-danger" ng-click="removeNetwork(network.Id)"\n                  ><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Delete this network</button\n                >\n              </td>\n            </tr>\n            <tr>\n              <td>Driver</td>\n              <td>{{ network.Driver }}</td>\n            </tr>\n            <tr>\n              <td>Scope</td>\n              <td>{{ network.Scope }}</td>\n            </tr>\n            <tr>\n              <td>Attachable</td>\n              <td>{{ network.Attachable }}</td>\n            </tr>\n            <tr>\n              <td>Internal</td>\n              <td>{{ network.Internal }}</td>\n            </tr>\n            <tr ng-if="network.IPAM.IPV4Configs.length > 0" ng-repeat-start="config in network.IPAM.IPV4Configs">\n              <td>IPV4 Subnet - {{ config.Subnet }}</td>\n              <td>IPV4 Gateway - {{ config.Gateway }}</td>\n            </tr>\n            <tr ng-if="network.IPAM.IPV4Configs.length > 0" ng-repeat-end>\n              <td>IPV4 IP range - {{ config.IPRange }}</td>\n              <td>IPV4 Excluded Ips - {{ config.AuxAddress }}</td>\n            </tr>\n            <tr ng-if="network.IPAM.IPV6Configs.length > 0" ng-repeat-start="config in network.IPAM.IPV6Configs">\n              <td>IPV6 Subnet - {{ config.Subnet }}</td>\n              <td>IPV6 Gateway - {{ config.Gateway }}</td>\n            </tr>\n            <tr ng-if="network.IPAM.IPV6Configs.length > 0" ng-repeat-end>\n              <td>IPV6 IP range - {{ config.IPRange }}</td>\n              <td>IPV6 Excluded Ips - {{ config.AuxAddress }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="network && applicationState.application.authentication"\n  resource-id="network.Id"\n  resource-control="network.ResourceControl"\n  resource-type="\'network\'"\n  disable-ownership-change="isSystemNetwork()"\n>\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div class="row" ng-if="!(network.Options | emptyobject)">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title-text="Network options"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr ng-repeat="(key, value) in network.Options">\n              <td>{{ key }}</td>\n              <td>{{ value }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="containersInNetwork.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title-text="Containers in network"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <th>Container Name</th>\n            <th>IPv4 Address</th>\n            <th>IPv6 Address</th>\n            <th>MacAddress</th>\n            <th authorization="DockerNetworkDisconnect">Actions</th>\n          </thead>\n          <tbody>\n            <tr ng-repeat="container in containersInNetwork">\n              <td\n                ><a ui-sref="docker.containers.container({ id: container.Id, nodeName: nodeName })">{{ container.Name }}</a></td\n              >\n              <td>{{ container.IPv4Address || \'-\' }}</td>\n              <td>{{ container.IPv6Address || \'-\' }}</td>\n              <td>{{ container.MacAddress || \'-\' }}</td>\n              <td authorization="DockerNetworkDisconnect">\n                <button type="button" class="btn btn-xs btn-danger" ng-click="containerLeaveNetwork(network, container)"\n                  ><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Leave Network</button\n                >\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/networks/create/createnetwork.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create network"></rd-header-title>\n  <rd-header-content> <a ui-sref="docker.networks">Networks</a> &gt; Add network </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="networkCreationForm">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="network_name" class="col-sm-2 col-lg-1 control-label text-left">Name</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="config.Name" id="network_name" placeholder="e.g. myNetwork" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Driver configuration\n          </div>\n          \x3c!-- driver-input --\x3e\n          <div class="form-group">\n            <label for="network_driver" class="col-sm-2 col-lg-1 control-label text-left">Driver</label>\n            <div class="col-sm-10 col-lg-11">\n              <select class="form-control" ng-options="driver for driver in availableNetworkDrivers" ng-model="config.Driver" ng-if="availableNetworkDrivers.length > 0">\n                <option disabled hidden value="">Select a driver</option>\n              </select>\n              <input type="text" class="form-control" ng-model="config.Driver" id="network_driver" placeholder="e.g. driverName" ng-if="availableNetworkDrivers.length === 0" />\n            </div>\n          </div>\n          \x3c!-- !driver-input --\x3e\n          \x3c!-- driver-options --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">\n                Driver options\n                <portainer-tooltip\n                  position="bottom"\n                  message="Driver options are specific to the selected driver. Please refer to the selected driver documentation."\n                ></portainer-tooltip>\n              </label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addDriverOption()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> add driver option\n              </span>\n            </div>\n            \x3c!-- driver-options-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="option in formValues.DriverOptions" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="option.name" placeholder="e.g. com.docker.network.bridge.enable_icc" />\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="option.value" placeholder="e.g. true" />\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeDriverOption($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !driver-options-input-list --\x3e\n          </div>\n          \x3c!-- !driver-options --\x3e\n          \x3c!-- macvlan-management --\x3e\n          <network-macvlan-form ng-show="config.Driver === \'macvlan\'" data="formValues.Macvlan" application-state="applicationState"></network-macvlan-form>\n          \x3c!-- !macvlan-management --\x3e\n          <div ng-hide="config.Driver === \'macvlan\' && formValues.Macvlan.Scope === \'swarm\'">\n            <div class="col-sm-12 form-section-title">\n              IPV4 Network configuration\n            </div>\n            \x3c!-- subnet-gateway-inputs --\x3e\n            <div class="form-group">\n              <label for="ipv4_network_subnet" class="col-sm-2 col-lg-1 control-label text-left">Subnet</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.IPV4.Subnet" id="ipv4_network_subnet" placeholder="e.g. 172.20.0.0/16" />\n              </div>\n              <label for="ipv4_network_gateway" class="col-sm-2 col-lg-1 control-label text-left">Gateway</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.IPV4.Gateway" id="ipv4_network_gateway" placeholder="e.g. 172.20.10.11" />\n              </div>\n            </div>\n            \x3c!-- !subnet-gateway-inputs --\x3e\n            \x3c!-- iprange-auxaddr-inputs --\x3e\n            <div class="form-group">\n              <label for="ipv4_network_iprange" class="col-sm-2 col-lg-1 control-label text-left">IP range</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.IPV4.IPRange" id="ipv4_network_iprange" placeholder="e.g. 172.20.10.128/25" />\n              </div>\n              <label for="ipv4_network_auxaddr" class="col-sm-2 col-lg-1 control-label text-left">Exclude IPs</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.IPV4.AuxAddress" id="ipv4_network_auxaddr" placeholder="e.g. my-router=172.20.10.129" />\n              </div>\n            </div>\n            \x3c!-- !iprange-auxaddr-inputs --\x3e\n          </div>\n          <div ng-show="config.Driver === \'bridge\' || (config.Driver === \'macvlan\' && formValues.Macvlan.Scope !== \'swarm\')">\n            <div class="col-sm-12 form-section-title">\n              IPV6 Network configuration\n            </div>\n            \x3c!-- subnet-gateway-inputs --\x3e\n            <div class="form-group">\n              <label for="ipv6_network_subnet" class="col-sm-2 col-lg-1 control-label text-left">Subnet</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.IPV6.Subnet" id="ipv6_network_subnet" placeholder="e.g. 2001:db8::/48" />\n              </div>\n              <label for="ipv6_network_gateway" class="col-sm-2 col-lg-1 control-label text-left">Gateway</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.IPV6.Gateway" id="ipv6_network_gateway" placeholder="e.g. 2001:db8::1" />\n              </div>\n            </div>\n            \x3c!-- !subnet-gateway-inputs --\x3e\n            \x3c!-- iprange-auxaddr-inputs --\x3e\n            <div class="form-group">\n              <label for="ipv6_network_iprange" class="col-sm-2 col-lg-1 control-label text-left">IP range</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.IPV6.IPRange" id="ipv6_network_iprange" placeholder="e.g. 2001:db8::/64" />\n              </div>\n              <label for="ipv6_network_auxaddr" class="col-sm-2 col-lg-1 control-label text-left">Exclude IPs</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.IPV6.AuxAddress" id="ipv6_network_auxaddr" placeholder="e.g. my-router=2001:db8::1" />\n              </div>\n            </div>\n            \x3c!-- !iprange-auxaddr-inputs --\x3e\n          </div>\n          <div class="col-sm-12 form-section-title">\n            Advanced configuration\n          </div>\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">Labels</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()"> <i class="fa fa-plus-circle" aria-hidden="true"></i> add label </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo" />\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels--\x3e\n          \x3c!-- internal --\x3e\n          <div class="form-group" ng-hide="config.Driver === \'macvlan\' && formValues.Macvlan.Scope === \'local\'">\n            <div class="col-sm-12">\n              <label for="ownership" class="control-label text-left">\n                Restrict external access to the network\n              </label>\n              <label name="ownership" class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="config.Internal" />\n                <i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !internal --\x3e\n          \x3c!-- attachable --\x3e\n          <div class="form-group" ng-hide="config.Driver === \'macvlan\' && formValues.Macvlan.Scope === \'local\'">\n            <div class="col-sm-12">\n              <label for="attachable" class="control-label text-left">\n                Enable manual container attachment\n              </label>\n              <label name="attachable" class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="config.Attachable" />\n                <i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !attachable --\x3e\n          <div\n            ng-if="\n              applicationState.endpoint.mode.agentProxy &&\n              applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' &&\n              config.Driver !== \'overlay\' &&\n              config.Driver !== \'macvlan\'\n            "\n          >\n            <div class="col-sm-12 form-section-title">\n              Deployment\n            </div>\n            \x3c!-- node-selection --\x3e\n            <node-selector model="formValues.NodeName"> </node-selector>\n            \x3c!-- !node-selection --\x3e\n          </div>\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !config.Name || (config.Driver === \'macvlan\' && networkCreationForm.$invalid)"\n                ng-click="create()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Create the network</span>\n                <span ng-show="state.actionInProgress">Creating network...</span>\n              </button>\n              <i id="createResourceSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/secrets/secrets.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Secrets list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.secrets" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Secrets</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <secrets-datatable\n      title-text="Secrets"\n      title-icon="fa-user-secret"\n      dataset="secrets"\n      table-key="secrets"\n      order-by="Name"\n      show-ownership-column="applicationState.application.authentication"\n      remove-action="removeAction"\n      refresh-callback="getSecrets"\n    ></secrets-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/secrets/edit/secret.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Secret details">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.secrets.secret({id: secret.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.secrets">Secrets</a> &gt; <a ui-sref="docker.secrets.secret({id: secret.Id})">{{ secret.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-user-secret" title-text="Secret details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{{ secret.Name }}</td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ secret.Id }}\n                <button authorization="DockerSecretDelete" class="btn btn-xs btn-danger" ng-click="removeSecret(secret.Id)"\n                  ><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Delete this secret</button\n                >\n              </td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ secret.CreatedAt | getisodate }}</td>\n            </tr>\n            <tr>\n              <td>Last updated</td>\n              <td>{{ secret.UpdatedAt | getisodate }}</td>\n            </tr>\n            <tr ng-if="!(secret.Labels | emptyobject)">\n              <td>Labels</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="(k, v) in secret.Labels">\n                    <td>{{ k }}</td>\n                    <td>{{ v }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel ng-if="secret && applicationState.application.authentication" resource-id="secret.Id" resource-control="secret.ResourceControl" resource-type="\'secret\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n')}]),e.exports=n},function(e,t){var n="app/docker/views/secrets/create/createsecret.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create secret"></rd-header-title>\n  <rd-header-content> <a ui-sref="docker.secrets">Secrets</a> &gt; Add secret </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="secret_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="secret_name" placeholder="e.g. mySecret" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- secret-data --\x3e\n          <div class="form-group">\n            <label for="secret_data" class="col-sm-1 control-label text-left">Secret</label>\n            <div class="col-sm-11">\n              <textarea class="form-control" rows="5" ng-model="formValues.Data"></textarea>\n            </div>\n          </div>\n          \x3c!-- !secret-data --\x3e\n          \x3c!-- encode-secret --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="encode_secret" class="control-label text-left">\n                Encode secret\n                <portainer-tooltip position="bottom" message="Secrets need to be base64 encoded. Disable this if your secret is already base64 encoded."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="encode_secret" ng-model="formValues.encodeSecret" /><i></i> </label>\n            </div>\n          </div>\n          \x3c!-- !encode-secret --\x3e\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">Labels</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()"> <i class="fa fa-plus-circle" aria-hidden="true"></i> add label </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo" />\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels--\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !formValues.Name || !formValues.Data"\n                ng-click="create()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Create the secret</span>\n                <span ng-show="state.actionInProgress">Creating secret...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/services.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Service list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.services" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Services</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="services">\n  <div class="col-sm-12">\n    <services-datatable\n      title-text="Services"\n      title-icon="fa-list-alt"\n      dataset="services"\n      table-key="services"\n      order-by="Name"\n      nodes="nodes"\n      agent-proxy="applicationState.endpoint.mode.agentProxy"\n      show-ownership-column="applicationState.application.authentication"\n      show-update-action="applicationState.endpoint.apiVersion >= 1.25"\n      show-task-logs-button="applicationState.endpoint.apiVersion >= 1.30"\n      show-add-action="true"\n      show-stack-column="true"\n      refresh-callback="getServices"\n    ></services-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/service.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Service details">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.services.service({id: service.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.services">Services</a> &gt; <a ui-sref="docker.services.service({id: service.Id})">{{ service.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div ng-if="isUpdating" class="col-lg-12 col-md-12 col-xs-12">\n    <div class="alert alert-info" role="alert" id="service-update-alert">\n      <p>This service is being updated. Editing this service is currently disabled.</p>\n      <a ui-sref="docker.services.service({id: service.Id}, {reload: true})">Refresh to see if this service has finished updated.</a>\n    </div>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-9 col-md-9 col-xs-9">\n    <rd-widget>\n      <rd-widget-header icon="fa-list-alt" title-text="Service details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td ng-if="applicationState.endpoint.apiVersion <= 1.24">\n                <input type="text" class="form-control" ng-model="service.Name" ng-change="updateServiceAttribute(service, \'Name\')" ng-disabled="isUpdating" />\n              </td>\n              <td ng-if="applicationState.endpoint.apiVersion >= 1.25">\n                {{ service.Name }}\n              </td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ service.Id }}\n              </td>\n            </tr>\n            <tr ng-if="service.CreatedAt">\n              <td>Created at</td>\n              <td>{{ service.CreatedAt | getisodate }}</td>\n            </tr>\n            <tr ng-if="service.UpdatedAt">\n              <td>Last updated at</td>\n              <td>{{ service.UpdatedAt | getisodate }}</td>\n            </tr>\n            <tr ng-if="service.Version">\n              <td>Version</td>\n              <td>{{ service.Version }}</td>\n            </tr>\n            <tr>\n              <td>Scheduling mode</td>\n              <td>{{ service.Mode }}</td>\n            </tr>\n            <tr ng-if="service.Mode === \'replicated\'">\n              <td>Replicas</td>\n              <td>\n                <span ng-if="service.Mode === \'replicated\'">\n                  <input\n                    class="input-sm"\n                    type="number"\n                    ng-model="service.Replicas"\n                    ng-change="updateServiceAttribute(service, \'Replicas\')"\n                    disable-authorization="DockerServiceUpdate"\n                  />\n                </span>\n              </td>\n            </tr>\n            <tr>\n              <td>Image</td>\n              <td>{{ service.Image }}</td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.type !== 4">\n              <td colspan="{{ webhookURL ? \'1\' : \'2\' }}">\n                Service webhook\n                <portainer-tooltip\n                  position="top"\n                  message="Webhook (or callback URI) used to automate the update of this service. Sending a POST request to this callback URI (without requiring any authentication) will pull the most up-to-date version of the associated image and re-deploy this service."\n                ></portainer-tooltip>\n                <label class="switch" style="margin-left: 20px;">\n                  <input disable-authorization="DockerServiceUpdate" type="checkbox" ng-model="WebhookExists" ng-click="updateWebhook(service)" /><i></i>\n                </label>\n              </td>\n              <td ng-if="webhookURL">\n                <span class="text-muted">{{ webhookURL | truncatelr }}</span>\n                <button type="button" class="btn btn-sm btn-primary btn-sm space-left" ng-if="webhookURL" ng-click="copyWebhook()">\n                  <span><i class="fa fa-copy space-right" aria-hidden="true"></i>Copy link</span>\n                </button>\n                <span>\n                  <i id="copyNotification" class="fa fa-check green-icon" aria-hidden="true" style="margin-left: 7px; display: none;"></i>\n                </span>\n              </td>\n            </tr>\n            <tr authorization="DockerServiceLogs, DockerServiceUpdate, DockerServiceDelete">\n              <td colspan="2">\n                <p class="small text-muted" authorization="DockerServiceUpdate">\n                  Note: you can only rollback one level of changes. Clicking the rollback button without making a new change will undo your previous rollback </p\n\n                ><p>\n                  <a\n                    authorization="DockerServiceLogs"\n                    ng-if="applicationState.endpoint.apiVersion >= 1.3"\n                    class="btn btn-primary btn-sm"\n                    type="button"\n                    ui-sref="docker.services.service.logs({id: service.Id})"\n                    ><i class="fa fa-file-alt space-right" aria-hidden="true"></i>Service logs</a\n                  >\n                  <button\n                    authorization="DockerServiceUpdate"\n                    type="button"\n                    class="btn btn-primary btn-sm"\n                    ng-disabled="state.updateInProgress || isUpdating"\n                    ng-click="forceUpdateService(service)"\n                    button-spinner="state.updateInProgress"\n                    ng-if="applicationState.endpoint.apiVersion >= 1.25"\n                  >\n                    <span ng-hide="state.updateInProgress"><i class="fa fa-sync space-right" aria-hidden="true"></i>Update the service</span>\n                    <span ng-show="state.updateInProgress">Update in progress...</span>\n                  </button>\n                  <button\n                    authorization="DockerServiceUpdate"\n                    type="button"\n                    class="btn btn-primary btn-sm"\n                    ng-disabled="state.rollbackInProgress || isUpdating"\n                    ng-click="rollbackService(service)"\n                    button-spinner="state.rollbackInProgress"\n                    ng-if="applicationState.endpoint.apiVersion >= 1.25"\n                  >\n                    <span ng-hide="state.rollbackInProgress"><i class="fa fa-undo space-right" aria-hidden="true"></i>Rollback the service</span>\n                    <span ng-show="state.rollbackInProgress">Rollback in progress...</span>\n                  </button>\n                  <button\n                    authorization="DockerServiceDelete"\n                    type="button"\n                    class="btn btn-danger btn-sm"\n                    ng-disabled="state.deletionInProgress || isUpdating"\n                    ng-click="removeService()"\n                    button-spinner="state.deletionInProgress"\n                  >\n                    <span ng-hide="state.deletionInProgress"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Delete the service</span>\n                    <span ng-show="state.deletionInProgress">Deletion in progress...</span>\n                  </button>\n                </p></td\n              >\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n      <rd-widget-footer authorization="DockerServiceUpdate">\n        <p class="small text-muted">\n          Do you need help? View the Docker Service documentation <a href="https://docs.docker.com/engine/reference/commandline/service_update/" target="self">here</a>.\n        </p>\n        <div class="btn-toolbar" role="toolbar">\n          <div class="btn-group" role="group">\n            <button type="button" class="btn btn-primary" ng-disabled="!hasChanges(service, [\'Mode\', \'Replicas\', \'Name\', \'Webhooks\'])" ng-click="updateService(service)"\n              >Apply changes</button\n            >\n            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n              <span class="caret"></span>\n            </button>\n            <ul class="dropdown-menu">\n              <li><a ng-click="cancelChanges(service, [\'Mode\', \'Replicas\', \'Name\'])">Reset changes</a></li>\n              <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n            </ul>\n          </div>\n        </div>\n      </rd-widget-footer>\n    </rd-widget>\n  </div>\n\n  <div class="col-lg-3 col-md-3 col-xs-3">\n    <rd-widget>\n      <rd-widget-header icon="fa-bars" title-text="Quick navigation"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <ul class="nav nav-pills nav-stacked">\n          <li><a href ng-click="goToItem(\'service-env-variables\')">Environment variables</a></li>\n          <li><a href ng-click="goToItem(\'service-container-image\')">Container image</a></li>\n          <li><a href ng-click="goToItem(\'service-container-labels\')">Container labels</a></li>\n          <li><a href ng-click="goToItem(\'service-mounts\')">Mounts</a></li>\n          <li><a href ng-click="goToItem(\'service-network-specs\')">Network &amp; published ports</a></li>\n          <li><a href ng-click="goToItem(\'service-resources\')">Resource limits &amp; reservations</a></li>\n          <li><a href ng-click="goToItem(\'service-placement-constraints\')">Placement constraints</a></li>\n          <li ng-if="applicationState.endpoint.apiVersion >= 1.3"><a href ng-click="goToItem(\'service-placement-preferences\')">Placement preferences</a></li>\n          <li><a href ng-click="goToItem(\'service-restart-policy\')">Restart policy</a></li>\n          <li><a href ng-click="goToItem(\'service-update-config\')">Update configuration</a></li>\n          <li><a href ng-click="goToItem(\'service-logging\')">Logging</a></li>\n          <li><a href ng-click="goToItem(\'service-labels\')">Service labels</a></li>\n          <li><a href ng-click="goToItem(\'service-configs\')">Configs</a></li>\n          <li ng-if="applicationState.endpoint.apiVersion >= 1.25"><a href ng-click="goToItem(\'service-secrets\')">Secrets</a></li>\n          <li><a href ng-click="goToItem(\'service-tasks\')">Tasks</a></li>\n        </ul>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="service && applicationState.application.authentication"\n  resource-id="service.Id"\n  resource-control="service.ResourceControl"\n  resource-type="\'service\'"\n>\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div class="row">\n  <hr />\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <h3 id="container-specs">Container specification</h3>\n    <div id="service-container-spec" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/container-specs.html\'"></div>\n    <div id="service-container-image" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/image.html\'"></div>\n    <div id="service-env-variables" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/environmentvariables.html\'"></div>\n    <div id="service-container-labels" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/containerlabels.html\'"></div>\n    <div id="service-mounts" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/mounts.html\'"></div>\n  </div>\n</div>\n\n<div class="row">\n  <hr />\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <h3 id="service-network-specs">Networks &amp; ports</h3>\n    <div id="service-networks" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/networks.html\'"></div>\n    <div id="service-published-ports" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/ports.html\'"></div>\n    <div id="service-hosts-entries" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/hosts.html\'"></div>\n  </div>\n</div>\n\n<div class="row">\n  <hr />\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <h3 id="service-specs">Service specification</h3>\n    <div id="service-resources" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/resources.html\'"></div>\n    <div id="service-placement-constraints" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/constraints.html\'"></div>\n    <div\n      id="service-placement-preferences"\n      ng-if="applicationState.endpoint.apiVersion >= 1.3"\n      class="padding-top"\n      ng-include="\'app/docker/views/services/edit/includes/placementPreferences.html\'"\n    ></div>\n    <div id="service-restart-policy" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/restart.html\'"></div>\n    <div id="service-update-config" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/updateconfig.html\'"></div>\n    <div id="service-logging" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/logging.html\'"></div>\n    <div id="service-labels" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/servicelabels.html\'"></div>\n    <div id="service-configs" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/configs.html\'"></div>\n    <div id="service-secrets" ng-if="applicationState.endpoint.apiVersion >= 1.25" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/secrets.html\'"></div>\n    <div id="service-tasks" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/tasks.html\'"></div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/create/createservice.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create service"></rd-header-title>\n  <rd-header-content> <a ui-sref="docker.services">Services</a> &gt; Add service </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" autocomplete="off">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="service_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="service_name" placeholder="e.g. myService" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Image configuration\n          </div>\n          \x3c!-- image-and-registry --\x3e\n          <por-image-registry model="formValues.RegistryModel" auto-complete="true" label-class="col-sm-1" input-class="col-sm-11"></por-image-registry>\n          \x3c!-- !image-and-registry --\x3e\n          <div class="col-sm-12 form-section-title">\n            Scheduling\n          </div>\n          \x3c!-- scheduling-mode --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Scheduling mode\n              </label>\n              <div class="btn-group btn-group-sm" style="margin-left: 20px;">\n                <label class="btn btn-primary" ng-model="formValues.Mode" uib-btn-radio="\'global\'">Global</label>\n                <label class="btn btn-primary" ng-model="formValues.Mode" uib-btn-radio="\'replicated\'">Replicated</label>\n              </div>\n            </div>\n          </div>\n          <div class="form-group form-inline" ng-if="formValues.Mode === \'replicated\'">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Replicas\n              </label>\n              <input type="number" class="form-control" ng-model="formValues.Replicas" id="replicas" placeholder="e.g. 3" style="margin-left: 20px;" />\n            </div>\n          </div>\n          \x3c!-- !scheduling-mode --\x3e\n          <div class="col-sm-12 form-section-title">\n            Ports configuration\n          </div>\n          \x3c!-- port-mapping --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">Port mapping</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional port\n              </span>\n            </div>\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="portBinding in formValues.Ports" style="margin-top: 2px;">\n                \x3c!-- host-port --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <span class="input-group-addon">host</span>\n                  <input type="text" class="form-control" ng-model="portBinding.PublishedPort" placeholder="e.g. 80 or 1.2.3.4:80 (optional)" />\n                </div>\n                \x3c!-- !host-port --\x3e\n                <span style="margin: 0 10px 0 10px;">\n                  <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                </span>\n                \x3c!-- container-port --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <span class="input-group-addon">container</span>\n                  <input type="text" class="form-control" ng-model="portBinding.TargetPort" placeholder="e.g. 80" />\n                </div>\n                \x3c!-- !container-port --\x3e\n                \x3c!-- protocol-actions --\x3e\n                <div class="input-group col-sm-5 input-group-sm">\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="portBinding.Protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                    <label class="btn btn-primary" ng-model="portBinding.Protocol" uib-btn-radio="\'udp\'">UDP</label>\n                  </div>\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="portBinding.PublishMode" uib-btn-radio="\'ingress\'">Ingress</label>\n                    <label class="btn btn-primary" ng-model="portBinding.PublishMode" uib-btn-radio="\'host\'">Host</label>\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n                \x3c!-- !protocol-actions --\x3e\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n          </div>\n          \x3c!-- !port-mapping --\x3e\n          \x3c!-- create-webhook --\x3e\n          <div class="col-sm-12 form-section-title">\n            Webhooks\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Create a service webhook\n                <portainer-tooltip\n                  position="top"\n                  message="Create a webhook (or callback URI) to automate the update of this service. Sending a POST request to this callback URI (without requiring any authentication) will pull the most up-to-date version of the associated image and re-deploy this service."\n                ></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.Webhook" /><i></i> </label>\n            </div>\n          </div>\n          \x3c!-- !create-webhook  --\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !formValues.RegistryModel.Image"\n                ng-click="create()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Create the service</span>\n                <span ng-show="state.actionInProgress">Creating service...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <ul class="nav nav-pills nav-justified">\n          <li class="active interactive"><a data-target="#command" data-toggle="tab">Command & Logging</a></li>\n          <li class="interactive"><a data-target="#volumes" data-toggle="tab">Volumes</a></li>\n          <li class="interactive"><a data-target="#network" data-toggle="tab">Network</a></li>\n          <li class="interactive"><a data-target="#labels" data-toggle="tab">Labels</a></li>\n          <li class="interactive"><a data-target="#update-config" data-toggle="tab">Update config & Restart</a></li>\n          <li class="interactive" ng-if="applicationState.endpoint.apiVersion >= 1.25"><a data-target="#secrets" data-toggle="tab">Secrets</a></li>\n          <li class="interactive"><a data-target="#configs" data-toggle="tab" ng-if="applicationState.endpoint.apiVersion >= 1.3">Configs</a></li>\n          <li class="interactive"><a data-target="#resources-placement" data-toggle="tab" ng-click="refreshSlider()">Resources & Placement</a></li>\n        </ul>\n        \x3c!-- tab-content --\x3e\n        <div class="tab-content">\n          \x3c!-- tab-command --\x3e\n          <div class="tab-pane active" id="command">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              <div class="col-sm-12 form-section-title">\n                Command\n              </div>\n              \x3c!-- command-input --\x3e\n              <div class="form-group">\n                <label for="service_command" class="col-sm-2 col-lg-1 control-label text-left">Command</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.Command" id="service_command" placeholder="e.g. /usr/bin/nginx -t -c /mynginx.conf" />\n                </div>\n              </div>\n              \x3c!-- !command-input --\x3e\n              \x3c!-- entrypoint-input --\x3e\n              <div class="form-group">\n                <label for="service_entrypoint" class="col-sm-2 col-lg-1 control-label text-left">Entrypoint</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.EntryPoint" id="service_entrypoint" placeholder="e.g. /bin/sh -c" />\n                </div>\n              </div>\n              \x3c!-- !entrypoint-input --\x3e\n              \x3c!-- workdir-user-input --\x3e\n              <div class="form-group">\n                <label for="service_workingdir" class="col-sm-2 col-lg-1 control-label text-left">Working Dir</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="formValues.WorkingDir" id="service_workingdir" placeholder="e.g. /myapp" />\n                </div>\n                <label for="service_user" class="col-sm-1 control-label text-left">User</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="formValues.User" id="service_user" placeholder="e.g. nginx" />\n                </div>\n              </div>\n              \x3c!-- !workdir-user-input --\x3e\n              \x3c!-- environment-variables --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Environment variables</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addEnvironmentVariable()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add environment variable\n                  </span>\n                </div>\n                \x3c!-- environment-variable-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in formValues.Env" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="variable.name" placeholder="e.g. FOO" />\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="e.g. bar" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !environment-variable-input-list --\x3e\n              </div>\n              \x3c!-- !environment-variables --\x3e\n\n              <div class="col-sm-12 form-section-title">\n                Logging\n              </div>\n              \x3c!-- logging-driver --\x3e\n              <div class="form-group">\n                <label for="log-driver" class="col-sm-2 col-lg-1 control-label text-left">Driver</label>\n                <div class="col-sm-4">\n                  <select class="form-control" ng-model="formValues.LogDriverName" id="log-driver">\n                    <option selected value="">Default logging driver</option>\n                    <option ng-repeat="driver in availableLoggingDrivers" ng-value="driver">{{ driver }}</option>\n                    <option value="none">none</option>\n                  </select>\n                </div>\n                <div class="col-sm-5">\n                  <p class="small text-muted">\n                    Logging driver for service that will override the default docker daemon driver. Select Default logging driver if you don\'t want to override it. Supported\n                    logging drivers can be found\n                    <a href="https://docs.docker.com/engine/admin/logging/overview/#supported-logging-drivers" target="_blank">in the Docker documentation</a>.\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !logging-driver --\x3e\n              \x3c!-- logging-opts --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">\n                    Options\n                    <portainer-tooltip\n                      position="top"\n                      message="Add button is disabled unless a driver other than none or default is selected. Options are specific to the selected driver, refer to the driver documentation."\n                    ></portainer-tooltip>\n                  </label>\n                  <span\n                    class="label label-default interactive"\n                    style="margin-left: 10px;"\n                    ng-click="!formValues.LogDriverName || formValues.LogDriverName === \'none\' || addLogDriverOpt(formValues.LogDriverName)"\n                  >\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add logging driver option\n                  </span>\n                </div>\n                \x3c!-- logging-opts-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="opt in formValues.LogDriverOpts" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">option</span>\n                      <input type="text" class="form-control" ng-model="opt.name" placeholder="e.g. FOO" />\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="opt.value" placeholder="e.g. bar" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLogDriverOpt($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- logging-opts-input-list --\x3e\n              </div>\n              \x3c!-- !logging-opts --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-command --\x3e\n          \x3c!-- tab-volume --\x3e\n          <div class="tab-pane" id="volumes">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- volumes --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Volume mapping</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addVolume()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional volume\n                  </span>\n                </div>\n                \x3c!-- volumes-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="volume in formValues.Volumes">\n                    <div class="col-sm-12" style="margin-top: 10px;">\n                      \x3c!-- volume-line1 --\x3e\n                      <div class="col-sm-12 form-inline">\n                        \x3c!-- container-path --\x3e\n                        <div class="input-group input-group-sm col-sm-6">\n                          <span class="input-group-addon">container</span>\n                          <input type="text" class="form-control" ng-model="volume.Target" placeholder="e.g. /path/in/container" />\n                        </div>\n                        \x3c!-- !container-path --\x3e\n                        \x3c!-- volume-type --\x3e\n                        <div class="input-group col-sm-5" style="margin-left: 5px;">\n                          <div class="btn-group btn-group-sm" ng-if="allowBindMounts">\n                            <label class="btn btn-primary" ng-model="volume.Type" uib-btn-radio="\'volume\'" ng-click="volume.name = \'\'">Volume</label>\n                            <label class="btn btn-primary" ng-model="volume.Type" uib-btn-radio="\'bind\'" ng-click="volume.Id = \'\'">Bind</label>\n                          </div>\n                          <button class="btn btn-sm btn-danger" type="button" ng-click="removeVolume($index)">\n                            <i class="fa fa-trash" aria-hidden="true"></i>\n                          </button>\n                        </div>\n                        \x3c!-- !volume-type --\x3e\n                      </div>\n                      \x3c!-- !volume-line1 --\x3e\n                      \x3c!-- volume-line2 --\x3e\n                      <div class="col-sm-12 form-inline" style="margin-top: 5px;">\n                        <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                        \x3c!-- volume --\x3e\n                        <div class="input-group input-group-sm col-sm-6" ng-if="volume.Type === \'volume\'">\n                          <span class="input-group-addon">volume</span>\n                          <select\n                            class="form-control"\n                            ng-model="volume.Source"\n                            ng-options="vol as ((vol.Id|truncate:30) + \' - \' + (vol.Driver|truncate:30)) for vol in availableVolumes"\n                          >\n                            <option selected disabled hidden value="">Select a volume</option>\n                          </select>\n                        </div>\n                        \x3c!-- !volume --\x3e\n                        \x3c!-- bind --\x3e\n                        <div class="input-group input-group-sm col-sm-6" ng-if="volume.Type === \'bind\'">\n                          <span class="input-group-addon">host</span>\n                          <input type="text" class="form-control" ng-model="volume.Source" placeholder="e.g. /path/on/host" />\n                        </div>\n                        \x3c!-- !bind --\x3e\n                        \x3c!-- read-only --\x3e\n                        <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                          <div class="btn-group btn-group-sm">\n                            <label class="btn btn-primary" ng-model="volume.ReadOnly" uib-btn-radio="false">Writable</label>\n                            <label class="btn btn-primary" ng-model="volume.ReadOnly" uib-btn-radio="true">Read-only</label>\n                          </div>\n                        </div>\n                        \x3c!-- !read-only --\x3e\n                      </div>\n                      \x3c!-- !volume-line2 --\x3e\n                    </div>\n                  </div>\n                </div>\n                \x3c!-- !volumes-input-list --\x3e\n              </div>\n              \x3c!-- !volumes --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-volume --\x3e\n          \x3c!-- tab-network --\x3e\n          <div class="tab-pane" id="network">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- network-input --\x3e\n              <div class="form-group">\n                <label for="container_network" class="col-sm-2 col-lg-1 control-label text-left">Network</label>\n                <div class="col-sm-9">\n                  <select class="form-control" ng-model="formValues.Network">\n                    <option selected disabled hidden value="">Select a network</option>\n                    <option ng-repeat="net in availableNetworks | orderBy: \'Name\'" ng-value="net.Name">{{ net.Name }}</option>\n                  </select>\n                </div>\n                <div class="col-sm-2"></div>\n              </div>\n              \x3c!-- !network-input --\x3e\n              \x3c!-- extra-networks --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Extra networks</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addExtraNetwork()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add extra network\n                  </span>\n                </div>\n                \x3c!-- network-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="network in formValues.ExtraNetworks" style="margin-top: 2px;">\n                    <select class="form-control" ng-model="network.Name">\n                      <option selected disabled hidden value="">Select a network</option>\n                      <option ng-repeat="net in availableNetworks" ng-value="net.Name">{{ net.Name }}</option>\n                    </select>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeExtraNetwork($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !network-input-list --\x3e\n              </div>\n              \x3c!-- !extra-networks --\x3e\n              \x3c!-- extra-hosts-variables --\x3e\n              <div class="form-group" ng-if="applicationState.endpoint.apiVersion >= 1.25">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Hosts file entries</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addHostsEntry()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add additional entry\n                  </span>\n                </div>\n                \x3c!-- hosts-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in formValues.HostsEntries" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="e.g. host:IP" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeHostsEntry($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !hosts-input-list --\x3e\n              </div>\n              \x3c!-- !extra-hosts-variables --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-network --\x3e\n          \x3c!-- tab-labels --\x3e\n          <div class="tab-pane" id="labels">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- labels --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Service labels</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add service label\n                  </span>\n                </div>\n                \x3c!-- labels-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo" />\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !labels-input-list --\x3e\n              </div>\n              \x3c!-- !labels--\x3e\n              \x3c!-- container-labels --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Container labels</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addContainerLabel()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add container label\n                  </span>\n                </div>\n                \x3c!-- container-labels-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in formValues.ContainerLabels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo" />\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeContainerLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !container-labels-input-list --\x3e\n              </div>\n              \x3c!-- !container-labels--\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-labels --\x3e\n          \x3c!-- tab-update-config --\x3e\n          <div class="tab-pane" id="update-config" ng-include="\'app/docker/views/services/create/includes/update-restart.html\'"></div>\n          \x3c!-- !tab-update-config --\x3e\n          \x3c!-- tab-secrets --\x3e\n          <div class="tab-pane" id="secrets" ng-if="applicationState.endpoint.apiVersion >= 1.25" ng-include="\'app/docker/views/services/create/includes/secret.html\'"></div>\n          \x3c!-- !tab-secrets --\x3e\n          \x3c!-- tab-configs --\x3e\n          <div class="tab-pane" id="configs" ng-if="applicationState.endpoint.apiVersion >= 1.3" ng-include="\'app/docker/views/services/create/includes/config.html\'"></div>\n          \x3c!-- !tab-configs --\x3e\n          \x3c!-- tab-resources-placement --\x3e\n          <div class="tab-pane" id="resources-placement" ng-include="\'app/docker/views/services/create/includes/resources-placement.html\'"></div>\n          \x3c!-- !tab-resources-placement --\x3e\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/logs/servicelogs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Service logs"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.services">Services</a> > <a ui-sref="docker.services.service({id: service.Id})">{{ service.Name }}</a> &gt; Logs\n  </rd-header-content>\n</rd-header>\n\n<log-viewer\n  data="logs"\n  ng-if="logs"\n  log-collection-change="changeLogCollection"\n  display-timestamps="state.displayTimestamps"\n  line-count="state.lineCount"\n  since-timestamp="state.sinceTimestamp"\n></log-viewer>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/swarm/swarm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Cluster overview">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.swarm" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Swarm</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="Cluster status"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Nodes</td>\n              <td>{{ info.Swarm.Nodes }}</td>\n            </tr>\n            <tr>\n              <td>Docker API version</td>\n              <td>{{ docker.ApiVersion }}</td>\n            </tr>\n            <tr>\n              <td>Total CPU</td>\n              <td>{{ totalCPU }}</td>\n            </tr>\n            <tr>\n              <td>Total memory</td>\n              <td>{{ totalMemory | humansize: 2 }}</td>\n            </tr>\n            <tr>\n              <td colspan="2">\n                <div class="btn-group" role="group" aria-label="...">\n                  <a ui-sref="docker.swarm.visualizer"><i class="fa fa-object-group space-right" aria-hidden="true"></i>Go to cluster visualizer</a>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <nodes-datatable\n      title-text="Nodes"\n      title-icon="fa-hdd"\n      dataset="nodes"\n      table-key="nodes"\n      order-by="Hostname"\n      show-ip-address-column="applicationState.endpoint.apiVersion >= 1.25"\n      access-to-node-details="!applicationState.application.authentication || isAdmin"\n      refresh-callback="getNodes"\n    ></nodes-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/swarm/visualizer/swarmvisualizer.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Swarm visualizer">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.swarm.visualizer" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content> <a ui-sref="docker.swarm">Swarm</a> &gt; <a ui-sref="docker.swarm.visualizer">Cluster visualizer</a> </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="Cluster information">\n        <div class="pull-right">\n          <button type="button" class="btn btn-sm btn-primary" ng-click="changeShowInformationPanel(true)" ng-if="!state.ShowInformationPanel">Show</button>\n          <button type="button" class="btn btn-sm btn-primary" ng-click="changeShowInformationPanel(false)" ng-if="state.ShowInformationPanel">Hide</button>\n        </div>\n      </rd-widget-header>\n      <rd-widget-body ng-if="state.ShowInformationPanel">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Nodes</td>\n              <td>{{ nodes.length }}</td>\n            </tr>\n            <tr>\n              <td>Services</td>\n              <td>{{ services.length }}</td>\n            </tr>\n            <tr>\n              <td>Tasks</td>\n              <td>{{ tasks.length }}</td>\n            </tr>\n          </tbody>\n        </table>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            Options\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Only display running tasks\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="state.DisplayOnlyRunningTasks" ng-change="changeDisplayOnlyRunningTasks()" /><i></i>\n              </label>\n            </div>\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Display node labels\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="state.DisplayNodeLabels" ng-change="changeDisplayNodeLabels()" /><i></i> </label>\n            </div>\n          </div>\n        </form>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            Refresh\n          </div>\n          <div class="form-group">\n            <label for="refreshRate" class="col-sm-1 margin-sm-top control-label text-left">\n              Rate\n              <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="display: none;"></i>\n            </label>\n            <div class="col-sm-2">\n              <select id="refreshRate" ng-model="state.refreshRate" ng-change="changeUpdateRepeater()" class="form-control">\n                <option value="5">5s</option>\n                <option value="10">10s</option>\n                <option value="30">30s</option>\n                <option value="60">60s</option>\n              </select>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="visualizerData">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="Cluster visualizer"></rd-widget-header>\n      <rd-widget-body>\n        <div class="visualizer_container">\n          <div class="node" ng-repeat="node in visualizerData.nodes | orderBy : [\'Role\', \'Hostname\'] track by $index">\n            <div class="node_info">\n              <div>\n                <div>\n                  <b>{{ node.Name || node.Hostname }}</b>\n                  <span class="node_platform">\n                    <i class="fab fa-linux" aria-hidden="true" ng-if="node.PlatformOS === \'linux\'"></i>\n                    <i class="fab fa-windows" aria-hidden="true" ng-if="node.PlatformOS === \'windows\'"></i>\n                  </span>\n                </div>\n              </div>\n              <div>{{ node.Role }}</div>\n              <div>CPU: {{ node.CPUs / 1000000000 }}</div>\n              <div>Memory: {{ node.Memory | humansize: 2 }}</div>\n              <div\n                ><span class="label label-{{ node.Status | nodestatusbadge }}">{{ node.Status }}</span></div\n              >\n              <div class="node_labels" ng-if="node.Labels.length > 0 && state.DisplayNodeLabels">\n                <div>Labels</div>\n                <div class="node_label" ng-repeat="label in node.Labels">\n                  <span class="label_key">\n                    {{ label.key }}\n                  </span>\n                  <span class="label_value" ng-if="label.value"> = {{ label.value }} </span>\n                </div>\n              </div>\n            </div>\n            <div class="tasks">\n              <div\n                class="task task_{{ task.Status.State | visualizerTask }}"\n                style="border: 2px solid {{ task.ServiceId | visualizerTaskBorderColor }}"\n                ng-repeat="task in node.Tasks | orderBy: \'ServiceName\' | filter: (state.DisplayOnlyRunningTasks || \'\') && { Status: { State: \'running\' } }"\n              >\n                <div class="service_name">{{ task.ServiceName }}</div>\n                <div>Image: {{ task.Spec.ContainerSpec.Image | hideshasum }}</div>\n                <div>Status: {{ task.Status.State }}</div>\n                <div>Update: {{ task.Updated | getisodate }}</div>\n                <div ng-if="task.Spec.Resources.Limits.MemoryBytes">Memory limit: {{ task.Spec.Resources.Limits.MemoryBytes | humansize: 2:2 }}</div>\n                <div ng-if="task.Spec.Resources.Limits.NanoCPUs">CPU limit: {{ task.Spec.Resources.Limits.NanoCPUs / 1000000000 }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/tasks/edit/task.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Task details"></rd-header-title>\n  <rd-header-content ng-if="task && service">\n    <a ui-sref="docker.services">Services</a> &gt; <a ui-sref="docker.services.service({id: service.Id })">{{ service.Name }}</a> &gt; {{ task.Id }}\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="task && service">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tasks" title-text="Task status"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>{{ task.Id }}</td>\n            </tr>\n            <tr>\n              <td>State</td>\n              <td\n                ><span class="label label-{{ task.Status.State | taskstatusbadge }}">{{ task.Status.State }}</span></td\n              >\n            </tr>\n            <tr>\n              <td>State Message</td>\n              <td>{{ task.Status.Message }}</td>\n            </tr>\n            <tr ng-if="task.Status.Err">\n              <td>Error message</td>\n              <td\n                ><code>{{ task.Status.Err }}</code></td\n              >\n            </tr>\n            <tr>\n              <td>Image</td>\n              <td>{{ task.Spec.ContainerSpec.Image | hideshasum }}</td>\n            </tr>\n            <tr ng-if="service.Mode !== \'global\'">\n              <td>Slot</td>\n              <td>{{ task.Slot }}</td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ task.Created | getisodate }}</td>\n            </tr>\n            <tr ng-if="task.Status.ContainerStatus.ContainerID">\n              <td>Container ID</td>\n              <td>{{ task.Status.ContainerStatus.ContainerID }}</td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.apiVersion >= 1.3 && task.Status.State | taskhaslogs">\n              <td colspan="2"\n                ><a class="btn btn-primary btn-sm" type="button" ui-sref="docker.tasks.task.logs({id: task.Id})"\n                  ><i class="fa fa-file-alt space-right" aria-hidden="true"></i>Task logs</a\n                ></td\n              >\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/tasks/logs/tasklogs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Task details"></rd-header-title>\n  <rd-header-content ng-if="task && service">\n    <a ui-sref="docker.services">Services</a> &gt; <a ui-sref="docker.services.service({id: service.Id })">{{ service.Name }}</a> &gt;\n    <a ui-sref="docker.tasks.task({id: task.Id })">{{ task.Id }}</a> &gt; Logs\n  </rd-header-content>\n</rd-header>\n\n<log-viewer\n  data="logs"\n  ng-if="logs"\n  log-collection-change="changeLogCollection"\n  display-timestamps="state.displayTimestamps"\n  line-count="state.lineCount"\n  since-timestamp="state.sinceTimestamp"\n></log-viewer>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/volumes/volumes.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Volume list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker.volumes" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Volumes</rd-header-content>\n</rd-header>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<div class="row">\n  <div class="col-sm-12">\n    <volumes-datatable\n      title-text="Volumes"\n      title-icon="fa-cubes"\n      dataset="volumes"\n      table-key="volumes"\n      order-by="Id"\n      remove-action="removeAction"\n      show-ownership-column="applicationState.application.authentication"\n      show-host-column="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n      show-browse-action="showBrowseAction"\n      offline-mode="offlineMode"\n      refresh-callback="getVolumes"\n    ></volumes-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/volumes/edit/volume.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Volume details"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.volumes">Volumes</a> &gt; <a ui-sref="docker.volumes.volume({id: volume.Id})">{{ volume.Id }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="volume">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cube" title-text="Volume details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ volume.Id }}\n                <button authorization="DockerVolumeDelete" class="btn btn-xs btn-danger" ng-click="removeVolume()"\n                  ><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove this volume</button\n                >\n              </td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ volume.CreatedAt | getisodate }}</td>\n            </tr>\n            <tr>\n              <td>Mount path</td>\n              <td>{{ volume.Mountpoint }}</td>\n            </tr>\n            <tr>\n              <td>Driver</td>\n              <td>{{ volume.Driver }}</td>\n            </tr>\n            <tr ng-if="!(volume.Labels | emptyobject)">\n              <td>Labels</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="(k, v) in volume.Labels">\n                    <td>{{ k }}</td>\n                    <td>{{ v }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="isCioDriver">\n  <div class="col-sm-12">\n    <volume-storidge-info volume="storidgeVolume"> </volume-storidge-info>\n  </div>\n</div>\n\n<div class="row" ng-if="isCioDriver">\n  <div class="col-sm-12">\n    <storidge-snapshot-creation volume-id="storidgeVolume.Vdisk" ng-if="storidgeVolume.SnapshotEnabled"> </storidge-snapshot-creation>\n  </div>\n</div>\n\n<div class="row" ng-if="isCioDriver && storidgeVolume.SnapshotEnabled">\n  <div class="col-sm-12">\n    <storidge-snapshots-datatable\n      title-text="Snapshots"\n      title-icon="fa-camera"\n      dataset="storidgeSnapshots"\n      table-key="storidgeSnapshots"\n      order-by="Id"\n      remove-action="removeSnapshot"\n    >\n    </storidge-snapshots-datatable>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel ng-if="volume && applicationState.application.authentication" resource-id="volume.Id" resource-control="volume.ResourceControl" resource-type="\'volume\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div class="row" ng-if="!(volume.Options | emptyobject)">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title-text="Volume options"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr ng-repeat="(key, value) in volume.Options">\n              <td>{{ key }}</td>\n              <td>{{ value }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n<div class="row" ng-if="containersUsingVolume.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title-text="Containers using volume"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <th>Container Name</th>\n            <th>Mounted At</th>\n            <th>Read-only</th>\n          </thead>\n          <tbody>\n            <tr ng-repeat="container in containersUsingVolume">\n              <td\n                ><a ui-sref="docker.containers.container({ id: container.Id, nodeName: container.NodeName })">{{ container | containername }}</a></td\n              >\n              <td>{{ container.volumeData.Destination }}</td>\n              <td>{{ !container.volumeData.RW }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/volumes/browse/browsevolume.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Volume browser"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.volumes">Volumes</a> &gt; <a ui-sref="docker.volumes.volume({ id: volumeId })">{{ volumeId }}</a> &gt; browse\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <volume-browser volume-id="volumeId" node-name="nodeName" is-upload-enabled="agentApiVersion > 1"></volume-browser>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/volumes/create/createvolume.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create volume"></rd-header-title>\n  <rd-header-content> <a ui-sref="docker.volumes">Volumes</a> &gt; Add volume </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="volumeCreationForm">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="volume_name" class="col-sm-2 col-md-1 control-label text-left">Name</label>\n            <div class="col-sm-10 col-md-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="volume_name" placeholder="e.g. myVolume" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Driver configuration\n          </div>\n          \x3c!-- driver-input --\x3e\n          <div class="form-group">\n            <label for="volume_driver" class="col-sm-2 col-md-1 control-label text-left">Driver</label>\n            <div class="col-sm-10 col-md-11">\n              <select class="form-control" ng-options="driver for driver in availableVolumeDrivers" ng-model="formValues.Driver" ng-if="availableVolumeDrivers.length > 0">\n                <option disabled hidden value="">Select a driver</option>\n              </select>\n              <input type="text" class="form-control" ng-model="formValues.Driver" id="volume_driver" placeholder="e.g. driverName" ng-if="availableVolumeDrivers.length === 0" />\n            </div>\n          </div>\n          \x3c!-- !driver-input --\x3e\n          \x3c!-- driver-options --\x3e\n          <div class="form-group" ng-hide="formValues.CIFSData.useCIFS || formValues.NFSData.useNFS">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">\n                Driver options\n                <portainer-tooltip\n                  position="bottom"\n                  message="Driver options are specific to the selected driver. Please refer to the selected driver documentation."\n                ></portainer-tooltip>\n              </label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addDriverOption()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> add driver option\n              </span>\n            </div>\n            \x3c!-- driver-options-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="option in formValues.DriverOptions" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="option.name" placeholder="e.g. mountpoint" />\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="option.value" placeholder="e.g. /path/on/host" />\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeDriverOption($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !driver-options-input-list --\x3e\n          </div>\n          \x3c!-- !driver-options --\x3e\n          \x3c!-- nfs-management --\x3e\n          <div class="form-group col-md-12">\n            <label for="useNFS" class="control-label text-left">\n              Use NFS volume\n            </label>\n            <label class="switch" style="margin-left: 20px;">\n              <input type="checkbox" name="useNFS" ng-model="formValues.NFSData.useNFS" ng-click="formValues.CIFSData.useCIFS = false" />\n              <i></i>\n            </label>\n            <div ng-if="formValues.NFSData.useNFS" class="small text-muted" style="margin-top: 10px;">\n              Ensure <code>nfs-utils</code> are installed on your hosts.\n            </div>\n          </div>\n          <volumes-nfs-form data="formValues.NFSData" ng-show="formValues.Driver === \'local\'"></volumes-nfs-form>\n          \x3c!-- !nfs-management --\x3e\n          \x3c!-- cifs-management --\x3e\n          <div class="form-group col-md-12">\n            <label for="useCIFS" class="control-label text-left">\n              Use CIFS volume\n            </label>\n            <label class="switch" style="margin-left: 20px;">\n              <input type="checkbox" name="useCIFS" ng-model="formValues.CIFSData.useCIFS" ng-click="formValues.NFSData.useNFS = false" />\n              <i></i>\n            </label>\n            <div ng-if="formValues.CIFSData.useCIFS" class="small text-muted" style="margin-top: 10px;">\n              Ensure <code>cifs-utils</code> are installed on your hosts.\n            </div>\n          </div>\n          <volumes-cifs-form data="formValues.CIFSData" ng-show="formValues.Driver === \'local\'"></volumes-cifs-form>\n          \x3c!-- !cifs-management --\x3e\n          \x3c!-- storidge --\x3e\n          <div ng-if="formValues.Driver === \'cio:latest\'">\n            <div class="col-sm-12 form-section-title">\n              Storidge\n            </div>\n            <storidge-profile-selector storidge-profile="formValues.StoridgeProfile"></storidge-profile-selector>\n          </div>\n          \x3c!-- storidge --\x3e\n          <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && formValues.Driver === \'local\'">\n            <div class="col-sm-12 form-section-title">\n              Deployment\n            </div>\n            \x3c!-- node-selection --\x3e\n            <node-selector model="formValues.NodeName"> </node-selector>\n            \x3c!-- !node-selection --\x3e\n          </div>\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-click="create()"\n                ng-disabled="state.actionInProgress || (formValues.NFSData.useNFS && !volumeCreationForm.nfsInformationForm.$valid) || (formValues.CIFSData.useCIFS && !volumeCreationForm.cifsInformationForm.$valid)"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Create the volume</span>\n                <span ng-show="state.actionInProgress">Creating volume...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a="app/portainer/views/sidebar/sidebar.html",r='\x3c!-- Sidebar --\x3e\n<div id="sidebar-wrapper">\n  <div class="sidebar-header">\n    <a ui-sref="portainer.home">\n      <img ng-if="logo" ng-src="{{ logo }}" class="img-responsive logo" />\n      <img ng-if="!logo" src="'+n(465)+'" class="img-responsive logo" alt="Portainer" />\n    </a>\n    <a ng-click="toggleSidebar()"><span class="menu-icon glyphicon glyphicon-transfer"></span></a>\n  </div>\n  <div class="sidebar-content">\n    <ul class="sidebar">\n      <li class="sidebar-list">\n        <a ui-sref="portainer.home" ui-sref-active="active">Home <span class="menu-icon fa fa-home fa-fw"></span></a>\n      </li>\n      <li class="sidebar-title endpoint-name" ng-if="applicationState.endpoint.name"> <span class="fa fa-plug space-right"></span>{{ applicationState.endpoint.name }} </li>\n      <azure-sidebar-content ng-if="applicationState.endpoint.mode && applicationState.endpoint.mode.provider === \'AZURE\'"> </azure-sidebar-content>\n      <docker-sidebar-content\n        ng-if="applicationState.endpoint.mode && applicationState.endpoint.mode.provider !== \'AZURE\'"\n        endpoint-api-version="applicationState.endpoint.apiVersion"\n        swarm-management="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\'"\n        standalone-management="applicationState.endpoint.mode.provider === \'DOCKER_STANDALONE\' || applicationState.endpoint.mode.provider === \'VMWARE_VIC\'"\n        admin-access="!applicationState.application.authentication || isAdmin"\n        offline-mode="endpointState.OfflineMode"\n        show-stacks="showStacks"\n      ></docker-sidebar-content>\n      <li class="sidebar-title" authorization="IntegrationStoridgeAdmin" ng-if="applicationState.endpoint.mode && applicationState.endpoint.extensions.length > 0">\n        <span>Integrations</span>\n      </li>\n      <li\n        authorization="IntegrationStoridgeAdmin"\n        class="sidebar-list"\n        ng-if="\n          applicationState.endpoint.mode &&\n          applicationState.endpoint.extensions.indexOf(\'storidge\') !== -1 &&\n          applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' &&\n          applicationState.endpoint.mode.role === \'MANAGER\'\n        "\n      >\n        <a ui-sref="storidge.cluster" ui-sref-active="active">Storidge <span class="menu-icon fa fa-bolt fa-fw"></span></a>\n        <div\n          class="sidebar-sublist"\n          ng-if="\n            toggle &&\n            ($state.current.name === \'storidge.cluster\' ||\n              $state.current.name === \'storidge.profiles\' ||\n              $state.current.name === \'storidge.monitor\' ||\n              $state.current.name === \'storidge.profiles.new\' ||\n              $state.current.name === \'storidge.profiles.profile\' ||\n              $state.current.name === \'storidge.drives\' ||\n              $state.current.name === \'storidge.drives.drive\' ||\n              $state.current.name === \'storidge.cluster.node\')\n          "\n        >\n          <a ui-sref="storidge.monitor" ui-sref-active="active">Monitor</a>\n        </div>\n        <div\n          class="sidebar-sublist"\n          ng-if="\n            toggle &&\n            ($state.current.name === \'storidge.cluster\' ||\n              $state.current.name === \'storidge.profiles\' ||\n              $state.current.name === \'storidge.monitor\' ||\n              $state.current.name === \'storidge.profiles.new\' ||\n              $state.current.name === \'storidge.profiles.profile\' ||\n              $state.current.name === \'storidge.drives\' ||\n              $state.current.name === \'storidge.drives.drive\' ||\n              $state.current.name === \'storidge.cluster.node\')\n          "\n        >\n          <a ui-sref="storidge.profiles" ui-sref-active="active">Profiles</a>\n        </div>\n        <div\n          class="sidebar-sublist"\n          ng-if="\n            toggle &&\n            ($state.current.name === \'storidge.cluster\' ||\n              $state.current.name === \'storidge.profiles\' ||\n              $state.current.name === \'storidge.monitor\' ||\n              $state.current.name === \'storidge.profiles.new\' ||\n              $state.current.name === \'storidge.profiles.profile\' ||\n              $state.current.name === \'storidge.drives\' ||\n              $state.current.name === \'storidge.drives.drive\' ||\n              $state.current.name === \'storidge.cluster.node\')\n          "\n        >\n          <a ui-sref="storidge.drives" ui-sref-active="active">Drives</a>\n        </div>\n      </li>\n      <li class="sidebar-title" ng-if="(!applicationState.application.authentication || isAdmin) && applicationState.application.enableHostManagementFeatures">\n        <span>Scheduler</span>\n      </li>\n      <li class="sidebar-list" ng-if="(!applicationState.application.authentication || isAdmin) && applicationState.application.enableHostManagementFeatures">\n        <a ui-sref="portainer.schedules" ui-sref-active="active">Host jobs <span class="menu-icon fa fa-clock fa-fw"></span></a>\n      </li>\n      <li class="sidebar-title" ng-if="isAdmin && applicationState.application.enableEdgeComputeFeatures">\n        <span>Edge Compute</span>\n      </li>\n      <li class="sidebar-list" ng-if="isAdmin && applicationState.application.enableEdgeComputeFeatures">\n        <a ui-sref="edge.groups" ui-sref-active="active">Edge Groups <span class="menu-icon fa fa-object-group fa-fw"></span></a>\n      </li>\n      <li class="sidebar-list" ng-if="isAdmin && applicationState.application.enableEdgeComputeFeatures">\n        <a ui-sref="edge.stacks" ui-sref-active="active">Edge Stacks <span class="menu-icon fa fa-layer-group fa-fw"></span></a>\n      </li>\n      <li class="sidebar-title">\n        <span>Settings</span>\n      </li>\n      <li class="sidebar-list" ng-if="!applicationState.application.authentication || isAdmin">\n        <a ui-sref="portainer.extensions" ui-sref-active="active">Extensions <span class="menu-icon fa fa-bolt fa-fw"></span></a>\n      </li>\n      <li class="sidebar-list" ng-if="applicationState.application.authentication && (isAdmin || isTeamLeader)">\n        <a ui-sref="portainer.users" ui-sref-active="active">Users <span class="menu-icon fa fa-users fa-fw"></span></a>\n        <div\n          class="sidebar-sublist"\n          ng-if="\n            toggle &&\n            ($state.current.name === \'portainer.users\' ||\n              $state.current.name === \'portainer.users.user\' ||\n              $state.current.name === \'portainer.teams\' ||\n              $state.current.name === \'portainer.teams.team\' ||\n              $state.current.name === \'portainer.roles\' ||\n              $state.current.name === \'portainer.roles.role\' ||\n              $state.current.name === \'portainer.roles.new\')\n          "\n        >\n          <a ui-sref="portainer.teams" ui-sref-active="active">Teams</a>\n        </div>\n        <div\n          class="sidebar-sublist"\n          ng-if="\n            toggle &&\n            ($state.current.name === \'portainer.users\' ||\n              $state.current.name === \'portainer.users.user\' ||\n              $state.current.name === \'portainer.teams\' ||\n              $state.current.name === \'portainer.teams.team\' ||\n              $state.current.name === \'portainer.roles\' ||\n              $state.current.name === \'portainer.roles.role\' ||\n              $state.current.name === \'portainer.roles.new\')\n          "\n        >\n          <a ui-sref="portainer.roles" ui-sref-active="active">Roles</a>\n        </div>\n      </li>\n      <li class="sidebar-list" ng-if="!applicationState.application.authentication || isAdmin">\n        <a ui-sref="portainer.endpoints" ui-sref-active="active">Endpoints <span class="menu-icon fa fa-plug fa-fw"></span></a>\n        <div\n          class="sidebar-sublist"\n          ng-if="\n            toggle &&\n            ($state.current.name === \'portainer.endpoints\' ||\n              $state.current.name === \'portainer.endpoints.endpoint\' ||\n              $state.current.name === \'portainer.endpoints.new\' ||\n              $state.current.name === \'portainer.endpoints.endpoint.access\' ||\n              $state.current.name === \'portainer.groups\' ||\n              $state.current.name === \'portainer.groups.group\' ||\n              $state.current.name === \'portainer.groups.group.access\' ||\n              $state.current.name === \'portainer.groups.new\' ||\n              $state.current.name === \'portainer.tags\')\n          "\n        >\n          <a ui-sref="portainer.groups" ui-sref-active="active">Groups</a>\n        </div>\n        <div\n          class="sidebar-sublist"\n          ng-if="\n            toggle &&\n            ($state.current.name === \'portainer.endpoints\' ||\n              $state.current.name === \'portainer.endpoints.endpoint\' ||\n              $state.current.name === \'portainer.endpoints.new\' ||\n              $state.current.name === \'portainer.endpoints.endpoint.access\' ||\n              $state.current.name === \'portainer.groups\' ||\n              $state.current.name === \'portainer.groups.group\' ||\n              $state.current.name === \'portainer.groups.group.access\' ||\n              $state.current.name === \'portainer.groups.new\' ||\n              $state.current.name === \'portainer.tags\')\n          "\n        >\n          <a ui-sref="portainer.tags" ui-sref-active="active">Tags</a>\n        </div>\n      </li>\n      <li class="sidebar-list">\n        <a ui-sref="portainer.registries" ui-sref-active="active">Registries <span class="menu-icon fa fa-database fa-fw"></span></a>\n      </li>\n      <li class="sidebar-list" ng-if="!applicationState.application.authentication || isAdmin">\n        <a ui-sref="portainer.settings" ui-sref-active="active">Settings <span class="menu-icon fa fa-cogs fa-fw"></span></a>\n        <div\n          class="sidebar-sublist"\n          ng-if="\n            toggle &&\n            ($state.current.name === \'portainer.settings\' || $state.current.name === \'portainer.settings.authentication\' || $state.current.name === \'portainer.about\') &&\n            applicationState.application.authentication &&\n            isAdmin\n          "\n        >\n          <a ui-sref="portainer.settings.authentication" ui-sref-active="active">Authentication</a></div\n        >\n        <div\n          class="sidebar-sublist"\n          ng-if="\n            toggle && ($state.current.name === \'portainer.settings\' || $state.current.name === \'portainer.settings.authentication\' || $state.current.name === \'portainer.about\')\n          "\n        >\n          <a ui-sref="portainer.about" ui-sref-active="active">About</a>\n        </div>\n      </li>\n    </ul>\n    <div class="sidebar-footer-content">\n      <div class="update-notification" ng-if="applicationState.application.versionStatus.UpdateAvailable">\n        <a target="_blank" href="https://github.com/portainer/portainer/releases/tag/{{ applicationState.application.versionStatus.LatestVersion }}" style="color: #091e5d;">\n          <i class="fa-lg fas fa-cloud-download-alt" style="margin-right: 2px;"></i> A new version is available\n        </a>\n      </div>\n      <div>\n        <img src="'+n(466)+'" class="img-responsive logo" alt="Portainer" />\n        <span class="version">{{ uiVersion }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n\x3c!-- End Sidebar --\x3e\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t,n){e.exports=n.p+"f461b0cc3c2692b7b8475389b6a051ec.png"},function(e,t,n){e.exports=n.p+"24b23490023e318f9c08cf94253542a0.png"},function(e,t){var n="app/portainer/views/about/about.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="About"> </rd-header-title>\n  <rd-header-content>\n    About Portainer\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <b>Portainer</b> is a <a href="https://github.com/portainer/portainer/blob/develop/LICENSE" target="_blank">free and open-source software</a> brought to you with\n        <span class="menu-icon fa fa-heart red-icon"></span> by <a href="https://portainer.io/" target="_blank">portainer.io</a> and\n        <a href="https://github.com/portainer/portainer/graphs/contributors" target="_blank">contributors.</a>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header title-text="Analytics in Portainer" icon="fas fa-project-diagram"></rd-widget-header>\n      <rd-widget-body>\n        <div class="small" style="line-height: 1.65;">\n          <p>\n            We at Portainer provide our software free and open source. To understand where best to spend our very limited development budget, we use <b>rudimentary</b> analytics.\n          </p>\n          <div>\n            <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>Opt-out</u>\n            <ul>\n              <li>You may opt-out by passing the <em>--no-analytics</em> flag as part of the docker run command when starting Portainer.</li>\n              <li\n                >If you believe that we could improve our analytics approach make sure to let us know! There is an open discussion on\n                <a target="_blank" href="https://github.com/portainer/portainer/issues/3310"><i class="fab fa-github" aria-hidden="true"></i> Github</a></li\n              >\n            </ul>\n          </div>\n          <div>\n            <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>What we collect & GDPR</u>\n            <ul>\n              <li\n                >We dont know who uses Portainer, where its used, to what scale its used, all we know (from analytics) is how often Portainer is used and which pages within the app\n                are most frequently used.</li\n              >\n              <li>As we are only collecting a very small amount of totally anonymous data, it is deemed that opt-in is not required.</li>\n            </ul>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header title-text="Help support portainer" icon="fa-heartbeat"></rd-widget-header>\n      <rd-widget-body>\n        <div class="small" style="line-height: 1.65;">\n          <p> It is a community effort to make <b>Portainer</b> as feature-rich as simple it is to deploy and use. We need all the help we can get! </p>\n          <div>\n            <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>Contribute</u>\n            <ul>\n              <li\n                >Found a bug or got a feature idea? Let\'s talk about it on\n                <a href="https://github.com/portainer/portainer/issues" target="_blank"><i class="fab fa-github" aria-hidden="true"></i> Github</a></li\n              >\n              <li\n                >Follow our <a href="https://portainer.readthedocs.io/en/latest/contribute.html" target="_blank">contribution guidelines</a> to build it locally and make a\n                <a target="_blank" href="https://github.com/portainer/portainer/compare"><i class="fab fa-github" aria-hidden="true"></i> pull request</a></li\n              >\n            </ul>\n          </div>\n          <div>\n            <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>Spread the word</u>\n            <ul>\n              <li>Talk to your friends and colleagues about how awesome Portainer is!</li>\n              <li\n                >Follow us on <a href="https://twitter.com/portainerio" target="_blank"><i class="fab fa-twitter" aria-hidden="true"></i> Twitter</a></li\n              >\n            </ul>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header title-text="Support and services" icon="fa-building"></rd-widget-header>\n      <rd-widget-body>\n        <div class="small" style="line-height: 1.65;">\n          <div>\n            <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>Documentation</u>\n            <ul>\n              <li\n                >Checkout our <a target="_blank" href="http://portainer.readthedocs.io"><i class="fa fa-book" aria-hidden="true"></i> online documentation</a></li\n              >\n              <li\n                >Be sure to have a look at our <a href="https://portainer.readthedocs.io/en/latest/faq.html" target="_blank">FAQ</a> and our list of\n                <a href="https://github.com/portainer/portainer/issues" target="_blank">open issues</a></li\n              >\n            </ul>\n          </div>\n          <div>\n            <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>Community support</u>\n            <ul>\n              <li\n                >Join us on <a href="https://portainer.io/slack/" target="_blank"><i class="fab fa-slack" aria-hidden="true"></i> Slack</a></li\n              >\n              <li\n                >We\'re also on <a href="https://gitter.im/portainer/Lobby" target="_blank"><i class="fab fa-github-alt" aria-hidden="true"></i> Gitter</a></li\n              >\n            </ul>\n          </div>\n          <div>\n            <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>Services</u>\n            <ul>\n              <li>Find out more about our <a href="https://portainer.io/support.html" target="_blank">consulting and commercial support plans</a></li>\n              <li\n                >We also propose a fund-a-feature plan, reach out to us at\n                <a target="_blank" href="mailto:info@portainer.io"><i class="fa fa-envelope" aria-hidden="true"></i> portainer.io</a></li\n              >\n            </ul>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header title-text="Limitations" icon="fa-plug"></rd-widget-header>\n      <rd-widget-body>\n        <div class="small">\n          Portainer has full support for Docker >=1.10 and partial support for Docker 1.9 (some features may not be available).\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/account/account.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="User settings"></rd-header-title>\n  <rd-header-content>User settings</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-lock" title-text="Change user password"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" style="margin-top: 15px;">\n          \x3c!-- current-password-input --\x3e\n          <div class="form-group">\n            <label for="current_password" class="col-sm-2 control-label text-left">Current password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.currentPassword" id="current_password" />\n              </div>\n            </div>\n          </div>\n          \x3c!-- !current-password-input --\x3e\n          \x3c!-- new-password-input --\x3e\n          <div class="form-group">\n            <label for="new_password" class="col-sm-2 control-label text-left">New password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.newPassword" id="new_password" />\n              </div>\n            </div>\n          </div>\n          \x3c!-- !new-password-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <i ng-class="{ true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\' }[formValues.newPassword.length >= 8]" aria-hidden="true"></i>\n              <span class="small text-muted">Your new password must be at least 8 characters long</span>\n            </div>\n          </div>\n          \x3c!-- confirm-password-input --\x3e\n          <div class="form-group">\n            <label for="confirm_password" class="col-sm-2 control-label text-left">Confirm password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.confirmPassword" id="confirm_password" />\n                <span class="input-group-addon"\n                  ><i\n                    ng-class="\n                      { true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\' }[formValues.newPassword !== \'\' && formValues.newPassword === formValues.confirmPassword]\n                    "\n                    aria-hidden="true"\n                  ></i\n                ></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !confirm-password-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="submit"\n                class="btn btn-primary btn-sm"\n                ng-disabled="(AuthenticationMethod !== 1 && userID !== 1) || !formValues.currentPassword || formValues.newPassword.length < 8 || formValues.newPassword !== formValues.confirmPassword"\n                ng-click="updatePassword()"\n                >Update password</button\n              >\n              <span class="text-muted small" style="margin-left: 5px;" ng-if="AuthenticationMethod === 2 && userID !== 1">\n                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n                You cannot change your password when using LDAP authentication.\n              </span>\n              <span class="text-muted small" style="margin-left: 5px;" ng-if="AuthenticationMethod === 3 && userID !== 1">\n                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n                You cannot change your password when using OAuth authentication.\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a="app/portainer/views/auth/auth.html",r='<div class="page-wrapper">\n  \x3c!-- login box --\x3e\n  <div class="container simple-box">\n    <div class="col-sm-6 col-sm-offset-3">\n      \x3c!-- login box logo --\x3e\n      <div class="row">\n        <img ng-if="!ctrl.logo" src="'+n(251)+'" class="simple-box-logo" alt="Portainer" />\n        <img ng-if="ctrl.logo" ng-src="{{ ctrl.logo }}" class="simple-box-logo" />\n      </div>\n      \x3c!-- !login box logo --\x3e\n      \x3c!-- login panel --\x3e\n      <div class="panel panel-default" ng-show="!ctrl.state.loginInProgress">\n        <div class="panel-body">\n          \x3c!-- login form --\x3e\n          <form class="simple-box-form form-horizontal">\n            \x3c!-- username input --\x3e\n            <div class="input-group">\n              <span class="input-group-addon"><i class="fa fa-user" aria-hidden="true"></i></span>\n              <input id="username" type="text" class="form-control" name="username" ng-model="ctrl.formValues.Username" auto-focus />\n            </div>\n            \x3c!-- !username input --\x3e\n            \x3c!-- password input --\x3e\n            <div class="input-group">\n              <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n              <input id="password" type="password" class="form-control" name="password" ng-model="ctrl.formValues.Password" />\n            </div>\n            \x3c!-- !password input --\x3e\n            \x3c!-- login button --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <a ng-href="{{ ctrl.OAuthLoginURI }}" ng-if="ctrl.AuthenticationMethod === 3">\n                  <div class="btn btn-primary btn-sm pull-left" style="margin-left: 2px;" ng-if="ctrl.state.OAuthProvider === \'Microsoft\'">\n                    <i class="fab fa-microsoft" aria-hidden="true"></i> Login with Microsoft\n                  </div>\n                  <div class="btn btn-primary btn-sm pull-left" style="margin-left: 2px;" ng-if="ctrl.state.OAuthProvider === \'Google\'">\n                    <i class="fab fa-google" aria-hidden="true"></i> Login with Google\n                  </div>\n                  <div class="btn btn-primary btn-sm pull-left" style="margin-left: 2px;" ng-if="ctrl.state.OAuthProvider === \'Github\'">\n                    <i class="fab fa-github" aria-hidden="true"></i> Login with Github\n                  </div>\n                  <div class="btn btn-primary btn-sm pull-left" style="margin-left: 2px;" ng-if="ctrl.state.OAuthProvider === \'OAuth\'">\n                    <i class="fa fa-sign-in-alt" aria-hidden="true"></i> Login with OAuth\n                  </div>\n                </a>\n\n                <button\n                  type="submit"\n                  class="btn btn-primary btn-sm pull-right"\n                  ng-click="ctrl.authenticateUser()"\n                  button-spinner="ctrl.state.loginInProgress"\n                  ng-disabled="ctrl.state.loginInProgress"\n                >\n                  <span ng-hide="ctrl.state.loginInProgress"><i class="fa fa-sign-in-alt" aria-hidden="true"></i> Login</span>\n                  <span ng-show="ctrl.state.loginInProgress">Login in progress...</span>\n                </button>\n\n                <span class="pull-right" style="margin: 5px;" ng-if="ctrl.state.AuthenticationError">\n                  <i class="fa fa-exclamation-triangle red-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                  <span class="small text-danger">{{ ctrl.state.AuthenticationError }}</span>\n                </span>\n              </div>\n            </div>\n\n            \x3c!-- !login button --\x3e\n          </form>\n          \x3c!-- !login form --\x3e\n        </div>\n      </div>\n      \x3c!-- !login panel --\x3e\n      <div class="panel panel-default" ng-show="ctrl.state.loginInProgress">\n        <div class="panel-body">\n          <div class="form-group text-center">\n            <span class="small text-muted">Authentication in progress... <span button-spinner="true"></span></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !login box --\x3e\n</div>\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t){var n="app/portainer/views/endpoints/endpoints.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Endpoints">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.endpoints" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Endpoint management</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="!applicationState.application.endpointManagement">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-exclamation-triangle" title-text="Endpoint management is not available"> </rd-widget-header>\n      <rd-widget-body>\n        <span class="small text-muted"\n          >Portainer has been started using the <code>--external-endpoints</code> flag. Endpoint management via the UI is disabled.\n          <span ng-if="applicationState.application.authentication">You can still manage endpoint access.</span>\n        </span>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <endpoints-datatable\n      title-text="Endpoints"\n      title-icon="fa-plug"\n      table-key="endpoints"\n      order-by="Name"\n      endpoint-management="applicationState.application.endpointManagement"\n      access-management="applicationState.application.authentication"\n      remove-action="removeAction"\n      retrieve-page="getPaginatedEndpoints"\n    ></endpoints-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/endpoints/edit/endpoint.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Endpoint details">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.endpoints.endpoint({id: endpoint.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.endpoints">Endpoints</a> &gt; <a ui-sref="portainer.endpoints.endpoint({id: endpoint.Id})">{{ endpoint.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <information-panel ng-if="endpoint.Type === 4 && endpoint.EdgeID" title-text="Edge information">\n    <span class="small text-muted">\n      <p>\n        <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n        This Edge endpoint is associated to an Edge environment.\n      </p>\n      <p>\n        Edge key: <code>{{ endpoint.EdgeKey }}</code>\n      </p>\n      <p>\n        Edge identifier: <code>{{ endpoint.EdgeID }}</code>\n      </p>\n    </span>\n  </information-panel>\n  <information-panel ng-if="endpoint.Type === 4 && !endpoint.EdgeID" title-text="Deploy an agent">\n    <span class="small text-muted">\n      <p>\n        <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n        Deploy the Edge agent on your remote Docker environment using the following command(s)\n      </p>\n      <p>\n        The agent will communicate with Portainer via <u>{{ edgeKeyDetails.instanceURL }}</u> and <u>tcp://{{ edgeKeyDetails.tunnelServerAddr }}</u>\n      </p>\n      <div style="margin-top: 10px;">\n        <uib-tabset active="state.deploymentTab">\n          <uib-tab index="0" heading="Standalone">\n            <code style="display: block; white-space: pre-wrap; padding: 16px 90px;">{{dockerCommands.standalone}}</code>\n          </uib-tab>\n          <uib-tab index="1" heading="Swarm">\n            <code style="display: block; white-space: pre-wrap; padding: 16px 90px;">{{dockerCommands.swarm}}</code>\n          </uib-tab>\n        </uib-tabset>\n        <div style="margin-top: 10px;">\n          <span class="btn btn-primary btn-sm" ng-click="copyEdgeAgentDeploymentCommand()"><i class="fa fa-copy space-right" aria-hidden="true"></i>Copy command</span>\n          <span id="copyNotificationDeploymentCommand" style="margin-left: 7px; display: none; color: #23ae89;"> <i class="fa fa-check" aria-hidden="true"></i> copied </span>\n        </div>\n      </div>\n      <div class="col-sm-12 form-section-title" style="margin-top: 25px;">\n        Join token\n      </div>\n      <p>\n        <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n        For those prestaging the edge agent, use the following join token to associate the Edge agent with this endpoint.\n      </p>\n      <p> You can read more about pre-staging in the userguide available <a href="https://downloads.portainer.io/edge_agent_guide.pdf">here.</a> </p>\n      <div style="margin-top: 10px; overflow-wrap: break-word;">\n        <code>\n          {{ endpoint.EdgeKey }}\n        </code>\n        <div style="margin-top: 10px;">\n          <span class="btn btn-primary btn-sm" ng-click="copyEdgeAgentKey()"><i class="fa fa-copy space-right" aria-hidden="true"></i>Copy token</span>\n          <span id="copyNotificationEdgeKey" style="margin-left: 7px; display: none; color: #23ae89;"> <i class="fa fa-check" aria-hidden="true"></i> copied </span>\n        </div>\n      </div>\n    </span>\n  </information-panel>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            Configuration\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-3 col-lg-2 control-label text-left">Name</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="container_name" ng-model="endpoint.Name" placeholder="e.g. docker-prod01" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- endpoint-url-input --\x3e\n          <div class="form-group" ng-if="endpoint.Type !== 4">\n            <label for="endpoint_url" class="col-sm-3 col-lg-2 control-label text-left">\n              Endpoint URL\n              <portainer-tooltip\n                position="bottom"\n                message="URL or IP address of a Docker host. The Docker API must be exposed over a TCP port. Please refer to the Docker documentation to configure it."\n              ></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input\n                ng-disabled="endpointType === \'local\' || endpoint.Type === 3"\n                type="text"\n                class="form-control"\n                id="endpoint_url"\n                ng-model="endpoint.URL"\n                placeholder="e.g. 10.0.0.10:2375 or mydocker.mydomain.com:2375"\n              />\n            </div>\n          </div>\n          \x3c!-- !endpoint-url-input --\x3e\n          \x3c!-- endpoint-public-url-input --\x3e\n          <div class="form-group" ng-if="endpoint.Type !== 3">\n            <label for="endpoint_public_url" class="col-sm-3 col-lg-2 control-label text-left">\n              Public IP\n              <portainer-tooltip\n                position="bottom"\n                message="URL or IP address where exposed containers will be reachable. This field is optional and will default to the endpoint URL."\n              ></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="endpoint_public_url" ng-model="endpoint.PublicURL" placeholder="e.g. 10.0.0.10 or mydocker.mydomain.com" />\n            </div>\n          </div>\n          <azure-endpoint-config\n            ng-if="endpoint.Type === 3"\n            application-id="endpoint.AzureCredentials.ApplicationID"\n            tenant-id="endpoint.AzureCredentials.TenantID"\n            authentication-key="endpoint.AzureCredentials.AuthenticationKey"\n          ></azure-endpoint-config>\n          \x3c!-- !endpoint-public-url-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Metadata\n          </div>\n          \x3c!-- group --\x3e\n          <div class="form-group">\n            <label for="endpoint_group" class="col-sm-3 col-lg-2 control-label text-left">\n              Group\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <select ng-options="group.Id as group.Name for group in groups" ng-model="endpoint.GroupId" id="endpoint_group" class="form-control"></select>\n            </div>\n          </div>\n          \x3c!-- !group --\x3e\n          \x3c!-- tags --\x3e\n          <div class="form-group">\n            <tag-selector ng-if="endpoint && availableTags" tags="availableTags" model="endpoint.TagIds" on-create="(onCreateTag)" allow-create="state.allowCreate"></tag-selector>\n          </div>\n          \x3c!-- !tags --\x3e\n          \x3c!-- endpoint-security --\x3e\n          <div ng-if="endpointType === \'remote\' && endpoint.Type !== 3 && endpoint.Type !== 4">\n            <div class="col-sm-12 form-section-title">\n              Security\n            </div>\n            <por-endpoint-security form-data="formValues.SecurityFormData" endpoint="endpoint"></por-endpoint-security>\n          </div>\n          \x3c!-- !endpoint-security --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !endpoint.Name || !endpoint.URL || (endpoint.TLS && ((endpoint.TLSVerify && !formValues.TLSCACert) || (endpoint.TLSClientCert && (!formValues.TLSCert || !formValues.TLSKey))))"\n                ng-click="updateEndpoint()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Update endpoint</span>\n                <span ng-show="state.actionInProgress">Updating endpoint...</span>\n              </button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="portainer.endpoints">Cancel</a>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/endpoints/create/createendpoint.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create endpoint"></rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.endpoints">Endpoints</a> &gt; Add endpoint </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="endpointCreationForm">\n          <div class="col-sm-12 form-section-title">\n            Environment type\n          </div>\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0;">\n            <div class="boxselector_wrapper">\n              <div ng-click="resetEndpointURL()">\n                <input type="radio" id="agent_endpoint" ng-model="state.EnvironmentType" value="agent" />\n                <label for="agent_endpoint">\n                  <div class="boxselector_header">\n                    <i class="fa fa-bolt" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Agent\n                  </div>\n                  <p>Portainer agent</p>\n                </label>\n              </div>\n              <div ng-click="setDefaultPortainerInstanceURL()">\n                <input type="radio" id="edge_agent_endpoint" ng-model="state.EnvironmentType" value="edge_agent" />\n                <label for="edge_agent_endpoint">\n                  <div class="boxselector_header">\n                    <i class="fa fa-cloud" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Edge Agent\n                  </div>\n                  <p>Portainer Edge agent</p>\n                </label>\n              </div>\n              <div ng-click="resetEndpointURL()">\n                <input type="radio" id="docker_endpoint" ng-model="state.EnvironmentType" value="docker" />\n                <label for="docker_endpoint">\n                  <div class="boxselector_header">\n                    <i class="fab fa-docker" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Docker\n                  </div>\n                  <p>Directly connect to the Docker API</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="azure_endpoint" ng-model="state.EnvironmentType" value="azure" />\n                <label for="azure_endpoint">\n                  <div class="boxselector_header">\n                    <i class="fab fa-microsoft" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Azure\n                  </div>\n                  <p>Connect to Microsoft Azure ACI</p>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div ng-if="state.EnvironmentType === \'docker\'">\n            <div class="col-sm-12 form-section-title">\n              Important notice\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                The Docker API must be exposed over TCP. You can find more information about how to expose the Docker API over TCP\n                <a href="https://docs.docker.com/engine/security/https/" target="_blank">in the Docker documentation</a>.\n              </span>\n            </div>\n          </div>\n          <div ng-if="state.EnvironmentType === \'agent\'">\n            <div class="col-sm-12 form-section-title">\n              Information\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                Ensure that you have deployed the Portainer agent in your cluster first. You can use execute the following command on any manager node to deploy it.\n                <div style="margin-top: 10px;">\n                  <code>\n                    curl -L https://downloads.portainer.io/agent-stack.yml -o agent-stack.yml && docker stack deploy --compose-file=agent-stack.yml portainer-agent\n                  </code>\n                  <span class="btn btn-primary btn-sm space-left" ng-click="copyAgentCommand()"><i class="fa fa-copy space-right" aria-hidden="true"></i>Copy</span>\n                  <span>\n                    <i id="copyNotification" class="fa fa-check green-icon" aria-hidden="true" style="margin-left: 7px; display: none;"></i>\n                  </span>\n                </div>\n              </span>\n            </div>\n          </div>\n          <div ng-if="state.EnvironmentType === \'edge_agent\'">\n            <div class="col-sm-12 form-section-title">\n              Information\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                Allows you to create an endpoint that can be registered with an Edge agent. The Edge agent will initiate the communications with the Portainer instance. All the\n                required information on how to connect an Edge agent to this endpoint will be available after endpoint creation.\n              </span>\n            </div>\n          </div>\n          <div ng-if="state.EnvironmentType === \'azure\'">\n            <div class="col-sm-12 form-section-title">\n              Information\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small">\n                  <p class="text-muted"> <i class="fa fa-flask orange-icon" aria-hidden="true" style="margin-right: 2px;"></i> This feature is experimental. </p>\n                  <p class="text-primary">\n                    Connect to Microsoft Azure to manage Azure Container Instances (ACI).\n                  </p>\n                  <p class="text-muted">\n                    <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Have a look at\n                    <a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal" target="_blank"\n                      >the Azure documentation</a\n                    >\n                    to retrieve the credentials required below.\n                  </p>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class="col-sm-12 form-section-title">\n            Environment details\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-3 col-lg-2 control-label text-left">Name</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" name="container_name" ng-model="formValues.Name" placeholder="e.g. docker-prod01" required auto-focus />\n            </div>\n          </div>\n          <div class="form-group" ng-show="endpointCreationForm.container_name.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="endpointCreationForm.container_name.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- endpoint-url-input --\x3e\n          <div ng-if="state.EnvironmentType === \'docker\' || state.EnvironmentType === \'agent\'">\n            <div class="form-group">\n              <label for="endpoint_url" class="col-sm-3 col-lg-2 control-label text-left">\n                Endpoint URL\n                <portainer-tooltip\n                  position="bottom"\n                  message="URL or IP address of a Docker host. The Docker API must be exposed over a TCP port. Please refer to the Docker documentation to configure it."\n                ></portainer-tooltip>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input\n                  ng-if="state.EnvironmentType === \'docker\'"\n                  type="text"\n                  class="form-control"\n                  name="endpoint_url"\n                  ng-model="formValues.URL"\n                  placeholder="e.g. 10.0.0.10:2375 or mydocker.mydomain.com:2375"\n                  required\n                />\n                <input\n                  ng-if="state.EnvironmentType === \'agent\'"\n                  type="text"\n                  class="form-control"\n                  name="endpoint_url"\n                  ng-model="formValues.URL"\n                  placeholder="e.g. 10.0.0.10:9001 or tasks.portainer_agent:9001"\n                  required\n                />\n              </div>\n            </div>\n            <div class="form-group" ng-show="endpointCreationForm.endpoint_url.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="endpointCreationForm.endpoint_url.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !endpoint-url-input --\x3e\n          \x3c!-- portainer-instance-input --\x3e\n          <div ng-if="state.EnvironmentType === \'edge_agent\'">\n            <div class="form-group">\n              <label for="endpoint_url" class="col-sm-3 col-lg-2 control-label text-left">\n                Portainer server URL\n                <portainer-tooltip position="bottom" message="URL of the Portainer instance that the agent will use to initiate the communications."></portainer-tooltip>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" name="endpoint_url" ng-model="formValues.URL" placeholder="e.g. 10.0.0.10:9000 or portainer.mydomain.com" required />\n              </div>\n            </div>\n            <div class="form-group" ng-show="endpointCreationForm.endpoint_url.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="endpointCreationForm.endpoint_url.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !portainer-instance-input --\x3e\n          \x3c!-- endpoint-public-url-input --\x3e\n          <div ng-if="state.EnvironmentType === \'docker\' || state.EnvironmentType === \'agent\'">\n            <div class="form-group">\n              <label for="endpoint_public_url" class="col-sm-3 col-lg-2 control-label text-left">\n                Public IP\n                <portainer-tooltip\n                  position="bottom"\n                  message="URL or IP address where exposed containers will be reachable. This field is optional and will default to the endpoint URL."\n                ></portainer-tooltip>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="endpoint_public_url" ng-model="formValues.PublicURL" placeholder="e.g. 10.0.0.10 or mydocker.mydomain.com" />\n              </div>\n            </div>\n          </div>\n          \x3c!-- !endpoint-public-url-input --\x3e\n          \x3c!-- azure-details --\x3e\n          <div ng-if="state.EnvironmentType === \'azure\'">\n            \x3c!-- applicationId-input --\x3e\n            <div class="form-group">\n              <label for="azure_credential_appid" class="col-sm-3 col-lg-2 control-label text-left">Application ID</label>\n              <div class="col-sm-9 col-lg-10">\n                <input\n                  type="text"\n                  class="form-control"\n                  name="azure_credential_appid"\n                  ng-model="formValues.AzureApplicationId"\n                  placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"\n                  required\n                />\n              </div>\n            </div>\n            <div class="form-group" ng-show="endpointCreationForm.azure_credential_appid.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="endpointCreationForm.azure_credential_appid.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !applicationId-input --\x3e\n            \x3c!-- tenantId-input --\x3e\n            <div class="form-group">\n              <label for="azure_credential_tenantid" class="col-sm-3 col-lg-2 control-label text-left">Tenant ID</label>\n              <div class="col-sm-9 col-lg-10">\n                <input\n                  type="text"\n                  class="form-control"\n                  name="azure_credential_tenantid"\n                  ng-model="formValues.AzureTenantId"\n                  placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"\n                  required\n                />\n              </div>\n            </div>\n            <div class="form-group" ng-show="endpointCreationForm.azure_credential_tenantid.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="endpointCreationForm.azure_credential_tenantid.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !tenantId-input --\x3e\n            \x3c!-- authenticationkey-input --\x3e\n            <div class="form-group">\n              <label for="azure_credential_authkey" class="col-sm-3 col-lg-2 control-label text-left">Authentication key</label>\n              <div class="col-sm-9 col-lg-10">\n                <input\n                  type="text"\n                  class="form-control"\n                  name="azure_credential_authkey"\n                  ng-model="formValues.AzureAuthenticationKey"\n                  placeholder="cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk="\n                  required\n                />\n              </div>\n            </div>\n            <div class="form-group" ng-show="endpointCreationForm.azure_credential_authkey.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="endpointCreationForm.azure_credential_authkey.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !authenticationkey-input --\x3e\n          </div>\n          \x3c!-- !azure-details --\x3e\n          \x3c!-- endpoint-security --\x3e\n          <por-endpoint-security ng-if="state.EnvironmentType === \'docker\'" form-data="formValues.SecurityFormData"></por-endpoint-security>\n          \x3c!-- !endpoint-security --\x3e\n          <div class="col-sm-12 form-section-title">\n            Metadata\n          </div>\n          \x3c!-- group --\x3e\n          <div class="form-group">\n            <label for="endpoint_group" class="col-sm-3 col-lg-2 control-label text-left">\n              Group\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <select ng-options="group.Id as group.Name for group in groups" ng-model="formValues.GroupId" id="endpoint_group" class="form-control"></select>\n            </div>\n          </div>\n          \x3c!-- !group --\x3e\n          \x3c!-- tags --\x3e\n          <div class="form-group">\n            <tag-selector\n              ng-if="formValues && availableTags"\n              tags="availableTags"\n              model="formValues.TagIds"\n              allow-create="state.allowCreateTag"\n              on-create="(onCreateTag)"\n            ></tag-selector>\n          </div>\n          \x3c!-- !tags --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          \x3c!-- actions --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                ng-if="state.EnvironmentType === \'docker\'"\n                type="submit"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !endpointCreationForm.$valid || (formValues.TLS && ((formValues.TLSVerify && !formValues.TLSCACert) || (formValues.TLSClientCert && (!formValues.TLSCert || !formValues.TLSKey))))"\n                ng-click="addDockerEndpoint()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> Add endpoint</span>\n                <span ng-show="state.actionInProgress">Creating endpoint...</span>\n              </button>\n              <button\n                ng-if="state.EnvironmentType === \'agent\'"\n                type="submit"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !endpointCreationForm.$valid"\n                ng-click="addAgentEndpoint()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> Add endpoint</span>\n                <span ng-show="state.actionInProgress">Creating endpoint...</span>\n              </button>\n              <button\n                ng-if="state.EnvironmentType === \'edge_agent\'"\n                type="submit"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !endpointCreationForm.$valid"\n                ng-click="addEdgeAgentEndpoint()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> Add endpoint</span>\n                <span ng-show="state.actionInProgress">Creating endpoint...</span>\n              </button>\n              <button\n                ng-if="state.EnvironmentType === \'azure\'"\n                type="submit"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !endpointCreationForm.$valid"\n                ng-click="addAzureEndpoint()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> Add endpoint</span>\n                <span ng-show="state.actionInProgress">Creating endpoint...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/endpoints/access/endpointAccess.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Endpoint access"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.endpoints">Endpoints</a> &gt; <a ui-sref="portainer.endpoints.endpoint({id: ctrl.endpoint.Id})">{{ ctrl.endpoint.Name }}</a> &gt; Access management\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="ctrl.endpoint">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plug" title-text="Endpoint"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>\n                {{ ctrl.endpoint.Name }}\n              </td>\n            </tr>\n            <tr>\n              <td>URL</td>\n              <td>\n                {{ ctrl.endpoint.URL | stripprotocol }}\n              </td>\n            </tr>\n            <tr>\n              <td>Group</td>\n              <td>\n                <a ui-sref="portainer.groups.group({ id: ctrl.group.Id })">{{ ctrl.group.Name }}</a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<por-access-management\n  ng-if="ctrl.endpoint && ctrl.group"\n  access-controlled-entity="ctrl.endpoint"\n  action-in-progress="ctrl.state.actionInProgress"\n  entity-type="endpoint"\n  inherit-from="ctrl.group"\n  update-access="ctrl.updateAccess"\n>\n</por-access-management>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/groups/groups.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Endpoint groups">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.groups" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Endpoint group management</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <groups-datatable\n      title-text="Endpoint groups"\n      title-icon="fa-object-group"\n      dataset="groups"\n      table-key="groups"\n      order-by="Name"\n      access-management="applicationState.application.authentication"\n      remove-action="removeAction"\n    ></groups-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/groups/edit/group.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Endpoint group details"></rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.groups">Groups</a> &gt; {{ ::group.Name }} </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <group-form\n          loaded="loaded"\n          page-type="edit"\n          model="group"\n          available-endpoints="availableEndpoints"\n          available-tags="availableTags"\n          associated-endpoints="associatedEndpoints"\n          add-label-action="addLabel"\n          remove-label-action="removeLabel"\n          form-action="update"\n          form-action-label="Update the group"\n          action-in-progress="state.actionInProgress"\n          on-create-tag="(onCreateTag)"\n        ></group-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/groups/create/creategroup.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create endpoint group"></rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.groups">Endpoint groups</a> &gt; Add group </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <group-form\n          loaded="loaded"\n          page-type="create"\n          model="model"\n          available-endpoints="availableEndpoints"\n          available-tags="availableTags"\n          associated-endpoints="associatedEndpoints"\n          add-label-action="addLabel"\n          remove-label-action="removeLabel"\n          form-action="create"\n          form-action-label="Create the group"\n          action-in-progress="state.actionInProgress"\n          on-create-tag="(onCreateTag)"\n        ></group-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/groups/access/groupAccess.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Endpoint group access"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.groups">Groups</a> &gt; <a ui-sref="portainer.groups.group({id: group.Id})">{{ group.Name }}</a> &gt; Access management\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="group">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="Group"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>\n                {{ group.Name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<por-access-management\n  ng-if="group"\n  access-controlled-entity="group"\n  entity-type="group"\n  action-in-progress="state.actionInProgress"\n  update-access="updateAccess"\n></por-access-management>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/home/home.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Home">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.home" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Endpoints</rd-header-content>\n</rd-header>\n\n<motd-panel ng-if="motd && motd.Message !== \'\' && applicationState.UI.dismissedInfoHash !== motd.Hash" motd="motd" dismiss-action="dismissImportantInformation(motd.Hash)">\n</motd-panel>\n\n<information-panel ng-if="!isAdmin && endpoints.length === 0" title-text="Information">\n  <span class="small text-muted">\n    <p>\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      You do not have access to any environment. Please contact your administrator.\n    </p>\n  </span>\n</information-panel>\n\n<div\n  class="row"\n  style="width: 100%; height: 100%; text-align: center; display: flex; flex-direction: column; align-items: center; justify-content: center;"\n  ng-if="state.connectingToEdgeEndpoint"\n>\n  Connecting to the Edge endpoint...\n  <i class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n</div>\n\n<div class="row" ng-if="!state.connectingToEdgeEndpoint">\n  <div class="col-sm-12">\n    <endpoint-list\n      title-text="Endpoints"\n      title-icon="fa-plug"\n      endpoints="endpoints"\n      table-key="home_endpoints"\n      tags="tags"\n      dashboard-action="goToDashboard"\n      show-snapshot-action="!applicationState.application.authentication || isAdmin"\n      snapshot-action="triggerSnapshot"\n      edit-action="goToEdit"\n      is-admin="isAdmin"\n      total-count="totalCount"\n      retrieve-page="getPaginatedEndpoints"\n    ></endpoint-list>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a="app/portainer/views/init/endpoint/initEndpoint.html",r='<div class="page-wrapper">\n  \x3c!-- simple box --\x3e\n  <div class="container simple-box">\n    <div class="col-sm-12">\n      \x3c!-- simple box logo --\x3e\n      <div class="row">\n        <img ng-if="logo" ng-src="{{ logo }}" class="simple-box-logo" />\n        <img ng-if="!logo" src="'+n(251)+'" class="simple-box-logo" alt="Portainer" />\n      </div>\n      \x3c!-- !simple box logo --\x3e\n      \x3c!-- init-endpoint panel --\x3e\n      <div class="panel panel-default">\n        <div class="panel-body">\n          \x3c!-- init-endpoint form --\x3e\n          <form class="simple-box-form form-horizontal">\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  Connect Portainer to the Docker environment you want to manage.\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- endpoint-type --\x3e\n            <div class="form-group" style="margin-bottom: 0;">\n              <div class="boxselector_wrapper">\n                <div>\n                  <input type="radio" id="local_endpoint" ng-model="formValues.EndpointType" value="local" />\n                  <label for="local_endpoint">\n                    <div class="boxselector_header">\n                      <i class="fab fa-docker" aria-hidden="true" style="margin-right: 2px;"></i>\n                      Local\n                    </div>\n                    <p>Manage the local Docker environment</p>\n                  </label>\n                </div>\n                <div>\n                  <input type="radio" id="remote_endpoint" ng-model="formValues.EndpointType" value="remote" />\n                  <label for="remote_endpoint">\n                    <div class="boxselector_header">\n                      <i class="fab fa-docker" aria-hidden="true" style="margin-right: 2px;"></i>\n                      Remote\n                    </div>\n                    <p>Manage a remote Docker environment</p>\n                  </label>\n                </div>\n                <div>\n                  <input type="radio" id="agent_endpoint" ng-model="formValues.EndpointType" value="agent" />\n                  <label for="agent_endpoint">\n                    <div class="boxselector_header">\n                      <i class="fa fa-bolt" aria-hidden="true" style="margin-right: 2px;"></i>\n                      Agent\n                    </div>\n                    <p>Connect to a Portainer agent</p>\n                  </label>\n                </div>\n                <div>\n                  <input type="radio" id="azure_endpoint" ng-model="formValues.EndpointType" value="azure" />\n                  <label for="azure_endpoint">\n                    <div class="boxselector_header">\n                      <i class="fab fa-microsoft" aria-hidden="true" style="margin-right: 2px;"></i>\n                      Azure\n                    </div>\n                    <p>Connect to Microsoft Azure ACI</p>\n                  </label>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !endpoint-type  --\x3e\n            \x3c!-- local-endpoint --\x3e\n            <div ng-if="formValues.EndpointType === \'local\'">\n              <div class="col-sm-12 form-section-title">\n                Information\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <span class="small">\n                    <p class="text-primary">\n                      Manage the Docker environment where Portainer is running.\n                    </p>\n                    <p class="text-muted">\n                      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      Ensure that you have started the Portainer container with the following Docker flag:\n                    </p>\n                    <p class="text-muted"> <code>-v "/var/run/docker.sock:/var/run/docker.sock"</code> (Linux). </p>\n                    <p class="text-muted">\n                      or\n                    </p>\n                    <p class="text-muted"> <code>-v \\\\.\\pipe\\docker_engine:\\\\.\\pipe\\docker_engine</code> (Windows). </p>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- actions --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button\n                    type="submit"\n                    class="btn btn-primary btn-sm"\n                    ng-disabled="state.actionInProgress"\n                    ng-click="createLocalEndpoint()"\n                    button-spinner="state.actionInProgress"\n                  >\n                    <span ng-hide="state.actionInProgress"><i class="fa fa-bolt" aria-hidden="true"></i> Connect</span>\n                    <span ng-show="state.actionInProgress">Connecting...</span>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </div>\n            \x3c!-- !local-endpoint --\x3e\n            \x3c!-- agent-endpoint --\x3e\n            <div ng-if="formValues.EndpointType === \'agent\'">\n              <div class="col-sm-12 form-section-title">\n                Information\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <span class="small">\n                    <p class="text-primary">\n                      Connect directly to a Portainer agent running inside a Swarm cluster.\n                    </p>\n                    <p class="text-muted">\n                      <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      If you have started Portainer in the same overlay network as the agent, you can use <code>tasks.AGENT_SERVICE_NAME:AGENT_SERVICE_PORT</code> as the endpoint\n                      URL format.\n                    </p>\n                  </span>\n                </div>\n              </div>\n              <div class="col-sm-12 form-section-title">\n                Environment\n              </div>\n              \x3c!-- name-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_name" class="col-sm-4 col-lg-3 control-label text-left">Name</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_name" ng-model="formValues.Name" placeholder="e.g. docker-prod01" />\n                </div>\n              </div>\n              \x3c!-- !name-input --\x3e\n              \x3c!-- endpoint-url-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_url" class="col-sm-4 col-lg-3 control-label text-left">\n                  Agent URL\n                  <portainer-tooltip position="bottom" message="URL or IP address of a Portainer agent."></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_url" ng-model="formValues.URL" placeholder="e.g. 10.0.0.10:9001 or tasks.portainer_agent:9001" />\n                </div>\n              </div>\n              \x3c!-- !endpoint-url-input --\x3e\n              \x3c!-- actions --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button\n                    type="submit"\n                    class="btn btn-primary btn-sm"\n                    ng-disabled="state.actionInProgress || !formValues.Name || !formValues.URL"\n                    ng-click="createAgentEndpoint()"\n                    button-spinner="state.actionInProgress"\n                  >\n                    <span ng-hide="state.actionInProgress"><i class="fa fa-bolt" aria-hidden="true"></i> Connect</span>\n                    <span ng-show="state.actionInProgress">Connecting...</span>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </div>\n            \x3c!-- !agent-endpoint --\x3e\n            \x3c!-- azure-endpoint --\x3e\n            <div ng-if="formValues.EndpointType === \'azure\'">\n              <div class="col-sm-12 form-section-title">\n                Information\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <span class="small">\n                    <p class="text-muted"> <i class="fa fa-flask orange-icon" aria-hidden="true" style="margin-right: 2px;"></i> This feature is experimental. </p>\n                    <p class="text-primary">\n                      Connect to Microsoft Azure to manage Azure Container Instances (ACI).\n                    </p>\n                    <p class="text-muted">\n                      <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      Have a look at\n                      <a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal" target="_blank"\n                        >the Azure documentation</a\n                      >\n                      to retrieve the credentials required below.\n                    </p>\n                  </span>\n                </div>\n              </div>\n              <div class="col-sm-12 form-section-title">\n                Environment\n              </div>\n              \x3c!-- name-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_name" class="col-sm-4 col-lg-3 control-label text-left">Name</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_name" ng-model="formValues.Name" placeholder="e.g. azure-01" />\n                </div>\n              </div>\n              \x3c!-- !name-input --\x3e\n              <div class="col-sm-12 form-section-title">\n                Azure credentials\n              </div>\n              \x3c!-- applicationId-input --\x3e\n              <div class="form-group">\n                <label for="azure_credential_appid" class="col-sm-4 col-lg-3 control-label text-left">Application ID</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="azure_credential_appid" ng-model="formValues.AzureApplicationId" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" />\n                </div>\n              </div>\n              \x3c!-- !applicationId-input --\x3e\n              \x3c!-- tenantId-input --\x3e\n              <div class="form-group">\n                <label for="azure_credential_tenantid" class="col-sm-4 col-lg-3 control-label text-left">Tenant ID</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="azure_credential_tenantid" ng-model="formValues.AzureTenantId" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" />\n                </div>\n              </div>\n              \x3c!-- !tenantId-input --\x3e\n              \x3c!-- authenticationkey-input --\x3e\n              <div class="form-group">\n                <label for="azure_credential_authkey" class="col-sm-4 col-lg-3 control-label text-left">Authentication key</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input\n                    type="text"\n                    class="form-control"\n                    id="azure_credential_authkey"\n                    ng-model="formValues.AzureAuthenticationKey"\n                    placeholder="cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk="\n                  />\n                </div>\n              </div>\n              \x3c!-- !authenticationkey-input --\x3e\n              \x3c!-- actions --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button\n                    type="submit"\n                    class="btn btn-primary btn-sm"\n                    ng-disabled="state.actionInProgress || !formValues.Name || !formValues.AzureApplicationId || !formValues.AzureTenantId || !formValues.AzureAuthenticationKey"\n                    ng-click="createAzureEndpoint()"\n                    button-spinner="state.actionInProgress"\n                  >\n                    <span ng-hide="state.actionInProgress"><i class="fa fa-bolt" aria-hidden="true"></i> Connect</span>\n                    <span ng-show="state.actionInProgress">Connecting...</span>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </div>\n            \x3c!-- !azure-endpoint --\x3e\n            \x3c!-- remote-endpoint --\x3e\n            <div ng-if="formValues.EndpointType === \'remote\'">\n              <div class="col-sm-12 form-section-title">\n                Information\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <span class="small">\n                    <p class="text-primary">\n                      Connect Portainer to a remote Docker environment using the Docker API over TCP.\n                    </p>\n                    <p class="text-muted">\n                      <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      The Docker API must be exposed over TCP. You can find more information about how to expose the Docker API over TCP\n                      <a href="https://docs.docker.com/engine/security/https/" target="_blank">in the Docker documentation</a>.\n                    </p>\n                  </span>\n                </div>\n              </div>\n              <div class="col-sm-12 form-section-title">\n                Environment\n              </div>\n              \x3c!-- name-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_name" class="col-sm-4 col-lg-3 control-label text-left">Name</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_name" ng-model="formValues.Name" placeholder="e.g. docker-prod01" />\n                </div>\n              </div>\n              \x3c!-- !name-input --\x3e\n              \x3c!-- endpoint-url-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_url" class="col-sm-4 col-lg-3 control-label text-left">\n                  Endpoint URL\n                  <portainer-tooltip position="bottom" message="URL or IP address of a Docker host with API exposed over TCP."></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_url" ng-model="formValues.URL" placeholder="e.g. 10.0.0.10:2375 or mydocker.mydomain.com:2375" />\n                </div>\n              </div>\n              \x3c!-- !endpoint-url-input --\x3e\n              \x3c!-- tls-checkbox --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <label for="tls" class="control-label text-left">\n                    TLS\n                    <portainer-tooltip\n                      position="bottom"\n                      message="Enable this option if you need to specify TLS certificates to connect to the Docker endpoint."\n                    ></portainer-tooltip>\n                  </label>\n                  <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.TLS" /><i></i> </label>\n                </div>\n              </div>\n              \x3c!-- !tls-checkbox --\x3e\n              \x3c!-- tls-options --\x3e\n              <div ng-if="formValues.TLS">\n                \x3c!-- skip-server-verification --\x3e\n                <div class="form-group">\n                  <div class="col-sm-10">\n                    <label for="tls_verify" class="control-label text-left">\n                      Skip server verification\n                      <portainer-tooltip position="bottom" message="Enable this option if you need to authenticate server based on given CA."></portainer-tooltip>\n                    </label>\n                    <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.TLSSkipVerify" /><i></i> </label>\n                  </div>\n                </div>\n                \x3c!-- !skip-server-verification --\x3e\n                \x3c!-- skip-client-verification --\x3e\n                <div class="form-group">\n                  <div class="col-sm-10">\n                    <label for="tls_client_cert" class="control-label text-left">\n                      Skip client verification\n                      <portainer-tooltip position="bottom" message="Enable this option if you need to authenticate with a client certificate."></portainer-tooltip>\n                    </label>\n                    <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.TLSSKipClientVerify" /><i></i> </label>\n                  </div>\n                </div>\n                \x3c!-- !skip-client-verification --\x3e\n                <div class="col-sm-12 form-section-title" ng-if="!formValues.TLSSkipVerify || !formValues.TLSSKipClientVerify">\n                  Required TLS files\n                </div>\n                \x3c!-- ca-input --\x3e\n                <div class="form-group" ng-if="!formValues.TLSSkipVerify">\n                  <label class="col-sm-4 col-lg-3 control-label text-left">TLS CA certificate</label>\n                  <div class="col-sm-8 col-lg-9">\n                    <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCACert">Select file</button>\n                    <span style="margin-left: 5px;">\n                      {{ formValues.TLSCACert.name }}\n                      <i class="fa fa-times red-icon" ng-if="!formValues.TLSCACert" aria-hidden="true"></i>\n                      <i class="fa fa-circle-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                    </span>\n                  </div>\n                </div>\n                \x3c!-- !ca-input --\x3e\n                <div ng-if="!formValues.TLSSKipClientVerify">\n                  \x3c!-- cert-input --\x3e\n                  <div class="form-group">\n                    <label for="tls_cert" class="col-sm-4 col-lg-3 control-label text-left">TLS certificate</label>\n                    <div class="col-sm-8 col-lg-9">\n                      <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCert">Select file</button>\n                      <span style="margin-left: 5px;">\n                        {{ formValues.TLSCert.name }}\n                        <i class="fa fa-times red-icon" ng-if="!formValues.TLSCert" aria-hidden="true"></i>\n                        <i class="fa fa-circle-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                      </span>\n                    </div>\n                  </div>\n                  \x3c!-- !cert-input --\x3e\n                  \x3c!-- key-input --\x3e\n                  <div class="form-group">\n                    <label class="col-sm-4 col-lg-3 control-label text-left">TLS key</label>\n                    <div class="col-sm-8 col-lg-9">\n                      <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSKey">Select file</button>\n                      <span style="margin-left: 5px;">\n                        {{ formValues.TLSKey.name }}\n                        <i class="fa fa-times red-icon" ng-if="!formValues.TLSKey" aria-hidden="true"></i>\n                        <i class="fa fa-circle-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                      </span>\n                    </div>\n                  </div>\n                  \x3c!-- !key-input --\x3e\n                </div>\n              </div>\n              \x3c!-- !tls-options --\x3e\n              \x3c!-- actions --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button\n                    type="submit"\n                    class="btn btn-primary btn-sm"\n                    ng-disabled="state.actionInProgress || !formValues.Name || !formValues.URL || (formValues.TLS && ((formValues.TLSVerify && !formValues.TLSCACert) || (!formValues.TLSSKipClientVerify && (!formValues.TLSCert || !formValues.TLSKey))))"\n                    ng-click="createRemoteEndpoint()"\n                    button-spinner="state.actionInProgress"\n                  >\n                    <span ng-hide="state.actionInProgress"><i class="fa fa-bolt" aria-hidden="true"></i> Connect</span>\n                    <span ng-show="state.actionInProgress">Connecting...</span>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </div>\n            \x3c!-- !remote-endpoint --\x3e\n          </form>\n          \x3c!-- !init-endpoint form --\x3e\n        </div>\n      </div>\n      \x3c!-- !init-endpoint panel --\x3e\n    </div>\n  </div>\n  \x3c!-- !simple box --\x3e\n</div>\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t,n){var a="app/portainer/views/init/admin/initAdmin.html",r='<div class="page-wrapper">\n  \x3c!-- simple box --\x3e\n  <div class="container simple-box">\n    <div class="col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1">\n      \x3c!-- simple box logo --\x3e\n      <div class="row">\n        <img ng-if="logo" ng-src="{{ logo }}" class="simple-box-logo" />\n        <img ng-if="!logo" src="'+n(251)+'" class="simple-box-logo" alt="Portainer" />\n      </div>\n      \x3c!-- !simple box logo --\x3e\n      \x3c!-- init password panel --\x3e\n      <div class="panel panel-default">\n        <div class="panel-body">\n          \x3c!-- init password form --\x3e\n          <form class="simple-box-form form-horizontal">\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  Please create the initial administrator user.\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- username-input --\x3e\n            <div class="form-group">\n              <label for="username" class="col-sm-4 control-label text-left">\n                Username\n              </label>\n              <div class="col-sm-8">\n                <input type="text" class="form-control" id="username" ng-model="formValues.Username" placeholder="e.g. admin" />\n              </div>\n            </div>\n            \x3c!-- !username-input --\x3e\n            \x3c!-- new-password-input --\x3e\n            <div class="form-group">\n              <label for="password" class="col-sm-4 control-label text-left">Password</label>\n              <div class="col-sm-8">\n                <input type="password" class="form-control" ng-model="formValues.Password" id="password" auto-focus />\n              </div>\n            </div>\n            \x3c!-- !new-password-input --\x3e\n            \x3c!-- confirm-password-input --\x3e\n            <div class="form-group">\n              <label for="confirm_password" class="col-sm-4 control-label text-left">Confirm password</label>\n              <div class="col-sm-8">\n                <div class="input-group">\n                  <input type="password" class="form-control" ng-model="formValues.ConfirmPassword" id="confirm_password" />\n                  <span class="input-group-addon"\n                    ><i\n                      ng-class="{ true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\' }[formValues.Password !== \'\' && formValues.Password === formValues.ConfirmPassword]"\n                      aria-hidden="true"\n                    ></i\n                  ></span>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !confirm-password-input --\x3e\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  <i ng-class="{ true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\' }[formValues.Password.length >= 8]" aria-hidden="true"></i>\n                  The password must be at least 8 characters long\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- actions --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button\n                  type="submit"\n                  class="btn btn-primary btn-sm"\n                  ng-disabled="state.actionInProgress || formValues.Password.length < 8 || formValues.Password !== formValues.ConfirmPassword"\n                  ng-click="createAdminUser()"\n                  button-spinner="state.actionInProgress"\n                >\n                  <span ng-hide="state.actionInProgress"><i class="fa fa-user-plus" aria-hidden="true"></i> Create user</span>\n                  <span ng-show="state.actionInProgress">Creating user...</span>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !actions --\x3e\n          </form>\n          \x3c!-- !init password form --\x3e\n        </div>\n      </div>\n      \x3c!-- !init password panel --\x3e\n    </div>\n  </div>\n  \x3c!-- !simple box --\x3e\n</div>\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t){var n="app/portainer/views/extensions/extensions.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Extensions"></rd-header-title>\n  <rd-header-content>Portainer extensions</rd-header-content>\n</rd-header>\n\n<information-panel title-text="Information">\n  <span class="text-muted" style="font-size: 90%;">\n    <p>\n      Portainer CE is a great way of managing clusters, provisioning containers and services and managing container environment lifecycles. To extend the benefit of Portainer CE\n      even more, and to address the needs of larger, complex or critical environments, the Portainer team provides a growing range of low-cost Extensions.\n    </p>\n\n    <p>\n      To ensure that Portainer remains the best choice for managing production container platforms, the Portainer team have chosen a modular, extensible design approach, where\n      additional capability can be added to the Portainer CE core as needed, and at very low cost.\n    </p>\n\n    <p>\n      Available through a simple subscription process from the list below, Portainer Extensions provide a simple way to enhance Portainer CE’s core functionality through\n      incremental capability in important areas.\n    </p>\n\n    <p>\n      For additional information on Portainer Extensions, see our website\n      <a href="https://www.portainer.io/products-services/portainer-extension-software/" target="_blank">here</a>.\n    </p>\n  </span>\n</information-panel>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="extensionEnableForm">\n          <div class="col-sm-12 form-section-title">\n            Enable extension\n          </div>\n\n          <div class="form-group">\n            <div class="col-sm-12">\n              <p class="small text-muted" ng-if="!state.offlineActivation">\n                Portainer will download the latest version of the extension. Ensure that you have a valid license.\n              </p>\n              <p class="small text-muted" ng-if="state.offlineActivation">\n                You will need to upload the extension archive manually. Ensure that you have a valid license.\n              </p>\n              <p class="small text-muted" ng-if="state.offlineActivation">\n                You can download the latest version of our extensions <a target="_blank" href="https://downloads.portainer.io/extensions.zip">here</a>.\n              </p>\n              <p>\n                <a class="small interactive" ng-if="!state.offlineActivation" ng-click="state.offlineActivation = true;">\n                  <i class="fa fa-toggle-off space-right" aria-hidden="true"></i> Switch to offline activation\n                </a>\n                <a class="small interactive" ng-if="state.offlineActivation" ng-click="state.offlineActivation = false;">\n                  <i class="fa fa-wifi space-right" aria-hidden="true"></i> Switch to online activation\n                </a>\n              </p>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <label for="extension_license" class="col-sm-2 control-label text-left">License</label>\n            <div class="col-sm-10">\n              <input\n                type="text"\n                name="extension_license"\n                class="form-control"\n                ng-model="formValues.License"\n                ng-change="isValidLicenseFormat(extensionEnableForm)"\n                required\n                placeholder="Enter a license key here"\n              />\n            </div>\n          </div>\n\n          <div class="form-group" ng-show="extensionEnableForm.extension_license.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="extensionEnableForm.extension_license.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n                <p ng-message="invalidLicense"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Invalid license format.</p>\n              </div>\n            </div>\n          </div>\n\n          <div class="form-group" ng-if="state.offlineActivation">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ngf-select ng-model="formValues.ExtensionFile" style="margin-left: 0px;">Select file</button>\n              <span style="margin-left: 5px;">\n                {{ formValues.ExtensionFile.name }}\n                <i class="fa fa-times red-icon" ng-if="!formValues.ExtensionFile" aria-hidden="true"></i>\n              </span>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-click="enableExtension()"\n                ng-disabled="state.actionInProgress || !extensionEnableForm.$valid || (state.offlineActivation && !formValues.ExtensionFile)"\n                button-spinner="state.actionInProgress"\n                style="margin-left: 0px;"\n              >\n                <span ng-hide="state.actionInProgress" ng-if="!state.updateLicense">Enable extension</span>\n                <span ng-show="state.actionInProgress" ng-if="!state.updateLicense">Enabling extension...</span>\n                <span ng-hide="state.actionInProgress" ng-if="state.updateLicense">Update license</span>\n                <span ng-show="state.actionInProgress" ng-if="state.updateLicense">Updating license...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="extensions && extensions.length > 0">\n  <div class="col-sm-12">\n    <extension-list current-date="state.currentDate" extensions="extensions"></extension-list>\n  </div>\n</div>\n\n<information-panel title-text="Error" ng-if="extensions && extensions.length === 0">\n  <span class="small text-muted">\n    <p>\n      <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true"></i>\n      Portainer must be connected to the Internet to fetch the list of available extensions.\n    </p>\n  </span>\n</information-panel>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/extensions/inspect/extension.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Extension details"></rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.extensions">Portainer extensions</a> &gt; {{ extension.Name }} </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="extension">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div style="display: flex;">\n          <div style="flex-grow: 4; display: flex; flex-direction: column; justify-content: space-between;">\n            <div class="form-group">\n              <div class="text-muted" style="font-size: 150%;"> {{ extension.Name }} extension </div>\n\n              <div class="small text-muted" style="margin-top: 5px;"> By <a href="https://portainer.io" href="_blank">Portainer.io</a> </div>\n            </div>\n\n            <div class="form-group">\n              <div class="text-muted">\n                {{ extension.ShortDescription }}\n              </div>\n            </div>\n          </div>\n\n          <div style="flex-grow: 1; border-left: 1px solid #777;">\n            <div class="form-group" style="margin-left: 40px;">\n              <div style="font-size: 125%; border-bottom: 2px solid #2d3e63; padding-bottom: 5px;">\n                <span ng-if="extension.Enabled">Enabled</span>\n                <span ng-if="!extension.Enabled && extension.License.Expiration && !extension.License.Valid">Expired</span>\n                <span ng-if="!extension.Enabled && !extension.License.Expiration">{{ extension.Price }}</span>\n              </div>\n\n              <div class="small text-muted col-sm-12" style="margin: 15px 0 15px 0;" ng-if="!extension.Enabled">\n                {{ extension.PriceDescription }}\n              </div>\n\n              <div style="margin-top: 10px; margin-bottom: 95px;" ng-if="!extension.Enabled && extension.Available">\n                <label for="instances_qty" class="col-sm-7 control-label text-left" style="margin-top: 7px;">Instances</label>\n                <div class="col-sm-5">\n                  <input type="number" class="form-control" ng-model="formValues.instances" id="instances_qty" placeholder="1" min="1" />\n                </div>\n              </div>\n\n              <div style="margin-top: 15px;" ng-if="!extension.Enabled && extension.Available">\n                <a href="{{ extension.ShopURL }}&quantity={{ formValues.instances }}" target="_blank" class="btn btn-primary btn-sm" style="width: 100%; margin-left: 0;">\n                  Buy\n                </a>\n              </div>\n\n              <div style="margin-top: 10px;" ng-if="!extension.Enabled && extension.Available">\n                <a ui-sref="portainer.extensions" class="btn btn-primary btn-sm" style="width: 100%; margin-left: 0;">\n                  Add license key\n                </a>\n              </div>\n\n              <div style="margin-top: 15px;" ng-if="!extension.Enabled && !extension.Available">\n                <btn class="btn btn-primary btn-sm" style="width: 100%; margin-left: 0;" disabled>Coming soon</btn>\n              </div>\n\n              <div style="margin-top: 15px;" ng-if="extension.Enabled && extension.UpdateAvailable && !state.offlineUpdate">\n                <button\n                  type="button"\n                  class="btn btn-primary btn-sm"\n                  ng-click="updateExtensionOnline(extension)"\n                  ng-disabled="state.onlineUpdateInProgress"\n                  button-spinner="state.onlineUpdateInProgress"\n                  style="width: 100%; margin-left: 0;"\n                >\n                  <span ng-hide="state.onlineUpdateInProgress">Update via Internet</span>\n                  <span ng-show="state.onlineUpdateInProgress">Updating extension...</span>\n                </button>\n              </div>\n\n              <div style="margin-top: 5px;" ng-if="extension.Enabled">\n                <button\n                  type="button"\n                  class="btn btn-danger btn-sm"\n                  ng-click="deleteExtension(extension)"\n                  ng-disabled="state.deleteInProgress"\n                  button-spinner="state.deleteInProgress"\n                  style="width: 100%; margin-left: 0;"\n                >\n                  <span ng-hide="state.deleteInProgress">Delete</span>\n                  <span ng-show="state.deleteInProgress">Deleting extension...</span>\n                </button>\n              </div>\n\n              <div style="margin-top: 15px;" ng-if="extension.Enabled && extension.UpdateAvailable">\n                <p>\n                  <a class="small interactive" ng-if="!state.offlineUpdate" ng-click="state.offlineUpdate = true;">\n                    <i class="fa fa-toggle-off space-right" aria-hidden="true"></i> Switch to offline update\n                  </a>\n                  <a class="small interactive" ng-if="state.offlineUpdate" ng-click="state.offlineUpdate = false;">\n                    <i class="fa fa-wifi space-right" aria-hidden="true"></i> Switch to online update\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="extension && state.offlineUpdate">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            <span>\n              Offline update\n            </span>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <p class="small text-muted" ng-if="state.offlineUpdate">\n                You will need to upload the extension archive manually. You can download the latest version of our extensions\n                <a target="_blank" href="https://download.portainer.io/extensions.zip">here</a>.\n              </p>\n            </div>\n          </div>\n          <div class="form-group" ng-if="state.offlineUpdate">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ngf-select ng-model="formValues.ExtensionFile" style="margin-left: 0px;">Select file</button>\n              <span style="margin-left: 5px;">\n                {{ formValues.ExtensionFile.name }}\n                <i class="fa fa-times red-icon" ng-if="!formValues.ExtensionFile" aria-hidden="true"></i>\n              </span>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-click="updateExtensionOffline(extension)"\n                ng-disabled="state.offlineUpdateInProgress || !formValues.ExtensionFile"\n                button-spinner="state.offlineUpdateInProgress"\n                style="margin-left: 0px;"\n              >\n                <span ng-hide="state.offlineUpdateInProgress">Update extension</span>\n                <span ng-show="state.offlineUpdateInProgress">Updating extension...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="extension">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="col-sm-12 form-section-title">\n          <span>\n            Description\n          </span>\n        </div>\n        <div class="form-group" ng-if="extension.Description">\n          <div class="text-muted" style="font-size: 90%;" ng-bind-html="extension.Description"></div>\n        </div>\n        <div class="form-group" ng-if="!extension.Description">\n          <div class="small text-muted">\n            <p>\n              <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true"></i>\n              Unable to provide a description in an offline environment.\n            </p>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="extension.Description && extension.Images">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="col-sm-12 form-section-title">\n          <span>\n            Screenshots\n          </span>\n        </div>\n        <div style="text-align: center;">\n          <div ng-repeat="image in extension.Images" style="margin-top: 25px; cursor: zoom-in;">\n            <img ng-src="{{ image }}" ng-click="enlargeImage(image)" style="max-width: 1024px;" />\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/registries/registries.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Registries">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.registries" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Registry management</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="dockerhub && (!applicationState.application.authentication || isAdmin)">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-database" title-text="DockerHub"> </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- note --\x3e\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              The DockerHub registry can be used by any user. You can specify the credentials that will be used to push &amp; pull images here.\n            </span>\n          </div>\n          \x3c!-- !note --\x3e\n          \x3c!-- authentication-checkbox --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="registry_auth" class="control-label text-left">\n                Authentication\n                <portainer-tooltip position="bottom" message="Enable this option if you need to specify credentials to connect to push/pull private images."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="dockerhub.Authentication" /><i></i> </label>\n            </div>\n          </div>\n          \x3c!-- !authentication-checkbox --\x3e\n          \x3c!-- authentication-credentials --\x3e\n          <div ng-if="dockerhub.Authentication">\n            \x3c!-- credentials-user --\x3e\n            <div class="form-group">\n              <label for="hub_username" class="col-sm-3 col-lg-2 control-label text-left">Username</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="hub_username" ng-model="dockerhub.Username" />\n              </div>\n            </div>\n            \x3c!-- !credentials-user --\x3e\n            \x3c!-- credentials-password --\x3e\n            <div class="form-group">\n              <label for="hub_password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="hub_password" ng-model="formValues.dockerHubPassword" placeholder="*******" />\n              </div>\n            </div>\n            \x3c!-- !credentials-password --\x3e\n          </div>\n          \x3c!-- !authentication-credentials --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || dockerhub.Authentication && (!dockerhub.Username || !formValues.dockerHubPassword)"\n                ng-click="updateDockerHub()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Update</span>\n                <span ng-show="state.actionInProgress">Updating DockerHub settings...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <registries-datatable\n      title-text="Registries"\n      title-icon="fa-database"\n      dataset="registries"\n      table-key="registries"\n      order-by="Name"\n      access-management="!applicationState.application.authentication || isAdmin"\n      remove-action="removeAction"\n      registry-management="registryManagementAvailable"\n      can-browse="canBrowse"\n    ></registries-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/registries/edit/registry.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Registry details"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">Registries</a> &gt; <a ui-sref="portainer.registries.registry({id: registry.Id})">{{ registry.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="registry_name" class="col-sm-3 col-lg-2 control-label text-left">Name</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="registry_name" ng-model="registry.Name" placeholder="e.g. my-registry" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- registry-url-input --\x3e\n          <div class="form-group">\n            <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n              Registry URL\n              <portainer-tooltip position="bottom" message="URL or IP address of a Docker registry."></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="registry_url" ng-model="registry.URL" placeholder="e.g. 10.0.0.10:5000 or myregistry.domain.tld" />\n            </div>\n          </div>\n          \x3c!-- !registry-url-input --\x3e\n          \x3c!-- authentication-checkbox --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="registry_auth" class="control-label text-left">\n                Authentication\n                <portainer-tooltip position="bottom" message="Enable this option if you need to specify credentials to connect to this registry."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="registry.Authentication" /><i></i> </label>\n            </div>\n          </div>\n          \x3c!-- !authentication-checkbox --\x3e\n          \x3c!-- authentication-credentials --\x3e\n          <div ng-if="registry.Authentication">\n            \x3c!-- credentials-user --\x3e\n            <div class="form-group">\n              <label for="credentials_username" class="col-sm-3 col-lg-2 control-label text-left">Username</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="credentials_username" ng-model="registry.Username" />\n              </div>\n            </div>\n            \x3c!-- !credentials-user --\x3e\n            \x3c!-- credentials-password --\x3e\n            <div class="form-group">\n              <label for="credentials_password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="credentials_password" ng-model="formValues.Password" placeholder="*******" />\n              </div>\n            </div>\n            \x3c!-- !credentials-password --\x3e\n          </div>\n          \x3c!-- !authentication-credentials --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !registry.Name || !registry.URL"\n                ng-click="updateRegistry()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Update registry</span>\n                <span ng-show="state.actionInProgress">Updating registry...</span>\n              </button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="portainer.registries">Cancel</a>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/registries/create/createregistry.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create registry"></rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.registries">Registries</a> &gt; Add registry </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            Registry provider\n          </div>\n\n          <div class="form-group"></div>\n\n          <div class="form-group" style="margin-bottom: 0;">\n            <div class="boxselector_wrapper">\n              <div>\n                <input type="radio" id="registry_quay" ng-model="model.Type" ng-value="RegistryTypes.QUAY" />\n                <label for="registry_quay" ng-click="selectQuayRegistry()">\n                  <div class="boxselector_header">\n                    <i class="fa fa-database" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Quay.io\n                  </div>\n                  <p>Quay container registry</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="registry_azure" ng-model="model.Type" ng-value="RegistryTypes.AZURE" />\n                <label for="registry_azure" ng-click="selectAzureRegistry()">\n                  <div class="boxselector_header">\n                    <i class="fab fa-microsoft" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Azure\n                  </div>\n                  <p>Azure container registry</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="registry_gitlab" ng-model="model.Type" ng-value="RegistryTypes.GITLAB" />\n                <label for="registry_gitlab" ng-click="selectGitlabRegistry()">\n                  <div class="boxselector_header">\n                    <i class="fab fa-gitlab" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Gitlab\n                  </div>\n                  <p>Gitlab container registry</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="registry_custom" ng-model="model.Type" ng-value="RegistryTypes.CUSTOM" />\n                <label for="registry_custom" ng-click="selectCustomRegistry()">\n                  <div class="boxselector_header">\n                    <i class="fa fa-database" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Custom registry\n                  </div>\n                  <p>Define your own registry</p>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <registry-form-quay\n            ng-if="model.Type === RegistryTypes.QUAY"\n            model="model"\n            form-action="create"\n            form-action-label="Add registry"\n            action-in-progress="state.actionInProgress"\n          ></registry-form-quay>\n\n          <registry-form-azure\n            ng-if="model.Type === RegistryTypes.AZURE"\n            model="model"\n            form-action="create"\n            form-action-label="Add registry"\n            action-in-progress="state.actionInProgress"\n          ></registry-form-azure>\n\n          <registry-form-custom\n            ng-if="model.Type === RegistryTypes.CUSTOM"\n            model="model"\n            form-action="create"\n            form-action-label="Add registry"\n            action-in-progress="state.actionInProgress"\n          ></registry-form-custom>\n\n          <registry-form-gitlab\n            ng-if="model.Type === RegistryTypes.GITLAB"\n            model="model"\n            retrieve-registries="retrieveGitlabRegistries"\n            create-registries="createGitlabRegistries"\n            projects="gitlabProjects"\n            state="state"\n            action-in-progress="state.actionInProgress"\n            reset-defaults="useDefaultGitlabConfiguration"\n          ></registry-form-gitlab>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/registries/access/registryAccess.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Registry access"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">Registries</a> &gt; <a ui-sref="portainer.registries.registry({id: registry.Id})">{{ registry.Name }}</a> &gt; Access management\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="registry">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plug" title-text="Registry"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>\n                {{ registry.Name }}\n              </td>\n            </tr>\n            <tr>\n              <td>URL</td>\n              <td>\n                {{ registry.URL }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<por-access-management ng-if="registry" access-controlled-entity="registry" entity-type="registry" action-in-progress="state.actionInProgress" update-access="updateAccess">\n</por-access-management>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/schedules/schedules.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Schedules list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.schedules" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Schedules</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <schedules-datatable title-text="Schedules" title-icon="fa-clock" dataset="schedules" table-key="schedules" order-by="Name" remove-action="removeAction"></schedules-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/schedules/edit/schedule.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Schedule details">\n    <a data-toggle="tooltip" title-text="Refresh" ui-sref="portainer.schedules.schedule({id: schedule.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.schedules">Schedules</a> &gt; {{ ::schedule.Name }} </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <uib-tabset active="state.activeTab">\n          <uib-tab index="0">\n            <uib-tab-heading> <i class="fa fa-wrench" aria-hidden="true"></i> Configuration </uib-tab-heading>\n\n            <schedule-form\n              ng-if="schedule"\n              model="schedule"\n              endpoints="endpoints"\n              groups="groups"\n              tags="tags"\n              form-action="update"\n              form-action-label="Update schedule"\n              action-in-progress="state.actionInProgress"\n            ></schedule-form>\n          </uib-tab>\n\n          <uib-tab index="1">\n            <uib-tab-heading> <i class="fa fa-tasks" aria-hidden="true"></i> Tasks </uib-tab-heading>\n\n            <div class="col-sm-12 form-section-title">\n              Information\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                Tasks are retrieved across all endpoints via snapshots. Data available in this view might not be up-to-date.\n              </span>\n            </div>\n\n            <div class="col-sm-12 form-section-title" style="margin-bottom: 20px;">\n              Tasks\n            </div>\n            <schedule-tasks-datatable\n              ng-if="tasks"\n              title-text="Tasks"\n              title-icon="fa-tasks"\n              dataset="tasks"\n              table-key="schedule-tasks"\n              order-by="Status"\n              reverse-order="true"\n              go-to-container-logs="goToContainerLogs"\n              get-edge-task-logs="getEdgeTaskLogs"\n            ></schedule-tasks-datatable>\n          </uib-tab>\n        </uib-tabset>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/schedules/create/createschedule.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create schedule"></rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.schedules">Schedules</a> &gt; Add schedule </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <schedule-form\n          model="model"\n          endpoints="endpoints"\n          groups="groups"\n          tags="tags"\n          form-action="create"\n          form-action-label="Create schedule"\n          action-in-progress="state.actionInProgress"\n        ></schedule-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/settings/settings.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Settings"></rd-header-title>\n  <rd-header-content>Settings</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title-text="Application settings"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- snapshot-interval --\x3e\n          <div class="form-group">\n            <label for="snapshot_interval" class="col-sm-2 control-label text-left">Snapshot interval</label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" ng-model="settings.SnapshotInterval" id="snapshot_interval" placeholder="e.g. 15m" />\n            </div>\n          </div>\n          \x3c!-- !snapshot-interval --\x3e\n          \x3c!-- logo --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_logo" class="control-label text-left">\n                Use custom logo\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="toggle_logo" ng-model="formValues.customLogo" /><i></i> </label>\n            </div>\n          </div>\n          <div ng-if="formValues.customLogo">\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                You can specify the URL to your logo here. For an optimal display, logo dimensions should be 155px by 55px.\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="logo_url" class="col-sm-1 control-label text-left">\n                URL\n              </label>\n              <div class="col-sm-11">\n                <input type="text" class="form-control" ng-model="settings.LogoURL" id="logo_url" placeholder="https://mycompany.com/logo.png" />\n              </div>\n            </div>\n          </div>\n          \x3c!-- !logo --\x3e\n          \x3c!-- templates --\x3e\n          <div class="col-sm-12 form-section-title">\n            App Templates\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_templates" class="control-label text-left">\n                Use external templates\n                <portainer-tooltip position="bottom" message="When using external templates, in-app template management will be disabled."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="toggle_templates" ng-model="formValues.externalTemplates" /><i></i> </label>\n            </div>\n          </div>\n          <div ng-if="formValues.externalTemplates">\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                You can specify the URL to your own template definitions file here. See\n                <a href="https://portainer.readthedocs.io/en/stable/templates.html" target="_blank">Portainer documentation</a> for more details.\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="templates_url" class="col-sm-1 control-label text-left">\n                URL\n              </label>\n              <div class="col-sm-11">\n                <input type="text" class="form-control" ng-model="settings.TemplatesURL" id="templates_url" placeholder="https://myserver.mydomain/templates.json" />\n              </div>\n            </div>\n          </div>\n          \x3c!-- !templates --\x3e\n          \x3c!-- security --\x3e\n          <div class="col-sm-12 form-section-title">\n            Security\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_allowbindmounts" class="control-label text-left">\n                Disable bind mounts for non-administrators\n                <portainer-tooltip position="bottom" message="When enabled, regular users will not be able to use bind mounts when creating containers."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="toggle_allowbindmounts" ng-model="formValues.restrictBindMounts" /><i></i> </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_allowbindmounts" class="control-label text-left">\n                Disable privileged mode for non-administrators\n                <portainer-tooltip position="bottom" message="When enabled, regular users will not be able to use privileged mode when creating containers."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="toggle_allowbindmounts" ng-model="formValues.restrictPrivilegedMode" /><i></i> </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_allowvolumebrowser" class="control-label text-left">\n                Enable volume management for non-administrators\n                <portainer-tooltip\n                  position="bottom"\n                  message="When enabled, non-admin users & users with helpdesk, standard and read-only roles from the RBAC extension will be able to use Portainer volume management features."\n                ></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="toggle_allowvolumebrowser" ng-model="formValues.enableVolumeBrowser" /><i></i> </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_enableHostManagementFeatures" class="control-label text-left">\n                Enable host management features\n                <portainer-tooltip\n                  position="bottom"\n                  message="Enables host management features: host scheduler, host browsing and command execution. You\'ll need to set the CAP_HOST_MANAGEMENT variable when deploying the Portainer agent to use some of these features."\n                ></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_enableHostManagementFeatures" ng-model="formValues.enableHostManagementFeatures" /><i></i>\n              </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_disableStackManagementForRegularUsers" class="control-label text-left">\n                Disable the use of Stacks for non-administrators\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_disableStackManagementForRegularUsers" ng-model="formValues.disableStackManagementForRegularUsers" /><i></i>\n              </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_allowHostNamespaceForRegularUsers" class="control-label text-left">\n                Disable the use of host PID 1 for non-administrators\n                <portainer-tooltip position="bottom" message="Prevent users from accessing the host filesystem through the host PID namespace."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_allowHostNamespaceForRegularUsers" ng-model="formValues.restrictHostNamespaceForRegularUsers" /><i></i>\n              </label>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_disableDeviceMappingForRegularUsers" class="control-label text-left">\n                Disable device mappings for non-administrators\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_disableDeviceMappingForRegularUsers" ng-model="formValues.disableDeviceMappingForRegularUsers" /><i></i>\n              </label>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_disableContainerCapabilitiesForRegularUsers" class="control-label text-left">\n                Disable container capabilities for non-administrators\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_disableContainerCapabilitiesForRegularUsers" ng-model="formValues.disableContainerCapabilitiesForRegularUsers" /><i></i>\n              </label>\n            </div>\n          </div>\n\n          <div class="form-group" ng-if="isContainerEditDisabled()">\n            <span class="col-sm-12 text-muted small">\n              Note: The recreate/duplicate/edit feature is currently disabled (for non-admin users) by one or more security settings.\n            </span>\n          </div>\n          \x3c!-- !security --\x3e\n          \x3c!-- edge --\x3e\n          <div class="col-sm-12 form-section-title">\n            Edge Compute\n          </div>\n          <div class="form-group">\n            <label for="edge_checkin" class="col-sm-2 control-label text-left">\n              Edge agent poll frequency\n              <portainer-tooltip position="bottom" message="Specify the interval used by each Edge agent to checkin with the Portainer instance"></portainer-tooltip>\n            </label>\n            <div class="col-sm-10">\n              <select\n                id="edge_checkin"\n                class="form-control"\n                ng-model="settings.EdgeAgentCheckinInterval"\n                ng-options="+(opt.value) as opt.key for opt in state.availableEdgeAgentCheckinOptions"\n              ></select>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_enableEdgeComputeFeatures" class="control-label text-left">\n                Enable edge compute features\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_enableEdgeComputeFeatures" ng-model="formValues.enableEdgeComputeFeatures" /><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !edge --\x3e\n          \x3c!-- actions --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-click="saveApplicationSettings()"\n                ng-disabled="state.actionInProgress"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Save settings</span>\n                <span ng-show="state.actionInProgress">Saving...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tags" title-text="Hidden containers"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" ng-submit="addFilteredContainerLabel()" name="addTagForm">\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              You can hide containers with specific labels from Portainer UI. You need to specify the label name and value.\n            </span>\n          </div>\n          <div class="form-group">\n            <label for="header_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11 col-md-4">\n              <input type="text" required class="form-control" id="header_name" name="label_name" ng-model="formValues.labelName" placeholder="e.g. com.example.foo" />\n            </div>\n            <label for="header_value" class="col-sm-1 margin-sm-top control-label text-left">Value</label>\n            <div class="col-sm-11 col-md-4 margin-sm-top">\n              <input type="text" class="form-control" id="header_value" ng-model="formValues.labelValue" placeholder="e.g. bar" />\n            </div>\n            <div class="col-sm-12 col-md-2 margin-sm-top">\n              <button type="submit" class="btn btn-primary btn-sm" ng-disabled="!formValues.labelName"><i class="fa fa-plus space-right" aria-hidden="true"></i>Add filter</button>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12 table-responsive">\n              <table class="table table-hover">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Value</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr ng-repeat="label in settings.BlackListedLabels">\n                    <td>{{ label.name }}</td>\n                    <td>{{ label.value }}</td>\n                    <td\n                      ><button type="button" class="btn btn-danger btn-xs" ng-click="removeFilteredContainerLabel($index)"\n                        ><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove</button\n                      ></td\n                    >\n                  </tr>\n                  <tr ng-if="settings.BlackListedLabels.length === 0">\n                    <td colspan="3" class="text-center text-muted">No filter available.</td>\n                  </tr>\n                  <tr ng-if="!settings.BlackListedLabels">\n                    <td colspan="3" class="text-center text-muted">Loading...</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          \x3c!-- !filtered-labels --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/settings/authentication/settingsAuthentication.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Authentication settings"></rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.settings">Settings</a> &gt; Authentication </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-users" title-text="Authentication"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            Authentication method\n          </div>\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0;">\n            <div class="boxselector_wrapper">\n              <div>\n                <input type="radio" id="registry_quay" ng-model="settings.AuthenticationMethod" ng-value="1" />\n                <label for="registry_quay">\n                  <div class="boxselector_header">\n                    <i class="fa fa-users" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Internal\n                  </div>\n                  <p>Internal authentication mechanism</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="registry_custom" ng-model="settings.AuthenticationMethod" ng-value="2" />\n                <label for="registry_custom">\n                  <div class="boxselector_header">\n                    <i class="fa fa-users" aria-hidden="true" style="margin-right: 2px;"></i>\n                    LDAP\n                  </div>\n                  <p>LDAP authentication</p>\n                </label>\n              </div>\n              <div ng-if="oauthAuthenticationAvailable">\n                <input type="radio" id="registry_auth" ng-model="settings.AuthenticationMethod" ng-value="3" />\n                <label for="registry_auth">\n                  <div class="boxselector_header">\n                    <i class="fa fa-users" aria-hidden="true" style="margin-right: 2px;"></i>\n                    OAuth\n                  </div>\n                  <p>OAuth authentication</p>\n                </label>\n              </div>\n              <div style="color: #767676;" ng-click="goToOAuthExtensionView()" ng-if="!oauthAuthenticationAvailable">\n                <input type="radio" id="registry_auth" ng-model="settings.AuthenticationMethod" ng-value="3" disabled />\n                <label\n                  for="registry_auth"\n                  tooltip-append-to-body="true"\n                  tooltip-placement="bottom"\n                  tooltip-class="portainer-tooltip"\n                  uib-tooltip="Feature available via an extension"\n                  style="cursor: pointer; border-color: #767676;"\n                >\n                  <div class="boxselector_header">\n                    <i class="fa fa-users" aria-hidden="true" style="margin-right: 2px;"></i>\n                    OAuth (extension)\n                  </div>\n                  <p>OAuth authentication</p>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <div ng-if="settings.AuthenticationMethod === 1">\n            <div class="col-sm-12 form-section-title">\n              Information\n            </div>\n            <div class="form-group col-sm-12 text-muted small">\n              When using internal authentication, Portainer will encrypt user passwords and store credentials locally.\n            </div>\n          </div>\n\n          <div ng-if="settings.AuthenticationMethod === 2">\n            <div>\n              <div class="col-sm-12 form-section-title">\n                Information\n              </div>\n              <div class="form-group col-sm-12 text-muted small">\n                When using LDAP authentication, Portainer will delegate user authentication to a LDAP server and fallback to internal authentication if LDAP authentication fails.\n              </div>\n            </div>\n\n            <div class="col-sm-12 form-section-title">\n              LDAP configuration\n            </div>\n\n            <div class="form-group">\n              <label for="ldap_url" class="col-sm-3 col-lg-2 control-label text-left">\n                LDAP Server\n                <portainer-tooltip position="bottom" message="URL or IP address of the LDAP server."></portainer-tooltip>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="ldap_url" ng-model="formValues.LDAPSettings.URL" placeholder="e.g. 10.0.0.10:389 or myldap.domain.tld:389" />\n              </div>\n            </div>\n\n            \x3c!-- Anonymous mode--\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="anonymous_mode" class="control-label text-left">\n                  Anonymous mode\n                  <portainer-tooltip position="bottom" message="Enable this option if the server is configured for Anonymous access."></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" id="anonymous_mode" ng-model="formValues.LDAPSettings.AnonymousMode" /><i></i> </label>\n              </div>\n            </div>\n            \x3c!-- !Anonymous mode--\x3e\n\n            <div ng-if="!formValues.LDAPSettings.AnonymousMode">\n              <div class="form-group">\n                <label for="ldap_username" class="col-sm-3 col-lg-2 control-label text-left">\n                  Reader DN\n                  <portainer-tooltip position="bottom" message="Account that will be used to search for users."></portainer-tooltip>\n                </label>\n                <div class="col-sm-9 col-lg-10">\n                  <input\n                    type="text"\n                    class="form-control"\n                    id="ldap_username"\n                    ng-model="formValues.LDAPSettings.ReaderDN"\n                    placeholder="cn=readonly-account,dc=ldap,dc=domain,dc=tld"\n                  />\n                </div>\n              </div>\n\n              <div class="form-group">\n                <label for="ldap_password" class="col-sm-3 col-lg-2 control-label text-left">\n                  Password\n                  <portainer-tooltip position="bottom" message="If you do not enter a password, Portainer will leave the current password unchanged."></portainer-tooltip>\n                </label>\n                <div class="col-sm-9 col-lg-10">\n                  <input type="password" class="form-control" id="ldap_password" ng-model="formValues.LDAPSettings.Password" placeholder="password" />\n                </div>\n              </div>\n            </div>\n\n            <div class="form-group" ng-if="!formValues.LDAPSettings.TLSConfig.TLS && !formValues.LDAPSettings.StartTLS">\n              <label for="ldap_password" class="col-sm-3 col-lg-2 control-label text-left">\n                Connectivity check\n                <i class="fa fa-check green-icon" style="margin-left: 5px;" ng-if="state.successfulConnectivityCheck"></i>\n                <i class="fa fa-times red-icon" style="margin-left: 5px;" ng-if="state.failedConnectivityCheck"></i>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <button\n                  type="button"\n                  class="btn btn-primary btn-sm"\n                  ng-disabled="(state.connectivityCheckInProgress) || (!formValues.LDAPSettings.URL) || ((!formValues.LDAPSettings.ReaderDN || !formValues.LDAPSettings.Password) && !formValues.LDAPSettings.AnonymousMode)"\n                  ng-click="LDAPConnectivityCheck()"\n                  button-spinner="state.connectivityCheckInProgress"\n                >\n                  <span ng-hide="state.connectivityCheckInProgress">Test connectivity</span>\n                  <span ng-show="state.connectivityCheckInProgress">Testing connectivity...</span>\n                </button>\n              </div>\n            </div>\n\n            <div class="col-sm-12 form-section-title">\n              LDAP security\n            </div>\n\n            \x3c!-- starttls --\x3e\n            <div class="form-group" ng-if="!formValues.LDAPSettings.TLSConfig.TLS">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  Use StartTLS\n                  <portainer-tooltip\n                    position="bottom"\n                    message="Enable this option if want to use StartTLS to secure the connection to the server. Ignored if Use TLS is selected."\n                  ></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.LDAPSettings.StartTLS" /><i></i> </label>\n              </div>\n            </div>\n            \x3c!-- !starttls --\x3e\n\n            \x3c!-- tls-checkbox --\x3e\n            <div class="form-group" ng-if="!formValues.LDAPSettings.StartTLS">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  Use TLS\n                  <portainer-tooltip position="bottom" message="Enable this option if you need to specify TLS certificates to connect to the LDAP server."></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.LDAPSettings.TLSConfig.TLS" /><i></i> </label>\n              </div>\n            </div>\n            \x3c!-- !tls-checkbox --\x3e\n\n            \x3c!-- tls-skip-verify --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  Skip verification of server certificate\n                  <portainer-tooltip position="bottom" message="Skip the verification of the server TLS certificate. Not recommended on unsecured networks."></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.LDAPSettings.TLSConfig.TLSSkipVerify" /><i></i> </label>\n              </div>\n            </div>\n            \x3c!-- !tls-skip-verify --\x3e\n\n            \x3c!-- tls-certs --\x3e\n            <div ng-if="formValues.LDAPSettings.TLSConfig.TLS || formValues.LDAPSettings.StartTLS">\n              \x3c!-- ca-input --\x3e\n              <div class="form-group" ng-if="!formValues.LDAPSettings.TLSConfig.TLSSkipVerify">\n                <label class="col-sm-2 control-label text-left">TLS CA certificate</label>\n                <div class="col-sm-10">\n                  <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCACert">Select file</button>\n                  <span style="margin-left: 5px;">\n                    {{ formValues.TLSCACert.name }}\n                    <i class="fa fa-check green-icon" ng-if="formValues.TLSCACert && formValues.TLSCACert === formValues.LDAPSettings.TLSConfig.TLSCACert" aria-hidden="true"></i>\n                    <i class="fa fa-times red-icon" ng-if="!formValues.TLSCACert" aria-hidden="true"></i>\n                    <i class="fa fa-circle-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !ca-input --\x3e\n            </div>\n            \x3c!-- !tls-certs --\x3e\n\n            <div class="form-group" ng-if="formValues.LDAPSettings.TLSConfig.TLS || formValues.LDAPSettings.StartTLS">\n              <label for="ldap_password" class="col-sm-3 col-lg-2 control-label text-left">\n                Connectivity check\n                <i class="fa fa-check green-icon" style="margin-left: 5px;" ng-if="state.successfulConnectivityCheck"></i>\n                <i class="fa fa-times red-icon" style="margin-left: 5px;" ng-if="state.failedConnectivityCheck"></i>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <button\n                  type="button"\n                  class="btn btn-primary btn-sm"\n                  ng-click="LDAPConnectivityCheck()"\n                  ng-disabled="(!formValues.LDAPSettings.URL) || (!formValues.TLSCACert && !formValues.LDAPSettings.TLSConfig.TLSSkipVerify) || ((!formValues.LDAPSettings.ReaderDN || !formValues.LDAPSettings.Password) && !formValues.LDAPSettings.AnonymousMode)"\n                  >Test connectivity</button\n                >\n                <i id="connectivityCheckSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              </div>\n            </div>\n\n            <div class="col-sm-12 form-section-title">\n              Automatic user provisioning\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                With automatic user provisioning enabled, Portainer will create user(s) automatically with standard user role and assign them to team(s) which matches to LDAP group\n                name(s). If disabled, users must be created in Portainer beforehand.\n              </span>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  Automatic user provisioning\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.LDAPSettings.AutoCreateUsers" /><i></i> </label>\n              </div>\n            </div>\n\n            <div class="col-sm-12 form-section-title">\n              User search configurations\n            </div>\n\n            \x3c!-- search-settings --\x3e\n            <div ng-repeat="config in formValues.LDAPSettings.SearchSettings | limitTo: (1 - formValues.LDAPSettings.SearchSettings)" style="margin-top: 5px;">\n              <div class="form-group" ng-if="$index > 0">\n                <span class="col-sm-12 text-muted small">\n                  Extra search configuration\n                </span>\n              </div>\n\n              <div class="form-group">\n                <label for="ldap_basedn_{{ $index }}" class="col-sm-4 col-md-2 control-label text-left">\n                  Base DN\n                  <portainer-tooltip position="bottom" message="The distinguished name of the element from which the LDAP server will search for users."></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-md-4">\n                  <input type="text" class="form-control" id="ldap_basedn_{{ $index }}" ng-model="config.BaseDN" placeholder="dc=ldap,dc=domain,dc=tld" />\n                </div>\n\n                <label for="ldap_username_att_{{ $index }}" class="col-sm-4 col-md-3 col-lg-2 margin-sm-top control-label text-left">\n                  Username attribute\n                  <portainer-tooltip position="bottom" message="LDAP attribute which denotes the username."></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-md-3 col-lg-4 margin-sm-top">\n                  <input type="text" class="form-control" id="ldap_username_att_{{ $index }}" ng-model="config.UserNameAttribute" placeholder="uid" />\n                </div>\n              </div>\n              <div class="form-group">\n                <label for="ldap_filter_{{ $index }}" class="col-sm-4 col-md-2 control-label text-left">\n                  Filter\n                  <portainer-tooltip position="bottom" message="The LDAP search filter used to select user elements, optional."></portainer-tooltip>\n                </label>\n                <div class="col-sm-7 col-md-9">\n                  <input type="text" class="form-control" id="ldap_filter_{{ $index }}" ng-model="config.Filter" placeholder="(objectClass=account)" />\n                </div>\n                <div class="col-sm-1" ng-if="$index > 0">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeSearchConfiguration($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n\n              <div class="form-group">\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addSearchConfiguration()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> add user search configuration\n                </span>\n              </div>\n            </div>\n            \x3c!-- !search-settings --\x3e\n\n            <div class="col-sm-12 form-section-title">\n              Group search configurations\n            </div>\n\n            \x3c!-- group-search-settings --\x3e\n            <div ng-repeat="groupConfig in formValues.LDAPSettings.GroupSearchSettings | limitTo: (1 - formValues.LDAPSettings.GroupSearchSettings)" style="margin-top: 5px;">\n              <div class="form-group" ng-if="$index > 0">\n                <span class="col-sm-12 text-muted small">\n                  Extra search configuration\n                </span>\n              </div>\n\n              <div class="form-group">\n                <label for="ldap_group_basedn_{{ $index }}" class="col-sm-4 col-md-2 control-label text-left">\n                  Group Base DN\n                  <portainer-tooltip position="bottom" message="The distinguished name of the element from which the LDAP server will search for groups."></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-md-4">\n                  <input type="text" class="form-control" id="ldap_group_basedn_{{ $index }}" ng-model="groupConfig.GroupBaseDN" placeholder="dc=ldap,dc=domain,dc=tld" />\n                </div>\n\n                <label for="ldap_group_att_{{ $index }}" class="col-sm-4 col-md-3 col-lg-2 margin-sm-top control-label text-left">\n                  Group Membership Attribute\n                  <portainer-tooltip position="bottom" message="LDAP attribute which denotes the group membership."></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-md-3 col-lg-4 margin-sm-top">\n                  <input type="text" class="form-control" id="ldap_group_att_{{ $index }}" ng-model="groupConfig.GroupAttribute" placeholder="member" />\n                </div>\n              </div>\n              <div class="form-group">\n                <label for="ldap_group_filter_{{ $index }}" class="col-sm-4 col-md-2 control-label text-left">\n                  Group Filter\n                  <portainer-tooltip position="bottom" message="The LDAP search filter used to select group elements, optional."></portainer-tooltip>\n                </label>\n                <div class="col-sm-7 col-md-9">\n                  <input type="text" class="form-control" id="ldap_group_filter_{{ $index }}" ng-model="groupConfig.GroupFilter" placeholder="(objectClass=account)" />\n                </div>\n                <div class="col-sm-1" ng-if="$index > 0">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeGroupSearchConfiguration($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n\n              <div class="form-group">\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addGroupSearchConfiguration()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> add group search configuration\n                </span>\n              </div>\n            </div>\n            \x3c!-- !group-search-settings --\x3e\n          </div>\n\n          <oauth-settings ng-if="isOauthEnabled()" settings="OAuthSettings" teams="teams"></oauth-settings>\n\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="saveSettings()" ng-disabled="state.actionInProgress" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">Save settings</span>\n                <span ng-show="state.actionInProgress">Saving...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/stacks/stacks.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Stacks list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.stacks" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Stacks</rd-header-content>\n</rd-header>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<div class="row">\n  <div class="col-sm-12">\n    <stacks-datatable\n      title-text="Stacks"\n      title-icon="fa-th-list"\n      dataset="stacks"\n      table-key="stacks"\n      order-by="Name"\n      remove-action="removeAction"\n      show-ownership-column="applicationState.application.authentication"\n      offline-mode="offlineMode"\n      refresh-callback="getStacks"\n      create-enabled="createEnabled"\n    ></stacks-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/stacks/edit/stack.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Stack details">\n    <a data-toggle="tooltip" title-text="Refresh" ui-sref="portainer.stacks.stack({id: stack.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.stacks">Stacks</a> &gt; {{ stackName }} </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <uib-tabset active="state.activeTab">\n          \x3c!-- tab-info --\x3e\n          <uib-tab index="0">\n            <uib-tab-heading> <i class="fa fa-th-list" aria-hidden="true"></i> Stack </uib-tab-heading>\n            <div style="margin-top: 10px;">\n              \x3c!-- stack-information --\x3e\n              <div ng-if="state.externalStack">\n                <div class="col-sm-12 form-section-title">\n                  Information\n                </div>\n                <div class="form-group">\n                  <span class="small">\n                    <p class="text-muted">\n                      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      This stack was created outside of Portainer. Control over this stack is limited.\n                    </p>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !stack-information --\x3e\n              \x3c!-- stack-details --\x3e\n              <div>\n                <div class="col-sm-12 form-section-title">\n                  Stack details\n                </div>\n                <div class="form-group">\n                  {{ stackName }}\n                  <button authorization="PortainerStackDelete" class="btn btn-xs btn-danger" ng-click="removeStack()" ng-if="!state.externalStack || stack.Type === 1"\n                    ><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Delete this stack</button\n                  >\n                </div>\n              </div>\n              \x3c!-- !stack-details --\x3e\n              <stack-duplication-form\n                ng-if="!state.externalStack && endpoints.length > 0"\n                endpoints="endpoints"\n                groups="groups"\n                current-endpoint-id="currentEndpointId"\n                on-duplicate="duplicateStack(name, endpointId)"\n                on-migrate="migrateStack(name, endpointId)"\n              >\n              </stack-duplication-form>\n            </div>\n          </uib-tab>\n          \x3c!-- !tab-info --\x3e\n          \x3c!-- tab-file --\x3e\n          <uib-tab index="1" ng-if="stackFileContent" select="showEditor()">\n            <uib-tab-heading> <i class="fa fa-pencil-alt space-right" aria-hidden="true"></i> Editor </uib-tab-heading>\n            <form class="form-horizontal" ng-if="state.showEditorTab" style="margin-top: 10px;">\n              <div class="form-group">\n                <span class="col-sm-12 text-muted small">\n                  You can get more information about Compose file format in the <a href="https://docs.docker.com/compose/compose-file/" target="_blank">official documentation</a>.\n                </span>\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <code-editor\n                    identifier="stack-editor"\n                    placeholder="# Define or paste the content of your docker-compose file here"\n                    yml="true"\n                    on-change="(editorUpdate)"\n                    value="stackFileContent"\n                  ></code-editor>\n                </div>\n              </div>\n              \x3c!-- environment-variables --\x3e\n              <div ng-if="stack && stack.Type === 1">\n                <div class="col-sm-12 form-section-title">\n                  Environment\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12" style="margin-top: 5px;" authorization="PortainerStackUpdate">\n                    <label class="control-label text-left">Environment variables</label>\n                    <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addEnvironmentVariable()">\n                      <i class="fa fa-plus-circle" aria-hidden="true"></i> add environment variable\n                    </span>\n                  </div>\n                  \x3c!-- environment-variable-input-list --\x3e\n                  <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                    <div ng-repeat="variable in stack.Env" style="margin-top: 2px;">\n                      <div class="input-group col-sm-5 input-group-sm">\n                        <span class="input-group-addon">name</span>\n                        <input type="text" class="form-control" ng-model="variable.name" placeholder="e.g. FOO" />\n                      </div>\n                      <div class="input-group col-sm-5 input-group-sm">\n                        <span class="input-group-addon">value</span>\n                        <input type="text" class="form-control" ng-model="variable.value" placeholder="e.g. bar" />\n                      </div>\n                      <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable($index)" authorization="PortainerStackUpdate">\n                        <i class="fa fa-trash" aria-hidden="true"></i>\n                      </button>\n                    </div>\n                  </div>\n                  \x3c!-- !environment-variable-input-list --\x3e\n                </div>\n              </div>\n              \x3c!-- !environment-variables --\x3e\n              \x3c!-- options --\x3e\n              <div ng-if="stack.Type === 1 && applicationState.endpoint.apiVersion >= 1.27" authorization="PortainerStackUpdate">\n                <div class="col-sm-12 form-section-title">\n                  Options\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12">\n                    <label for="prune" class="control-label text-left">\n                      Prune services\n                      <portainer-tooltip position="bottom" message="Prune services that are no longer referenced."></portainer-tooltip>\n                    </label>\n                    <label class="switch" style="margin-left: 20px;"> <input name="prune" type="checkbox" ng-model="formValues.Prune" /><i></i> </label>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !options --\x3e\n              <div authorization="PortainerStackUpdate">\n                <div class="col-sm-12 form-section-title">\n                  Actions\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12">\n                    <button type="button" class="btn btn-sm btn-primary" ng-disabled="state.actionInProgress" ng-click="deployStack()" button-spinner="state.actionInProgress">\n                      <span ng-hide="state.actionInProgress">Update the stack</span>\n                      <span ng-show="state.actionInProgress">Deployment in progress...</span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </uib-tab>\n          \x3c!-- !tab-file --\x3e\n        </uib-tabset>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="containers">\n  <div class="col-sm-12">\n    <containers-datatable\n      title-text="Containers"\n      title-icon="fa-server"\n      dataset="containers"\n      table-key="stack-containers"\n      order-by="Status"\n      show-ownership-column="applicationState.application.authentication"\n      show-host-column="false"\n      show-add-action="false"\n    ></containers-datatable>\n  </div>\n</div>\n\n<div class="row" ng-if="services">\n  <div class="col-sm-12">\n    <services-datatable\n      title-text="Services"\n      title-icon="fa-list-alt"\n      dataset="services"\n      table-key="stack-services"\n      order-by="Name"\n      nodes="nodes"\n      agent-proxy="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n      show-ownership-column="false"\n      show-update-action="applicationState.endpoint.apiVersion >= 1.25"\n      show-task-logs-button="applicationState.endpoint.apiVersion >= 1.30"\n      show-add-action="false"\n      show-stack-column="false"\n    ></services-datatable>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel ng-if="stack && applicationState.application.authentication" resource-id="stack.Name" resource-control="stack.ResourceControl" resource-type="\'stack\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/stacks/create/createstack.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create stack"></rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.stacks">Stacks</a> &gt; Add stack </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="stack_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="stack_name" placeholder="e.g. mystack" auto-focus />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small" ng-if="state.StackType === 1">\n              This stack will be deployed using the equivalent of the <code>docker stack deploy</code> command.\n            </span>\n            <span class="col-sm-12 text-muted small" ng-if="state.StackType === 2">\n              This stack will be deployed using the equivalent of <code>docker-compose</code>. Only Compose file format version <b>2</b> is supported at the moment. <br /><br />\n              <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n              Note: Due to a limitation of libcompose, the name of the stack will be standardized to remove all special characters and uppercase letters.\n            </span>\n          </div>\n          \x3c!-- build-method --\x3e\n          <div class="col-sm-12 form-section-title">\n            Build method\n          </div>\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0;">\n            <div class="boxselector_wrapper">\n              <div>\n                <input type="radio" id="method_editor" ng-model="state.Method" value="editor" />\n                <label for="method_editor">\n                  <div class="boxselector_header">\n                    <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Web editor\n                  </div>\n                  <p>Use our Web editor</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="method_upload" ng-model="state.Method" value="upload" />\n                <label for="method_upload">\n                  <div class="boxselector_header">\n                    <i class="fa fa-upload" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Upload\n                  </div>\n                  <p>Upload from your computer</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="method_repository" ng-model="state.Method" value="repository" />\n                <label for="method_repository">\n                  <div class="boxselector_header">\n                    <i class="fab fa-git" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Repository\n                  </div>\n                  <p>Use a git repository</p>\n                </label>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !build-method --\x3e\n          \x3c!-- web-editor --\x3e\n          <div ng-show="state.Method === \'editor\'">\n            <div class="col-sm-12 form-section-title">\n              Web editor\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                You can get more information about Compose file format in the <a href="https://docs.docker.com/compose/compose-file/" target="_blank">official documentation</a>.\n              </span>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <code-editor\n                  identifier="stack-creation-editor"\n                  placeholder="# Define or paste the content of your docker-compose file here"\n                  yml="true"\n                  on-change="(editorUpdate)"\n                ></code-editor>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !web-editor --\x3e\n          \x3c!-- upload --\x3e\n          <div ng-show="state.Method === \'upload\'">\n            <div class="col-sm-12 form-section-title">\n              Upload\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                You can upload a Compose file from your computer.\n              </span>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.StackFile">Select file</button>\n                <span style="margin-left: 5px;">\n                  {{ formValues.StackFile.name }}\n                  <i class="fa fa-times red-icon" ng-if="!formValues.StackFile" aria-hidden="true"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !upload --\x3e\n          \x3c!-- repository --\x3e\n          <div ng-show="state.Method === \'repository\'">\n            <div class="col-sm-12 form-section-title">\n              Git repository\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                You can use the URL of a git repository.\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="stack_repository_url" class="col-sm-2 control-label text-left">Repository URL</label>\n              <div class="col-sm-10">\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="formValues.RepositoryURL"\n                  id="stack_repository_url"\n                  placeholder="https://github.com/portainer/portainer-compose"\n                />\n              </div>\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                Specify a reference of the repository using the following syntax: branches with <code>refs/heads/branch_name</code> or tags with <code>refs/tags/tag_name</code>. If\n                not specified, will use the default <code>HEAD</code> reference normally the <code>master</code> branch.\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="stack_repository_url" class="col-sm-2 control-label text-left">Repository reference</label>\n              <div class="col-sm-10">\n                <input type="text" class="form-control" ng-model="formValues.RepositoryReferenceName" id="stack_repository_reference_name" placeholder="refs/heads/master" />\n              </div>\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                Indicate the path to the Compose file from the root of your repository.\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="stack_repository_path" class="col-sm-2 control-label text-left">Compose path</label>\n              <div class="col-sm-10">\n                <input type="text" class="form-control" ng-model="formValues.ComposeFilePathInRepository" id="stack_repository_path" placeholder="docker-compose.yml" />\n              </div>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label class="control-label text-left">\n                  Authentication\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.RepositoryAuthentication" /><i></i> </label>\n              </div>\n            </div>\n            <div class="form-group" ng-if="formValues.RepositoryAuthentication">\n              <span class="col-sm-12 text-muted small">\n                If your git account has 2FA enabled, you may receive an <code>authentication required</code> error when deploying your stack. In this case, you will need to provide\n                a personal-access token instead of your password.\n              </span>\n            </div>\n            <div class="form-group" ng-if="formValues.RepositoryAuthentication">\n              <label for="repository_username" class="col-sm-1 control-label text-left">Username</label>\n              <div class="col-sm-11 col-md-5">\n                <input type="text" class="form-control" ng-model="formValues.RepositoryUsername" name="repository_username" placeholder="myGitUser" />\n              </div>\n              <label for="repository_password" class="col-sm-1 control-label text-left">\n                Password\n              </label>\n              <div class="col-sm-11 col-md-5">\n                <input type="password" class="form-control" ng-model="formValues.RepositoryPassword" name="repository_password" placeholder="myPassword" />\n              </div>\n            </div>\n          </div>\n          \x3c!-- environment-variables --\x3e\n          <div>\n            <div class="col-sm-12 form-section-title">\n              Environment\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">Environment variables</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addEnvironmentVariable()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> add environment variable\n                </span>\n              </div>\n              \x3c!-- environment-variable-input-list --\x3e\n              <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                <div ng-repeat="variable in formValues.Env" style="margin-top: 2px;">\n                  <div class="input-group col-sm-5 input-group-sm">\n                    <span class="input-group-addon">name</span>\n                    <input type="text" class="form-control" ng-model="variable.name" placeholder="e.g. FOO" />\n                  </div>\n                  <div class="input-group col-sm-5 input-group-sm">\n                    <span class="input-group-addon">value</span>\n                    <input type="text" class="form-control" ng-model="variable.value" placeholder="e.g. bar" />\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !environment-variable-input-list --\x3e\n            </div>\n          </div>\n          \x3c!-- !environment-variables --\x3e\n          \x3c!-- !repository --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress\n              || (state.Method === \'upload\' && !formValues.StackFile)\n              || (state.Method === \'repository\' && ((!formValues.RepositoryURL || !formValues.ComposeFilePathInRepository) || (formValues.RepositoryAuthentication && (!formValues.RepositoryUsername || !formValues.RepositoryPassword))))\n              || !formValues.Name"\n                ng-click="deployStack()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Deploy the stack</span>\n                <span ng-show="state.actionInProgress">Deployment in progress...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/support/support.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Portainer support"> </rd-header-title>\n  <rd-header-content>\n    Commercial support options\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <product-list title-text="Available support options" products="products" go-to="goToProductView"></product-list>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/support/product/product.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Support option details"></rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.support">Portainer support</a> &gt; {{ product.Name }} </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div style="display: flex;">\n          <div style="flex-grow: 4; display: flex; flex-direction: column; justify-content: space-between;">\n            <div class="form-group">\n              <div class="text-muted" style="font-size: 150%;">\n                {{ product.Name }}\n              </div>\n\n              <div class="small text-muted" style="margin-top: 5px;"> By <a href="https://portainer.io" href="_blank">Portainer.io</a> </div>\n            </div>\n\n            <div class="form-group">\n              <div class="text-muted">\n                {{ product.ShortDescription }}\n              </div>\n            </div>\n          </div>\n\n          <div style="flex-grow: 1; border-left: 1px solid #777;">\n            <div class="form-group" style="margin-left: 40px;">\n              <div style="font-size: 125%; border-bottom: 2px solid #2d3e63; padding-bottom: 5px;">\n                {{ product.Price }}\n              </div>\n\n              <div class="small text-muted col-sm-12" style="margin: 15px 0 15px 0;">\n                {{ product.PriceDescription }}\n              </div>\n\n              <div style="margin-top: 10px; margin-bottom: 95px;">\n                <label for="endpoint_count" class="col-sm-7 control-label text-left" style="margin-top: 7px;">No. of {{ state.supportType }}(s)</label>\n                <div class="col-sm-5">\n                  <input type="number" class="form-control" ng-model="formValues.hostCount" id="endpoint_count" placeholder="{{ state.placeholder }}" min="{{ state.minHosts }}" />\n                </div>\n              </div>\n\n              <div style="margin-top: 15px;">\n                <a href="https://portainer.io/checkout/?add-to-cart={{ product.ProductId }}&quantity={{ formValues.hostCount }}" target="_blank">\n                  <button ng-disabled="isBuyButtonEnabled()" class="btn btn-primary btn-sm" style="width: 100%; margin-left: 0;">Buy</button>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="product">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="col-sm-12 form-section-title">\n          <span>\n            Description\n          </span>\n        </div>\n        <div class="form-group">\n          <span class="small text-muted" style="white-space: pre-line;">{{ product.Description }}</span>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/tags/tags.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Tags">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.tags" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Tag management</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title-text="Add a new tag"> </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" name="tagCreationForm" ng-submit="createTag()">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="name" class="col-sm-2 control-label text-left">\n              Name\n            </label>\n            <div class="col-sm-10">\n              <input\n                type="text"\n                class="form-control"\n                name="name"\n                ng-model="formValues.Name"\n                ng-change="checkNameValidity(tagCreationForm)"\n                placeholder="org/acme"\n                required\n                auto-focus\n              />\n            </div>\n          </div>\n          <div class="form-group" ng-show="tagCreationForm.name.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="tagCreationForm.name.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n                <p ng-message="validName"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This tag already exists.</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !tagCreationForm.$valid"\n                ng-click="createTag()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> Create tag</span>\n                <span ng-show="state.actionInProgress">Creating tag...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <tags-datatable title-text="Tags" title-icon="fa-tags" dataset="tags" table-key="tags" order-by="Name" remove-action="removeAction"></tags-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/update-password/updatePassword.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="page-wrapper">\n  \x3c!--  box --\x3e\n  <div class="container simple-box">\n    <div class="col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1">\n      \x3c!--  panel --\x3e\n      <div class="panel panel-default">\n        <div class="panel-body">\n          <form class="simple-box-form form-horizontal" name="updatePasswordForm">\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  Your password must be updated.\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- current-password-input --\x3e\n            <div class="form-group">\n              <label for="current_password" class="col-sm-4 control-label text-left">Current password</label>\n              <div class="col-sm-8">\n                <input type="password" class="form-control" ng-model="formValues.CurrentPassword" id="current_password" auto-focus required />\n              </div>\n            </div>\n            \x3c!-- !current-password-input --\x3e\n            \x3c!-- new-password-input --\x3e\n            <div class="form-group">\n              <label for="password" class="col-sm-4 control-label text-left">Password</label>\n              <div class="col-sm-8">\n                <input type="password" class="form-control" ng-model="formValues.Password" id="password" required />\n              </div>\n            </div>\n            \x3c!-- !new-password-input --\x3e\n            \x3c!-- confirm-password-input --\x3e\n            <div class="form-group">\n              <label for="confirm_password" class="col-sm-4 control-label text-left">Confirm password</label>\n              <div class="col-sm-8">\n                <div class="input-group">\n                  <input type="password" class="form-control" ng-model="formValues.ConfirmPassword" id="confirm_password" required />\n                  <span class="input-group-addon"\n                    ><i\n                      ng-class="{ true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\' }[formValues.Password !== \'\' && formValues.Password === formValues.ConfirmPassword]"\n                      aria-hidden="true"\n                    ></i\n                  ></span>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !confirm-password-input --\x3e\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  <i ng-class="{ true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\' }[formValues.Password.length >= 8]" aria-hidden="true"></i>\n                  The password must be at least 8 characters long\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- actions --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button\n                  type="submit"\n                  class="btn btn-primary btn-sm"\n                  ng-disabled="state.actionInProgress || !updatePasswordForm.$valid || formValues.Password.length < 8 || formValues.Password !== formValues.ConfirmPassword"\n                  ng-click="updatePassword()"\n                  button-spinner="state.actionInProgress"\n                >\n                  <span ng-hide="state.actionInProgress">Update password</span>\n                  <span ng-show="state.actionInProgress">Updating password...</span>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !actions --\x3e\n          </form>\n        </div>\n      </div>\n      \x3c!-- ! panel --\x3e\n    </div>\n  </div>\n  \x3c!-- ! box --\x3e\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/users/users.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Users">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.users" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>User management</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title-text="Add a new user"> </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="username" class="col-sm-3 col-lg-2 control-label text-left">\n              Username\n              <portainer-tooltip\n                ng-if="AuthenticationMethod === 2"\n                position="bottom"\n                message="Username must exactly match username defined in external LDAP source."\n              ></portainer-tooltip>\n            </label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <input type="text" class="form-control" id="username" ng-model="formValues.Username" ng-change="checkUsernameValidity()" placeholder="e.g. jdoe" auto-focus />\n                <span class="input-group-addon"><i ng-class="{ true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\' }[state.validUsername]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- new-password-input --\x3e\n          <div class="form-group" ng-if="AuthenticationMethod === 1">\n            <label for="password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.Password" id="password" />\n              </div>\n            </div>\n          </div>\n          \x3c!-- !new-password-input --\x3e\n          \x3c!-- confirm-password-input --\x3e\n          <div class="form-group" ng-if="AuthenticationMethod === 1">\n            <label for="confirm_password" class="col-sm-3 col-lg-2 control-label text-left">Confirm password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.ConfirmPassword" id="confirm_password" />\n                <span class="input-group-addon"\n                  ><i\n                    ng-class="{ true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\' }[formValues.Password !== \'\' && formValues.Password === formValues.ConfirmPassword]"\n                    aria-hidden="true"\n                  ></i\n                ></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !confirm-password-input --\x3e\n          \x3c!-- admin-checkbox --\x3e\n          <div class="form-group" ng-if="isAdmin">\n            <div class="col-sm-12">\n              <label for="permissions" class="control-label text-left">\n                Administrator\n                <portainer-tooltip\n                  position="bottom"\n                  message="Administrators have access to Portainer settings management as well as full control over all defined endpoints and their resources."\n                ></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.Administrator" /><i></i> </label>\n            </div>\n          </div>\n          \x3c!-- !admin-checkbox --\x3e\n          \x3c!-- teams --\x3e\n          <div class="form-group" ng-if="!formValues.Administrator">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Add to team(s)\n              </label>\n              <span class="small text-muted" style="margin-left: 20px;" ng-if="teams.length === 0">\n                You don\'t seem to have any teams to add users into. Head over to the <a ui-sref="portainer.teams">Teams view</a> to create some.\n              </span>\n              <span\n                isteven-multi-select\n                ng-if="teams.length > 0"\n                input-model="teams"\n                output-model="formValues.Teams"\n                button-label="Name"\n                item-label="Name"\n                tick-property="ticked"\n                helper-elements="filter"\n                search-property="Name"\n                translation="{nothingSelected: \'Select one or more teams\', search: \'Search...\'}"\n                style="margin-left: 20px;"\n              >\n              </span>\n            </div>\n          </div>\n          \x3c!-- !teams --\x3e\n          <div class="form-group" ng-if="isAdmin && !formValues.Administrator && formValues.Teams.length === 0">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                Note: non-administrator users who aren\'t in a team don\'t have access to any endpoints by default. Head over to the\n                <a ui-sref="portainer.endpoints">Endpoints view</a> to manage their accesses.\n              </span>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !state.validUsername || formValues.Username === \'\' || (AuthenticationMethod === 1 && formValues.Password === \'\') || (AuthenticationMethod === 1 && formValues.Password !== formValues.ConfirmPassword)"\n                ng-click="addUser()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> Create user</span>\n                <span ng-show="state.actionInProgress">Creating user...</span>\n              </button>\n              <span class="text-danger" ng-if="state.userCreationError" style="margin: 5px;">\n                <i class="fa fa-exclamation-circle" aria-hidden="true"></i> {{ state.userCreationError }}\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <users-datatable\n      title-text="Users"\n      title-icon="fa-user"\n      dataset="users"\n      table-key="users"\n      order-by="Username"\n      authentication-method="AuthenticationMethod"\n      remove-action="removeAction"\n    ></users-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/users/edit/user.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="User details"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.users">Users</a> &gt; <a ui-sref="portainer.users.user({id: user.Id})">{{ user.Username }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-user" title-text="User details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td><label>Name</label></td>\n              <td>\n                {{ user.Username }}\n                <button class="btn btn-xs btn-danger" ng-click="deleteUser()"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Delete this user</button>\n              </td>\n            </tr>\n            <tr ng-if="isAdmin">\n              <td colspan="2">\n                <label for="permissions" class="control-label text-left">\n                  Administrator\n                  <portainer-tooltip\n                    position="bottom"\n                    message="Administrators have access to Portainer settings management as well as full control over all defined endpoints and their resources."\n                  ></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="formValues.Administrator" ng-change="updatePermissions()" /><i></i> </label>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="AuthenticationMethod === 1">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-lock" title-text="Change user password"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" style="margin-top: 15px;">\n          \x3c!-- new-password-input --\x3e\n          <div class="form-group">\n            <label for="new_password" class="col-sm-2 control-label text-left">New password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.newPassword" id="new_password" />\n              </div>\n            </div>\n          </div>\n          \x3c!-- !new-password-input --\x3e\n          \x3c!-- confirm-password-input --\x3e\n          <div class="form-group">\n            <label for="confirm_password" class="col-sm-2 control-label text-left">Confirm password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.confirmPassword" id="confirm_password" />\n                <span class="input-group-addon"\n                  ><i\n                    ng-class="\n                      { true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\' }[formValues.newPassword !== \'\' && formValues.newPassword === formValues.confirmPassword]\n                    "\n                    aria-hidden="true"\n                  ></i\n                ></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !confirm-password-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-2">\n              <button\n                type="submit"\n                class="btn btn-primary btn-sm"\n                ng-disabled="formValues.newPassword === \'\' || formValues.newPassword !== formValues.confirmPassword"\n                ng-click="updatePassword()"\n                >Update password</button\n              >\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/teams/teams.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Teams">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.teams" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Teams management</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="isAdmin">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title-text="Add a new team"> </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" name="teamCreationForm" ng-submit="addTeam()">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="team_name" class="col-sm-2 control-label text-left">Name</label>\n            <div class="col-sm-10">\n              <input\n                type="text"\n                class="form-control"\n                id="team_name"\n                name="team_name"\n                ng-model="formValues.Name"\n                ng-change="checkNameValidity(teamCreationForm)"\n                placeholder="e.g. development"\n                auto-focus\n                required\n              />\n            </div>\n          </div>\n          <div class="form-group" ng-show="teamCreationForm.team_name.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="teamCreationForm.team_name.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n                <p ng-message="validName"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This team already exists.</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- team-leaders --\x3e\n          <div class="form-group" ng-if="users.length > 0">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Select team leader(s)\n                <portainer-tooltip\n                  position="bottom"\n                  message="You can assign one or more leaders to this team. Team leaders can manage their teams users and resources."\n                ></portainer-tooltip>\n              </label>\n              <span\n                isteven-multi-select\n                ng-if="users.length > 0"\n                input-model="users"\n                output-model="formValues.Leaders"\n                button-label="Username"\n                item-label="Username"\n                tick-property="ticked"\n                helper-elements="filter"\n                search-property="Username"\n                translation="{nothingSelected: \'Select one or more team leaders\', search: \'Search...\'}"\n                style="margin-left: 20px;"\n              >\n              </span>\n            </div>\n          </div>\n          \x3c!-- !team-leaders --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !teamCreationForm.$valid"\n                ng-click="addTeam()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> Create team</span>\n                <span ng-show="state.actionInProgress">Creating team...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <teams-datatable title-text="Teams" title-icon="fa-users" dataset="teams" table-key="teams" order-by="Name" remove-action="removeAction"></teams-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/teams/edit/team.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Team details"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.teams">Teams</a> &gt; <a ui-sref="portainer.teams.team({id: team.Id})">{{ team.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-users" title-text="Team details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>\n                {{ team.Name }}\n                <button class="btn btn-xs btn-danger" ng-if="isAdmin" ng-click="deleteTeam()"\n                  ><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Delete this team</button\n                >\n              </td>\n            </tr>\n            <tr>\n              <td>Leaders</td>\n              <td>{{ leaderCount }}</td>\n            </tr>\n            <tr>\n              <td>Total users in team</td>\n              <td>{{ teamMembers.length }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="team">\n  <div class="col-sm-6">\n    <rd-widget>\n      <rd-widget-header classes="col-sm-12 col-md-6 nopadding" icon="fa-users" title-text="Users">\n        <div class="pull-md-right pull-lg-right">\n          Items per page:\n          <select ng-model="state.pagination_count_users" ng-change="changePaginationCountUsers()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-sm-12 nopadding">\n        <div class="col-sm-12 col-md-6 nopadding">\n          <button class="btn btn-primary btn-sm" ng-click="addAllUsers()" ng-if="isAdmin" ng-disabled="users.length ===  0 || filteredUsers.length === 0"\n            ><i class="fa fa-user-plus space-right" aria-hidden="true"></i>Add all users</button\n          >\n        </div>\n        <div class="col-sm-12 col-md-6 nopadding">\n          <input type="text" id="filter" ng-model="state.filterUsers" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ng-click="orderUsers(\'Username\')">\n                    Name\n                    <span ng-show="sortTypeUsers == \'Username\' && !sortReverseUsers" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortTypeUsers == \'Username\' && sortReverseUsers" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                pagination-id="table1"\n                dir-paginate="user in users | filter:state.filterUsers | orderBy:sortTypeUsers:sortReverseUsers | itemsPerPage: state.pagination_count_users"\n              >\n                <td>\n                  {{ user.Username }}\n                  <span style="margin-left: 5px;">\n                    <a ng-click="addUser(user)"><i class="fa fa-plus-circle space-right" aria-hidden="true"></i>Add</a>\n                  </span>\n                </td>\n              </tr>\n              <tr ng-if="!users">\n                <td colspan="2" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="users.length === 0 || (users | filter: state.filterUsers).length === 0">\n                <td colspan="2" class="text-center text-muted">No users.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="users" class="pull-left pagination-controls">\n            <dir-pagination-controls pagination-id="table1"></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-sm-6">\n    <rd-widget>\n      <rd-widget-header classes="col-sm-12 col-md-6 nopadding" icon="fa-users" title-text="Team members">\n        <div class="pull-md-right pull-lg-right">\n          Items per page:\n          <select ng-model="state.pagination_count_members" ng-change="changePaginationCountGroupMembers()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-sm-12 nopadding">\n        <div class="col-sm-12 col-md-6 nopadding">\n          <button class="btn btn-primary btn-sm" ng-click="removeAllUsers()" ng-if="isAdmin" ng-disabled="teamMembers.length ===  0 || filteredGroupMembers.length === 0"\n            ><i class="fa fa-user-times space-right" aria-hidden="true"></i>Remove all users</button\n          >\n        </div>\n        <div class="col-sm-12 col-md-6 nopadding">\n          <input type="text" id="filter" ng-model="state.filterGroupMembers" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ng-click="orderGroupMembers(\'Username\')">\n                    Name\n                    <span ng-show="sortTypeGroupMembers == \'Username\' && !sortReverseGroupMembers" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortTypeGroupMembers == \'Username\' && sortReverseGroupMembers" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="orderGroupMembers(\'TeamRole\')">\n                    Team Role\n                    <span ng-show="sortTypeGroupMembers == \'TeamRole\' && !sortReverseGroupMembers" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortTypeGroupMembers == \'TeamRole\' && sortReverseGroupMembers" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                pagination-id="table2"\n                dir-paginate="user in teamMembers | filter:state.filterGroupMembers | orderBy:sortTypeGroupMembers:sortReverseGroupMembers | itemsPerPage: state.pagination_count_groupMembers"\n              >\n                <td>\n                  {{ user.Username }}\n                  <span style="margin-left: 5px;" ng-if="isAdmin || user.TeamRole === \'Member\'">\n                    <a ng-click="removeUser(user)"><i class="fa fa-minus-circle space-right" aria-hidden="true"></i>Remove</a>\n                  </span>\n                </td>\n                <td>\n                  <i ng-if="user.TeamRole === \'Leader\'" class="fa fa-user-plus" aria-hidden="true" style="margin-right: 2px;"></i>\n                  <i ng-if="user.TeamRole === \'Member\'" class="fa fa-user" aria-hidden="true" style="margin-right: 2px;"></i>\n                  {{ user.TeamRole }}\n                  <span style="margin-left: 5px;" ng-if="isAdmin">\n                    <a style="margin-left: 5px;" ng-click="promoteToLeader(user)" ng-if="user.TeamRole === \'Member\'"\n                      ><i class="fa fa-user-plus space-right" aria-hidden="true"></i>Leader</a\n                    >\n                    <a style="margin-left: 5px;" ng-click="demoteToMember(user)" ng-if="user.TeamRole === \'Leader\'"\n                      ><i class="fa fa-user-times space-right" aria-hidden="true"></i>Member</a\n                    >\n                  </span>\n                </td>\n              </tr>\n              <tr ng-if="!teamMembers">\n                <td colspan="2" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="teamMembers.length === 0 || (teamMembers | filter: state.filterGroupMembers).length === 0">\n                <td colspan="2" class="text-center text-muted">No team members.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="teamMembers" class="pull-left pagination-controls">\n            <dir-pagination-controls pagination-id="table2"></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/templates/templates.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header id="view-top">\n  <rd-header-title title-text="Application templates list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.templates" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Templates</rd-header-content>\n</rd-header>\n\n<div class="row">\n  \x3c!-- stack-form --\x3e\n  <div class="col-sm-12" ng-if="state.selectedTemplate && (state.selectedTemplate.Type === 2 || state.selectedTemplate.Type === 3)">\n    <rd-widget>\n      <rd-widget-custom-header icon="state.selectedTemplate.Logo" title-text="state.selectedTemplate.Title"></rd-widget-custom-header>\n      <rd-widget-body classes="padding">\n        <form class="form-horizontal">\n          \x3c!-- description --\x3e\n          <div ng-if="state.selectedTemplate.Note">\n            <div class="col-sm-12 form-section-title">\n              Information\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <div class="template-note" ng-if="state.selectedTemplate.Note" ng-bind-html="state.selectedTemplate.Note"></div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !description --\x3e\n          <div class="col-sm-12 form-section-title">\n            Configuration\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-2 control-label text-left">Name</label>\n            <div class="col-sm-10">\n              <input type="text" name="container_name" class="form-control" ng-model="formValues.name" placeholder="e.g. myStack" required />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- env --\x3e\n          <div ng-repeat="var in state.selectedTemplate.Env" ng-if="!var.preset || var.select" class="form-group">\n            <label for="field_{{ $index }}" class="col-sm-2 control-label text-left">\n              {{ var.label }}\n              <portainer-tooltip ng-if="var.description" position="bottom" message="{{ var.description }}"></portainer-tooltip>\n            </label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" ng-if="!var.select" ng-model="var.value" id="field_{{ $index }}" />\n              <select class="form-control" ng-if="var.select" ng-model="var.value" id="field_{{ $index }}">\n                <option selected disabled hidden value="">Select value</option>\n                <option ng-repeat="choice in var.select" value="{{ choice.value }}">{{ choice.text }}</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !env --\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !formValues.name"\n                ng-click="createTemplate()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Deploy the stack</span>\n                <span ng-show="state.actionInProgress">Deployment in progress...</span>\n              </button>\n              <button type="button" class="btn btn-sm btn-default" ng-click="unselectTemplate(state.selectedTemplate)">Hide</button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  \x3c!-- !stack-form --\x3e\n  \x3c!-- container-form --\x3e\n  <div class="col-sm-12" ng-if="state.selectedTemplate && state.selectedTemplate.Type === 1">\n    <rd-widget>\n      <rd-widget-custom-header icon="state.selectedTemplate.Logo" title-text="state.selectedTemplate.Image"></rd-widget-custom-header>\n      <rd-widget-body classes="padding">\n        <form class="form-horizontal" name="selectedTemplateType1">\n          \x3c!-- description --\x3e\n          <div ng-if="state.selectedTemplate.Note">\n            <div class="col-sm-12 form-section-title">\n              Information\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <div class="template-note" ng-if="state.selectedTemplate.Note" ng-bind-html="state.selectedTemplate.Note"></div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !description --\x3e\n          <div class="col-sm-12 form-section-title">\n            Configuration\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-2 control-label text-left">Name</label>\n            <div class="col-sm-10">\n              <input type="text" name="container_name" class="form-control" ng-model="formValues.name" placeholder="e.g. web (optional)" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- network-input --\x3e\n          <div class="form-group">\n            <label for="container_network" class="col-sm-2 control-label text-left">Network</label>\n            <div class="col-sm-10">\n              <select class="form-control" ng-options="net.Name for net in availableNetworks | orderBy: \'Name\'" ng-model="formValues.network">\n                <option disabled hidden value="">Select a network</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !network-input --\x3e\n          \x3c!-- env --\x3e\n          <div ng-repeat="var in state.selectedTemplate.Env" ng-if="!var.preset || var.select" class="form-group">\n            <label for="field_{{ $index }}" class="col-sm-2 control-label text-left">\n              {{ var.label }}\n              <portainer-tooltip ng-if="var.description" position="bottom" message="{{ var.description }}"></portainer-tooltip>\n            </label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" ng-if="!var.select" ng-model="var.value" id="field_{{ $index }}" />\n              <select class="form-control" ng-if="var.select" ng-model="var.value" id="field_{{ $index }}">\n                <option selected disabled hidden value="">Select value</option>\n                <option ng-repeat="choice in var.select" value="{{ choice.value }}">{{ choice.text }}</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !env --\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <a class="small interactive" ng-if="!state.showAdvancedOptions" ng-click="state.showAdvancedOptions = true;">\n                <i class="fa fa-plus space-right" aria-hidden="true"></i> Show advanced options\n              </a>\n              <a class="small interactive" ng-if="state.showAdvancedOptions" ng-click="state.showAdvancedOptions = false;">\n                <i class="fa fa-minus space-right" aria-hidden="true"></i> Hide advanced options\n              </a>\n            </div>\n          </div>\n          <div ng-if="state.showAdvancedOptions">\n            \x3c!-- port-mapping --\x3e\n            <div class="form-group">\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">Port mapping</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional port\n                </span>\n              </div>\n              <div class="col-sm-12" style="margin-top: 10px;" ng-if="state.selectedTemplate.Ports.length > 0">\n                <span class="small text-muted">Portainer will automatically assign a port if you leave the host port empty.</span>\n              </div>\n              \x3c!-- !port-mapping --\x3e\n              \x3c!-- port-mapping-input-list --\x3e\n              <div class="col-sm-12">\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="portBinding in state.selectedTemplate.Ports" style="margin-top: 2px;">\n                    \x3c!-- host-port --\x3e\n                    <div class="input-group col-sm-4 input-group-sm">\n                      <span class="input-group-addon">host</span>\n                      <input type="text" class="form-control" ng-model="portBinding.hostPort" placeholder="e.g. 80 or 1.2.3.4:80 (optional)" />\n                    </div>\n                    \x3c!-- !host-port --\x3e\n                    <span style="margin: 0 10px 0 10px;">\n                      <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                    </span>\n                    \x3c!-- container-port --\x3e\n                    <div class="input-group col-sm-4 input-group-sm">\n                      <span class="input-group-addon">container</span>\n                      <input type="text" class="form-control" ng-model="portBinding.containerPort" placeholder="e.g. 80" />\n                    </div>\n                    \x3c!-- !container-port --\x3e\n                    \x3c!-- protocol-actions --\x3e\n                    <div class="input-group col-sm-3 input-group-sm">\n                      <div class="btn-group btn-group-sm">\n                        <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                        <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'udp\'">UDP</label>\n                      </div>\n                      <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                        <i class="fa fa-trash" aria-hidden="true"></i>\n                      </button>\n                    </div>\n                    \x3c!-- !protocol-actions --\x3e\n                  </div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n            \x3c!-- volume-mapping --\x3e\n            <div class="form-group">\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">Volume mapping</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addVolume()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional volume\n                </span>\n              </div>\n              <div class="col-sm-12" style="margin-top: 10px;" ng-if="state.selectedTemplate.Volumes.length > 0">\n                <span class="small text-muted">Portainer will automatically create and map a local volume when using the <b>auto</b> option.</span>\n              </div>\n              <div ng-repeat="volume in state.selectedTemplate.Volumes">\n                <div class="col-sm-12" style="margin-top: 10px;">\n                  \x3c!-- volume-line1 --\x3e\n                  <div class="col-sm-12 form-inline">\n                    \x3c!-- container-path --\x3e\n                    <div class="input-group input-group-sm col-sm-6">\n                      <span class="input-group-addon">container</span>\n                      <input type="text" class="form-control" ng-model="volume.container" placeholder="e.g. /path/in/container" />\n                    </div>\n                    \x3c!-- !container-path --\x3e\n                    \x3c!-- volume-type --\x3e\n                    <div class="input-group col-sm-5" style="margin-left: 5px;">\n                      <div class="btn-group btn-group-sm">\n                        <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'auto\'" ng-click="volume.bind = \'\'">Auto</label>\n                        <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'volume\'" ng-click="volume.bind = \'\'">Volume</label>\n                        <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'bind\'" ng-click="volume.bind = \'\'" ng-if="isAdmin || allowBindMounts">Bind</label>\n                      </div>\n                      <button class="btn btn-sm btn-danger" type="button" ng-click="removeVolume($index)">\n                        <i class="fa fa-trash" aria-hidden="true"></i>\n                      </button>\n                    </div>\n                    \x3c!-- !volume-type --\x3e\n                  </div>\n                  \x3c!-- !volume-line1 --\x3e\n                  \x3c!-- volume-line2 --\x3e\n                  <div class="col-sm-12 form-inline" style="margin-top: 5px;" ng-if="volume.type !== \'auto\'">\n                    <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                    \x3c!-- volume --\x3e\n                    <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'volume\'">\n                      <div class="col-sm-12 input-group">\n                        <span class="input-group-addon">volume</span>\n                        <div class="col-sm-12 input-group">\n                          <select class="form-control" ng-model="volume.bind" ng-options="vol.Name as vol.Name for vol in availableVolumes">\n                            <option value="" disabled selected>Select a volume</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    \x3c!-- !volume --\x3e\n                    \x3c!-- bind --\x3e\n                    <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'bind\'">\n                      <span class="input-group-addon">host</span>\n                      <input type="text" class="form-control" ng-model="volume.bind" placeholder="e.g. /path/on/host" />\n                    </div>\n                    \x3c!-- !bind --\x3e\n                    \x3c!-- read-only --\x3e\n                    <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                      <div class="btn-group btn-group-sm">\n                        <label class="btn btn-primary" ng-model="volume.readonly" uib-btn-radio="false">Writable</label>\n                        <label class="btn btn-primary" ng-model="volume.readonly" uib-btn-radio="true">Read-only</label>\n                      </div>\n                    </div>\n                    \x3c!-- !read-only --\x3e\n                  </div>\n                  \x3c!-- !volume-line2 --\x3e\n                </div>\n              </div>\n            </div>\n            \x3c!-- !volume-mapping --\x3e\n            \x3c!-- extra-host --\x3e\n            <div class="form-group">\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">Hosts file entries</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addExtraHost()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> add additional entry\n                </span>\n              </div>\n              \x3c!-- extra-host-input-list --\x3e\n              <div class="col-sm-12">\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="(idx, host) in state.selectedTemplate.Hosts track by $index" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="state.selectedTemplate.Hosts[idx]" placeholder="e.g. host:IP" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeExtraHost($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !extra-host --\x3e\n            \x3c!-- labels --\x3e\n            <div class="form-group">\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">Labels</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> add label\n                </span>\n              </div>\n              \x3c!-- labels-input-list --\x3e\n              <div class="col-sm-12">\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in state.selectedTemplate.Labels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="label.name" placeholder="e.g. com.example.foo" />\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !labels-input-list --\x3e\n            </div>\n            \x3c!-- !labels --\x3e\n            \x3c!-- hostname --\x3e\n            <div class="form-group">\n              <label for="container_hostname" class="col-sm-2 control-label text-left">Hostname</label>\n              <div class="col-sm-10">\n                <input type="text" name="container_hostname" class="form-control" ng-model="state.selectedTemplate.Hostname" placeholder="leave empty to use docker default" />\n              </div>\n            </div>\n            \x3c!-- !hostname --\x3e\n          </div>\n          \x3c!-- !advanced-options --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !formValues.network"\n                ng-click="createTemplate()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Deploy the container</span>\n                <span ng-show="state.actionInProgress">Deployment in progress...</span>\n              </button>\n              <button type="button" class="btn btn-sm btn-default" ng-click="unselectTemplate(state.selectedTemplate)">Hide</button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  \x3c!-- container-form --\x3e\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <template-list\n      ng-if="templates"\n      title-text="Templates"\n      title-icon="fa-rocket"\n      templates="templates"\n      table-key="templates"\n      select-action="selectTemplate"\n      delete-action="deleteTemplate"\n      show-add-action="state.templateManagement && isAdmin"\n      show-update-action="state.templateManagement && isAdmin"\n      show-delete-action="state.templateManagement && isAdmin"\n      show-swarm-stacks="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\' && applicationState.endpoint.apiVersion >= 1.25"\n    ></template-list>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/templates/edit/template.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Template details">\n    <a data-toggle="tooltip" title-text="Refresh" ui-sref="portainer.templates.template({id: template.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.templates">Templates</a> &gt; {{ ::template.Title }} </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <template-form\n          model="template"\n          categories="categories"\n          networks="networks"\n          form-action="update"\n          show-type-selector="false"\n          form-action-label="Update the template"\n          action-in-progress="state.actionInProgress"\n        ></template-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/templates/create/createtemplate.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create template"></rd-header-title>\n  <rd-header-content> <a ui-sref="portainer.templates">Templates</a> &gt; Add template </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <template-form\n          model="model"\n          categories="categories"\n          networks="networks"\n          form-action="create"\n          show-type-selector="true"\n          form-action-label="Create the template"\n          action-in-progress="state.actionInProgress"\n        ></template-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a={"./__module.js":318,"./agent/_module.js":319,"./agent/components/file-uploader/file-uploader-controller.js":507,"./agent/components/file-uploader/file-uploader.js":508,"./agent/components/files-datatable/files-datatable.js":510,"./agent/components/host-browser/host-browser-controller.js":512,"./agent/components/host-browser/host-browser.js":513,"./agent/components/node-selector/node-selector.js":515,"./agent/components/node-selector/nodeSelectorController.js":517,"./agent/components/volume-browser/volume-browser.js":518,"./agent/components/volume-browser/volumeBrowserController.js":520,"./agent/models/agent.js":289,"./agent/rest/agent.js":521,"./agent/rest/browse.js":522,"./agent/rest/host.js":523,"./agent/rest/ping.js":524,"./agent/rest/response/browse.js":165,"./agent/rest/v1/agent.js":525,"./agent/rest/v1/browse.js":526,"./agent/services/agentService.js":527,"./agent/services/hostBrowserService.js":528,"./agent/services/pingService.js":529,"./agent/services/volumeBrowserService.js":530,"./app.js":531,"./azure/_module.js":320,"./azure/components/azure-endpoint-config/azure-endpoint-config.js":692,"./azure/components/azure-sidebar-content/azure-sidebar-content.js":694,"./azure/components/datatables/containergroups-datatable/containerGroupsDatatable.js":696,"./azure/models/container_group.js":136,"./azure/models/location.js":290,"./azure/models/provider.js":291,"./azure/models/resource_group.js":292,"./azure/models/subscription.js":293,"./azure/rest/azure.js":698,"./azure/rest/container_group.js":699,"./azure/rest/location.js":700,"./azure/rest/provider.js":701,"./azure/rest/resource_group.js":702,"./azure/rest/subscription.js":703,"./azure/services/azureService.js":704,"./azure/services/containerGroupService.js":705,"./azure/services/locationService.js":706,"./azure/services/providerService.js":707,"./azure/services/resourceGroupService.js":708,"./azure/services/subscriptionService.js":709,"./azure/views/containerinstances/containerInstancesController.js":710,"./azure/views/containerinstances/create/createContainerInstanceController.js":711,"./azure/views/dashboard/dashboardController.js":712,"./config.js":713,"./constants.js":752,"./docker/__module.js":321,"./docker/components/container-capabilities/container-capabilities.js":753,"./docker/components/container-quick-actions/containerQuickActions.js":755,"./docker/components/container-restart-policy/container-restart-policy-controller.js":757,"./docker/components/container-restart-policy/container-restart-policy.js":758,"./docker/components/dashboard-cluster-agent-info/dashboard-cluster-agent-info.js":760,"./docker/components/dashboard-cluster-agent-info/dashboardClusterAgentInfoController.js":762,"./docker/components/datatables/configs-datatable/configsDatatable.js":763,"./docker/components/datatables/container-networks-datatable/containerNetworksDatatable.js":765,"./docker/components/datatables/container-networks-datatable/containerNetworksDatatableController.js":767,"./docker/components/datatables/container-processes-datatable/containerProcessesDatatable.js":768,"./docker/components/datatables/containers-datatable/actions/containersDatatableActions.js":770,"./docker/components/datatables/containers-datatable/actions/containersDatatableActionsController.js":772,"./docker/components/datatables/containers-datatable/containersDatatable.js":773,"./docker/components/datatables/containers-datatable/containersDatatableController.js":775,"./docker/components/datatables/events-datatable/eventsDatatable.js":776,"./docker/components/datatables/host-jobs-datatable/jobsDatatable.js":778,"./docker/components/datatables/host-jobs-datatable/jobsDatatableController.js":780,"./docker/components/datatables/images-datatable/imagesDatatable.js":781,"./docker/components/datatables/images-datatable/imagesDatatableController.js":783,"./docker/components/datatables/macvlan-nodes-datatable/macvlanNodesDatatable.js":784,"./docker/components/datatables/networks-datatable/network-row-content/networkRowContent.js":786,"./docker/components/datatables/networks-datatable/networksDatatable.js":788,"./docker/components/datatables/networks-datatable/networksDatatableController.js":790,"./docker/components/datatables/node-tasks-datatable/nodeTasksDatatable.js":791,"./docker/components/datatables/nodes-datatable/nodesDatatable.js":793,"./docker/components/datatables/secrets-datatable/secretsDatatable.js":795,"./docker/components/datatables/service-tasks-datatable/serviceTasksDatatable.js":797,"./docker/components/datatables/service-tasks-datatable/serviceTasksDatatableController.js":799,"./docker/components/datatables/services-datatable/actions/servicesDatatableActions.js":800,"./docker/components/datatables/services-datatable/actions/servicesDatatableActionsController.js":802,"./docker/components/datatables/services-datatable/servicesDatatable.js":803,"./docker/components/datatables/services-datatable/servicesDatatableController.js":805,"./docker/components/datatables/tasks-datatable/tasksDatatable.js":806,"./docker/components/datatables/tasks-datatable/tasksDatatableController.js":808,"./docker/components/datatables/volumes-datatable/volumesDatatable.js":809,"./docker/components/datatables/volumes-datatable/volumesDatatableController.js":811,"./docker/components/dockerSidebarContent/docker-sidebar-content.js":812,"./docker/components/host-overview/host-overview.js":814,"./docker/components/host-view-panels/devices-panel/devices-panel.js":816,"./docker/components/host-view-panels/disks-panel/disks-panel.js":818,"./docker/components/host-view-panels/engine-details-panel/engine-details-panel.js":820,"./docker/components/host-view-panels/host-details-panel/host-details-panel.js":822,"./docker/components/host-view-panels/node-availability-select/node-availability-select-controller.js":824,"./docker/components/host-view-panels/node-availability-select/node-availability-select.js":825,"./docker/components/host-view-panels/node-labels-table/node-labels-table-controller.js":827,"./docker/components/host-view-panels/node-labels-table/node-labels-table.js":828,"./docker/components/host-view-panels/swarm-node-details-panel/swarm-node-details-panel-controller.js":830,"./docker/components/host-view-panels/swarm-node-details-panel/swarm-node-details-panel.js":831,"./docker/components/imageRegistry/por-image-registry.js":833,"./docker/components/imageRegistry/porImageRegistryController.js":835,"./docker/components/log-viewer/log-viewer.js":836,"./docker/components/log-viewer/logViewerController.js":838,"./docker/components/network-macvlan-form/network-macvlan-form.js":840,"./docker/components/network-macvlan-form/networkMacvlanFormController.js":842,"./docker/components/network-macvlan-form/networkMacvlanFormModel.js":294,"./docker/components/volumesCIFSForm/volumesCifsForm.js":843,"./docker/components/volumesCIFSForm/volumesCifsFormModel.js":295,"./docker/components/volumesNFSForm/volumes-nfs-form.js":845,"./docker/components/volumesNFSForm/volumesNFSFormModel.js":296,"./docker/filters/filters.js":847,"./docker/helpers/configHelper.js":848,"./docker/helpers/constraintsHelper.js":849,"./docker/helpers/containerHelper.js":850,"./docker/helpers/imageHelper.js":851,"./docker/helpers/infoHelper.js":852,"./docker/helpers/labelHelper.js":853,"./docker/helpers/logHelper.js":854,"./docker/helpers/networkHelper.js":114,"./docker/helpers/nodeHelper.js":855,"./docker/helpers/secretHelper.js":856,"./docker/helpers/serviceHelper.js":857,"./docker/helpers/taskHelper.js":858,"./docker/helpers/volumeHelper.js":859,"./docker/interceptors/containersInterceptor.js":860,"./docker/interceptors/imagesInterceptor.js":861,"./docker/interceptors/infoInterceptor.js":862,"./docker/interceptors/networksInterceptor.js":863,"./docker/interceptors/versionInterceptor.js":864,"./docker/interceptors/volumesInterceptor.js":865,"./docker/models/config.js":225,"./docker/models/container.js":81,"./docker/models/containerCapabilities.js":151,"./docker/models/event.js":297,"./docker/models/image.js":115,"./docker/models/imageDetails.js":298,"./docker/models/imageLayer.js":299,"./docker/models/network.js":226,"./docker/models/node.js":227,"./docker/models/plugin.js":300,"./docker/models/porImageRegistry.js":30,"./docker/models/secret.js":228,"./docker/models/service.js":229,"./docker/models/swarm.js":301,"./docker/models/task.js":230,"./docker/models/volume.js":173,"./docker/rest/build.js":866,"./docker/rest/commit.js":867,"./docker/rest/config.js":868,"./docker/rest/container.js":869,"./docker/rest/exec.js":870,"./docker/rest/image.js":871,"./docker/rest/network.js":872,"./docker/rest/node.js":873,"./docker/rest/plugin.js":874,"./docker/rest/response/handlers.js":11,"./docker/rest/response/image.js":302,"./docker/rest/secret.js":875,"./docker/rest/service.js":876,"./docker/rest/swarm.js":877,"./docker/rest/system.js":878,"./docker/rest/systemEndpoint.js":879,"./docker/rest/task.js":880,"./docker/rest/volume.js":881,"./docker/services/buildService.js":882,"./docker/services/configService.js":883,"./docker/services/containerService.js":884,"./docker/services/execService.js":885,"./docker/services/imageService.js":886,"./docker/services/networkService.js":887,"./docker/services/nodeService.js":888,"./docker/services/pluginService.js":889,"./docker/services/secretService.js":890,"./docker/services/serviceService.js":891,"./docker/services/swarmService.js":892,"./docker/services/systemService.js":893,"./docker/services/taskService.js":894,"./docker/services/volumeService.js":895,"./docker/views/configs/configsController.js":896,"./docker/views/configs/create/createConfigController.js":897,"./docker/views/configs/edit/configController.js":898,"./docker/views/containers/console/containerConsoleController.js":899,"./docker/views/containers/containersController.js":900,"./docker/views/containers/create/createContainerController.js":901,"./docker/views/containers/edit/containerController.js":902,"./docker/views/containers/inspect/containerInspectController.js":903,"./docker/views/containers/logs/containerLogsController.js":904,"./docker/views/containers/stats/containerStatsController.js":905,"./docker/views/dashboard/dashboardController.js":906,"./docker/views/events/eventsController.js":907,"./docker/views/host/host-browser-view/host-browser-view-controller.js":908,"./docker/views/host/host-browser-view/host-browser-view.js":909,"./docker/views/host/host-job/host-job-controller.js":911,"./docker/views/host/host-job/host-job.js":912,"./docker/views/host/host-view-controller.js":914,"./docker/views/host/host-view.js":915,"./docker/views/images/build/buildImageController.js":917,"./docker/views/images/edit/imageController.js":918,"./docker/views/images/imagesController.js":919,"./docker/views/images/import/importImageController.js":920,"./docker/views/networks/create/createNetworkController.js":921,"./docker/views/networks/edit/networkController.js":922,"./docker/views/networks/networksController.js":923,"./docker/views/nodes/node-browser/node-browser-controller.js":924,"./docker/views/nodes/node-browser/node-browser.js":925,"./docker/views/nodes/node-details/node-details-view-controller.js":927,"./docker/views/nodes/node-details/node-details-view.js":928,"./docker/views/nodes/node-job/node-job-controller.js":930,"./docker/views/nodes/node-job/node-job.js":931,"./docker/views/secrets/create/createSecretController.js":933,"./docker/views/secrets/edit/secretController.js":934,"./docker/views/secrets/secretsController.js":935,"./docker/views/services/create/createServiceController.js":936,"./docker/views/services/edit/serviceController.js":941,"./docker/views/services/logs/serviceLogsController.js":960,"./docker/views/services/servicesController.js":961,"./docker/views/swarm/swarmController.js":962,"./docker/views/swarm/visualizer/swarmVisualizerController.js":963,"./docker/views/tasks/edit/taskController.js":964,"./docker/views/tasks/logs/taskLogsController.js":965,"./docker/views/volumes/browse/browseVolumeController.js":966,"./docker/views/volumes/create/createVolumeController.js":967,"./docker/views/volumes/edit/volumeController.js":968,"./docker/views/volumes/volumesController.js":969,"./edge/__module.js":322,"./edge/components/associated-endpoints-datatable/associatedEndpointsDatatable.js":970,"./edge/components/associated-endpoints-datatable/associatedEndpointsDatatableController.js":972,"./edge/components/edge-groups-selector/edge-groups-selector.js":973,"./edge/components/edge-stack-endpoints-datatable/edgeStackEndpointsDatatable.js":975,"./edge/components/edge-stack-endpoints-datatable/edgeStackEndpointsDatatableController.js":977,"./edge/components/edge-stack-status/edgeStackStatus.js":978,"./edge/components/edge-stack-status/edgeStackStatusController.js":981,"./edge/components/edge-stacks-datatable/edgeStacksDatatable.js":982,"./edge/components/edit-edge-stack-form/editEdgeStackForm.js":984,"./edge/components/edit-edge-stack-form/editEdgeStackFormController.js":986,"./edge/components/group-form/groupForm.js":987,"./edge/components/group-form/groupFormController.js":989,"./edge/components/groups-datatable/groupsDatatable.js":990,"./edge/components/groups-datatable/groupsDatatableController.js":992,"./edge/rest/edge-groups.js":993,"./edge/rest/edge-stacks.js":994,"./edge/rest/edge-templates.js":995,"./edge/services/edge-group.js":996,"./edge/services/edge-stack.js":997,"./edge/services/edge-template.js":998,"./edge/views/edge-stacks/create/createEdgeStackView.js":999,"./edge/views/edge-stacks/create/createEdgeStackViewController.js":1001,"./edge/views/edge-stacks/edgeStacksView.js":1002,"./edge/views/edge-stacks/edgeStacksViewController.js":1004,"./edge/views/edge-stacks/edit/editEdgeStackView.js":1005,"./edge/views/edge-stacks/edit/editEdgeStackViewController.js":1007,"./edge/views/groups/create/createEdgeGroupView.js":1008,"./edge/views/groups/create/createEdgeGroupViewController.js":1010,"./edge/views/groups/edgeGroupsView.js":1011,"./edge/views/groups/edgeGroupsViewController.js":1013,"./edge/views/groups/edit/editEdgeGroupView.js":1014,"./edge/views/groups/edit/editEdgeGroupViewController.js":1016,"./extensions/_module.js":1017,"./extensions/oauth/__module.js":1018,"./extensions/oauth/components/oauth-providers-selector/oauth-provider-selector-controller.js":1019,"./extensions/oauth/components/oauth-providers-selector/oauth-providers-selector.js":1020,"./extensions/oauth/components/oauth-settings/oauth-settings-controller.js":1022,"./extensions/oauth/components/oauth-settings/oauth-settings.js":1023,"./extensions/oauth/services/rest/oauth.js":1025,"./extensions/rbac/__module.js":1026,"./extensions/rbac/components/access-viewer/accessViewer.js":1028,"./extensions/rbac/components/access-viewer/accessViewerController.js":1030,"./extensions/rbac/components/access-viewer/datatable/accessViewerDatatable.js":1031,"./extensions/rbac/components/roles-datatable/rolesDatatable.js":1033,"./extensions/rbac/directives/authorization.js":1035,"./extensions/rbac/directives/disable-authorization.js":1036,"./extensions/rbac/models/access.js":152,"./extensions/rbac/models/role.js":303,"./extensions/rbac/rest/role.js":1037,"./extensions/rbac/services/roleService.js":1038,"./extensions/rbac/views/roles/rolesController.js":1039,"./extensions/registry-management/_module.js":1040,"./extensions/registry-management/components/registries-repositories-datatable/registryRepositoriesDatatable.js":1045,"./extensions/registry-management/components/registries-repositories-datatable/registryRepositoriesDatatableController.js":1047,"./extensions/registry-management/components/registries-repository-tags-datatable/registriesRepositoryTagsDatatable.js":1048,"./extensions/registry-management/components/registries-repository-tags-datatable/registryRepositoriesTagsDatatableController.js":1050,"./extensions/registry-management/helpers/localRegistryHelper.js":1051,"./extensions/registry-management/models/gitlabRegistry.js":304,"./extensions/registry-management/models/registryImageDetails.js":305,"./extensions/registry-management/models/registryImageLayer.js":306,"./extensions/registry-management/models/registryRepository.js":144,"./extensions/registry-management/models/registryTypes.js":21,"./extensions/registry-management/models/repositoryTag.js":58,"./extensions/registry-management/rest/catalog.js":1052,"./extensions/registry-management/rest/gitlab.js":1053,"./extensions/registry-management/rest/manifestJquery.js":1054,"./extensions/registry-management/rest/tags.js":1055,"./extensions/registry-management/rest/transform/gitlabResponseGetLink.js":235,"./extensions/registry-management/rest/transform/linkGetResponse.js":167,"./extensions/registry-management/services/genericAsyncGenerator.js":174,"./extensions/registry-management/services/registryGitlabService.js":1056,"./extensions/registry-management/services/registryServiceSelector.js":1057,"./extensions/registry-management/services/registryV2Service.js":1058,"./extensions/registry-management/views/configure/configureRegistryController.js":1059,"./extensions/registry-management/views/repositories/edit/progression-modal/progressionModal.js":1060,"./extensions/registry-management/views/repositories/edit/registryRepositoryController.js":1062,"./extensions/registry-management/views/repositories/registryRepositoriesController.js":1063,"./extensions/registry-management/views/repositories/tag/registryRepositoryTagController.js":1064,"./integrations/_module.js":1065,"./integrations/storidge/_module.js":1066,"./integrations/storidge/components/cluster-events-datatable/storidgeClusterEventsDatatable.js":1076,"./integrations/storidge/components/drives-datatable/storidgeDrivesDatatable.js":1078,"./integrations/storidge/components/drives-datatable/storidgeDrivesDatatableController.js":1080,"./integrations/storidge/components/nodes-datatable/storidgeNodesDatatable.js":1081,"./integrations/storidge/components/nodes-datatable/storidgeNodesDatatableController.js":1083,"./integrations/storidge/components/profileSelector/storidgeProfileSelector.js":1084,"./integrations/storidge/components/profileSelector/storidgeProfileSelectorController.js":1086,"./integrations/storidge/components/profiles-datatable/storidgeProfilesDatatable.js":1087,"./integrations/storidge/components/snapshot-creation/storidgeSnapshotCreation.js":1089,"./integrations/storidge/components/snapshot-creation/storidgeSnapshotCreationController.js":1091,"./integrations/storidge/components/snapshots-datatable/storidgeSnapshotsDatatable.js":1092,"./integrations/storidge/components/volume-storidge-info/volumeStoridgeInfo.js":1094,"./integrations/storidge/components/volume-storidge-info/volumeStoridgeInfoController.js":1096,"./integrations/storidge/filters/filters.js":1097,"./integrations/storidge/models/drive.js":236,"./integrations/storidge/models/events.js":307,"./integrations/storidge/models/info.js":308,"./integrations/storidge/models/node.js":237,"./integrations/storidge/models/profile.js":70,"./integrations/storidge/models/snapshot.js":238,"./integrations/storidge/models/volume.js":239,"./integrations/storidge/rest/storidge.js":1098,"./integrations/storidge/services/chartService.js":1099,"./integrations/storidge/services/clusterService.js":1147,"./integrations/storidge/services/driveService.js":1148,"./integrations/storidge/services/nodeService.js":1149,"./integrations/storidge/services/profileService.js":1150,"./integrations/storidge/services/snapshotService.js":1151,"./integrations/storidge/services/volumeService.js":1152,"./integrations/storidge/views/cluster/clusterController.js":1153,"./integrations/storidge/views/drives/drivesController.js":1154,"./integrations/storidge/views/drives/inspect/driveController.js":1155,"./integrations/storidge/views/monitor/monitorController.js":1156,"./integrations/storidge/views/nodes/inspect/nodeController.js":1157,"./integrations/storidge/views/profiles/create/createProfileController.js":1158,"./integrations/storidge/views/profiles/edit/profileController.js":1159,"./integrations/storidge/views/profiles/profilesController.js":1160,"./integrations/storidge/views/snapshots/inspect/snapshotController.js":1161,"./portainer/__module.js":323,"./portainer/components/access-datatable/accessDatatable.js":1162,"./portainer/components/access-datatable/accessDatatableController.js":1164,"./portainer/components/access-table/access-table.js":1165,"./portainer/components/accessControlForm/por-access-control-form.js":1167,"./portainer/components/accessControlForm/porAccessControlFormController.js":1169,"./portainer/components/accessControlForm/porAccessControlFormModel.js":32,"./portainer/components/accessControlPanel/por-access-control-panel.js":1170,"./portainer/components/accessControlPanel/porAccessControlPanelController.js":1172,"./portainer/components/accessControlPanel/porAccessControlPanelModel.js":309,"./portainer/components/accessManagement/por-access-management.js":1173,"./portainer/components/accessManagement/porAccessManagementController.js":1175,"./portainer/components/autofocus.js":1176,"./portainer/components/buttonSpinner.js":1177,"./portainer/components/code-editor/code-editor.js":1178,"./portainer/components/code-editor/codeEditorController.js":1180,"./portainer/components/datatables/endpoints-datatable/endpointsDatatable.js":1181,"./portainer/components/datatables/endpoints-datatable/endpointsDatatableController.js":1183,"./portainer/components/datatables/genericDatatableController.js":1184,"./portainer/components/datatables/groups-datatable/groupsDatatable.js":1186,"./portainer/components/datatables/registries-datatable/registriesDatatable.js":1188,"./portainer/components/datatables/schedule-tasks-datatable/scheduleTasksDatatable.js":1190,"./portainer/components/datatables/schedules-datatable/schedulesDatatable.js":1192,"./portainer/components/datatables/schedules-datatable/schedulesDatatableController.js":1194,"./portainer/components/datatables/stacks-datatable/stacksDatatable.js":1195,"./portainer/components/datatables/stacks-datatable/stacksDatatableController.js":1197,"./portainer/components/datatables/tags-datatable/tagsDatatable.js":1198,"./portainer/components/datatables/teams-datatable/teamsDatatable.js":1200,"./portainer/components/datatables/users-datatable/usersDatatable.js":1202,"./portainer/components/endpoint-list/endpoint-item/endpoint-item-controller.js":310,"./portainer/components/endpoint-list/endpoint-item/endpointItem.js":1251,"./portainer/components/endpoint-list/endpoint-list-controller.js":1254,"./portainer/components/endpoint-list/endpoint-list.js":1255,"./portainer/components/endpoint-selector/endpoint-selector.js":1257,"./portainer/components/endpoint-selector/endpointSelectorController.js":1259,"./portainer/components/endpointSecurity/por-endpoint-security.js":1260,"./portainer/components/endpointSecurity/porEndpointSecurityController.js":1262,"./portainer/components/endpointSecurity/porEndpointSecurityModel.js":168,"./portainer/components/extension-list/extension-item/extension-item.js":1263,"./portainer/components/extension-list/extension-item/extensionItemController.js":1265,"./portainer/components/extension-list/extension-list.js":1266,"./portainer/components/forms/execute-job-form/execute-job-form-controller.js":1268,"./portainer/components/forms/execute-job-form/execute-job-form.js":1269,"./portainer/components/forms/group-form/group-form.js":1271,"./portainer/components/forms/group-form/groupFormController.js":311,"./portainer/components/forms/registry-form-azure/registry-form-azure.js":1273,"./portainer/components/forms/registry-form-custom/registry-form-custom.js":1275,"./portainer/components/forms/registry-form-gitlab/gitlab-projects-datatable/gitlabProjectsDatatable.js":1277,"./portainer/components/forms/registry-form-gitlab/gitlab-projects-datatable/gitlabProjectsDatatableController.js":1279,"./portainer/components/forms/registry-form-gitlab/registry-form-gitlab.js":1280,"./portainer/components/forms/registry-form-quay/registry-form-quay.js":1282,"./portainer/components/forms/schedule-form/schedule-form.js":1284,"./portainer/components/forms/template-form/template-form.js":1286,"./portainer/components/forms/template-form/templateFormController.js":1288,"./portainer/components/group-association-table/group-association-table.js":1289,"./portainer/components/header-content.js":1291,"./portainer/components/header-title.js":1292,"./portainer/components/header.js":1293,"./portainer/components/information-panel-offline/informationPanelOffline.js":1294,"./portainer/components/information-panel-offline/informationPanelOfflineController.js":1296,"./portainer/components/information-panel/information-panel.js":1297,"./portainer/components/loading.js":1299,"./portainer/components/motd-panel/motd-panel.js":1300,"./portainer/components/multi-endpoint-selector/multi-endpoint-selector.js":1302,"./portainer/components/multi-endpoint-selector/multiEndpointSelectorController.js":1304,"./portainer/components/onEnterKey.js":1305,"./portainer/components/product-list/product-item/product-item.js":1306,"./portainer/components/product-list/product-list.js":1310,"./portainer/components/slider/slider.js":1312,"./portainer/components/slider/sliderController.js":1314,"./portainer/components/stack-duplication-form/stack-duplication-form-controller.js":1315,"./portainer/components/stack-duplication-form/stack-duplication-form.js":1316,"./portainer/components/tag-selector/tag-selector.js":1318,"./portainer/components/tag-selector/tagSelectorController.js":1320,"./portainer/components/template-list/template-item/template-item.js":1321,"./portainer/components/template-list/template-list-controller.js":1323,"./portainer/components/template-list/template-list.js":1324,"./portainer/components/template-widget.js":1326,"./portainer/components/tooltip.js":1327,"./portainer/components/widget-body.js":1328,"./portainer/components/widget-custom-header.js":1329,"./portainer/components/widget-footer.js":1330,"./portainer/components/widget-header.js":1331,"./portainer/components/widget-taskbar.js":1332,"./portainer/components/widget.js":1333,"./portainer/filters/filters.js":1334,"./portainer/helpers/endpointHelper.js":1335,"./portainer/helpers/formHelper.js":1336,"./portainer/helpers/networkHelper.js":1337,"./portainer/helpers/resourceControlHelper.js":1338,"./portainer/helpers/stackHelper.js":1339,"./portainer/helpers/tagHelper.js":110,"./portainer/helpers/templateHelper.js":1340,"./portainer/helpers/urlHelper.js":1341,"./portainer/helpers/userHelper.js":1342,"./portainer/helpers/webhookHelper.js":1343,"./portainer/interceptors/endpointStatusInterceptor.js":1344,"./portainer/models/access.js":169,"./portainer/models/dockerhub.js":166,"./portainer/models/extension.js":240,"./portainer/models/group.js":116,"./portainer/models/motd.js":312,"./portainer/models/registry.js":69,"./portainer/models/resourceControl/resourceControl.js":34,"./portainer/models/resourceControl/resourceControlCreatePayload.js":1345,"./portainer/models/resourceControl/resourceControlOwnership.js":7,"./portainer/models/resourceControl/resourceControlOwnershipParameters.js":153,"./portainer/models/resourceControl/resourceControlTypes.js":72,"./portainer/models/resourceControl/resourceControlUpdatePayload.js":1346,"./portainer/models/schedule.js":71,"./portainer/models/settings.js":241,"./portainer/models/stack.js":118,"./portainer/models/status.js":242,"./portainer/models/tag.js":243,"./portainer/models/team.js":244,"./portainer/models/teamMembership.js":111,"./portainer/models/template.js":98,"./portainer/models/user.js":245,"./portainer/models/webhook.js":313,"./portainer/rest/auth.js":1347,"./portainer/rest/dockerhub.js":1348,"./portainer/rest/endpoint.js":1349,"./portainer/rest/extension.js":1350,"./portainer/rest/group.js":1351,"./portainer/rest/legacyExtension.js":1352,"./portainer/rest/motd.js":1353,"./portainer/rest/registry.js":1354,"./portainer/rest/resourceControl.js":1355,"./portainer/rest/schedule.js":1356,"./portainer/rest/settings.js":1357,"./portainer/rest/stack.js":1358,"./portainer/rest/status.js":1359,"./portainer/rest/support.js":1360,"./portainer/rest/tag.js":1361,"./portainer/rest/team.js":1362,"./portainer/rest/teamMembership.js":1363,"./portainer/rest/template.js":1364,"./portainer/rest/transform/getEndpointsTotalCount.js":314,"./portainer/rest/user.js":1365,"./portainer/rest/webhooks.js":1366,"./portainer/services/api/accessService.js":1367,"./portainer/services/api/dockerhubService.js":1368,"./portainer/services/api/endpointService.js":1369,"./portainer/services/api/extensionService.js":1370,"./portainer/services/api/groupService.js":1371,"./portainer/services/api/legacyExtensionService.js":1372,"./portainer/services/api/motdService.js":1373,"./portainer/services/api/registryService.js":1374,"./portainer/services/api/resourceControlService.js":1375,"./portainer/services/api/scheduleService.js":1376,"./portainer/services/api/settingsService.js":1377,"./portainer/services/api/stackService.js":1378,"./portainer/services/api/statusService.js":1379,"./portainer/services/api/supportService.js":1380,"./portainer/services/api/tagService.js":1381,"./portainer/services/api/teamMembershipService.js":1382,"./portainer/services/api/teamService.js":1383,"./portainer/services/api/templateService.js":1384,"./portainer/services/api/userService.js":1385,"./portainer/services/api/webhookService.js":1386,"./portainer/services/async.js":1387,"./portainer/services/authentication.js":1388,"./portainer/services/chartService.js":1389,"./portainer/services/codeMirror.js":1390,"./portainer/services/datatableService.js":1420,"./portainer/services/endpointProvider.js":1421,"./portainer/services/fileUpload.js":1422,"./portainer/services/formValidator.js":1423,"./portainer/services/httpRequestHelper.js":1424,"./portainer/services/legacyExtensionManager.js":1425,"./portainer/services/localStorage.js":1426,"./portainer/services/modalService.js":1427,"./portainer/services/notifications.js":1428,"./portainer/services/pagination.js":1429,"./portainer/services/stateManager.js":1430,"./portainer/views/account/accountController.js":1431,"./portainer/views/auth/authController.js":1432,"./portainer/views/endpoints/access/endpointAccessController.js":1435,"./portainer/views/endpoints/create/createEndpointController.js":1436,"./portainer/views/endpoints/edit/endpointController.js":1437,"./portainer/views/endpoints/endpointsController.js":1438,"./portainer/views/extensions/extensionsController.js":1439,"./portainer/views/extensions/inspect/extensionController.js":1440,"./portainer/views/groups/access/groupAccessController.js":1441,"./portainer/views/groups/create/createGroupController.js":1442,"./portainer/views/groups/edit/groupController.js":1443,"./portainer/views/groups/groupsController.js":1444,"./portainer/views/home/homeController.js":1445,"./portainer/views/init/admin/initAdminController.js":1446,"./portainer/views/init/endpoint/initEndpointController.js":1447,"./portainer/views/main/mainController.js":1448,"./portainer/views/registries/access/registryAccessController.js":1449,"./portainer/views/registries/create/createRegistryController.js":1450,"./portainer/views/registries/edit/registryController.js":1451,"./portainer/views/registries/registriesController.js":1452,"./portainer/views/schedules/create/createScheduleController.js":1453,"./portainer/views/schedules/edit/scheduleController.js":1454,"./portainer/views/schedules/schedulesController.js":1455,"./portainer/views/settings/authentication/settingsAuthenticationController.js":1456,"./portainer/views/settings/settingsController.js":1457,"./portainer/views/sidebar/sidebarController.js":1458,"./portainer/views/stacks/create/createStackController.js":1459,"./portainer/views/stacks/edit/stackController.js":1460,"./portainer/views/stacks/stacksController.js":1461,"./portainer/views/support/product/productController.js":1462,"./portainer/views/support/supportController.js":1463,"./portainer/views/tags/tagsController.js":1464,"./portainer/views/teams/edit/teamController.js":1465,"./portainer/views/teams/teamsController.js":1466,"./portainer/views/templates/create/createTemplateController.js":1467,"./portainer/views/templates/edit/templateController.js":1468,"./portainer/views/templates/templatesController.js":1469,"./portainer/views/update-password/updatePasswordController.js":1470,"./portainer/views/users/edit/userController.js":1471,"./portainer/views/users/usersController.js":1472,"./vendors.js":1473};function r(e){var t=i(e);return n(t)}function i(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=i,e.exports=r,r.id=506},function(e,t){angular.module("portainer.agent").controller("FileUploaderController",["$q",function(e){var t=this;t.state={uploadInProgress:!1},t.onFileSelected=function(n){if(!n)return;t.state.uploadInProgress=!0,e.when(t.uploadFile(n)).finally((function(){t.state.uploadInProgress=!1}))}}])},function(e,t,n){var a=n(509);angular.module("portainer.agent").component("fileUploader",{templateUrl:a,controller:"FileUploaderController",bindings:{uploadFile:"<onFileSelected"}})},function(e,t){var n="app/agent/components/file-uploader/file-uploader.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<button ngf-select="$ctrl.onFileSelected($file)" class="btn ng-scope" button-spinner="$ctrl.state.uploadInProgress">\n  <i style="margin: 0;" class="fa fa-upload" ng-if="!$ctrl.state.uploadInProgress"></i>\n</button>\n')}]),e.exports=n},function(e,t,n){var a=n(511);angular.module("portainer.agent").component("filesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",isRoot:"<",goToParent:"&",browse:"&",rename:"&",download:"&",delete:"&",isUploadAllowed:"<",onFileSelectedForUpload:"<"}})},function(e,t){var n="app/agent/components/files-datatable/files-datatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-header icon="{{ $ctrl.titleIcon }}" title-text="{{ $ctrl.titleText }}">\n      <file-uploader authorization="DockerAgentBrowsePut" ng-if="$ctrl.isUploadAllowed" on-file-selected="($ctrl.onFileSelectedForUpload)"> </file-uploader>\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-model-options="{ debounce: 300 }"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Size\')">\n                  Size\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Size\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Size\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'ModTime\')">\n                  Last modification\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ModTime\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ModTime\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-if="!$ctrl.isRoot">\n              <td colspan="4">\n                <a ng-click="$ctrl.goToParent()"><i class="fa fa-level-up-alt space-right"></i>Go to parent</a>\n              </td>\n            </tr>\n            <tr ng-repeat="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder))">\n              <td>\n                <span ng-if="item.edit">\n                  <input\n                    class="input-sm"\n                    type="text"\n                    ng-model="item.newName"\n                    on-enter-key="$ctrl.rename({ name: item.Name, newName: item.newName }); item.edit = false"\n                    auto-focus\n                  />\n                  <a class="interactive" ng-click="item.edit = false;"><i class="fa fa-times"></i></a>\n                  <a class="interactive" ng-click="$ctrl.rename({name: item.Name, newName: item.newName}); item.edit = false;"><i class="fa fa-check-square"></i></a>\n                </span>\n                <span ng-if="!item.edit && item.Dir">\n                  <a ng-click="$ctrl.browse({name: item.Name})"><i class="fa fa-folder space-right" aria-hidden="true"></i>{{ item.Name }}</a>\n                </span>\n                <span ng-if="!item.edit && !item.Dir"> <i class="fa fa-file space-right" aria-hidden="true"></i>{{ item.Name }} </span>\n              </td>\n              <td>{{ item.Size | humansize }}</td>\n              <td>\n                {{ item.ModTime | getisodatefromtimestamp }}\n              </td>\n              <td>\n                <btn authorization="DockerAgentBrowseGet" class="btn btn-xs btn-primary space-right" ng-click="$ctrl.download({ name: item.Name })" ng-if="!item.Dir">\n                  <i class="fa fa-download" aria-hidden="true"></i> Download\n                </btn>\n                <btn authorization="DockerAgentBrowseRename" class="btn btn-xs btn-primary space-right" ng-click="item.newName = item.Name; item.edit = true">\n                  <i class="fa fa-edit" aria-hidden="true"></i> Rename\n                </btn>\n                <btn authorization="DockerAgentBrowseDelete" class="btn btn-xs btn-danger" ng-click="$ctrl.delete({ name: item.Name })">\n                  <i class="fa fa-trash" aria-hidden="true"></i> Delete\n                </btn>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="5" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">No files found.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(135),r=n(55),i=n(22);angular.module("portainer.agent").controller("HostBrowserController",["HostBrowserService","Notifications","FileSaver","ModalService",function(e,t,n,o){var s=this;function l(e){e=e||s.state.path;var t=new RegExp("^/host/?");return e.replace(t,"/")}function c(n){e.ls(n).then((function(e){s.state.path=n,s.files=e})).catch((function(e){t.error("Failure",e,"Unable to browse")}))}function d(e,t){return e.lastIndexOf("/")===e.length-1?e+t:e+"/"+t}s.state={path:"/host"},s.goToParent=function(){c(function(e){if("/host"===e)return"/host";var t=Object(i.a)(e,"/");return Object(r.a)(Object(a.a)(t,0,t.length-1),"/")}(this.state.path))},s.browse=function(e){c(d(s.state.path,e))},s.renameFile=function(n,a){var r=d(s.state.path,n),i=d(s.state.path,a);e.rename(r,i).then((function(){return t.success("File successfully renamed",l(i)),e.ls(s.state.path)})).then((function(e){s.files=e})).catch((function(e){t.error("Failure",e,"Unable to rename file")}))},s.downloadFile=function(a){var r=d(s.state.path,a);e.get(r).then((function(e){var t=new Blob([e.file],{type:"text/plain;charset=utf-8"});n.saveAs(t,a)})).catch((function(e){t.error("Failure",e,"Unable to download file")}))},s.deleteFile=function(n){var a=d(s.state.path,n);o.confirmDeletion("Are you sure that you want to delete "+l(a)+" ?",(function(n){var r;if(n)return r=a,void e.delete(r).then((function(){return t.success("File successfully deleted",l(r)),e.ls(s.state.path)})).then((function(e){s.files=e})).catch((function(e){t.error("Failure",e,"Unable to delete file")}))}))},s.isRoot=function(){return"/host"===s.state.path},s.onFileSelectedForUpload=function(n){e.upload(s.state.path,n).then((function(){c(s.state.path)})).catch((function(e){t.error("Failure",e,"Unable to upload file")}))},s.$onInit=function(){c("/host")},s.getRelativePath=l}])},function(e,t,n){var a=n(514);angular.module("portainer.agent").component("hostBrowser",{controller:"HostBrowserController",templateUrl:a,bindings:{}})},function(e,t){var n="app/agent/components/host-browser/host-browser.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<files-datatable\n  title-text="Host browser - {{ $ctrl.getRelativePath() }}"\n  title-icon="fa-file"\n  dataset="$ctrl.files"\n  table-key="host_browser"\n  order-by="Dir"\n  is-root="$ctrl.isRoot()"\n  go-to-parent="$ctrl.goToParent()"\n  browse="$ctrl.browse(name)"\n  rename="$ctrl.renameFile(name, newName)"\n  download="$ctrl.downloadFile(name)"\n  delete="$ctrl.deleteFile(name)"\n  is-upload-allowed="true"\n  on-file-selected-for-upload="($ctrl.onFileSelectedForUpload)"\n>\n</files-datatable>\n')}]),e.exports=n},function(e,t,n){var a=n(516);angular.module("portainer.agent").component("nodeSelector",{templateUrl:a,controller:"NodeSelectorController",bindings:{model:"="}})},function(e,t){var n="app/agent/components/node-selector/nodeSelector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="form-group">\n  <label for="target_node" class="col-sm-1 control-label text-left">Node</label>\n  <div class="col-sm-11">\n    <select class="form-control" ng-model="$ctrl.model" ng-options="agent.NodeName as agent.NodeName for agent in $ctrl.agents"></select>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.agent").controller("NodeSelectorController",["AgentService","Notifications",function(e,t){var n=this;this.$onInit=function(){e.agents().then((function(e){n.agents=e,n.model||(n.model=e[0].NodeName)})).catch((function(e){t.error("Failure",e,"Unable to load agents")}))}}])},function(e,t,n){var a=n(519);angular.module("portainer.agent").component("volumeBrowser",{templateUrl:a,controller:"VolumeBrowserController",bindings:{volumeId:"<",nodeName:"<",isUploadEnabled:"<"}})},function(e,t){var n="app/agent/components/volume-browser/volumeBrowser.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<files-datatable\n  title-text="Volume browser"\n  title-icon="fa-file"\n  dataset="$ctrl.files"\n  table-key="volume_browser"\n  order-by="Dir"\n  is-root="$ctrl.state.path === \'/\'"\n  go-to-parent="$ctrl.up()"\n  browse="$ctrl.browse(name)"\n  rename="$ctrl.rename(name, newName)"\n  download="$ctrl.download(name)"\n  delete="$ctrl.delete(name)"\n  is-upload-allowed="$ctrl.isUploadEnabled"\n  on-file-selected-for-upload="($ctrl.onFileSelectedForUpload)"\n></files-datatable>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(135),r=n(55),i=n(22);angular.module("portainer.agent").controller("VolumeBrowserController",["HttpRequestHelper","VolumeBrowserService","FileSaver","Blob","ModalService","Notifications",function(e,t,n,o,s,l){var c=this;function d(e){t.ls(c.volumeId,e).then((function(t){c.state.path=e,c.files=t})).catch((function(e){l.error("Failure",e,"Unable to browse volume")}))}this.state={path:"/"},this.rename=function(e,n){var a="/"===this.state.path?e:this.state.path+"/"+e,r="/"===this.state.path?n:this.state.path+"/"+n;t.rename(this.volumeId,a,r).then((function(){return l.success("File successfully renamed",r),t.ls(c.volumeId,c.state.path)})).then((function(e){c.files=e})).catch((function(e){l.error("Failure",e,"Unable to rename file")}))},this.delete=function(e){var n="/"===this.state.path?e:this.state.path+"/"+e;s.confirmDeletion("Are you sure that you want to delete "+n+" ?",(function(e){e&&function(e){t.delete(c.volumeId,e).then((function(){return l.success("File successfully deleted",e),t.ls(c.volumeId,c.state.path)})).then((function(e){c.files=e})).catch((function(e){l.error("Failure",e,"Unable to delete file")}))}(n)}))},this.download=function(e){var a="/"===this.state.path?e:this.state.path+"/"+e;t.get(this.volumeId,a).then((function(t){var a=new o([t.file]);n.saveAs(a,e)})).catch((function(e){l.error("Failure",e,"Unable to download file")}))},this.up=function(){d(function(e){if(0===e.lastIndexOf("/"))return"/";var t=Object(i.a)(e,"/");return Object(r.a)(Object(a.a)(t,0,t.length-1),"/")}(this.state.path))},this.browse=function(e){d(function(e,t){if("/"===e)return e+t;return e+"/"+t}(this.state.path,e))},this.onFileSelectedForUpload=function(e){t.upload(c.state.path,e,c.volumeId).then((function(){d(c.state.path)})).catch((function(e){l.error("Failure",e,"Unable to upload file")}))},this.$onInit=function(){e.setPortainerAgentTargetHeader(this.nodeName),t.ls(this.volumeId,this.state.path).then((function(e){c.files=e})).catch((function(e){l.error("Failure",e,"Unable to browse volume")}))}}])},function(e,t){angular.module("portainer.agent").factory("Agent",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","StateManager",function(e,t,n,a){"use strict";return e(t+"/:endpointId/docker/v:version/agents",{endpointId:n.endpointID,version:a.getAgentApiVersion},{query:{method:"GET",isArray:!0}})}])},function(e,t,n){"use strict";n.r(t);var a=n(165);angular.module("portainer.agent").factory("Browse",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","StateManager",function(e,t,n,r){return e(t+"/:endpointId/docker/v:version/browse/:action",{endpointId:n.endpointID,version:r.getAgentApiVersion},{ls:{method:"GET",isArray:!0,params:{action:"ls"}},get:{method:"GET",params:{action:"get"},transformResponse:a.browseGetResponse,responseType:"arraybuffer"},delete:{method:"DELETE",params:{action:"delete"}},rename:{method:"PUT",params:{action:"rename"}}})}])},function(e,t){angular.module("portainer.agent").factory("Host",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","StateManager",function(e,t,n,a){"use strict";return e(t+"/:endpointId/docker/v:version/host/:action",{endpointId:n.endpointID,version:a.getAgentApiVersion},{info:{method:"GET",params:{action:"info"}}})}])},function(e,t){angular.module("portainer.agent").factory("AgentPing",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","$q",function(e,t,n,a){"use strict";return e(t+"/:endpointId/docker/ping",{endpointId:n.endpointID},{ping:{method:"GET",interceptor:{response:function(e){var t=e.resource,n=e.headers("Portainer-Agent-Api-Version")||1;return t.version=Number(n),t},responseError:function(e){return 404===e.status?{version:1}:a.reject(e)}}}})}])},function(e,t){angular.module("portainer.agent").factory("AgentVersion1",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/agents",{endpointId:n.endpointID},{query:{method:"GET",isArray:!0}})}])},function(e,t,n){"use strict";n.r(t);var a=n(165);angular.module("portainer.agent").factory("BrowseVersion1",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){return e(t+"/:endpointId/docker/browse/:volumeID/:action",{endpointId:n.endpointID},{ls:{method:"GET",isArray:!0,params:{action:"ls"}},get:{method:"GET",params:{action:"get"},transformResponse:a.browseGetResponse,responseType:"arraybuffer"},delete:{method:"DELETE",params:{action:"delete"}},rename:{method:"PUT",params:{action:"rename"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(289);angular.module("portainer.agent").factory("AgentService",["$q","Agent","AgentVersion1","HttpRequestHelper","Host","StateManager",function(e,t,n,r,i,o){var s={};return s.agents=function(){var r=e.defer(),i=o.getState().endpoint.agentApiVersion;return(i>1?t:n).query({version:i}).$promise.then((function(e){var t=e.map((function(e){return new a.AgentViewModel(e)}));r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve agents",err:e})})),r.promise},s.hostInfo=function(e){return r.setPortainerAgentTargetHeader(e),i.info().$promise},s}])},function(e,t){angular.module("portainer.agent").factory("HostBrowserService",["Browse","Upload","API_ENDPOINT_ENDPOINTS","EndpointProvider","$q","StateManager",function(e,t,n,a,r,i){var o={};return o.ls=function(t){return e.ls({path:t}).$promise},o.get=function(t){return e.get({path:t}).$promise},o.delete=function(t){return e.delete({path:t}).$promise},o.rename=function(t,n){var a={CurrentFilePath:t,NewFilePath:n};return e.rename({},a).$promise},o.upload=function(e,o,s){var l=r.defer(),c=i.getAgentApiVersion(),d=n+"/"+a.endpointID()+"/docker"+(c>1?"/v"+c:"")+"/browse/put";return t.upload({url:d,data:{file:o,Path:e}}).then(l.resolve,l.reject,s),l.promise},o}])},function(e,t){angular.module("portainer.agent").service("AgentPingService",["AgentPing",function(e){var t={};return t.ping=function(){return e.ping().$promise},t}])},function(e,t){angular.module("portainer.agent").factory("VolumeBrowserService",["StateManager","Browse","BrowseVersion1","$q","API_ENDPOINT_ENDPOINTS","EndpointProvider","Upload",function(e,t,n,a,r,i,o){"use strict";var s={};function l(){return e.getState().endpoint.agentApiVersion}function c(){return l()>1?t:n}return s.ls=function(e,t){return c().ls({volumeID:e,path:t,version:l()}).$promise},s.get=function(e,t){return c().get({volumeID:e,path:t,version:l()}).$promise},s.delete=function(e,t){return c().delete({volumeID:e,path:t,version:l()}).$promise},s.rename=function(e,t,n){var a={CurrentFilePath:t,NewFilePath:n};return c().rename({volumeID:e,version:l()},a).$promise},s.upload=function(t,n,s,l){var c=a.defer(),d=e.getAgentApiVersion();if(!(d<2)){var u=r+"/"+i.endpointID()+"/docker/v"+d+"/browse/put?volumeID="+s;return o.upload({url:u,data:{file:n,Path:t}}).then(c.resolve,c.reject,l),c.promise}c.reject("upload is not supported on this agent version")},s}])},function(e,t,n){"use strict";n.r(t);n(532),n(534),n(536),n(537),n(538),n(539),n(540),n(542),n(543),n(544),n(545),n(546),n(257),n(548),n(549),n(550),n(551),n(552),n(553),n(554),n(555),n(556),n(557),n(559),n(560),n(562),n(563),n(564),n(565),n(566),n(567),n(568),n(569),n(570),n(571),n(572),n(573),n(574),n(576),n(577),n(578),n(579),n(580),n(581),n(582),n(583),n(584),n(585),n(586),n(587),n(588),n(589),n(590),n(591),n(592),n(593),n(595),n(597),n(598),n(599),n(600),n(601),n(602),n(603),n(604),n(605),n(606),n(607),n(608),n(609),n(610),n(611),n(612),n(613),n(614),n(615),n(616),n(617),n(618),n(619),n(620),n(621),n(624),n(625),n(626),n(627),n(628),n(629),n(630),n(631),n(632),n(633),n(634),n(635),n(636),n(637),n(638),n(346),n(639),n(641),n(642),n(643),n(644),n(645),n(646),n(648),n(649),n(650),n(651),n(652),n(653),n(654),n(655),n(656),n(657),n(658),n(659),n(660),n(661),n(662),n(663),n(664),n(665),n(666),n(667),n(668),n(669),n(670),n(671),n(672),n(673),n(674),n(675),n(676),n(677),n(678),n(679),n(680),n(681),n(682),n(683),n(684),n(685),n(686),n(687),n(688),n(689),n(690),n(691);var a=n(19),r=n.n(a);angular.module("portainer").run(["$rootScope","$state","$interval","LocalStorage","EndpointProvider","SystemService","cfpLoadingBar","$transitions","HttpRequestHelper",function(e,t,n,a,i,o,s,l,c){i.initialize(),e.$state=t;var d=s.set;s.set=function(e){e>s.status()&&d.apply(s,arguments)},l.onBefore({},(function(){c.resetAgentHeaders()})),t.defaultErrorHandler((function(){})),n((function(){!function(e,t){var n=e.currentEndpoint();void 0!==n&&4===n.Type&&t.ping(n.Id)}(i,o)}),6e4),r()(document).ajaxSend((function(e,t,n){var r="POST"===n.type||"PUT"===n.type||"PATCH"===n.type,i="application/json"!==n.contentType&&n.headers&&!n.headers["Content-Type"];r&&i&&t.setRequestHeader("Content-Type","application/json"),t.setRequestHeader("Authorization","Bearer "+a.getJWT())}))}])},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){var a=n(693);angular.module("portainer.azure").component("azureEndpointConfig",{bindings:{applicationId:"=",tenantId:"=",authenticationKey:"="},templateUrl:a})},function(e,t){var n="app/azure/components/azure-endpoint-config/azureEndpointConfig.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <div class="col-sm-12 form-section-title">\n    Azure configuration\n  </div>\n  \x3c!-- applicationId-input --\x3e\n  <div class="form-group">\n    <label for="azure_credential_appid" class="col-sm-3 col-lg-2 control-label text-left">Application ID</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="azure_credential_appid" ng-model="$ctrl.applicationId" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" required />\n    </div>\n  </div>\n  \x3c!-- !applicationId-input --\x3e\n  \x3c!-- tenantId-input --\x3e\n  <div class="form-group">\n    <label for="azure_credential_tenantid" class="col-sm-3 col-lg-2 control-label text-left">Tenant ID</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="azure_credential_tenantid" ng-model="$ctrl.tenantId" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" required />\n    </div>\n  </div>\n  \x3c!-- !tenantId-input --\x3e\n  \x3c!-- authenticationkey-input --\x3e\n  <div class="form-group">\n    <label for="azure_credential_authkey" class="col-sm-3 col-lg-2 control-label text-left">Authentication key</label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n        type="text"\n        class="form-control"\n        name="azure_credential_authkey"\n        ng-model="$ctrl.authenticationKey"\n        placeholder="cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk="\n        required\n      />\n    </div>\n  </div>\n  \x3c!-- !authenticationkey-input --\x3e\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(695);angular.module("portainer.azure").component("azureSidebarContent",{templateUrl:a})},function(e,t){var n="app/azure/components/azure-sidebar-content/azureSidebarContent.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<li class="sidebar-list">\n  <a ui-sref="azure.dashboard" ui-sref-active="active">Dashboard <span class="menu-icon fa fa-tachometer-alt fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="azure.containerinstances" ui-sref-active="active">Container instances <span class="menu-icon fa fa-server fa-fw"></span></a>\n</li>\n')}]),e.exports=n},function(e,t,n){var a=n(697);angular.module("portainer.azure").component("containergroupsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{title:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/azure/components/datatables/containergroups-datatable/containerGroupsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="azure.containerinstances.new">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>Add container\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover table-filters nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Location\')">\n                  Location\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Location\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Location\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                Published Ports\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="azure.containerinstances.container({ id: item.Id })">{{ item.Name | truncate: 50 }}</a>\n              </td>\n              <td>{{ item.Location }}</td>\n              <td>\n                <a ng-if="item.Ports.length > 0" ng-repeat="p in item.Ports" class="image-tag" ng-href="http://{{ item.IPAddress }}:{{ p.port }}" target="_blank">\n                  <i class="fa fa-external-link-alt" aria-hidden="true"></i> :{{ p.port }}\n                </a>\n                <span ng-if="item.Ports.length == 0">-</span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">No container available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.azure").factory("Azure",["$http","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";var a={delete:function(a,r){var i=t+"/"+n.endpointID()+"/azure"+a+"?api-version="+r;return e({method:"DELETE",url:i})}};return a}])},function(e,t){angular.module("portainer.azure").factory("ContainerGroup",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";var a={},r=e(t+"/:endpointId/azure/subscriptions/:subscriptionId/providers/Microsoft.ContainerInstance/containerGroups",{endpointId:n.endpointID,"api-version":"2018-04-01"},{query:{method:"GET",params:{subscriptionId:"@subscriptionId"}}}),i=e(t+"/:endpointId/azure/subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerInstance/containerGroups/:containerGroupName",{endpointId:n.endpointID,"api-version":"2018-04-01"},{create:{method:"PUT",params:{subscriptionId:"@subscriptionId",resourceGroupName:"@resourceGroupName",containerGroupName:"@containerGroupName"}}});return a.query=r.query,a.create=i.create,a}])},function(e,t){angular.module("portainer.azure").factory("Location",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/azure/subscriptions/:subscriptionId/locations",{endpointId:n.endpointID,"api-version":"2016-06-01"},{query:{method:"GET",params:{subscriptionId:"@subscriptionId"}}})}])},function(e,t){angular.module("portainer.azure").factory("Provider",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/azure/subscriptions/:subscriptionId/providers/:providerNamespace",{endpointId:n.endpointID,"api-version":"2018-02-01"},{get:{method:"GET",params:{subscriptionId:"@subscriptionId",providerNamespace:"@providerNamespace"}}})}])},function(e,t){angular.module("portainer.azure").factory("ResourceGroup",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/azure/subscriptions/:subscriptionId/resourcegroups",{endpointId:n.endpointID,"api-version":"2018-02-01"},{query:{method:"GET",params:{subscriptionId:"@subscriptionId"}}})}])},function(e,t){angular.module("portainer.azure").factory("Subscription",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/azure/subscriptions",{endpointId:n.endpointID,"api-version":"2016-06-01"},{query:{method:"GET"}})}])},function(e,t){angular.module("portainer.azure").factory("AzureService",["$q","Azure","SubscriptionService","ResourceGroupService","ContainerGroupService","ProviderService",function(e,t,n,a,r,i){"use strict";var o={};function s(t,n){for(var a=e.defer(),r={},i=[],o=0;o<t.length;o++){var s=t[o];i.push(n(s.Id))}return e.all(i).then((function(e){for(var n=0;n<e.length;n++){var i=e[n];r[t[n].Id]=i}a.resolve(r)})).catch((function(e){a.reject({msg:"Unable to retrieve resources",err:e})})),a.promise}return o.deleteContainerGroup=function(e){return t.delete(e,"2018-04-01")},o.createContainerGroup=function(e,t,n){return r.create(e,t,n)},o.subscriptions=function(){return n.subscriptions()},o.containerInstanceProvider=function(e){return s(e,i.containerInstanceProvider)},o.resourceGroups=function(e){return s(e,a.resourceGroups)},o.containerGroups=function(e){return s(e,r.containerGroups)},o.aggregate=function(e){var t=[];return Object.keys(e).forEach((function(n){t=t.concat(e[n])})),t},o}])},function(e,t,n){"use strict";n.r(t);var a=n(136);angular.module("portainer.azure").factory("ContainerGroupService",["$q","ContainerGroup",function(e,t){var n={containerGroups:function(n){var r=e.defer();return t.query({subscriptionId:n}).$promise.then((function(e){var t=e.value.map((function(e){return new a.ContainerGroupViewModel(e)}));r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve container groups",err:e})})),r.promise},create:function(e,n,r){var i=new a.CreateContainerGroupRequest(e);return t.create({subscriptionId:n,resourceGroupName:r,containerGroupName:e.Name},i).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(290);angular.module("portainer.azure").factory("LocationService",["$q","Location",function(e,t){var n={locations:function(n){var r=e.defer();return t.query({subscriptionId:n}).$promise.then((function(e){var t=e.value.map((function(e){return new a.LocationViewModel(e)}));r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve locations",err:e})})),r.promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(291);angular.module("portainer.azure").factory("ProviderService",["$q","Provider",function(e,t){var n={containerInstanceProvider:function(n){var r=e.defer();return t.get({subscriptionId:n,providerNamespace:"Microsoft.ContainerInstance"}).$promise.then((function(e){var t=new a.ContainerInstanceProviderViewModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve provider",err:e})})),r.promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(292);angular.module("portainer.azure").factory("ResourceGroupService",["$q","ResourceGroup",function(e,t){var n={resourceGroups:function(n){var r=e.defer();return t.query({subscriptionId:n}).$promise.then((function(e){var t=e.value.map((function(e){return new a.ResourceGroupViewModel(e,n)}));r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve resource groups",err:e})})),r.promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(293);angular.module("portainer.azure").factory("SubscriptionService",["$q","Subscription",function(e,t){var n={subscriptions:function(){var n=e.defer();return t.query({}).$promise.then((function(e){var t=e.value.map((function(e){return new a.SubscriptionViewModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve subscriptions",err:e})})),n.promise}};return n}])},function(e,t){angular.module("portainer.azure").controller("AzureContainerInstancesController",["$scope","$state","AzureService","Notifications",function(e,t,n,a){e.deleteAction=function(r){var i=r.length;angular.forEach(r,(function(r){n.deleteContainerGroup(r.Id).then((function(){a.success("Container group successfully removed",r.Name);var t=e.containerGroups.indexOf(r);e.containerGroups.splice(t,1)})).catch((function(e){a.error("Failure",e,"Unable to remove container group")})).finally((function(){0===--i&&t.reload()}))}))},n.subscriptions().then((function(e){var t=e;return n.containerGroups(t)})).then((function(t){e.containerGroups=n.aggregate(t)})).catch((function(e){a.error("Failure",e,"Unable to load container groups")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(136);angular.module("portainer.azure").controller("AzureCreateContainerInstanceController",["$q","$scope","$state","AzureService","Notifications",function(e,t,n,r,i){var o,s=[],l=[];function c(e,n,a){t.state.selectedResourceGroup=n[e.Id][0],t.resourceGroups=n[e.Id];var r=a[e.Id].Locations;t.model.Location=r[0],t.locations=r}t.state={actionInProgress:!1,selectedSubscription:null,selectedResourceGroup:null},t.changeSubscription=function(){c(t.state.selectedSubscription,s,l)},t.addPortBinding=function(){t.model.Ports.push({host:"",container:"",protocol:"TCP"})},t.removePortBinding=function(e){t.model.Ports.splice(e,1)},t.create=function(){var e=t.model,a=t.state.selectedSubscription.Id,o=t.state.selectedResourceGroup.Name;t.state.actionInProgress=!0,r.createContainerGroup(e,a,o).then((function(){i.success("Container successfully created",e.Name),n.go("azure.containerinstances")})).catch((function(e){i.error("Failure",e,"Unable to create container")})).finally((function(){t.state.actionInProgress=!1}))},o=new a.ContainerGroupDefaultModel,r.subscriptions().then((function(n){var a=n;return t.state.selectedSubscription=a[0],t.subscriptions=a,e.all({resourceGroups:r.resourceGroups(a),containerInstancesProviders:r.containerInstanceProvider(a)})})).then((function(e){var n=e.resourceGroups;s=n;var a=e.containerInstancesProviders;l=a,t.model=o,c(t.state.selectedSubscription,n,a)})).catch((function(e){i.error("Failure",e,"Unable to retrieve Azure resources")}))}])},function(e,t){angular.module("portainer.azure").controller("AzureDashboardController",["$scope","AzureService","Notifications",function(e,t,n){t.subscriptions().then((function(n){var a=n;return e.subscriptions=a,t.resourceGroups(a)})).then((function(n){e.resourceGroups=t.aggregate(n)})).catch((function(e){n.error("Failure",e,"Unable to load dashboard data")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(149),r=n.n(a),i=n(214),o=n(409);angular.module("portainer").config(["$urlRouterProvider","$httpProvider","localStorageServiceProvider","jwtOptionsProvider","AnalyticsProvider","$uibTooltipProvider","$compileProvider","cfpLoadingBarProvider",function(e,t,n,a,s,l,c,d){n.setPrefix("portainer"),a.config({tokenGetter:["LocalStorage",function(e){return e.getJWT()}]}),t.interceptors.push("jwtInterceptor"),t.interceptors.push("EndpointStatusInterceptor"),t.defaults.headers.post["Content-Type"]="application/json",t.defaults.headers.put["Content-Type"]="application/json",t.defaults.headers.patch["Content-Type"]="application/json",t.interceptors.push(["HttpRequestHelper",function(e){return{request:function(t){return t.url.indexOf("/docker/")>-1&&(t.headers["X-PortainerAgent-Target"]=e.portainerAgentTargetHeader(),e.portainerAgentManagerOperation()&&(t.headers["X-PortainerAgent-ManagerOperation"]="1")),t}}}]),s.setAccount({tracker:"UA-84944922-2",set:{anonymizeIp:!0}}),s.startOffline(!0),r.a.options.timeOut=3e3,i.Terminal.applyAddon(o),l.setTriggers({mouseenter:"mouseleave",click:"click",focus:"blur",outsideClick:"outsideClick"}),d.includeSpinner=!1,d.parentSelector="#loadingbar-placeholder",d.latencyThreshold=600,e.otherwise("/auth")}])},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){angular.module("portainer").constant("API_ENDPOINT_AUTH","api/auth").constant("API_ENDPOINT_DOCKERHUB","api/dockerhub").constant("API_ENDPOINT_EDGE_GROUPS","api/edge_groups").constant("API_ENDPOINT_EDGE_STACKS","api/edge_stacks").constant("API_ENDPOINT_EDGE_TEMPLATES","api/edge_templates").constant("API_ENDPOINT_ENDPOINTS","api/endpoints").constant("API_ENDPOINT_ENDPOINT_GROUPS","api/endpoint_groups").constant("API_ENDPOINT_MOTD","api/motd").constant("API_ENDPOINT_EXTENSIONS","api/extensions").constant("API_ENDPOINT_REGISTRIES","api/registries").constant("API_ENDPOINT_RESOURCE_CONTROLS","api/resource_controls").constant("API_ENDPOINT_SCHEDULES","api/schedules").constant("API_ENDPOINT_SETTINGS","api/settings").constant("API_ENDPOINT_STACKS","api/stacks").constant("API_ENDPOINT_STATUS","api/status").constant("API_ENDPOINT_SUPPORT","api/support").constant("API_ENDPOINT_USERS","api/users").constant("API_ENDPOINT_TAGS","api/tags").constant("API_ENDPOINT_TEAMS","api/teams").constant("API_ENDPOINT_TEAM_MEMBERSHIPS","api/team_memberships").constant("API_ENDPOINT_TEMPLATES","api/templates").constant("API_ENDPOINT_WEBHOOKS","api/webhooks").constant("DEFAULT_TEMPLATES_URL","https://raw.githubusercontent.com/portainer/templates/master/templates.json").constant("PAGINATION_MAX_ITEMS",10).constant("APPLICATION_CACHE_VALIDITY",3600).constant("CONSOLE_COMMANDS_LABEL_PREFIX","io.portainer.commands.").constant("PREDEFINED_NETWORKS",["host","bridge","none"])},function(e,t,n){var a=n(754);angular.module("portainer.docker").component("containerCapabilities",{templateUrl:a,bindings:{capabilities:"="}})},function(e,t){var n="app/docker/components/container-capabilities/containerCapabilities.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="col-sm-12 form-section-title">\n    Container capabilities\n  </div>\n  <div class="form-group">\n    <div ng-repeat="cap in $ctrl.capabilities">\n      <div class="col-xs-8 col-sm-3 col-md-2">\n        <label for="capability" class="control-label text-left">\n          {{ cap.capability }}\n          <portainer-tooltip position="bottom" message="{{ cap.description }}"></portainer-tooltip>\n        </label>\n      </div>\n      <div class="col-xs-4 col-sm-2 col-md-1">\n        <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="capability" ng-model="cap.allowed" /><i></i> </label>\n      </div>\n      <div class="col-xs-0 col-sm-1 col-md-1"> </div>\n    </div>\n  </div>\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(756);angular.module("portainer.docker").component("containerQuickActions",{templateUrl:a,bindings:{containerId:"<",nodeName:"<",status:"<",state:"<",taskId:"<"}})},function(e,t){var n="app/docker/components/container-quick-actions/containerQuickActions.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="btn-group btn-group-xs" role="group" aria-label="..." style="display: inline-flex;">\n  <a\n    authorization="DockerContainerLogs"\n    ng-if="$ctrl.state.showQuickActionLogs && $ctrl.taskId === undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.containers.container.logs({id: $ctrl.containerId, nodeName: $ctrl.nodeName})"\n    title="Logs"\n  >\n    <i class="fa fa-file-alt space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerTaskLogs"\n    ng-if="$ctrl.state.showQuickActionLogs && $ctrl.taskId !== undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.tasks.task.logs({id: $ctrl.taskId})"\n    title="Logs"\n  >\n    <i class="fa fa-file-alt space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerContainerInspect"\n    ng-if="$ctrl.state.showQuickActionInspect && $ctrl.taskId === undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.containers.container.inspect({id: $ctrl.containerId, nodeName: $ctrl.nodeName})"\n    title="Inspect"\n  >\n    <i class="fa fa-info-circle space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerTaskInspect"\n    ng-if="$ctrl.state.showQuickActionInspect && $ctrl.taskId !== undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.tasks.task({id: $ctrl.taskId})"\n    title="Inspect"\n  >\n    <i class="fa fa-info-circle space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerContainerStats"\n    ng-if="$ctrl.state.showQuickActionStats && [\'starting\', \'running\', \'healthy\', \'unhealthy\'].indexOf($ctrl.status) !== -1 && $ctrl.taskId === undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.containers.container.stats({id: $ctrl.containerId, nodeName: $ctrl.nodeName})"\n    title="Stats"\n  >\n    <i class="fa fa-chart-area space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerExecStart"\n    ng-if="$ctrl.state.showQuickActionExec && [\'starting\', \'running\', \'healthy\', \'unhealthy\'].indexOf($ctrl.status) !== -1 && $ctrl.taskId === undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.containers.container.exec({id: $ctrl.containerId, nodeName: $ctrl.nodeName})"\n    title="Exec Console"\n  >\n    <i class="fa fa-terminal space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerContainerAttach"\n    ng-if="$ctrl.state.showQuickActionAttach && [\'starting\', \'running\', \'healthy\', \'unhealthy\'].indexOf($ctrl.status) !== -1 && $ctrl.taskId === undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.containers.container.attach({id: $ctrl.containerId, nodeName: $ctrl.nodeName})"\n    title="Attach Console"\n  >\n    <i class="fa fa-plug space-right" aria-hidden="true"></i>\n  </a>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("ContainerRestartPolicyController",[function(){var e=this;this.state={editModel:{}},e.save=function(){if(e.state.editModel.name===e.name&&e.state.editModel.maximumRetryCount===e.maximumRetryCount)return;e.updateRestartPolicy(e.state.editModel)},this.$onInit=function(){e.state.editModel={name:e.name?e.name:"no",maximumRetryCount:e.maximumRetryCount}}}])},function(e,t,n){var a=n(759);angular.module("portainer.docker").component("containerRestartPolicy",{templateUrl:a,controller:"ContainerRestartPolicyController",bindings:{name:"<",maximumRetryCount:"<",updateRestartPolicy:"&"}})},function(e,t){var n="app/docker/components/container-restart-policy/container-restart-policy.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <table class="table table-bordered table-condensed">\n    <tr>\n      <td class="col-md-3">\n        <span>Name</span>\n      </td>\n      <td>\n        <select class="form-control" ng-model="$ctrl.state.editModel.name" disable-authorization="DockerContainerUpdate">\n          <option value="no">None</option>\n          <option value="on-failure">On Failure</option>\n          <option value="always">Always</option>\n          <option value="unless-stopped">Unless Stopped</option>\n        </select>\n      </td>\n      <td class="col-md-2" authorization="DockerContainerUpdate">\n        <button class="btn btn-sm btn-primary" ng-click="$ctrl.save()">Update</button>\n      </td>\n    </tr>\n    <tr ng-if="$ctrl.state.editModel.name === \'on-failure\'">\n      <td class="col-md-3">Maximum Retry Count</td>\n      <td colspan="2">\n        <input type="number" class="form-control" ng-model="$ctrl.state.editModel.maximumRetryCount" />\n      </td>\n    </tr>\n  </table>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(761);angular.module("portainer.docker").component("dashboardClusterAgentInfo",{templateUrl:a,controller:"DashboardClusterAgentInfoController"})},function(e,t){var n="app/docker/components/dashboard-cluster-agent-info/dashboardClusterAgentInfo.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-widget>\n  <rd-widget-header icon="fa-tachometer-alt" title-text="Cluster information"></rd-widget-header>\n  <rd-widget-body classes="no-padding">\n    <table class="table">\n      <tbody>\n        <tr>\n          <td>Nodes in the cluster</td>\n          <td>{{ $ctrl.agentCount }}</td>\n        </tr>\n        <tr>\n          <td colspan="2">\n            <div class="btn-group" role="group" aria-label="...">\n              <a ui-sref="docker.swarm.visualizer"><i class="fa fa-object-group space-right" aria-hidden="true"></i>Go to cluster visualizer</a>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </rd-widget-body>\n</rd-widget>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("DashboardClusterAgentInfoController",["AgentService","Notifications",function(e,t){var n=this;this.$onInit=function(){e.agents().then((function(e){n.agentCount=e.length})).catch((function(e){t.error("Failure",e,"Unable to retrieve agent information")}))}}])},function(e,t,n){var a=n(764);angular.module("portainer.docker").component("configsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",removeAction:"<",refreshCallback:"<"}})},function(e,t){var n="app/docker/components/datatables/configs-datatable/configsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n        <div class="settings">\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle><i class="fa fa-cog" aria-hidden="true"></i> Settings</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Table settings\n                </div>\n                <div class="menuContent">\n                  <div>\n                    <div class="md-checkbox">\n                      <input id="setting_auto_refresh" type="checkbox" ng-model="$ctrl.settings.repeater.autoRefresh" ng-change="$ctrl.onSettingsRepeaterChange()" />\n                      <label for="setting_auto_refresh">Auto refresh</label>\n                    </div>\n                    <div ng-if="$ctrl.settings.repeater.autoRefresh">\n                      <label for="settings_refresh_rate">\n                        Refresh rate\n                      </label>\n                      <select id="settings_refresh_rate" ng-model="$ctrl.settings.repeater.refreshRate" ng-change="$ctrl.onSettingsRepeaterChange()" class="small-select">\n                        <option value="10">10s</option>\n                        <option value="30">30s</option>\n                        <option value="60">1min</option>\n                        <option value="120">2min</option>\n                        <option value="300">5min</option>\n                      </select>\n                      <span>\n                        <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">Close</a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <div class="actionBar" authorization="DockerConfigDelete, DockerConfigCreate">\n        <button\n          type="button"\n          class="btn btn-sm btn-danger"\n          authorization="DockerConfigDelete"\n          ng-disabled="$ctrl.state.selectedItemCount === 0"\n          ng-click="$ctrl.removeAction($ctrl.state.selectedItems)"\n        >\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.configs.new" authorization="DockerConfigCreate">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>Add config\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" authorization="DockerConfigDelete, DockerConfigCreate">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CreatedAt\')">\n                  Creation Date\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  Ownership\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox" authorization="DockerConfigDelete, DockerConfigCreate">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="docker.configs.config({id: item.Id})">{{ item.Name }}</a>\n              </td>\n              <td>{{ item.CreatedAt | getisodate }}</td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = $ctrl.RCO.ADMINISTRATORS }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">No config available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(766);angular.module("portainer.docker").component("containerNetworksDatatable",{templateUrl:a,controller:"ContainerNetworksDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",container:"<",availableNetworks:"<",joinNetworkAction:"<",joinNetworkActionInProgress:"<",leaveNetworkActionInProgress:"<",leaveNetworkAction:"<",nodeName:"<"}})},function(e,t){var n="app/docker/components/datatables/container-networks-datatable/containerNetworksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <form class="form-horizontal">\n          <div class="row" authorization="DockerNetworkConnect">\n            <label for="container_network" class="col-sm-3 col-lg-2 control-label text-left">Join a network</label>\n            <div class="col-sm-5 col-lg-4">\n              <select class="form-control" ng-model="$ctrl.selectedNetwork" id="container_network">\n                <option selected disabled hidden value="">Select a network</option>\n                <option ng-repeat="net in $ctrl.availableNetworks | orderBy: \'Name\'" ng-value="net.Id">{{ net.Name }}</option>\n              </select>\n            </div>\n            <div class="col-sm-1">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="$ctrl.joinNetworkActionInProgress || !$ctrl.selectedNetwork"\n                ng-click="$ctrl.joinNetworkAction($ctrl.container, $ctrl.selectedNetwork)"\n                button-spinner="$ctrl.joinNetworkActionInProgress"\n              >\n                <span ng-hide="$ctrl.joinNetworkActionInProgress">Join network</span>\n                <span ng-show="$ctrl.joinNetworkActionInProgress">Joining network...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>Network</th>\n              <th>\n                IP Address\n                <a ng-click="$ctrl.expandAll()" ng-if="$ctrl.hasExpandableItems()">\n                  <i ng-class="{ \'fas fa-angle-down\': $ctrl.state.expandAll, \'fas fa-angle-right\': !$ctrl.state.expandAll }" aria-hidden="true"></i>\n                </a>\n              </th>\n              <th>Gateway</th>\n              <th>MAC Address</th>\n              <th authorization="DockerNetworkDisconnect">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate-start="(key, value) in $ctrl.dataset | itemsPerPage: $ctrl.state.paginatedItemLimit"\n              ng-class="{ active: item.Checked }"\n              ng-click="$ctrl.expandItem(value, !value.Expanded)"\n            >\n              <td>\n                <a ng-if="$ctrl.itemCanExpand(value)">\n                  <i ng-class="{ \'fas fa-angle-down\': value.Expanded, \'fas fa-angle-right\': !value.Expanded }" class="space-right" aria-hidden="true"></i>\n                </a>\n                <a ui-sref="docker.networks.network({ id: key, nodeName: $ctrl.nodeName })">{{ key }}</a>\n              </td>\n              <td>{{ value.IPAddress || \'-\' }}</td>\n              <td>{{ value.Gateway || \'-\' }}</td>\n              <td>{{ value.MacAddress || \'-\' }}</td>\n              <td authorization="DockerNetworkDisconnect">\n                <button\n                  type="button"\n                  class="btn btn-xs btn-danger"\n                  ng-disabled="$ctrl.leaveNetworkActionInProgress"\n                  button-spinner="$ctrl.leaveNetworkActionInProgress"\n                  ng-click="$ctrl.leaveNetworkAction($ctrl.container, key)"\n                >\n                  <span ng-hide="$ctrl.leaveNetworkActionInProgress"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i> Leave network</span>\n                  <span ng-show="$ctrl.leaveNetworkActionInProgress">Leaving network...</span>\n                </button>\n              </td>\n            </tr>\n            <tr dir-paginate-end ng-show="$ctrl.itemCanExpand(value) && value.Expanded" ng-style="{ background: value.Highlighted ? \'#d5e8f3\' : \'#f5f5f5\' }">\n              <td colspan="1"></td>\n              <td colspan="1">\n                {{ value.GlobalIPv6Address }}\n              </td>\n              <td colspan="3">\n                {{ value.IPv6Gateway || \'-\' }}\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="5" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.dataset.length === 0">\n              <td colspan="5" class="text-center text-muted">No network available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(9),r=n(5);angular.module("portainer.docker").controller("ContainerNetworksDatatableController",["$scope","$controller","DatatableService",function(e,t,n){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.state=Object.assign(this.state,{expandedItems:[],expandAll:!0}),this.expandItem=function(e,t){this.itemCanExpand(e)&&(e.Expanded=t,t||(e.Highlighted=!1),e.Expanded||(this.state.expandAll=!1))},this.itemCanExpand=function(e){return""!==e.GlobalIPv6Address},this.hasExpandableItems=function(){var e=this;return Object(r.a)(this.dataset,(function(t){return e.itemCanExpand(t)})).length},this.expandAll=function(){var e=this;this.state.expandAll=!this.state.expandAll,Object(a.a)(this.dataset,(function(t){e.itemCanExpand(t)&&e.expandItem(t,e.state.expandAll)}))},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var r=n.getDataTableFilters(this.tableKey);null!==r&&(this.filters=r),this.filters&&this.filters.state&&(this.filters.state.open=!1);var i=n.getDataTableSettings(this.tableKey);null!==i&&(this.settings=i,this.settings.open=!1),Object(a.a)(this.dataset,(function(e){e.Expanded=!0,e.Highlighted=!0}))}}])},function(e,t,n){var a=n(769);angular.module("portainer.docker").component("containerProcessesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"=",headerset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/docker/components/datatables/container-processes-datatable/containerProcessesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" placeholder="Search..." auto-focus ng-model-options="{ debounce: 300 }" />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th ng-repeat="header in $ctrl.headerset">\n                {{ header }}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredProcesses = ($ctrl.dataset | filter:$ctrl.state.textFilter | itemsPerPage: $ctrl.state.paginatedItemLimit))">\n              <td ng-repeat="info in item track by $index">{{ info }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="{{ $ctrl.headerset.length }}" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredProcesses.length === 0">\n              <td colspan="{{ $ctrl.headerset.length }}" class="text-center text-muted">No process available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(771);angular.module("portainer.docker").component("containersDatatableActions",{templateUrl:a,controller:"ContainersDatatableActionsController",bindings:{selectedItems:"=",selectedItemCount:"=",noStoppedItemsSelected:"=",noRunningItemsSelected:"=",noPausedItemsSelected:"=",showAddAction:"<"}})},function(e,t){var n="app/docker/components/datatables/containers-datatable/actions/containersDatatableActions.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div\n  class="actionBar"\n  authorization="DockerContainerStart, DockerContainerStop, DockerContainerKill, DockerContainerRestart, DockerContainerPause, DockerContainerUnpause, DockerContainerDelete, DockerContainerCreate"\n>\n  <div class="btn-group" role="group" aria-label="...">\n    <button\n      authorization="DockerContainerStart"\n      type="button"\n      class="btn btn-sm btn-success"\n      ng-click="$ctrl.startAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0 || $ctrl.noStoppedItemsSelected"\n    >\n      <i class="fa fa-play space-right" aria-hidden="true"></i>Start\n    </button>\n    <button\n      authorization="DockerContainerStop"\n      type="button"\n      class="btn btn-sm btn-danger"\n      ng-click="$ctrl.stopAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0 || $ctrl.noRunningItemsSelected"\n    >\n      <i class="fa fa-stop space-right" aria-hidden="true"></i>Stop\n    </button>\n    <button\n      authorization="DockerContainerKill"\n      type="button"\n      class="btn btn-sm btn-danger"\n      ng-click="$ctrl.killAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0"\n    >\n      <i class="fa fa-bomb space-right" aria-hidden="true"></i>Kill\n    </button>\n    <button\n      authorization="DockerContainerRestart"\n      type="button"\n      class="btn btn-sm btn-primary"\n      ng-click="$ctrl.restartAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0"\n    >\n      <i class="fa fa-sync space-right" aria-hidden="true"></i>Restart\n    </button>\n    <button\n      authorization="DockerContainerPause"\n      type="button"\n      class="btn btn-sm btn-primary"\n      ng-click="$ctrl.pauseAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0 || $ctrl.noRunningItemsSelected"\n    >\n      <i class="fa fa-pause space-right" aria-hidden="true"></i>Pause\n    </button>\n    <button\n      authorization="DockerContainerUnpause"\n      type="button"\n      class="btn btn-sm btn-primary"\n      ng-click="$ctrl.resumeAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0 || $ctrl.noPausedItemsSelected"\n    >\n      <i class="fa fa-play space-right" aria-hidden="true"></i>Resume\n    </button>\n    <button\n      authorization="DockerContainerDelete"\n      type="button"\n      class="btn btn-sm btn-danger"\n      ng-disabled="$ctrl.selectedItemCount === 0"\n      ng-click="$ctrl.removeAction($ctrl.selectedItems)"\n    >\n      <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n    </button>\n  </div>\n  <button authorization="DockerContainerCreate" type="button" class="btn btn-sm btn-primary" ui-sref="docker.containers.new" ng-if="$ctrl.showAddAction">\n    <i class="fa fa-plus space-right" aria-hidden="true"></i>Add container\n  </button>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("ContainersDatatableActionsController",["$state","ContainerService","ModalService","Notifications","HttpRequestHelper",function(e,t,n,a,r){function i(t,n,i,o){var s=t.length;angular.forEach(t,(function(t){r.setPortainerAgentTargetHeader(t.NodeName),n(t.Id).then((function(){a.success(i,t.Names[0])})).catch((function(e){o=o+":"+t.Names[0],a.error("Failure",e,o)})).finally((function(){0===--s&&e.reload()}))}))}this.startAction=function(e){i(e,t.startContainer,"Container successfully started","Unable to start container")},this.stopAction=function(e){i(e,t.stopContainer,"Container successfully stopped","Unable to stop container")},this.restartAction=function(e){i(e,t.restartContainer,"Container successfully restarted","Unable to restart container")},this.killAction=function(e){i(e,t.killContainer,"Container successfully killed","Unable to kill container")},this.pauseAction=function(e){i(e,t.pauseContainer,"Container successfully paused","Unable to pause container")},this.resumeAction=function(e){i(e,t.resumeContainer,"Container successfully resumed","Unable to resume container")},this.removeAction=function(i){for(var o=!1,s=0;s<i.length;s++){if("running"===i[s].State){o=!0;break}}var l="You are about to remove one or more container.";o&&(l="You are about to remove one or more running container."),n.confirmContainerDeletion(l,(function(n){if(n){var o=!1;n[0]&&(o=!0),function(n,i){var o=n.length;angular.forEach(n,(function(n){r.setPortainerAgentTargetHeader(n.NodeName),t.remove(n,i).then((function(){a.success("Container successfully removed",n.Names[0])})).catch((function(e){a.error("Failure",e,"Unable to remove container")})).finally((function(){0===--o&&e.reload()}))}))}(i,o)}}))}}])},function(e,t,n){var a=n(774);angular.module("portainer.docker").component("containersDatatable",{templateUrl:a,controller:"ContainersDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",showHostColumn:"<",showAddAction:"<",offlineMode:"<",refreshCallback:"<"}})},function(e,t){var n="app/docker/components/datatables/containers-datatable/containersDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n        <div class="settings">\n          <span\n            class="setting"\n            ng-class="{ \'setting-active\': $ctrl.columnVisibility.state.open }"\n            uib-dropdown\n            dropdown-append-to-body\n            auto-close="disabled"\n            is-open="$ctrl.columnVisibility.state.open"\n          >\n            <span uib-dropdown-toggle><i class="fa fa-columns space-right" aria-hidden="true"></i>Columns</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Show / Hide Columns\n                </div>\n                <div class="menuContent">\n                  <div class="md-checkbox">\n                    <input id="col_vis_state" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.state.display" />\n                    <label for="col_vis_state" ng-bind="$ctrl.columnVisibility.columns.state.label"></label>\n                  </div>\n                  <div class="md-checkbox">\n                    <input id="col_vis_actions" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.actions.display" />\n                    <label for="col_vis_actions" ng-bind="$ctrl.columnVisibility.columns.actions.label"></label>\n                  </div>\n                  <div class="md-checkbox">\n                    <input id="col_vis_stack" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.stack.display" />\n                    <label for="col_vis_stack" ng-bind="$ctrl.columnVisibility.columns.stack.label"></label>\n                  </div>\n                  <div class="md-checkbox">\n                    <input id="col_vis_image" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.image.display" />\n                    <label for="col_vis_image" ng-bind="$ctrl.columnVisibility.columns.image.label"></label>\n                  </div>\n                  <div class="md-checkbox">\n                    <input id="col_vis_created" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.created.display" />\n                    <label for="col_vis_created" ng-bind="$ctrl.columnVisibility.columns.created.label"></label>\n                  </div>\n                  <div class="md-checkbox">\n                    <input id="col_vis_ip" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.ip.display" />\n                    <label for="col_vis_ip" ng-bind="$ctrl.columnVisibility.columns.ip.label"></label>\n                  </div>\n                  <div class="md-checkbox" ng-if="$ctrl.showHostColumn">\n                    <input id="col_vis_host" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.host.display" />\n                    <label for="col_vis_host" ng-bind="$ctrl.columnVisibility.columns.host.label"></label>\n                  </div>\n                  <div class="md-checkbox">\n                    <input id="col_vis_ports" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.ports.display" />\n                    <label for="col_vis_ports" ng-bind="$ctrl.columnVisibility.columns.ports.label"></label>\n                  </div>\n                  <div class="md-checkbox">\n                    <input id="col_vis_ownership" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.ownership.display" />\n                    <label for="col_vis_ownership" ng-bind="$ctrl.columnVisibility.columns.ownership.label"></label>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.columnVisibility.state.open = false;">Close</a>\n                </div>\n              </div>\n            </div>\n          </span>\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle><i class="fa fa-cog" aria-hidden="true"></i> Settings</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Table settings\n                </div>\n                <div class="menuContent">\n                  <div class="md-checkbox">\n                    <input id="setting_container_trunc" type="checkbox" ng-model="$ctrl.settings.truncateContainerName" ng-change="$ctrl.onSettingsContainerNameTruncateChange()" />\n                    <label for="setting_container_trunc">Truncate container name</label>\n                  </div>\n                  <div>\n                    <div class="md-checkbox">\n                      <input id="setting_auto_refresh" type="checkbox" ng-model="$ctrl.settings.repeater.autoRefresh" ng-change="$ctrl.onSettingsRepeaterChange()" />\n                      <label for="setting_auto_refresh">Auto refresh</label>\n                    </div>\n                    <div ng-if="$ctrl.settings.repeater.autoRefresh">\n                      <label for="settings_refresh_rate">\n                        Refresh rate\n                      </label>\n                      <select id="settings_refresh_rate" ng-model="$ctrl.settings.repeater.refreshRate" ng-change="$ctrl.onSettingsRepeaterChange()" class="small-select">\n                        <option value="10">10s</option>\n                        <option value="30">30s</option>\n                        <option value="60">1min</option>\n                        <option value="120">2min</option>\n                        <option value="300">5min</option>\n                      </select>\n                      <span>\n                        <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div authorization="DockerContainerStats, DockerContainerLogs, DockerExecStart, DockerContainerInspect, DockerTaskInspect, DockerTaskLogs, DockerContainerAttach">\n                  <div class="menuHeader">\n                    Quick actions\n                  </div>\n                  <div class="menuContent">\n                    <div class="md-checkbox" authorization="DockerContainerStats">\n                      <input id="setting_show_stats" type="checkbox" ng-model="$ctrl.settings.showQuickActionStats" ng-change="$ctrl.onSettingsQuickActionChange()" />\n                      <label for="setting_show_stats">Stats</label>\n                    </div>\n                    <div class="md-checkbox" authorization="DockerContainerLogs">\n                      <input id="setting_show_logs" type="checkbox" ng-model="$ctrl.settings.showQuickActionLogs" ng-change="$ctrl.onSettingsQuickActionChange()" />\n                      <label for="setting_show_logs">Logs</label>\n                    </div>\n                    <div class="md-checkbox" authorization="DockerExecStart">\n                      <input id="setting_show_console" type="checkbox" ng-model="$ctrl.settings.showQuickActionExec" ng-change="$ctrl.onSettingsQuickActionChange()" />\n                      <label for="setting_show_console">Console</label>\n                    </div>\n                    <div class="md-checkbox" authorization="DockerContainerInspect">\n                      <input id="setting_show_inspect" type="checkbox" ng-model="$ctrl.settings.showQuickActionInspect" ng-change="$ctrl.onSettingsQuickActionChange()" />\n                      <label for="setting_show_inspect">Inspect</label>\n                    </div>\n                    <div class="md-checkbox" authorization="DockerContainerAttach">\n                      <input id="setting_show_attach" type="checkbox" ng-model="$ctrl.settings.showQuickActionAttach" ng-change="$ctrl.onSettingsQuickActionChange()" />\n                      <label for="setting_show_attach">Attach</label>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">Close</a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <containers-datatable-actions\n        ng-if="!$ctrl.offlineMode"\n        selected-items="$ctrl.state.selectedItems"\n        selected-item-count="$ctrl.state.selectedItemCount"\n        no-stopped-items-selected="$ctrl.state.noStoppedItemsSelected"\n        no-running-items-selected="$ctrl.state.noRunningItemsSelected"\n        no-paused-items-selected="$ctrl.state.noPausedItemsSelected"\n        show-add-action="$ctrl.showAddAction"\n      ></containers-datatable-actions>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover table-filters nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span\n                  class="md-checkbox"\n                  ng-if="!$ctrl.offlineMode"\n                  authorization="DockerContainerStart, DockerContainerStop, DockerContainerKill, DockerContainerRestart, DockerContainerPause, DockerContainerUnpause, DockerContainerDelete, DockerContainerCreate"\n                >\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Names\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Names\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Names\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.filters.state.open" ng-show="$ctrl.columnVisibility.columns.state.display">\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  State\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n                <div>\n                  <span uib-dropdown-toggle class="table-filter" ng-if="!$ctrl.filters.state.enabled">Filter <i class="fa fa-filter" aria-hidden="true"></i></span>\n                  <span uib-dropdown-toggle class="table-filter filter-active" ng-if="$ctrl.filters.state.enabled">Filter <i class="fa fa-check" aria-hidden="true"></i></span>\n                </div>\n                <div class="dropdown-menu" uib-dropdown-menu>\n                  <div class="tableMenu">\n                    <div class="menuHeader">\n                      Filter by state\n                    </div>\n                    <div class="menuContent">\n                      <div class="md-checkbox" ng-repeat="filter in $ctrl.filters.state.values track by $index">\n                        <input id="filter_state_{{ $index }}" type="checkbox" ng-model="filter.display" ng-change="$ctrl.onStateFilterChange()" />\n                        <label for="filter_state_{{ $index }}">{{ filter.label }}</label>\n                      </div>\n                    </div>\n                    <div>\n                      <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.filters.state.open = false;">Close</a>\n                    </div>\n                  </div>\n                </div>\n              </th>\n              <th\n                ng-if="\n                  $ctrl.settings.showQuickActionStats ||\n                  $ctrl.settings.showQuickActionLogs ||\n                  $ctrl.settings.showQuickActionExec ||\n                  $ctrl.settings.showQuickActionAttach ||\n                  $ctrl.settings.showQuickActionInspect\n                "\n                ng-show="$ctrl.columnVisibility.columns.actions.display"\n                authorization="DockerContainerStats, DockerContainerLogs, DockerExecStart, DockerContainerInspect, DockerTaskInspect, DockerTaskLogs, DockerContainerAttach"\n              >\n                Quick actions\n              </th>\n              <th ng-show="$ctrl.columnVisibility.columns.stack.display">\n                <a ng-click="$ctrl.changeOrderBy(\'StackName\')">\n                  Stack\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-show="$ctrl.columnVisibility.columns.image.display">\n                <a ng-click="$ctrl.changeOrderBy(\'Image\')">\n                  Image\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Image\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Image\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-show="$ctrl.columnVisibility.columns.created.display">\n                <a ng-click="$ctrl.changeOrderBy(\'Created\')">\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && $ctrl.state.reverseOrder"></i>\n                  Created\n                </a>\n              </th>\n              <th ng-if="$ctrl.showHostColumn" ng-show="$ctrl.columnVisibility.columns.host.display">\n                <a ng-click="$ctrl.changeOrderBy(\'NodeName\')">\n                  Host\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-show="$ctrl.columnVisibility.columns.ports.display">\n                <a ng-click="$ctrl.changeOrderBy(\'Ports\')">\n                  Published Ports\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Ports\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Ports\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn" ng-show="$ctrl.columnVisibility.columns.ownership.display">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  Ownership\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span\n                  class="md-checkbox"\n                  ng-if="!$ctrl.offlineMode"\n                  authorization="DockerContainerStart, DockerContainerStop, DockerContainerKill, DockerContainerRestart, DockerContainerPause, DockerContainerUnpause, DockerContainerDelete, DockerContainerCreate"\n                >\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ng-if="!$ctrl.offlineMode" ui-sref="docker.containers.container({ id: item.Id, nodeName: item.NodeName })" title="{{ item | containername }}">{{\n                  item | containername | truncate: $ctrl.settings.containerNameTruncateSize\n                }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item | containername | truncate: $ctrl.settings.containerNameTruncateSize }}</span>\n              </td>\n              <td ng-show="$ctrl.columnVisibility.columns.state.display">\n                <span\n                  ng-if="[\'starting\', \'healthy\', \'unhealthy\'].indexOf(item.Status) !== -1"\n                  class="label label-{{ item.Status | containerstatusbadge }} interactive"\n                  uib-tooltip="This container has a health check"\n                  >{{ item.Status }}</span\n                >\n                <span ng-if="[\'starting\', \'healthy\', \'unhealthy\'].indexOf(item.Status) === -1" class="label label-{{ item.Status | containerstatusbadge }}">{{ item.Status }}</span>\n              </td>\n              <td\n                ng-if="\n                  !$ctrl.offlineMode &&\n                  ($ctrl.settings.showQuickActionStats ||\n                    $ctrl.settings.showQuickActionLogs ||\n                    $ctrl.settings.showQuickActionExec ||\n                    $ctrl.settings.showQuickActionAttach ||\n                    $ctrl.settings.showQuickActionInspect)\n                "\n                ng-show="$ctrl.columnVisibility.columns.actions.display"\n                authorization="DockerContainerStats, DockerContainerLogs, DockerExecStart, DockerContainerInspect, DockerTaskInspect, DockerTaskLogs"\n              >\n                <container-quick-actions container-id="item.Id" node-name="item.NodeName" status="item.Status" state="$ctrl.settings"></container-quick-actions>\n              </td>\n              <td ng-if="$ctrl.offlineMode"> </td>\n              <td ng-show="$ctrl.columnVisibility.columns.stack.display">{{ item.StackName ? item.StackName : \'-\' }}</td>\n              <td ng-show="$ctrl.columnVisibility.columns.image.display">\n                <a ng-if="!$ctrl.offlineMode" ui-sref="docker.images.image({ id: item.Image })">{{ item.Image | trimshasum }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item.Image | trimshasum }}</span>\n              </td>\n              <td ng-show="$ctrl.columnVisibility.columns.created.display">\n                {{ item.Created | getisodatefromtimestamp }}\n              </td>\n              <td ng-if="$ctrl.showHostColumn" ng-show="$ctrl.columnVisibility.columns.host.display">{{ item.NodeName ? item.NodeName : \'-\' }}</td>\n              <td ng-show="$ctrl.columnVisibility.columns.ports.display">\n                <a\n                  ng-if="item.Ports.length > 0"\n                  ng-repeat="p in item.Ports"\n                  class="image-tag"\n                  ng-href="http://{{ $ctrl.state.publicURL || p.host }}:{{ p.public }}"\n                  target="_blank"\n                >\n                  <i class="fa fa-external-link-alt" aria-hidden="true"></i> {{ p.public }}:{{ p.private }}\n                </a>\n                <span ng-if="item.Ports.length == 0">-</span>\n              </td>\n              <td ng-if="$ctrl.showOwnershipColumn" ng-show="$ctrl.columnVisibility.columns.ownership.display">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = $ctrl.RCO.ADMINISTRATORS }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="9" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="9" class="text-center text-muted">No container available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(57);angular.module("portainer.docker").controller("ContainersDatatableController",["$scope","$controller","DatatableService","EndpointProvider",function(e,t,n,i){angular.extend(this,t("GenericDatatableController",{$scope:e}));var o=this;this.state=Object.assign(this.state,{noStoppedItemsSelected:!0,noRunningItemsSelected:!0,noPausedItemsSelected:!0,publicURL:i.endpointPublicURL()}),this.settings=Object.assign(this.settings,{truncateContainerName:!0,containerNameTruncateSize:32,showQuickActionStats:!0,showQuickActionLogs:!0,showQuickActionExec:!0,showQuickActionInspect:!0,showQuickActionAttach:!1}),this.filters={state:{open:!1,enabled:!1,values:[]}},this.columnVisibility={state:{open:!1},columns:{state:{label:"State",display:!0},actions:{label:"Quick Actions",display:!0},stack:{label:"Stack",display:!0},image:{label:"Image",display:!0},created:{label:"Created",display:!0},ip:{label:"IP Address",display:!0},host:{label:"Host",display:!0},ports:{label:"Published Ports",display:!0},ownership:{label:"Ownership",display:!0}}},this.onColumnVisibilityChange=function(){n.setColumnVisibilitySettings(this.tableKey,this.columnVisibility)},this.onSelectionChanged=function(){this.updateSelectionState()},this.updateSelectionState=function(){this.state.noStoppedItemsSelected=!0,this.state.noRunningItemsSelected=!0,this.state.noPausedItemsSelected=!0;for(var e=0;e<this.dataset.length;e++){var t=this.dataset[e];t.Checked&&this.updateSelectionStateBasedOnItemStatus(t)}},this.updateSelectionStateBasedOnItemStatus=function(e){"paused"===e.Status?this.state.noPausedItemsSelected=!1:-1!==["stopped","created"].indexOf(e.Status)?this.state.noStoppedItemsSelected=!1:-1!==["running","healthy","unhealthy","starting"].indexOf(e.Status)&&(this.state.noRunningItemsSelected=!1)},this.applyFilters=function(e){for(var t=e,n=o.filters,a=0;a<n.state.values.length;a++){var r=n.state.values[a];if(t.Status===r.label&&r.display)return!0}return!1},this.onStateFilterChange=function(){for(var e=this.filters.state.values,t=!1,n=0;n<e.length;n++){e[n].display||(t=!0)}this.filters.state.enabled=t},this.onSettingsContainerNameTruncateChange=function(){this.settings.truncateContainerName?this.settings.containerNameTruncateSize=32:this.settings.containerNameTruncateSize=256,n.setDataTableSettings(this.tableKey,this.settings)},this.onSettingsQuickActionChange=function(){n.setDataTableSettings(this.tableKey,this.settings)},this.prepareTableFromDataset=function(){for(var e=[],t=0;t<this.dataset.length;t++){var n=this.dataset[t];e.push({label:n.Status,display:!0})}this.filters.state.values=Object(r.a)(e,"label")},this.updateStoredFilters=function(e){for(var t=this.filters.state.values,n=0;n<t.length;n++){var r=t[n],i=Object(a.a)(e,["label",r.label]);i&&!i.display&&(r.display=i.display,this.filters.state.enabled=!0)}},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a,this.filters.state.open=!1,this.updateStoredFilters(a.state.values));var r=n.getDataTableSettings(this.tableKey);null!==r&&(this.settings=r,this.settings.open=!1),this.onSettingsRepeaterChange();var i=n.getColumnVisibilitySettings(this.tableKey);null!==i&&(this.columnVisibility=i,this.columnVisibility.state.open=!1)}}])},function(e,t,n){var a=n(777);angular.module("portainer.docker").component("eventsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/docker/components/datatables/events-datatable/eventsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Time\')">\n                  Date\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Time\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Time\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n                  Category\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Details\')">\n                  Details\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Details\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Details\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>{{ item.Time | getisodatefromtimestamp }}</td>\n              <td>{{ item.Type }}</td>\n              <td>{{ item.Details }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">No event available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(779);angular.module("portainer.docker").component("jobsDatatable",{templateUrl:a,controller:"JobsDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/docker/components/datatables/host-jobs-datatable/jobsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <div class="datatable">\n      <rd-widget>\n        <rd-widget-body classes="no-padding">\n          <div class="toolBar">\n            <div class="toolBarTitle">\n              <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i>\n              {{ $ctrl.titleText }}\n            </div>\n          </div>\n          <div class="actionBar">\n            <button type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.purgeAction()">\n              <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Clear job history\n            </button>\n          </div>\n          <div class="searchBar">\n            <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n            <input\n              type="text"\n              class="searchInput"\n              ng-model="$ctrl.state.textFilter"\n              ng-change="$ctrl.onTextFilterChange()"\n              placeholder="Search..."\n              auto-focus\n              ng-model-options="{ debounce: 300 }"\n            />\n          </div>\n          <div class="table-responsive">\n            <table class="table table-hover table-filters nowrap-cells">\n              <thead>\n                <tr>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                      Id\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                    </a>\n                  </th>\n                  <th uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.filters.state.open">\n                    <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                      State\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                    </a>\n                    <div>\n                      <span uib-dropdown-toggle class="table-filter" ng-if="!$ctrl.filters.state.enabled"> Filter <i class="fa fa-filter" aria-hidden="true"></i></span>\n                      <span uib-dropdown-toggle class="table-filter filter-active" ng-if="$ctrl.filters.state.enabled">Filter <i class="fa fa-check" aria-hidden="true"></i></span>\n                    </div>\n                    <div class="dropdown-menu" uib-dropdown-menu>\n                      <div class="tableMenu">\n                        <div class="menuHeader">\n                          Filter by state\n                        </div>\n                        <div class="menuContent">\n                          <div class="md-checkbox" ng-repeat="filter in $ctrl.filters.state.values track by $index">\n                            <input id="filter_state_{{ $index }}" type="checkbox" ng-model="filter.display" ng-change="$ctrl.onStateFilterChange()" />\n                            <label for="filter_state_{{ $index }}">{{ filter.label }}</label>\n                          </div>\n                        </div>\n                        <div>\n                          <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.filters.state.open = false;">Close</a>\n                        </div>\n                      </div>\n                    </div>\n                  </th>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Created\')">\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && $ctrl.state.reverseOrder"></i>\n                      Created\n                    </a>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n                >\n                  <td>\n                    <a ui-sref="docker.containers.container.logs({ id: item.Id, nodeName: item.NodeName })" title="{{ item.Id }}"> {{ item | containername }}</a>\n                  </td>\n                  <td>\n                    <span\n                      ng-if="[\'starting\', \'healthy\', \'unhealthy\'].indexOf(item.Status) !== -1"\n                      class="label label-{{ item.Status | containerstatusbadge }} interactive"\n                      uib-tooltip="This container has a health check"\n                      >{{ item.Status }}</span\n                    >\n                    <span ng-if="[\'starting\', \'healthy\', \'unhealthy\'].indexOf(item.Status) === -1" class="label label-{{ item.Status | containerstatusbadge }}">\n                      {{ item.Status }}</span\n                    >\n                  </td>\n                  <td>\n                    {{ item.Created | getisodatefromtimestamp }}\n                  </td>\n                </tr>\n                <tr ng-if="!$ctrl.dataset">\n                  <td colspan="9" class="text-center text-muted">Loading...</td>\n                </tr>\n                <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n                  <td colspan="9" class="text-center text-muted">No jobs available.</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class="footer" ng-if="$ctrl.dataset">\n            <div class="paginationControls">\n              <form class="form-inline">\n                <span class="limitSelector">\n                  <span style="margin-right: 5px;">\n                    Items per page\n                  </span>\n                  <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                    <option value="0">All</option>\n                    <option value="10">10</option>\n                    <option value="25">25</option>\n                    <option value="50">50</option>\n                    <option value="100">100</option>\n                  </select>\n                </span>\n                <dir-pagination-controls max-size="5"></dir-pagination-controls>\n              </form>\n            </div>\n          </div>\n        </rd-widget-body>\n      </rd-widget>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(57);angular.module("portainer.docker").controller("JobsDatatableController",["$scope","$controller","$q","$state","PaginationService","DatatableService","ContainerService","ModalService","Notifications",function(e,t,n,i,o,s,l,c,d){angular.extend(this,t("GenericDatatableController",{$scope:e}));var u=this;this.filters={state:{open:!1,enabled:!1,values:[]}},this.applyFilters=function(e){for(var t=e,n=u.filters,a=0;a<n.state.values.length;a++){var r=n.state.values[a];if(t.Status===r.label&&r.display)return!0}return!1},this.onStateFilterChange=function(){for(var e=this.filters.state.values,t=!1,n=0;n<e.length;n++){e[n].display||(t=!0)}this.filters.state.enabled=t,s.setDataTableFilters(this.tableKey,this.filters)},this.prepareTableFromDataset=function(){for(var e=[],t=0;t<this.dataset.length;t++){var n=this.dataset[t];e.push({label:n.Status,display:!0})}this.filters.state.values=Object(r.a)(e,"label")},this.updateStoredFilters=function(e){for(var t=this.filters.state.values,n=0;n<t.length;n++){var r=t[n],i=Object(a.a)(e,["label",r.label]);i&&!i.display&&(r.display=i.display,this.filters.state.enabled=!0)}},this.purgeAction=function(){var e;(e=n.defer(),c.confirm({title:"Are you sure ?",message:"Clearing job history will remove all stopped jobs containers.",buttons:{confirm:{label:"Purge",className:"btn-danger"}},callback:function(t){e.resolve(t)}}),e.promise).then((function(e){if(!e)return n.when();l.prune({label:["io.portainer.job.endpoint"]}).then((function(){d.success("Success","Job history cleared"),i.reload()})).catch((function(e){d.error("Failure",e.message,"Unable to clear job history")}))}))},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=s.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=s.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var n=s.getDataTableFilters(this.tableKey);null!==n&&(this.filters=n,this.updateStoredFilters(n.state.values)),this.filters&&this.filters.state&&(this.filters.state.open=!1);var a=s.getDataTableSettings(this.tableKey);null!==a&&(this.settings=a,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(782);angular.module("portainer.docker").component("imagesDatatable",{templateUrl:a,controller:"ImagesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showHostColumn:"<",removeAction:"<",downloadAction:"<",forceRemoveAction:"<",exportInProgress:"<",offlineMode:"<",refreshCallback:"<"}})},function(e,t){var n="app/docker/components/datatables/images-datatable/imagesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n        <div class="settings">\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle><i class="fa fa-cog" aria-hidden="true"></i> Settings</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Table settings\n                </div>\n                <div class="menuContent">\n                  <div>\n                    <div class="md-checkbox">\n                      <input id="setting_auto_refresh" type="checkbox" ng-model="$ctrl.settings.repeater.autoRefresh" ng-change="$ctrl.onSettingsRepeaterChange()" />\n                      <label for="setting_auto_refresh">Auto refresh</label>\n                    </div>\n                    <div ng-if="$ctrl.settings.repeater.autoRefresh">\n                      <label for="settings_refresh_rate">\n                        Refresh rate\n                      </label>\n                      <select id="settings_refresh_rate" ng-model="$ctrl.settings.repeater.refreshRate" ng-change="$ctrl.onSettingsRepeaterChange()" class="small-select">\n                        <option value="10">10s</option>\n                        <option value="30">30s</option>\n                        <option value="60">1min</option>\n                        <option value="120">2min</option>\n                        <option value="300">5min</option>\n                      </select>\n                      <span>\n                        <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">Close</a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <div class="actionBar" ng-if="!$ctrl.offlineMode" authorization="DockerImageDelete, DockerImageBuild, DockerImageLoad, DockerImageGet">\n        <div class="btn-group" authorization="DockerImageDelete">\n          <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems, false)">\n            <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n          </button>\n          <button\n            type="button"\n            class="btn btn-sm btn-danger dropdown-toggle"\n            data-toggle="dropdown"\n            aria-haspopup="true"\n            aria-expanded="false"\n            ng-disabled="$ctrl.state.selectedItemCount === 0"\n          >\n            <span class="caret"></span>\n            <span class="sr-only">Toggle Dropdown</span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="$ctrl.forceRemoveAction($ctrl.state.selectedItems, true)" ng-disabled="$ctrl.state.selectedItemCount === 0">Force Remove</a></li>\n          </ul>\n        </div>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.images.build" authorization="DockerImageBuild">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>Build a new image\n        </button>\n        <div class="btn-group">\n          <button type="button" class="btn btn-sm btn-primary" ng-disabled="$ctrl.exportInProgress" ui-sref="docker.images.import" authorization="DockerImageLoad">\n            <i class="fa fa-upload space-right" aria-hidden="true"></i>Import\n          </button>\n          <button\n            type="button"\n            class="btn btn-sm btn-primary"\n            ng-disabled="$ctrl.state.selectedItemCount === 0 || $ctrl.exportInProgress"\n            ng-click="$ctrl.downloadAction($ctrl.state.selectedItems)"\n            button-spinner="$ctrl.exportInProgress"\n            authorization="DockerImageGet"\n          >\n            <i class="fa fa-download space-right" aria-hidden="true"></i>\n            <span ng-hide="$ctrl.exportInProgress">Export</span>\n            <span ng-show="$ctrl.exportInProgress">Export in progress...</span>\n          </button>\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover table-filters nowrap-cells">\n          <thead>\n            <tr>\n              <th uib-dropdown dropdown-append-to-body auto-close="disabled" popover-placement="bottom-left" is-open="$ctrl.filters.state.open">\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Id\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n                <div>\n                  <span uib-dropdown-toggle class="table-filter" ng-if="!$ctrl.filters.state.enabled">Filter <i class="fa fa-filter" aria-hidden="true"></i></span>\n                  <span uib-dropdown-toggle class="table-filter filter-active" ng-if="$ctrl.filters.state.enabled">Filter <i class="fa fa-check" aria-hidden="true"></i></span>\n                </div>\n                <div class="dropdown-menu" uib-dropdown-menu>\n                  <div class="tableMenu">\n                    <div class="menuHeader">\n                      Filter by usage\n                    </div>\n                    <div class="menuContent">\n                      <div class="md-checkbox">\n                        <input id="filter_usage_usedImages" type="checkbox" ng-model="$ctrl.filters.state.showUsedImages" ng-change="$ctrl.onstateFilterChange()" />\n                        <label for="filter_usage_usedImages">Used images</label>\n                      </div>\n                      <div class="md-checkbox">\n                        <input id="filter_usage_unusedImages" type="checkbox" ng-model="$ctrl.filters.state.showUnusedImages" ng-change="$ctrl.onstateFilterChange()" />\n                        <label for="filter_usage_unusedImages">Unused images</label>\n                      </div>\n                    </div>\n                    <div>\n                      <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.filters.state.open = false;">Close</a>\n                    </div>\n                  </div>\n                </div>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'RepoTags\')">\n                  Tags\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RepoTags\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RepoTags\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'VirtualSize\')">\n                  Size\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'VirtualSize\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'VirtualSize\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Created\')">\n                  Created\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showHostColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'NodeName\')">\n                  Host\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ng-if="!$ctrl.offlineMode" ui-sref="docker.images.image({ id: item.Id, nodeName: item.NodeName })" class="monospaced" title="{{ item.Id }}">{{\n                  item.Id | truncate: 40\n                }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item.Id | truncate: 40 }}</span>\n                <span style="margin-left: 10px;" class="label label-warning image-tag" ng-if="::item.ContainerCount === 0">Unused</span>\n              </td>\n              <td>\n                <span class="label label-primary image-tag" ng-repeat="tag in (item | repotags) track by $index">{{ tag }}</span>\n              </td>\n              <td>{{ item.VirtualSize | humansize }}</td>\n              <td>{{ item.Created | getisodatefromtimestamp }}</td>\n              <td ng-if="$ctrl.showHostColumn">{{ item.NodeName ? item.NodeName : \'-\' }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="5" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">No image available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("ImagesDatatableController",["$scope","$controller","DatatableService",function(e,t,n){angular.extend(this,t("GenericDatatableController",{$scope:e}));var a=this;this.filters={state:{open:!1,enabled:!1,showUsedImages:!0,showUnusedImages:!0}},this.applyFilters=function(e){var t=e,n=a.filters;return!!(0===t.ContainerCount&&n.state.showUnusedImages||0!==t.ContainerCount&&n.state.showUsedImages)},this.onstateFilterChange=function(){var e=this.filters.state,t=!1;e.showUsedImages&&e.showUnusedImages||(t=!0),this.filters.state.enabled=t,n.setDataTableFilters(this.tableKey,this.filters)},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters&&this.filters.state&&(this.filters.state.open=!1);var r=n.getDataTableSettings(this.tableKey);null!==r&&(this.settings=r,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(785);angular.module("portainer.docker").component("macvlanNodesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showIpAddressColumn:"<",accessToNodeDetails:"<",state:"="}})},function(e,t){var n="app/docker/components/datatables/macvlan-nodes-datatable/macvlanNodesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Hostname\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Hostname\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Hostname\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Role\')">\n                  Role\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'EngineVersion\')">\n                  Engine\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'EngineVersion\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'EngineVersion\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showIpAddressColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'Addr\')">\n                  IP Address\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Addr\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Addr\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  Status\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="docker.nodes.node({id: item.Id})" ng-if="$ctrl.accessToNodeDetails">{{ item.Hostname }}</a>\n                <span ng-if="!$ctrl.accessToNodeDetails">{{ item.Hostname }}</span>\n              </td>\n              <td>{{ item.Role }}</td>\n              <td>{{ item.EngineVersion }}</td>\n              <td ng-if="$ctrl.showIpAddressColumn">{{ item.Addr }}</td>\n              <td>\n                <span class="label label-{{ item.Status | nodestatusbadge }}">{{ item.Status }}</span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="7" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="7" class="text-center text-muted">No node available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(7),r=n(787);angular.module("portainer.docker").directive("networkRowContent",[function(){return{templateUrl:r,restrict:"A",transclude:!0,scope:{item:"<",parentCtrl:"<",allowCheckbox:"<",allowExpand:"<"},controller:["$scope",function(e){e.RCO=a.ResourceControlOwnership}]}}])},function(e,t){var n="app/docker/components/datatables/networks-datatable/network-row-content/networkRowContent.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<td ng-if="allowCheckbox">\n  <span class="md-checkbox" ng-if="!parentCtrl.offlineMode" authorization="DockerNetworkDelete, DockerNetworkCreate">\n    <input\n      id="select_{{ $index }}"\n      type="checkbox"\n      ng-model="item.Checked"\n      ng-click="parentCtrl.selectItem(item, $event); $event.stopPropagation()"\n      ng-disabled="parentCtrl.disableRemove(item)"\n    />\n    <label for="select_{{ $index }}"></label>\n  </span>\n  <a ng-if="parentCtrl.itemCanExpand(item)"\n    ><i ng-class="{ \'fas fa-angle-down\': item.Expanded, \'fas fa-angle-right\': !item.Expanded }" class="space-right" aria-hidden="true"></i\n  ></a>\n</td>\n<td ng-if="!allowCheckbox"></td>\n<td>\n  <a ng-if="!parentCtrl.offlineMode" ui-sref="docker.networks.network({ id: item.Id, nodeName: item.NodeName })" title="{{ item.Name }}">{{ item.Name | truncate: 40 }}</a>\n  <span ng-if="parentCtrl.offlineMode">{{ item.Name | truncate: 40 }}</span>\n  <span style="margin-left: 10px;" class="label label-info image-tag space-left" ng-if="item.ResourceControl.System">System</span>\n</td>\n<td>{{ item.StackName ? item.StackName : \'-\' }}</td>\n<td>{{ item.Driver }}</td>\n<td>{{ item.Attachable }}</td>\n<td>{{ item.IPAM.Driver }}</td>\n<td>{{ item.IPAM.IPV4Configs[0].Subnet ? item.IPAM.IPV4Configs[0].Subnet : \'-\' }}</td>\n<td>{{ item.IPAM.IPV4Configs[0].Gateway ? item.IPAM.IPV4Configs[0].Gateway : \'-\' }}</td>\n<td>{{ item.IPAM.IPV6Configs[0].Subnet ? item.IPAM.IPV6Configs[0].Subnet : \'-\' }}</td>\n<td>{{ item.IPAM.IPV6Configs[0].Gateway ? item.IPAM.IPV6Configs[0].Gateway : \'-\' }}</td>\n<td ng-if="parentCtrl.showHostColumn">{{ item.NodeName ? item.NodeName : \'-\' }}</td>\n<td ng-if="parentCtrl.showOwnershipColumn">\n  <span>\n    <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n    {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = RCO.ADMINISTRATORS }}\n  </span>\n</td>\n')}]),e.exports=n},function(e,t,n){var a=n(789);angular.module("portainer.docker").component("networksDatatable",{templateUrl:a,controller:"NetworksDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",showHostColumn:"<",removeAction:"<",offlineMode:"<",refreshCallback:"<"}})},function(e,t){var n="app/docker/components/datatables/networks-datatable/networksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n        <div class="settings">\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle><i class="fa fa-cog" aria-hidden="true"></i> Settings</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Table settings\n                </div>\n                <div class="menuContent">\n                  <div>\n                    <div class="md-checkbox">\n                      <input id="setting_auto_refresh" type="checkbox" ng-model="$ctrl.settings.repeater.autoRefresh" ng-change="$ctrl.onSettingsRepeaterChange()" />\n                      <label for="setting_auto_refresh">Auto refresh</label>\n                    </div>\n                    <div ng-if="$ctrl.settings.repeater.autoRefresh">\n                      <label for="settings_refresh_rate">\n                        Refresh rate\n                      </label>\n                      <select id="settings_refresh_rate" ng-model="$ctrl.settings.repeater.refreshRate" ng-change="$ctrl.onSettingsRepeaterChange()" class="small-select">\n                        <option value="10">10s</option>\n                        <option value="30">30s</option>\n                        <option value="60">1min</option>\n                        <option value="120">2min</option>\n                        <option value="300">5min</option>\n                      </select>\n                      <span>\n                        <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">Close</a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <div class="actionBar" ng-if="!$ctrl.offlineMode" authorization="DockerNetworkDelete, DockerNetworkCreate">\n        <button\n          type="button"\n          class="btn btn-sm btn-danger"\n          authorization="DockerNetworkDelete"\n          ng-disabled="$ctrl.state.selectedItemCount === 0"\n          ng-click="$ctrl.removeAction($ctrl.state.selectedItems)"\n        >\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.networks.new" authorization="DockerNetworkCreate">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>Add network\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th style="width: 55px;">\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="DockerNetworkDelete, DockerNetworkCreate">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.expandAll()" ng-if="$ctrl.hasExpandableItems()">\n                  <i ng-class="{ \'fas fa-angle-down\': $ctrl.state.expandAll, \'fas fa-angle-right\': !$ctrl.state.expandAll }" aria-hidden="true"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'StackName\')">\n                  Stack\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Driver\')">\n                  Driver\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Driver\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Driver\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Attachable\')">\n                  Attachable\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Attachable\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Attachable\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'IPAM.Driver\')">\n                  IPAM Driver\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.Driver\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.Driver\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'IPAM.IPV4Configs[0].Subnet\')">\n                  IPV4 IPAM Subnet\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.IPV4Configs[0].Subnet\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.IPV4Configs[0].Subnet\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'IPAM.IPV4Configs[0].Gateway\')">\n                  IPV4 IPAM Gateway\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.IPV4Configs[0].Gateway\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.IPV4Configs[0].Gateway\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'IPAM.IPV6Configs[0].Subnet\')">\n                  IPV6 IPAM Subnet\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.IPV6Configs[0].Subnet\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.IPV6Configs[0].Subnet\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'IPAM.IPV6Configs[0].Gateway\')">\n                  IPV6 IPAM Gateway\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.IPV6Configs[0].Gateway\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.IPV6Configs[0].Gateway\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showHostColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'NodeName\')">\n                  Host\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  Ownership\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate-start="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n              network-row-content\n              item="item"\n              parent-ctrl="$ctrl"\n              ng-click="$ctrl.expandItem(item, !item.Expanded)"\n              allow-checkbox="true"\n            >\n            </tr>\n            <tr dir-paginate-end ng-show="item.Expanded" ng-repeat="it in item.Subs" style="background: #d5e8f3;" network-row-content item="it" parent-ctrl="$ctrl"> </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="9" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="9" class="text-center text-muted">No network available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(9),r=n(5);angular.module("portainer.docker").controller("NetworksDatatableController",["$scope","$controller","NetworkHelper","DatatableService",function(e,t,n,i){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.disableRemove=function(e){return n.isSystemNetwork(e)},this.state=Object.assign(this.state,{expandedItems:[]}),this.allowSelection=function(e){return!this.disableRemove(e)},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=i.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=i.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var n=i.getDataTableFilters(this.tableKey);null!==n&&(this.filters=n),this.filters&&this.filters.state&&(this.filters.state.open=!1);var a=i.getDataTableSettings(this.tableKey);null!==a&&(this.settings=a,this.settings.open=!1),this.onSettingsRepeaterChange()},this.expandItem=function(e,t){e.Expanded=t},this.itemCanExpand=function(e){return e.Subs.length>0},this.hasExpandableItems=function(){var e=this;return Object(r.a)(this.state.filteredDataSet,(function(t){return e.itemCanExpand(t)})).length},this.expandAll=function(){var e=this;this.state.expandAll=!this.state.expandAll,Object(a.a)(this.state.filteredDataSet,(function(t){e.itemCanExpand(t)&&e.expandItem(t,e.state.expandAll)}))}}])},function(e,t,n){var a=n(792);angular.module("portainer.docker").component("nodeTasksDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/docker/components/datatables/node-tasks-datatable/nodeTasksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Id\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  Status\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Slot\')">\n                  Slot\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Spec.ContainerSpec.Image\')">\n                  Image\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Spec.ContainerSpec.Image\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Spec.ContainerSpec.Image\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Updated\')">\n                  Last Update\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td\n                ><a ui-sref="docker.tasks.task({id: item.Id})" class="monospaced">{{ item.Id }}</a></td\n              >\n              <td\n                ><span class="label label-{{ item.Status.State | taskstatusbadge }}">{{ item.Status.State }}</span></td\n              >\n              <td>{{ item.Slot ? item.Slot : \'-\' }}</td>\n              <td>{{ item.Spec.ContainerSpec.Image | hideshasum }}</td>\n              <td>{{ item.Updated | getisodate }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="5" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">No task available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(794);angular.module("portainer.docker").component("nodesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showIpAddressColumn:"<",accessToNodeDetails:"<",refreshCallback:"<"}})},function(e,t){var n="app/docker/components/datatables/nodes-datatable/nodesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n        <div class="settings">\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle><i class="fa fa-cog" aria-hidden="true"></i> Settings</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Table settings\n                </div>\n                <div class="menuContent">\n                  <div>\n                    <div class="md-checkbox">\n                      <input id="setting_auto_refresh" type="checkbox" ng-model="$ctrl.settings.repeater.autoRefresh" ng-change="$ctrl.onSettingsRepeaterChange()" />\n                      <label for="setting_auto_refresh">Auto refresh</label>\n                    </div>\n                    <div ng-if="$ctrl.settings.repeater.autoRefresh">\n                      <label for="settings_refresh_rate">\n                        Refresh rate\n                      </label>\n                      <select id="settings_refresh_rate" ng-model="$ctrl.settings.repeater.refreshRate" ng-change="$ctrl.onSettingsRepeaterChange()" class="small-select">\n                        <option value="10">10s</option>\n                        <option value="30">30s</option>\n                        <option value="60">1min</option>\n                        <option value="120">2min</option>\n                        <option value="300">5min</option>\n                      </select>\n                      <span>\n                        <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">Close</a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Hostname\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Hostname\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Hostname\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Role\')">\n                  Role\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CPUs\')">\n                  CPU\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CPUs\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CPUs\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Memory\')">\n                  Memory\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Memory\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Memory\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'EngineVersion\')">\n                  Engine\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'EngineVersion\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'EngineVersion\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showIpAddressColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'Addr\')">\n                  IP Address\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Addr\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Addr\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  Status\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Availability\')">\n                  Availability\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Availability\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Availability\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <a ui-sref="docker.nodes.node({id: item.Id})" ng-if="$ctrl.accessToNodeDetails">{{ item.Name || item.Hostname }}</a>\n                <span ng-if="!$ctrl.accessToNodeDetails">{{ item.Name || item.Hostname }}</span>\n              </td>\n              <td>{{ item.Role }}</td>\n              <td>{{ item.CPUs / 1000000000 }}</td>\n              <td>{{ item.Memory | humansize }}</td>\n              <td>{{ item.EngineVersion }}</td>\n              <td ng-if="$ctrl.showIpAddressColumn">{{ item.Addr }}</td>\n              <td\n                ><span class="label label-{{ item.Status | nodestatusbadge }}">{{ item.Status }}</span></td\n              >\n              <td\n                ><span class="label label-{{ item.Availability | dockerNodeAvailabilityBadge }}">{{ item.Availability }}</span></td\n              >\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="7" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="7" class="text-center text-muted">No node available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(796);angular.module("portainer.docker").component("secretsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",removeAction:"<",refreshCallback:"<"}})},function(e,t){var n="app/docker/components/datatables/secrets-datatable/secretsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n        <div class="settings">\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle><i class="fa fa-cog" aria-hidden="true"></i> Settings</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Table settings\n                </div>\n                <div class="menuContent">\n                  <div>\n                    <div class="md-checkbox">\n                      <input id="setting_auto_refresh" type="checkbox" ng-model="$ctrl.settings.repeater.autoRefresh" ng-change="$ctrl.onSettingsRepeaterChange()" />\n                      <label for="setting_auto_refresh">Auto refresh</label>\n                    </div>\n                    <div ng-if="$ctrl.settings.repeater.autoRefresh">\n                      <label for="settings_refresh_rate">\n                        Refresh rate\n                      </label>\n                      <select id="settings_refresh_rate" ng-model="$ctrl.settings.repeater.refreshRate" ng-change="$ctrl.onSettingsRepeaterChange()" class="small-select">\n                        <option value="10">10s</option>\n                        <option value="30">30s</option>\n                        <option value="60">1min</option>\n                        <option value="120">2min</option>\n                        <option value="300">5min</option>\n                      </select>\n                      <span>\n                        <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">Close</a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <div class="actionBar" authorization="DockerSecretDelete, DockerSecretCreate">\n        <button\n          type="button"\n          class="btn btn-sm btn-danger"\n          authorization="DockerSecretDelete"\n          ng-disabled="$ctrl.state.selectedItemCount === 0"\n          ng-click="$ctrl.removeAction($ctrl.state.selectedItems)"\n        >\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.secrets.new" authorization="DockerSecretCreate">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>Add secret\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" authorization="DockerSecretDelete, DockerSecretCreate">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CreatedAt\')">\n                  Creation Date\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  Ownership\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox" authorization="DockerSecretDelete, DockerSecretCreate">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="docker.secrets.secret({id: item.Id})">{{ item.Name }}</a>\n              </td>\n              <td>{{ item.CreatedAt | getisodate }}</td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = $ctrl.RCO.ADMINISTRATORS }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">No secret available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(798);angular.module("portainer.docker").component("serviceTasksDatatable",{templateUrl:a,controller:"ServiceTasksDatatableController",bindings:{dataset:"<",serviceId:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",nodes:"<",agentProxy:"<",textFilter:"=",showTaskLogsButton:"<"}})},function(e,t){var n="app/docker/components/datatables/service-tasks-datatable/serviceTasksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div style="background-color: #d5e8f3; padding: 2px;">\n  <table class="table table-condensed table-hover nowrap-cells">\n    <thead style="background-color: #e7f6ff;">\n      <tr>\n        <th uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.filters.state.open" style="width: 10%;">\n          <a ng-click="$ctrl.changeOrderBy(\'Status.State\')">\n            Status\n            <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status.State\' && !$ctrl.state.reverseOrder"></i>\n            <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status.State\' && $ctrl.state.reverseOrder"></i>\n          </a>\n          <span class="space-left">\n            <span uib-dropdown-toggle class="table-filter" ng-if="!$ctrl.filters.state.enabled">Filter <i class="fa fa-filter" aria-hidden="true"></i></span>\n            <span uib-dropdown-toggle class="table-filter filter-active" ng-if="$ctrl.filters.state.enabled">Filter <i class="fa fa-check" aria-hidden="true"></i></span>\n          </span>\n          <div class="dropdown-menu" uib-dropdown-menu>\n            <div class="tableMenu">\n              <div class="menuHeader">\n                Filter by state\n              </div>\n              <div class="menuContent">\n                <div class="md-checkbox" ng-repeat="filter in $ctrl.filters.state.values track by $index">\n                  <input id="filter_state_{{ $ctrl.serviceId }}_{{ $index }}" type="checkbox" ng-model="filter.display" ng-change="$ctrl.onStateFilterChange()" />\n                  <label for="filter_state_{{ $ctrl.serviceId }}_{{ $index }}">{{ filter.label }}</label>\n                </div>\n              </div>\n              <div>\n                <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.filters.state.open = false;">Close</a>\n              </div>\n            </div>\n          </div>\n        </th>\n        <th style="width: 22%;">Task</th>\n        <th>Actions</th>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'Slot\')">\n            Slot\n            <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && !$ctrl.state.reverseOrder"></i>\n            <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && $ctrl.state.reverseOrder"></i>\n          </a>\n        </th>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'NodeId\')">\n            Node\n            <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeId\' && !$ctrl.state.reverseOrder"></i>\n            <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeId\' && $ctrl.state.reverseOrder"></i>\n          </a>\n        </th>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'Updated\')">\n            Last Update\n            <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && !$ctrl.state.reverseOrder"></i>\n            <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && $ctrl.state.reverseOrder"></i>\n          </a>\n        </th>\n      </tr>\n    </thead>\n    <tbody style="background-color: #f1f9fd;">\n      <tr\n        ng-repeat="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder))"\n      >\n        <td class="text-center">\n          <span class="label label-{{ item.Status.State | taskstatusbadge }} space-right">{{ item.Status.State }}</span>\n        </td>\n        <td>\n          <a ng-if="!$ctrl.agentProxy || !item.Container" ui-sref="docker.tasks.task({id: item.Id})" class="monospaced">{{ item.Id }}</a>\n          <a ng-if="$ctrl.agentProxy && item.Container" ui-sref="docker.containers.container({ id: item.Container.Id, nodeName: item.Container.NodeName })" class="monospaced">{{\n            item.Id\n          }}</a>\n        </td>\n        <td>\n          <container-quick-actions\n            ng-if="!$ctrl.agentProxy || !item.Container"\n            container-id="item.ContainerId"\n            task-id="item.Id"\n            status="item.Status.State"\n            state="$ctrl.state"\n          ></container-quick-actions>\n          <container-quick-actions\n            ng-if="$ctrl.agentProxy && item.Container"\n            container-id="item.Container.Id"\n            node-name="item.Container.NodeName"\n            status="item.Status.State"\n            state="$ctrl.state"\n          ></container-quick-actions>\n        </td>\n        <td>{{ item.Slot ? item.Slot : \'-\' }}</td>\n        <td>{{ item.NodeId | tasknodename: $ctrl.nodes }}</td>\n        <td>{{ item.Updated | getisodate }}</td>\n      </tr>\n      <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n        <td colspan="5" class="text-center text-muted">No task matching filter.</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(57);angular.module("portainer.docker").controller("ServiceTasksDatatableController",["$scope","$controller","DatatableService",function(e,t,n){angular.extend(this,t("GenericDatatableController",{$scope:e}));var r=this;this.state=Object.assign(this.state,{showQuickActionStats:!0,showQuickActionLogs:!0,showQuickActionConsole:!0,showQuickActionInspect:!0,showQuickActionExec:!0,showQuickActionAttach:!1}),this.filters={state:{open:!1,enabled:!1,values:[]}},this.applyFilters=function(e){for(var t=r.filters,n=0;n<t.state.values.length;n++){var a=t.state.values[n];if(e.Status.State===a.label&&a.display)return!0}return!1},this.onStateFilterChange=function(){for(var e=this.filters.state.values,t=!1,n=0;n<e.length;n++){e[n].display||(t=!0)}this.filters.state.enabled=t},this.prepareTableFromDataset=function(){for(var e=[],t=0;t<this.dataset.length;t++){var n=this.dataset[t];e.push({label:n.Status.State,display:!0})}this.filters.state.values=Object(a.a)(e,"label")},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters&&this.filters.state&&(this.filters.state.open=!1);var r=n.getDataTableSettings(this.tableKey);null!==r&&(this.settings=r,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(801);angular.module("portainer.docker").component("servicesDatatableActions",{templateUrl:a,controller:"ServicesDatatableActionsController",bindings:{selectedItems:"=",selectedItemCount:"=",showUpdateAction:"<",showAddAction:"<"}})},function(e,t){var n="app/docker/components/datatables/services-datatable/actions/servicesDatatableActions.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="actionBar" authorization="DockerServiceUpdate, DockerServiceDelete, DockerServiceCreate">\n  <div class="btn-group" role="group" aria-label="...">\n    <button\n      ng-if="$ctrl.showUpdateAction"\n      type="button"\n      class="btn btn-sm btn-primary"\n      authorization="DockerServiceUpdate"\n      ng-disabled="$ctrl.selectedItemCount === 0"\n      ng-click="$ctrl.updateAction($ctrl.selectedItems)"\n    >\n      <i class="fa fa-sync space-right" aria-hidden="true"></i>Update\n    </button>\n    <button\n      type="button"\n      class="btn btn-sm btn-danger"\n      authorization="DockerServiceDelete"\n      ng-disabled="$ctrl.selectedItemCount === 0"\n      ng-click="$ctrl.removeAction($ctrl.selectedItems)"\n    >\n      <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n    </button>\n  </div>\n  <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.services.new" ng-if="$ctrl.showAddAction" authorization="DockerServiceCreate">\n    <i class="fa fa-plus space-right" aria-hidden="true"></i>Add service\n  </button>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("ServicesDatatableActionsController",["$q","$state","ServiceService","ServiceHelper","Notifications","ModalService","ImageHelper","WebhookService","EndpointProvider",function(e,t,n,a,r,i,o,s,l){this.scaleAction=function(e){var i=a.serviceToConfig(e.Model);i.Mode.Replicated.Replicas=e.Replicas,n.update(e,i).then((function(){r.success("Service successfully scaled","New replica count: "+e.Replicas),t.reload()})).catch((function(t){r.error("Failure",t,"Unable to scale service"),e.Scale=!1,e.Replicas=e.ReplicaCount}))},this.removeAction=function(a){i.confirmDeletion("Do you want to remove the selected service(s)? All the containers associated to the selected service(s) will be removed too.",(function(i){var o,c;i&&(c=(o=a).length,angular.forEach(o,(function(a){n.remove(a).then((function(){return s.webhooks(a.Id,l.endpointID())})).then((function(t){return e.when(0!==t.length&&s.deleteWebhook(t[0].Id))})).then((function(){r.success("Service successfully removed",a.Name)})).catch((function(e){r.error("Failure",e,"Unable to remove service")})).finally((function(){0==--c&&t.reload()}))})))}))},this.updateAction=function(e){i.confirmServiceForceUpdate("Do you want to force an update of the selected service(s)? All the tasks associated to the selected service(s) will be recreated.",(function(i){if(i){var s=!1;i[0]&&(s=!0),function(e,i){var s=e.length;angular.forEach(e,(function(e){var l=a.serviceToConfig(e.Model);i&&(l.TaskTemplate.ContainerSpec.Image=o.removeDigestFromRepository(l.TaskTemplate.ContainerSpec.Image)),l.TaskTemplate.ForceUpdate++,n.update(e,l).then((function(){r.success("Service successfully updated",e.Name)})).catch((function(t){r.error("Failure",t,"Unable to force update service",e.Name)})).finally((function(){0===--s&&t.reload()}))}))}(e,s)}}))}}])},function(e,t,n){var a=n(804);angular.module("portainer.docker").component("servicesDatatable",{templateUrl:a,controller:"ServicesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",nodes:"<",agentProxy:"<",showOwnershipColumn:"<",showUpdateAction:"<",showAddAction:"<",showStackColumn:"<",showTaskLogsButton:"<",refreshCallback:"<"}})},function(e,t){var n="app/docker/components/datatables/services-datatable/servicesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n        <div class="settings">\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle><i class="fa fa-cog" aria-hidden="true"></i> Settings</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Table settings\n                </div>\n                <div class="menuContent">\n                  <div>\n                    <div class="md-checkbox">\n                      <input id="setting_auto_refresh" type="checkbox" ng-model="$ctrl.settings.repeater.autoRefresh" ng-change="$ctrl.onSettingsRepeaterChange()" />\n                      <label for="setting_auto_refresh">Auto refresh</label>\n                    </div>\n                    <div ng-if="$ctrl.settings.repeater.autoRefresh">\n                      <label for="settings_refresh_rate">\n                        Refresh rate\n                      </label>\n                      <select id="settings_refresh_rate" ng-model="$ctrl.settings.repeater.refreshRate" ng-change="$ctrl.onSettingsRepeaterChange()" class="small-select">\n                        <option value="10">10s</option>\n                        <option value="30">30s</option>\n                        <option value="60">1min</option>\n                        <option value="120">2min</option>\n                        <option value="300">5min</option>\n                      </select>\n                      <span>\n                        <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">Close</a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <services-datatable-actions\n        selected-items="$ctrl.state.selectedItems"\n        selected-item-count="$ctrl.state.selectedItemCount"\n        show-add-action="$ctrl.showAddAction"\n        show-update-action="$ctrl.showUpdateAction"\n      ></services-datatable-actions>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th style="width: 55px;">\n                <span class="md-checkbox" authorization="DockerServiceUpdate, DockerServiceDelete, DockerServiceCreate">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.expandAll()">\n                  <i ng-class="{ \'fas fa-angle-down\': $ctrl.state.expandAll, \'fas fa-angle-right\': !$ctrl.state.expandAll }" aria-hidden="true"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showStackColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'StackName\')">\n                  Stack\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Image\')">\n                  Image\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Image\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Image\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Mode\')">\n                  Scheduling Mode\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Mode\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Mode\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Ports\')">\n                  Published Ports\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Ports\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Ports\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'UpdatedAt\')">\n                  Last Update\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'UpdatedAt\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'UpdatedAt\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  Ownership\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              ng-click="$ctrl.expandItem(item, !item.Expanded)"\n              dir-paginate-start="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n              class="interactive"\n            >\n              <td>\n                <span class="md-checkbox" authorization="DockerServiceUpdate, DockerServiceDelete, DockerServiceCreate">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event); $event.stopPropagation()" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a><i ng-class="{ \'fas fa-angle-down\': item.Expanded, \'fas fa-angle-right\': !item.Expanded }" class="space-right" aria-hidden="true"></i></a>\n              </td>\n              <td>\n                <a ui-sref="docker.services.service({id: item.Id})" ng-click="$event.stopPropagation()">{{ item.Name }}</a>\n              </td>\n              <td ng-if="$ctrl.showStackColumn">{{ item.StackName ? item.StackName : \'-\' }}</td>\n              <td>{{ item.Image | hideshasum }}</td>\n              <td ng-controller="ServicesDatatableActionsController as actionCtrl">\n                {{ item.Mode }}\n                <code>{{ item.Tasks | runningtaskscount }}</code> / <code>{{ item.Mode === \'replicated\' ? item.Replicas : ($ctrl.nodes | availablenodecount: item) }}</code>\n                <span ng-if="item.Mode === \'replicated\' && !item.Scale" authorization="DockerServiceUpdate">\n                  <a class="interactive" ng-click="item.Scale = true; item.ReplicaCount = item.Replicas; $event.stopPropagation();">\n                    <i class="fa fa-arrows-alt-v" aria-hidden="true"></i> Scale\n                  </a>\n                </span>\n                <span ng-if="item.Mode === \'replicated\' && item.Scale">\n                  <input\n                    class="input-sm"\n                    type="number"\n                    min="0"\n                    step="1"\n                    ng-model="item.Replicas"\n                    on-enter-key="actionCtrl.scaleAction(item)"\n                    auto-focus\n                    ng-click="$event.stopPropagation();"\n                  />\n                  <a class="interactive" ng-click="item.Scale = false; $event.stopPropagation();"><i class="fa fa-times"></i></a>\n                  <a class="interactive" ng-click="actionCtrl.scaleAction(item); $event.stopPropagation();"><i class="fa fa-check-square"></i></a>\n                </span>\n              </td>\n              <td>\n                <a\n                  ng-if="item.Ports && item.Ports.length > 0 && p.PublishedPort"\n                  ng-repeat="p in item.Ports"\n                  class="image-tag"\n                  ng-href="http://{{ $ctrl.state.publicURL }}:{{ p.PublishedPort }}"\n                  target="_blank"\n                  ng-click="$event.stopPropagation();"\n                >\n                  <i class="fa fa-external-link-alt" aria-hidden="true"></i> {{ p.PublishedPort }}:{{ p.TargetPort }}\n                </a>\n                <span ng-if="!item.Ports || item.Ports.length === 0">-</span>\n              </td>\n              <td>{{ item.UpdatedAt | getisodate }}</td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = $ctrl.RCO.ADMINISTRATORS }}\n                </span>\n              </td>\n            </tr>\n            <tr dir-paginate-end ng-show="item.Expanded">\n              <td></td>\n              <td colspan="8">\n                <service-tasks-datatable\n                  dataset="item.Tasks"\n                  service-id="item.Id"\n                  table-key="service-tasks"\n                  order-by="Status.State"\n                  nodes="$ctrl.nodes"\n                  agent-proxy="$ctrl.agentProxy"\n                  show-task-logs-button="$ctrl.showTaskLogsButton"\n                  text-filter="$ctrl.state.textFilter"\n                ></service-tasks-datatable>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="8" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="8" class="text-center text-muted">No service available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(2);angular.module("portainer.docker").controller("ServicesDatatableController",["$scope","$controller","DatatableService","EndpointProvider",function(e,t,n,r){angular.extend(this,t("GenericDatatableController",{$scope:e}));var i=this;function o(e,t){Object(a.a)(t,(function(t){return e.Id===t}))&&i.expandItem(e,!0)}this.state=Object.assign(this.state,{expandAll:!1,expandedItems:[],publicURL:r.endpointPublicURL()}),this.expandAll=function(){this.state.expandAll=!this.state.expandAll;for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];this.expandItem(t,this.state.expandAll)}},this.expandItem=function(e,t){if(e.Expanded=t,e.Expanded)-1===this.state.expandedItems.indexOf(e.Id)&&this.state.expandedItems.push(e.Id);else{var a=this.state.expandedItems.indexOf(e.Id);a>-1&&this.state.expandedItems.splice(a,1)}n.setDataTableExpandedItems(this.tableKey,this.state.expandedItems)},this.expandItems=function(e){var t=0;this.state.expandedItems=e;for(var n=0;n<this.dataset.length;n++){var a=this.dataset[n];o(a,e),a.Expanded&&++t}t===this.dataset.length&&(this.state.expandAll=!0)},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters&&this.filters.state&&(this.filters.state.open=!1);var r=n.getDataTableExpandedItems(this.tableKey);null!==r&&this.expandItems(r);var i=n.getDataTableSettings(this.tableKey);null!==i&&(this.settings=i,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(807);angular.module("portainer.docker").component("tasksDatatable",{templateUrl:a,controller:"TasksDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",nodes:"<",showSlotColumn:"<",showLogsButton:"<",agentProxy:"<"}})},function(e,t){var n="app/docker/components/datatables/tasks-datatable/tasksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  Status\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Id\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>Actions</th>\n              <th ng-if="$ctrl.showSlotColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'Slot\')">\n                  Slot\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'NodeId\')">\n                  Node\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeId\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeId\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Updated\')">\n                  Last Update\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td\n                ><span class="label label-{{ item.Status.State | taskstatusbadge }}">{{ item.Status.State }}</span></td\n              >\n              <td>\n                <a ng-if="!$ctrl.agentProxy || !item.Container" ui-sref="docker.tasks.task({id: item.Id})" class="monospaced"\n                  >{{ item.ServiceName }}{{ item.Slot ? \'.\' + item.Slot : \'\' }}{{ \'.\' + item.Id }}</a\n                >\n                <a ng-if="$ctrl.agentProxy && item.Container" ui-sref="docker.containers.container({ id: item.Container.Id, nodeName: item.Container.NodeName })" class="monospaced"\n                  >{{ item.ServiceName }}{{ item.Slot ? \'.\' + item.Slot : \'\' }}{{ \'.\' + item.Id }}</a\n                >\n              </td>\n              <td>\n                <container-quick-actions\n                  ng-if="!$ctrl.agentProxy || !item.Container"\n                  container-id="item.ContainerId"\n                  task-id="item.Id"\n                  status="item.Status.State"\n                  state="$ctrl.state"\n                ></container-quick-actions>\n                <container-quick-actions\n                  ng-if="$ctrl.agentProxy && item.Container"\n                  container-id="item.Container.Id"\n                  node-name="item.Container.NodeName"\n                  status="item.Status.State"\n                  state="$ctrl.state"\n                ></container-quick-actions>\n              </td>\n              <td ng-if="$ctrl.showSlotColumn">{{ item.Slot ? item.Slot : \'-\' }}</td>\n              <td>{{ item.NodeId | tasknodename: $ctrl.nodes }}</td>\n              <td>{{ item.Updated | getisodate }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="6" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="6" class="text-center text-muted">No task available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("TasksDatatableController",["$scope","$controller","DatatableService",function(e,t,n){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.state=Object.assign(this.state,{showQuickActionStats:!0,showQuickActionLogs:!0,showQuickActionExec:!0,showQuickActionInspect:!0,showQuickActionAttach:!1}),this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters&&this.filters.state&&(this.filters.state.open=!1);var r=n.getDataTableSettings(this.tableKey);null!==r&&(this.settings=r,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(810);angular.module("portainer.docker").component("volumesDatatable",{templateUrl:a,controller:"VolumesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",showHostColumn:"<",removeAction:"<",showBrowseAction:"<",offlineMode:"<",refreshCallback:"<"}})},function(e,t){var n="app/docker/components/datatables/volumes-datatable/volumesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n        <div class="settings">\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle><i class="fa fa-cog" aria-hidden="true"></i> Settings</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Table settings\n                </div>\n                <div class="menuContent">\n                  <div>\n                    <div class="md-checkbox">\n                      <input id="setting_auto_refresh" type="checkbox" ng-model="$ctrl.settings.repeater.autoRefresh" ng-change="$ctrl.onSettingsRepeaterChange()" />\n                      <label for="setting_auto_refresh">Auto refresh</label>\n                    </div>\n                    <div ng-if="$ctrl.settings.repeater.autoRefresh">\n                      <label for="settings_refresh_rate">\n                        Refresh rate\n                      </label>\n                      <select id="settings_refresh_rate" ng-model="$ctrl.settings.repeater.refreshRate" ng-change="$ctrl.onSettingsRepeaterChange()" class="small-select">\n                        <option value="10">10s</option>\n                        <option value="30">30s</option>\n                        <option value="60">1min</option>\n                        <option value="120">2min</option>\n                        <option value="300">5min</option>\n                      </select>\n                      <span>\n                        <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">Close</a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <div class="actionBar" ng-if="!$ctrl.offlineMode" authorization="DockerVolumeDelete, DockerVolumeCreate">\n        <button\n          type="button"\n          class="btn btn-sm btn-danger"\n          authorization="DockerVolumeDelete"\n          ng-disabled="$ctrl.state.selectedItemCount === 0"\n          ng-click="$ctrl.removeAction($ctrl.state.selectedItems)"\n        >\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.volumes.new" authorization="DockerVolumeCreate">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>Add volume\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover table-filters nowrap-cells">\n          <thead>\n            <tr>\n              <th uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.filters.state.open">\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="DockerVolumeDelete, DockerVolumeCreate">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n                <div>\n                  <span uib-dropdown-toggle class="table-filter" ng-if="!$ctrl.filters.state.enabled">Filter <i class="fa fa-filter" aria-hidden="true"></i></span>\n                  <span uib-dropdown-toggle class="table-filter filter-active" ng-if="$ctrl.filters.state.enabled">Filter <i class="fa fa-check" aria-hidden="true"></i></span>\n                </div>\n                <div class="dropdown-menu" uib-dropdown-menu>\n                  <div class="tableMenu">\n                    <div class="menuHeader">\n                      Filter by usage\n                    </div>\n                    <div class="menuContent">\n                      <div class="md-checkbox">\n                        <input id="filter_usage_usedImages" type="checkbox" ng-model="$ctrl.filters.state.showUsedVolumes" ng-change="$ctrl.onstateFilterChange()" />\n                        <label for="filter_usage_usedImages">Used volumes</label>\n                      </div>\n                      <div class="md-checkbox">\n                        <input id="filter_usage_unusedImages" type="checkbox" ng-model="$ctrl.filters.state.showUnusedVolumes" ng-change="$ctrl.onstateFilterChange()" />\n                        <label for="filter_usage_unusedImages">Unused volumes</label>\n                      </div>\n                    </div>\n                    <div>\n                      <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.filters.state.open = false;">Close</a>\n                    </div>\n                  </div>\n                </div>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'StackName\')">\n                  Stack\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Driver\')">\n                  Driver\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Driver\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Driver\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Mountpoint\')">\n                  Mount point\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Mountpoint\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Mountpoint\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CreatedAt\')">\n                  Created\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showHostColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'NodeName\')">\n                  Host\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  Ownership\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="DockerVolumeDelete, DockerVolumeCreate">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ng-if="!$ctrl.offlineMode" ui-sref="docker.volumes.volume({ id: item.Id, nodeName: item.NodeName })" class="monospaced" title="{{ item.Id }}">{{\n                  item.Id | truncate: 40\n                }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item.Id | truncate: 40 }}</span>\n                <btn authorization="DockerAgentBrowseList" ng-if="$ctrl.showBrowseAction && !$ctrl.offlineMode">\n                  <a ui-sref="docker.volumes.volume.browse({ id: item.Id, nodeName: item.NodeName })" class="btn btn-xs btn-primary space-left">\n                    <i class="fa fa-search"></i> browse\n                  </a>\n                </btn>\n                <span style="margin-left: 10px;" class="label label-warning image-tag space-left" ng-if="item.dangling">Unused</span>\n              </td>\n              <td>{{ item.StackName ? item.StackName : \'-\' }}</td>\n              <td>{{ item.Driver }}</td>\n              <td>{{ item.Mountpoint | truncatelr }}</td>\n              <td>{{ item.CreatedAt | getisodate }}</td>\n              <td ng-if="$ctrl.showHostColumn">{{ item.NodeName ? item.NodeName : \'-\' }}</td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = $ctrl.RCO.ADMINISTRATORS }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="6" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="6" class="text-center text-muted">No volume available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("VolumesDatatableController",["$scope","$controller","DatatableService",function(e,t,n){angular.extend(this,t("GenericDatatableController",{$scope:e}));var a=this;this.filters={state:{open:!1,enabled:!1,showUsedVolumes:!0,showUnusedVolumes:!0}},this.applyFilters=function(e){var t=e,n=a.filters;return!!(t.dangling&&n.state.showUnusedVolumes||!t.dangling&&n.state.showUsedVolumes)},this.onstateFilterChange=function(){var e=this.filters.state,t=!1;e.showUsedVolumes&&e.showUnusedVolumes||(t=!0),this.filters.state.enabled=t,n.setDataTableFilters(this.tableKey,this.filters)},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters&&this.filters.state&&(this.filters.state.open=!1);var r=n.getDataTableSettings(this.tableKey);null!==r&&(this.settings=r,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(813);angular.module("portainer.docker").component("dockerSidebarContent",{templateUrl:a,bindings:{endpointApiVersion:"<",swarmManagement:"<",standaloneManagement:"<",adminAccess:"<",offlineMode:"<",showStacks:"<"}})},function(e,t){var n="app/docker/components/dockerSidebarContent/dockerSidebarContent.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<li class="sidebar-list">\n  <a ui-sref="docker.dashboard" ui-sref-active="active">Dashboard <span class="menu-icon fa fa-tachometer-alt fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="!$ctrl.offlineMode" authorization="DockerContainerCreate, PortainerStackCreate">\n  <a ui-sref="portainer.templates" ui-sref-active="active">App Templates <span class="menu-icon fa fa-rocket fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.showStacks">\n  <a ui-sref="portainer.stacks" ui-sref-active="active">Stacks <span class="menu-icon fa fa-th-list fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.swarmManagement">\n  <a ui-sref="docker.services" ui-sref-active="active">Services <span class="menu-icon fa fa-list-alt fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="docker.containers" ui-sref-active="active">Containers <span class="menu-icon fa fa-server fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="docker.images" ui-sref-active="active">Images <span class="menu-icon fa fa-clone fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="docker.networks" ui-sref-active="active">Networks <span class="menu-icon fa fa-sitemap fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="docker.volumes" ui-sref-active="active">Volumes <span class="menu-icon fa fa-cubes fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.endpointApiVersion >= 1.3 && $ctrl.swarmManagement">\n  <a ui-sref="docker.configs" ui-sref-active="active">Configs <span class="menu-icon fa fa-file-code fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.endpointApiVersion >= 1.25 && $ctrl.swarmManagement">\n  <a ui-sref="docker.secrets" ui-sref-active="active">Secrets <span class="menu-icon fa fa-user-secret fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.standaloneManagement && $ctrl.adminAccess && !$ctrl.offlineMode">\n  <a ui-sref="docker.events" ui-sref-active="active">Events <span class="menu-icon fa fa-history fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.swarmManagement">\n  <a ui-sref="docker.swarm" ui-sref-active="active">Swarm <span class="menu-icon fa fa-object-group fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.standaloneManagement">\n  <a ui-sref="docker.host" ui-sref-active="active">Host <span class="menu-icon fa fa-th fa-fw"></span></a>\n</li>\n')}]),e.exports=n},function(e,t,n){var a=n(815);angular.module("portainer.docker").component("hostOverview",{templateUrl:a,bindings:{hostDetails:"<",engineDetails:"<",devices:"<",disks:"<",isAgent:"<",offlineMode:"<",agentApiVersion:"<",refreshUrl:"@",browseUrl:"@",jobUrl:"@",isJobEnabled:"<",hostFeaturesEnabled:"<",jobs:"<"},transclude:!0})},function(e,t){var n="app/docker/components/host-overview/host-overview.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Host overview">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="{{ $ctrl.refreshUrl }}" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Docker</rd-header-content>\n</rd-header>\n\n<information-panel-offline ng-if="$ctrl.offlineMode"></information-panel-offline>\n\n<host-details-panel\n  host="$ctrl.hostDetails"\n  is-browse-enabled="$ctrl.isAgent && $ctrl.agentApiVersion > 1 && !$ctrl.offlineMode && $ctrl.hostFeaturesEnabled"\n  browse-url="{{ $ctrl.browseUrl }}"\n  is-job-enabled="$ctrl.isJobEnabled && !$ctrl.offlineMode && $ctrl.hostFeaturesEnabled"\n  job-url="{{ $ctrl.jobUrl }}"\n></host-details-panel>\n\n<engine-details-panel engine="$ctrl.engineDetails"></engine-details-panel>\n\n<jobs-datatable\n  ng-if="$ctrl.isJobEnabled && $ctrl.jobs && !$ctrl.offlineMode && $ctrl.hostFeaturesEnabled"\n  title-text="Jobs"\n  title-icon="fa-tasks"\n  dataset="$ctrl.jobs"\n  table-key="jobs"\n  order-by="Created"\n  reverse-order="true"\n></jobs-datatable>\n\n<devices-panel ng-if="$ctrl.isAgent && $ctrl.agentApiVersion > 1 && !$ctrl.offlineMode && $ctrl.hostFeaturesEnabled" devices="$ctrl.devices"></devices-panel>\n<disks-panel ng-if="$ctrl.isAgent && $ctrl.agentApiVersion > 1 && !$ctrl.offlineMode && $ctrl.hostFeaturesEnabled" disks="$ctrl.disks"></disks-panel>\n\n<ng-transclude></ng-transclude>\n')}]),e.exports=n},function(e,t,n){var a=n(817);angular.module("portainer.docker").component("devicesPanel",{templateUrl:a,bindings:{devices:"<"}})},function(e,t){var n="app/docker/components/host-view-panels/devices-panel/devices-panel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title-text="PCI Devices"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Vendor</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-if="$ctrl.devices && $ctrl.devices.length" ng-repeat="device in $ctrl.devices">\n              <td>{{ device.Name }}</td>\n              <td>{{ device.Vendor }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.devices">\n              <td colspan="2" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.devices.length === 0">\n              <td colspan="2" class="text-center text-muted">\n                No device available.\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(819);angular.module("portainer.docker").component("disksPanel",{templateUrl:a,bindings:{disks:"<"}})},function(e,t){var n="app/docker/components/host-view-panels/disks-panel/disks-panel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title-text="Physical Disks"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <tr>\n              <th>Vendor</th>\n              <th>Size</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-if="$ctrl.disks" ng-repeat="disk in $ctrl.disks">\n              <td>{{ disk.Vendor }}</td>\n              <td>{{ disk.Size | humansize }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.disks">\n              <td colspan="2" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.disks.length === 0">\n              <td colspan="2" class="text-center text-muted">\n                No disks available.\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(821);angular.module("portainer.docker").component("engineDetailsPanel",{templateUrl:a,bindings:{engine:"<"}})},function(e,t){var n="app/docker/components/host-view-panels/engine-details-panel/engine-details-panel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title-text="Engine Details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Version</td>\n              <td\n                >{{ $ctrl.engine.releaseVersion }} <span ng-if="$ctrl.engine.apiVersion">(API: {{ $ctrl.engine.apiVersion }})</span></td\n              >\n            </tr>\n            <tr ng-if="$ctrl.engine.rootDirectory">\n              <td>Root directory</td>\n              <td>{{ $ctrl.engine.rootDirectory }}</td>\n            </tr>\n            <tr ng-if="$ctrl.engine.storageDriver">\n              <td>Storage Driver</td>\n              <td>{{ $ctrl.engine.storageDriver }}</td>\n            </tr>\n            <tr ng-if="$ctrl.engine.loggingDriver">\n              <td>Logging Driver</td>\n              <td>{{ $ctrl.engine.loggingDriver }}</td>\n            </tr>\n            <tr>\n              <td>Volume Plugins</td>\n              <td>{{ $ctrl.engine.volumePlugins | arraytostr: \', \' }}</td>\n            </tr>\n            <tr>\n              <td>Network Plugins</td>\n              <td>{{ $ctrl.engine.networkPlugins | arraytostr: \', \' }}</td>\n            </tr>\n            <tr ng-if="$ctrl.engine.engineLabels.length">\n              <td>Engine Labels</td>\n              <td>{{ $ctrl.engine.engineLabels | labelsToStr: \', \' }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(823);angular.module("portainer.docker").component("hostDetailsPanel",{templateUrl:a,bindings:{host:"<",isJobEnabled:"<",isBrowseEnabled:"<",browseUrl:"@",jobUrl:"@"}})},function(e,t){var n="app/docker/components/host-view-panels/host-details-panel/host-details-panel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title-text="Host Details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Hostname</td>\n              <td>{{ $ctrl.host.name }}</td>\n            </tr>\n            <tr ng-if="$ctrl.host.os">\n              <td>OS Information</td>\n              <td>{{ $ctrl.host.os.type }} {{ $ctrl.host.os.arch }} {{ $ctrl.host.os.name }}</td>\n            </tr>\n            <tr ng-if="$ctrl.host.kernelVersion">\n              <td>Kernel Version</td>\n              <td>{{ $ctrl.host.kernelVersion }}</td>\n            </tr>\n            <tr>\n              <td>Total CPU</td>\n              <td>{{ $ctrl.host.totalCPU }}</td>\n            </tr>\n            <tr>\n              <td>Total memory</td>\n              <td>{{ $ctrl.host.totalMemory | humansize }}</td>\n            </tr>\n            <tr ng-if="$ctrl.isBrowseEnabled || $ctrl.isJobEnabled">\n              <td colspan="2">\n                <button class="btn btn-primary btn-sm" title="Browse" ng-if="$ctrl.isBrowseEnabled" ui-sref="{{ $ctrl.browseUrl }}">\n                  Browse\n                </button>\n                <button class="btn btn-primary btn-sm" title="Execute job" ng-if="$ctrl.isJobEnabled" ui-sref="{{ $ctrl.jobUrl }}">\n                  Execute job\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("NodeAvailabilitySelectController",[function(){this.onChange=function(){this.onSave({availability:this.availability})}}])},function(e,t,n){var a=n(826);angular.module("portainer.docker").component("nodeAvailabilitySelect",{templateUrl:a,controller:"NodeAvailabilitySelectController",bindings:{availability:"<",originalValue:"<",onSave:"&"}})},function(e,t){var n="app/docker/components/host-view-panels/node-availability-select/node-availability-select.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="input-group input-group-sm">\n  <select name="nodeAvailability" class="selectpicker form-control" ng-model="$ctrl.availability" ng-change="$ctrl.onChange()">\n    <option value="active">Active</option>\n    <option value="pause">Pause</option>\n    <option value="drain">Drain</option>\n  </select>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("NodeLabelsTableController",[function(){var e=this;e.removeLabel=function(t){null!==e.labels.splice(t,1)&&e.onChangedLabels({labels:e.labels})},e.updateLabel=function(t){t.value===t.originalValue&&t.key===t.originalKey||e.onChangedLabels({labels:e.labels})}}])},function(e,t,n){var a=n(829);angular.module("portainer.docker").component("nodeLabelsTable",{templateUrl:a,controller:"NodeLabelsTableController",bindings:{labels:"<",onChangedLabels:"&"}})},function(e,t){var n="app/docker/components/host-view-panels/node-labels-table/node-labels-table.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="!$ctrl.labels.length">\n  There are no labels for this node.\n</div>\n\n<table class="table" ng-if="$ctrl.labels.length">\n  <thead>\n    <tr>\n      <th>Label</th>\n      <th>Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="label in $ctrl.labels">\n      <td>\n        <div class="input-group input-group-sm">\n          <span class="input-group-addon fit-text-size">Name</span>\n          <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo" ng-change="$ctrl.updateLabel(label)" />\n        </div>\n      </td>\n      <td>\n        <div class="input-group input-group-sm">\n          <span class="input-group-addon fit-text-size">Value</span>\n          <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" ng-change="$ctrl.updateLabel(label)" />\n          <span class="input-group-btn">\n            <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removeLabel($index)">\n              <i class="fa fa-trash" aria-hidden="true"></i>\n            </button>\n          </span>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("SwarmNodeDetailsPanelController",["NodeService","LabelHelper","Notifications","$state",function(e,t,n,a){var r=this;r.state={managerAddress:"",hasChanges:!1},r.$onChanges=function(){if(!r.details)return;"manager"===r.details.role&&(r.state.managerAddress="("+r.details.managerAddress+")")},r.addLabel=function(){r.details.nodeLabels.push({key:"",value:"",originalValue:"",originalKey:""})},r.updateNodeLabels=function(e){r.details.nodeLabels=e,r.state.hasChanges=!0},r.updateNodeAvailability=function(e){r.details.availability=e,r.state.hasChanges=!0},r.saveChanges=function(){var i=r.originalNode,o={Name:i.Name,Availability:r.details.availability,Role:i.Role,Labels:t.fromKeyValueToLabelHash(r.details.nodeLabels),Id:i.Id,Version:i.Version};e.updateNode(o).then((function(){n.success("Node successfully updated","Node updated"),a.go("docker.nodes.node",{id:i.Id},{reload:!0})})).catch((function(e){n.error("Failure",e,"Failed to update node")}))},r.cancelChanges=function(){r.details.nodeLabels=r.details.nodeLabels.filter((function(e){return e.originalValue||e.originalKey})).map((function(e){return Object.assign(e,{value:e.originalValue,key:e.originalKey})})),r.details.availability=r.originalNode.Availability,r.state.hasChanges=!1}}])},function(e,t,n){var a=n(832);angular.module("portainer.docker").component("swarmNodeDetailsPanel",{templateUrl:a,controller:"SwarmNodeDetailsPanelController",bindings:{details:"<",originalNode:"<"}})},function(e,t){var n="app/docker/components/host-view-panels/swarm-node-details-panel/swarm-node-details-panel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title-text="Node Details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr ng-if="$ctrl.details.name">\n              <td>Node name</td>\n              <td>{{ $ctrl.details.name }}</td>\n            </tr>\n            <tr>\n              <td>Role</td>\n              <td>{{ $ctrl.details.role }} {{ $ctrl.state.managerAddress }}</td>\n            </tr>\n            <tr>\n              <td>Availability</td>\n              <td>\n                <node-availability-select\n                  on-save="$ctrl.updateNodeAvailability(availability)"\n                  availability="$ctrl.details.availability"\n                  original-value="$ctrl.details.availability"\n                >\n                </node-availability-select>\n              </td>\n            </tr>\n            <tr>\n              <td>Status</td>\n              <td\n                ><span class="label label-{{ $ctrl.details.status | nodestatusbadge }}">{{ $ctrl.details.status }}</span></td\n              >\n            </tr>\n            <tr>\n              <td>\n                <div class="nopadding">\n                  <a class="btn btn-default btn-sm pull-right" ng-click="$ctrl.addLabel(node)"> <i class="fa fa-plus-circle" aria-hidden="true"></i> label </a>\n                </div>\n                Node Labels\n              </td>\n              <td></td>\n            </tr>\n            <tr>\n              <td colspan="2">\n                <node-labels-table labels="$ctrl.details.nodeLabels" on-changed-labels="$ctrl.updateNodeLabels(labels)"></node-labels-table>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <div class="btn-toolbar" role="toolbar">\n                  <div class="btn-group" role="group">\n                    <button type="button" class="btn btn-primary btn-sm" ng-disabled="!$ctrl.state.hasChanges" ng-click="$ctrl.saveChanges()">\n                      Apply changes\n                    </button>\n                    <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                      <span class="caret"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                      <li><a ng-click="$ctrl.cancelChanges()">Reset changes</a></li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(834);angular.module("portainer.docker").component("porImageRegistry",{templateUrl:a,controller:"porImageRegistryController",bindings:{model:"=",pullWarning:"<",autoComplete:"<",labelClass:"@",inputClass:"@"},require:{form:"^form"}})},function(e,t){var n="app/docker/components/imageRegistry/porImageRegistry.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'\x3c!-- use registry --\x3e\n<div ng-if="$ctrl.model.UseRegistry">\n  <div class="form-group">\n    <label for="image_registry" class="control-label text-left" ng-class="$ctrl.labelClass">\n      Registry\n    </label>\n    <div ng-class="$ctrl.inputClass">\n      <select\n        ng-options="registry as registry.Name for registry in $ctrl.availableRegistries track by registry.Name"\n        ng-model="$ctrl.model.Registry"\n        id="image_registry"\n        selected-item-id="ctrl.selectedItemId"\n        class="form-control"\n      ></select>\n    </div>\n    <label for="image_name" ng-class="$ctrl.labelClass" class="margin-sm-top control-label text-left">Image</label>\n    <div ng-class="$ctrl.inputClass" class="margin-sm-top">\n      <div class="input-group">\n        <span class="input-group-addon" id="registry-name">{{ $ctrl.displayedRegistryURL() }}</span>\n        <input\n          type="text"\n          class="form-control"\n          aria-describedby="registry-name"\n          uib-typeahead="image for image in $ctrl.availableImages | filter:$viewValue | limitTo:5"\n          ng-model="$ctrl.model.Image"\n          name="image_name"\n          placeholder="e.g. myImage:myTag"\n          required\n        />\n      </div>\n    </div>\n  </div>\n</div>\n\x3c!-- ! use registry --\x3e\n\x3c!-- don\'t use registry --\x3e\n<div ng-if="!$ctrl.model.UseRegistry">\n  <div class="form-group">\n    <label for="image_name" ng-class="$ctrl.labelClass" class="control-label text-left"\n      >Image\n      <portainer-tooltip position="bottom" message="Image and repository should be publicly available."></portainer-tooltip>\n    </label>\n    <div ng-class="$ctrl.inputClass">\n      <input type="text" class="form-control" ng-model="$ctrl.model.Image" name="image_name" placeholder="e.g. registry:port/myImage:myTag" required />\n    </div>\n  </div>\n</div>\n\x3c!-- ! don\'t use registry --\x3e\n\x3c!-- info message --\x3e\n<div class="form-group" ng-show="$ctrl.form.image_name.$invalid">\n  <div class="col-sm-12 small text-warning">\n    <div ng-messages="$ctrl.form.image_name.$error">\n      <p ng-message="required"\n        ><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Image name is required.\n        <span ng-if="$ctrl.canPull">Tag must be specified otherwise Portainer will pull all tags associated to the image.</span></p\n      >\n    </div>\n  </div>\n</div>\n\x3c!-- ! info message --\x3e\n<div class="form-group">\n  <div class="col-sm-12">\n    <p>\n      <a class="small interactive" ng-if="!$ctrl.model.UseRegistry" ng-click="$ctrl.model.UseRegistry = true;">\n        <i class="fa fa-database space-right" aria-hidden="true"></i> Simple mode\n      </a>\n      <a class="small interactive" ng-if="$ctrl.model.UseRegistry" ng-click="$ctrl.model.UseRegistry = false;">\n        <i class="fa fa-globe space-right" aria-hidden="true"></i> Advanced mode\n      </a>\n    </p>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(38),i=n(410),o=n(221),s=n(83),l=n(4),c=n(6),d=n(5),u=n(1),p=n.n(u),m=n(166),g=n(21);function f(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],a=!0,r=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return v(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return v(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function h(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function b(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var y=function(){function e(t,n,a,r,i,o,s){var l=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$async=t,this.$scope=n,this.ImageHelper=a,this.RegistryService=r,this.DockerHubService=i,this.ImageService=o,this.Notifications=s,this.onInit=this.onInit.bind(this),this.onRegistryChange=this.onRegistryChange.bind(this),this.$scope.$watch((function(){return l.model.Registry}),this.onRegistryChange)}var t,n,u,p,v;return e.$inject=["$async","$scope","ImageHelper","RegistryService","DockerHubService","ImageService","Notifications"],t=e,(n=[{key:"isKnownRegistry",value:function(e){return!(e instanceof m.DockerHubViewModel)&&e.URL}},{key:"getRegistryURL",value:function(e){var t=e.URL;return e.Type===g.RegistryTypes.GITLAB&&(t=e.URL+"/"+e.Gitlab.ProjectPath),t}},{key:"prepareAutocomplete",value:function(){var e=this,t=[],n=this.model.Registry;if(this.isKnownRegistry(n)){var a=this.getRegistryURL(n),r=Object(d.a)(this.images,(function(e){return Object(c.a)(e,a)}));t=Object(l.a)(r,(function(e){return Object(s.a)(e,new RegExp(a+"/?"),"")}))}else{var u=Object(d.a)(this.availableRegistries,(function(t){return e.isKnownRegistry(t)})),p=Object(o.a)(u,(function(t){return Object(d.a)(e.images,(function(e){return Object(c.a)(e,t.URL)}))})),m=Object(i.a)(this.images,p);t=Object(d.a)(m,(function(t){return!e.ImageHelper.imageContainsURL(t)}))}this.availableImages=t}},{key:"onRegistryChange",value:function(){this.prepareAutocomplete(),this.model.Registry.Type===g.RegistryTypes.GITLAB&&this.model.Image&&(this.model.Image=Object(s.a)(this.model.Image,this.model.Registry.Gitlab.ProjectPath,""))}},{key:"displayedRegistryURL",value:function(){return this.getRegistryURL(this.model.Registry)||"docker.io"}},{key:"onInit",value:(p=regeneratorRuntime.mark((function e(){var t,n,i,o,s,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,Promise.all([this.RegistryService.registries(),this.DockerHubService.dockerhub(),this.autoComplete?this.ImageService.images():[]]);case 3:t=e.sent,n=f(t,3),i=n[0],o=n[1],s=n[2],this.images=this.ImageService.getUniqueTagListFromImages(s),this.availableRegistries=Object(r.a)(o,i),l=this.model.Registry.Id,this.model.Registry=l?Object(a.a)(this.availableRegistries,{Id:l}):o,e.next=17;break;case 14:e.prev=14,e.t0=e.catch(0),this.Notifications.error("Failure",e.t0,"Unable to retrieve registries");case 17:case"end":return e.stop()}}),e,this,[[0,14]])})),v=function(){var e=this,t=arguments;return new Promise((function(n,a){var r=p.apply(e,t);function i(e){h(r,n,a,i,o,"next",e)}function o(e){h(r,n,a,i,o,"throw",e)}i(void 0)}))},function(){return v.apply(this,arguments)})},{key:"$onInit",value:function(){return this.$async(this.onInit)}}])&&b(t.prototype,n),u&&b(t,u),e}();t.default=y,p.a.module("portainer.docker").controller("porImageRegistryController",y)},function(e,t,n){var a=n(837);angular.module("portainer.docker").component("logViewer",{templateUrl:a,controller:"LogViewerController",bindings:{data:"=",displayTimestamps:"=",logCollectionChange:"<",sinceTimestamp:"=",lineCount:"="}})},function(e,t){var n="app/docker/components/log-viewer/logViewer.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-file-alt" title-text="Log viewer settings"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="tls" class="control-label text-left">\n                Auto-refresh logs\n                <portainer-tooltip position="bottom" message="Disabling this option allows you to pause the log collection process and the auto-scrolling."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input\n                  type="checkbox"\n                  ng-model="$ctrl.state.logCollection"\n                  ng-change="$ctrl.state.autoScroll = $ctrl.state.logCollection; $ctrl.logCollectionChange($ctrl.state.logCollection)"\n                /><i></i>\n              </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="tls" class="control-label text-left">\n                Wrap lines\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="$ctrl.state.wrapLines" /><i></i> </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="tls" class="control-label text-left">\n                Display timestamps\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="$ctrl.displayTimestamps" /><i></i> </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="logs_since" class="col-sm-1 control-label text-left">\n              Fetch\n            </label>\n            <div class="col-sm-2">\n              <select class="form-control" ng-model="$ctrl.sinceTimestamp" id="logs_since">\n                <option selected value="">All logs</option>\n                <option ng-repeat="dt in $ctrl.state.availableSinceDatetime" ng-value="dt.value" title="{{ dt.value }}">{{ dt.desc }}</option>\n              </select>\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="logs_search" class="col-sm-1 control-label text-left">\n              Search\n            </label>\n            <div class="col-sm-11">\n              <input class="form-control" type="text" name="logs_search" ng-model="$ctrl.state.search" ng-change="$ctrl.state.selectedLines.length = 0;" placeholder="Filter..." />\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="lines_count" class="col-sm-1 control-label text-left">\n              Lines\n            </label>\n            <div class="col-sm-11">\n              <input class="form-control" type="number" name="lines_count" ng-model="$ctrl.lineCount" placeholder="Enter no of lines..." />\n            </div>\n          </div>\n          <div class="form-group" ng-if="$ctrl.state.copySupported">\n            <label class="col-sm-1 control-label text-left">\n              Actions\n            </label>\n            <div class="col-sm-11">\n              <button\n                class="btn btn-primary btn-sm"\n                ng-click="$ctrl.copy()"\n                ng-disabled="($ctrl.state.filteredLogs.length === 1 && !$ctrl.state.filteredLogs[0]) || !$ctrl.state.filteredLogs.length"\n                ><i class="fa fa-copy space-right" aria-hidden="true"></i>Copy</button\n              >\n              <button\n                class="btn btn-primary btn-sm"\n                ng-click="$ctrl.copySelection()"\n                ng-disabled="($ctrl.state.filteredLogs.length === 1 && !$ctrl.state.filteredLogs[0]) || !$ctrl.state.filteredLogs.length || !$ctrl.state.selectedLines.length"\n                ><i class="fa fa-copy space-right" aria-hidden="true"></i>Copy selected lines</button\n              >\n              <button class="btn btn-primary btn-sm" ng-click="$ctrl.clearSelection()" ng-disabled="$ctrl.state.selectedLines.length === 0"\n                ><i class="fa fa-times space-right" aria-hidden="true"></i>Unselect</button\n              >\n              <span>\n                <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-left: 7px; display: none;"></i>\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" style="height: 54%;">\n  <div class="col-sm-12" style="height: 100%;">\n    <pre ng-class="{ wrap_lines: $ctrl.state.wrapLines }" class="log_viewer" scroll-glue="$ctrl.state.autoScroll" force-glue>\n      <div ng-repeat="line in $ctrl.state.filteredLogs = ($ctrl.data | filter:$ctrl.state.search) track by $index" class="line" ng-if="line"><p class="inner_line" ng-click="$ctrl.selectLine(line)" ng-class="{ \'line_selected\': $ctrl.state.selectedLines.indexOf(line) > -1 }">{{ line }}</p></div>\n      <div ng-if="!$ctrl.state.filteredLogs.length" class="line"><p class="inner_line">No log line matching the \'{{ $ctrl.state.search }}\' filter</p></div>\n      <div ng-if="$ctrl.state.filteredLogs.length === 1 && !$ctrl.state.filteredLogs[0]" class="line"><p class="inner_line">No logs available</p></div>\n    </pre>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t),function(e){var t=n(3),a=n.n(t);angular.module("portainer.docker").controller("LogViewerController",["clipboard",function(t){this.state={availableSinceDatetime:[{desc:"Last day",value:a()().subtract(1,"days").format()},{desc:"Last 4 hours",value:a()().subtract(4,"hours").format()},{desc:"Last hour",value:a()().subtract(1,"hours").format()},{desc:"Last 10 minutes",value:a()().subtract(10,"minutes").format()}],copySupported:t.supported,logCollection:!0,autoScroll:!0,wrapLines:!0,search:"",filteredLogs:[],selectedLines:[]},this.copy=function(){t.copyText(this.state.filteredLogs),e("#refreshRateChange").show(),e("#refreshRateChange").fadeOut(2e3)},this.copySelection=function(){t.copyText(this.state.selectedLines),e("#refreshRateChange").show(),e("#refreshRateChange").fadeOut(2e3)},this.clearSelection=function(){this.state.selectedLines=[]},this.selectLine=function(e){var t=this.state.selectedLines.indexOf(e);-1===t?this.state.selectedLines.push(e):this.state.selectedLines.splice(t,1)}}])}.call(this,n(19))},,function(e,t,n){var a=n(841);angular.module("portainer.docker").component("networkMacvlanForm",{templateUrl:a,controller:"NetworkMacvlanFormController",bindings:{data:"=",applicationState:"<"}})},function(e,t){var n="app/docker/components/network-macvlan-form/networkMacvlanForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <div class="col-sm-12 form-section-title">\n    Macvlan configuration\n  </div>\n  \x3c!-- selector --\x3e\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      To create a MACVLAN network you need to create a configuration, then create the network from this configuration.\n    </span>\n  </div>\n  <div class="col-sm-12">\n    <div class="form-group" style="margin-bottom: 0;">\n      <div class="boxselector_wrapper">\n        <div>\n          <input type="radio" id="network_config" ng-model="$ctrl.data.Scope" value="local" />\n          <label for="network_config">\n            <div class="boxselector_header">\n              <i class="fa fa-cog" aria-hidden="true" style="margin-right: 2px;"></i>\n              Configuration\n            </div>\n            <p>I want to configure a network before deploying it</p>\n          </label>\n        </div>\n        <div>\n          <input type="radio" id="network_deploy" ng-model="$ctrl.data.Scope" value="swarm" ng-disabled="$ctrl.availableNetworks.length === 0" />\n          <label for="network_deploy" ng-class="$ctrl.availableNetworks.length === 0 ? \'boxselector_disabled\' : \'\'">\n            <div class="boxselector_header">\n              <i class="fa fa-sitemap" aria-hidden="true" style="margin-right: 2px;"></i>\n              Creation\n            </div>\n            <p>I want to create a network from a configuration</p>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !selector --\x3e\n\n  <ng-form name="macvlanConfigurationForm">\n    \x3c!-- configuration-inputs --\x3e\n    <div ng-show="$ctrl.data.Scope === \'local\'">\n      \x3c!-- network-card-input --\x3e\n      <div class="form-group">\n        <label for="network_card" class="col-sm-3 col-lg-2 control-label text-left">Parent network card</label>\n        <div class="col-sm-9 col-lg-10">\n          <input\n            type="text"\n            class="form-control"\n            name="network_card"\n            ng-model="$ctrl.data.ParentNetworkCard"\n            placeholder="e.g. eth0 or ens160 ..."\n            ng-required="$ctrl.data.Scope === \'local\' && !$ctrl.data.ParentNetworkCard"\n          />\n        </div>\n      </div>\n      <div class="form-group" ng-show="macvlanConfigurationForm.network_card.$invalid">\n        <div class="col-sm-12 small text-warning">\n          <div ng-messages="macvlanConfigurationForm.network_card.$error">\n            <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Parent network card must be specified.</p>\n          </div>\n        </div>\n      </div>\n      \x3c!-- network-card-input --\x3e\n      \x3c!-- nodes-selector --\x3e\n      <div ng-if="$ctrl.applicationState.endpoint.mode.agentProxy && $ctrl.applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n        <div class="form-group">\n          <div class="col-sm-12">\n            <macvlan-nodes-datatable\n              title-text="Select the nodes where you want to deploy the local configuration"\n              title-icon="fa-hdd"\n              dataset="$ctrl.nodes"\n              table-key="nodes"\n              state="$ctrl.data.DatatableState"\n              order-by="Hostname"\n              show-ip-address-column="$ctrl.applicationState.endpoint.apiVersion >= 1.25"\n              access-to-node-details="!$ctrl.applicationState.application.authentication || $ctrl.isAdmin"\n              name="node_selector"\n              ng-model="tmp"\n              ng-required="$ctrl.requiredNodeSelection()"\n            ></macvlan-nodes-datatable>\n          </div>\n        </div>\n        <div class="form-group" ng-show="macvlanConfigurationForm.node_selector.$invalid">\n          <div class="col-sm-12 small text-warning">\n            <div ng-messages="macvlanConfigurationForm.node_selector.$error">\n              <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> At least one node must be selected.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !nodes-selector --\x3e\n    </div>\n    \x3c!-- configuration-inputs --\x3e\n    \x3c!-- deploy-inputs --\x3e\n    <div ng-show="$ctrl.data.Scope === \'swarm\'">\n      \x3c!-- configuration-selector --\x3e\n      \x3c!-- network-input --\x3e\n      <div class="form-group">\n        <label for="config_network" class="col-sm-2 col-lg-1 control-label text-left">Configuration</label>\n        <div class="col-sm-9">\n          <select\n            class="form-control"\n            ng-options="net.Name for net in $ctrl.availableNetworks"\n            ng-model="$ctrl.data.SelectedNetworkConfig"\n            name="config_network"\n            ng-required="$ctrl.requiredConfigSelection()"\n          >\n            <option selected disabled hidden value="">Select a network</option>\n          </select>\n        </div>\n      </div>\n      \x3c!-- !network-input --\x3e\n      <div class="form-group" ng-show="macvlanConfigurationForm.config_network.$invalid">\n        <div class="col-sm-12 small text-warning">\n          <div ng-messages="macvlanConfigurationForm.config_network.$error">\n            <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Select a configuration network.</p>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !configuration-selector --\x3e\n    </div>\n    \x3c!-- deploy-inputs --\x3e\n  </ng-form>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("NetworkMacvlanFormController",["$q","NodeService","NetworkService","Notifications","StateManager","Authentication",function(e,t,n,a,r,i){var o=this;o.requiredNodeSelection=function(){return"local"===o.data.Scope&&void 0!==o.data.DatatableState&&0===o.data.DatatableState.selectedItemCount},o.requiredConfigSelection=function(){return"swarm"===o.data.Scope&&!o.data.SelectedNetworkConfig},function(){if(r.getState().application.authentication){var s=i.isAdmin();o.isAdmin=s}var l=o.applicationState.endpoint.mode.provider,c=o.applicationState.endpoint.apiVersion;e.all({nodes:"DOCKER_SWARM_MODE"!==l||t.nodes(),networks:n.networks("DOCKER_STANDALONE"===l||"DOCKER_SWARM_MODE"===l,!1,"DOCKER_SWARM_MODE"===l&&c>=1.25)}).then((function(e){!0!==e.nodes&&(o.nodes=e.nodes),o.availableNetworks=e.networks.filter((function(e){return!0===e.ConfigOnly}))})).catch((function(e){a.error("Failure",e,"Unable to retrieve informations for macvlan")}))}()}])},function(e,t,n){var a=n(844);angular.module("portainer.docker").component("volumesCifsForm",{templateUrl:a,bindings:{data:"="}})},function(e,t){var n="app/docker/components/volumesCIFSForm/volumesCifsForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'\x3c!-- CIFS-settings --\x3e\n<div ng-show="$ctrl.data.useCIFS">\n  <ng-form class="form-horizontal" name="cifsInformationForm">\n    <div class="col-sm-12 form-section-title">\n      CIFS Settings\n    </div>\n    \x3c!-- address-input --\x3e\n    <div class="form-group col-md-12">\n      <label for="cifs_address" class="col-sm-2 col-md-1 control-label text-left">Address</label>\n      <div class="col-sm-10 col-md-11">\n        <input type="text" class="form-control" ng-model="$ctrl.data.serverAddress" name="cifs_address" placeholder="e.g. my.cifs-server.com OR xxx.xxx.xxx.xxx" required />\n      </div>\n    </div>\n    <div class="form-group col-md-12" ng-show="cifsInformationForm.cifs_address.$invalid">\n      <div class="small text-warning">\n        <div ng-messages="cifsInformationForm.cifs_address.$error">\n          <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !address-input --\x3e\n    \x3c!-- mount-point-input --\x3e\n    <div class="form-group col-md-12">\n      <label for="cifs_share" class="col-sm-2 col-md-1 control-label text-left">Share</label>\n      <div class="col-sm-10 col-md-11">\n        <input type="text" class="form-control" ng-model="$ctrl.data.share" name="cifs_share" placeholder="e.g. /myshare" required />\n      </div>\n    </div>\n    <div class="form-group col-md-12" ng-show="cifsInformationForm.cifs_share.$invalid">\n      <div class="small text-warning">\n        <div ng-messages="cifsInformationForm.cifs_share.$error">\n          <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !mount-point-input --\x3e\n    \x3c!-- version-input --\x3e\n    <div class="form-group col-md-12">\n      <label for="cifs_version" class="col-sm-2 col-md-1 control-label text-left">CIFS Version</label>\n      <div class="col-sm-10 col-md-11">\n        <select class="form-control" ng-model="$ctrl.data.version" name="cifs_version" ng-options="version for version in $ctrl.data.versions" required></select>\n      </div>\n    </div>\n    <div class="form-group col-md-12" ng-show="cifsInformationForm.cifs_version.$invalid">\n      <div class="small text-warning">\n        <div ng-messages="cifsInformationForm.cifs_version.$error">\n          <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !version-input --\x3e\n    \x3c!-- username --\x3e\n    <div class="form-group col-md-12">\n      <label for="cifs_username" class="col-sm-2 col-md-1 control-label text-left">Username</label>\n      <div class="col-sm-10 col-md-11">\n        <input type="text" class="form-control" ng-model="$ctrl.data.username" name="cifs_username" required />\n      </div>\n    </div>\n    <div class="form-group col-md-12" ng-show="cifsInformationForm.cifs_username.$invalid">\n      <div class="small text-warning">\n        <div ng-messages="cifsInformationForm.cifs_username.$error">\n          <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !username --\x3e\n    \x3c!-- password --\x3e\n    <div class="form-group col-md-12">\n      <label for="cifs_password" class="col-sm-2 col-md-1 control-label text-left">Password</label>\n      <div class="col-sm-10 col-md-11">\n        <input type="text" class="form-control" ng-model="$ctrl.data.password" name="cifs_password" required />\n      </div>\n    </div>\n    <div class="form-group col-md-12" ng-show="cifsInformationForm.password.$invalid">\n      <div class="small text-warning">\n        <div ng-messages="cifsInformationForm.cifs_password.$error">\n          <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !password --\x3e\n  </ng-form>\n</div>\n\x3c!-- !CIFS-settings --\x3e\n')}]),e.exports=n},function(e,t,n){var a=n(846);angular.module("portainer.docker").component("volumesNfsForm",{templateUrl:a,bindings:{data:"="}})},function(e,t){var n="app/docker/components/volumesNFSForm/volumesnfsForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'\x3c!-- NFS-settings --\x3e\n<div ng-show="$ctrl.data.useNFS">\n  <ng-form class="form-horizontal" name="nfsInformationForm">\n    <div class="col-sm-12 form-section-title">\n      NFS Settings\n    </div>\n    \x3c!-- address-input --\x3e\n    <div class="form-group col-md-12">\n      <label for="nfs_address" class="col-sm-2 col-md-1 control-label text-left">Address</label>\n      <div class="col-sm-10 col-md-11">\n        <input type="text" class="form-control" ng-model="$ctrl.data.serverAddress" name="nfs_address" placeholder="e.g. my.nfs-server.com OR xxx.xxx.xxx.xxx" required />\n      </div>\n    </div>\n    <div class="form-group col-md-12" ng-show="nfsInformationForm.nfs_address.$invalid">\n      <div class="small text-warning">\n        <div ng-messages="nfsInformationForm.nfs_address.$error">\n          <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !address-input --\x3e\n    \x3c!-- version-input --\x3e\n    <div class="form-group col-md-12">\n      <label for="nfs_version" class="col-sm-2 col-md-1 control-label text-left">NFS Version</label>\n      <div class="col-sm-10 col-md-11">\n        <select class="form-control" ng-model="$ctrl.data.version" name="nfs_version" ng-options="version for version in $ctrl.data.versions" required></select>\n      </div>\n    </div>\n    <div class="form-group col-md-12" ng-show="nfsInformationForm.nfs_version.$invalid">\n      <div class="small text-warning">\n        <div ng-messages="nfsInformationForm.nfs_version.$error">\n          <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !version-input --\x3e\n    \x3c!-- mount-point-input --\x3e\n    <div class="form-group col-md-12">\n      <label for="nfs_mountpoint" class="col-sm-2 col-md-1 control-label text-left">Mount point</label>\n      <div class="col-sm-10 col-md-11">\n        <input type="text" class="form-control" ng-model="$ctrl.data.mountPoint" name="nfs_mountpoint" placeholder="e.g. /export/share, :/export/share, /share or :/share" required />\n      </div>\n    </div>\n    <div class="form-group col-md-12" ng-show="nfsInformationForm.nfs_mountpoint.$invalid">\n      <div class="small text-warning">\n        <div ng-messages="nfsInformationForm.nfs_mountpoint.$error">\n          <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !mount-point-input --\x3e\n    \x3c!-- options-input --\x3e\n    <div class="form-group col-md-12">\n      <label for="nfs_options" class="col-sm-2 col-md-1 control-label text-left"\n        >Options\n        <portainer-tooltip position="bottom" message="Comma separated list of options"></portainer-tooltip>\n      </label>\n      <div class="col-sm-10 col-md-11">\n        <input type="text" class="form-control" ng-model="$ctrl.data.options" name="nfs_options" placeholder="e.g. rw,noatime,tcp ..." required />\n      </div>\n    </div>\n    <div class="form-group col-md-12" ng-show="nfsInformationForm.nfs_options.$invalid">\n      <div class="small text-warning">\n        <div ng-messages="nfsInformationForm.nfs_options.$error">\n          <p ng-message="required"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !options-input --\x3e\n  </ng-form>\n</div>\n\x3c!-- !NFS-settings --\x3e\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(22),i=n(33);function o(e,t){return t.some((function(t){return-1!==e.indexOf(t)}))}angular.module("portainer.docker").filter("visualizerTask",(function(){return function(e){var t=Object(i.a)(e);return o(t,["new","allocated","assigned","accepted","complete","preparing"])?"info":o(t,["pending"])?"warning":o(t,["shutdown","failed","rejected"])?"stopped":"running"}})).filter("visualizerTaskBorderColor",(function(){return function(e){return function(e){for(var t="#",n=0;n<3;)t+=("00"+(e>>8*n++&255).toString(16)).slice(-2);return t}(function(e){for(var t=0,n=0;n<e.length;n++)t=e.charCodeAt(n)+((t<<5)-t);return t}(e))}})).filter("taskstatusbadge",(function(){return function(e){var t=Object(i.a)(e),n="default";return o(t,["new","allocated","assigned","accepted","preparing","ready","starting","remove"])?n="info":o(t,["pending"])?n="warning":o(t,["shutdown","failed","rejected","orphaned"])?n="danger":o(t,["complete"])?n="primary":o(t,["running"])&&(n="success"),n}})).filter("taskhaslogs",(function(){return function(e){return["running","complete","failed","shutdown"].indexOf(e)>-1}})).filter("containerstatusbadge",(function(){return function(e){var t=Object(i.a)(e);return o(t,["paused","starting","unhealthy"])?"warning":o(t,["created"])?"info":o(t,["stopped","dead","exited"])?"danger":"success"}})).filter("nodestatusbadge",(function(){return function(e){return"down"===e||"Unhealthy"===e?"danger":"success"}})).filter("dockerNodeAvailabilityBadge",(function(){return function(e){return"pause"===e?"warning":"drain"===e?"danger":"success"}})).filter("trimcontainername",(function(){return function(e){return e?0===e.indexOf("/")?e.replace("/",""):e:""}})).filter("getstatetext",(function(){return function(e){return void 0===e?"":e.Dead?"Dead":e.Ghost&&e.Running?"Ghost":e.Running&&e.Paused?"Running (Paused)":e.Running?"Running":"created"===e.Status?"Created":"Stopped"}})).filter("getstatelabel",(function(){return function(e){return void 0===e?"label-default":e.Ghost&&e.Running?"label-important":e.Running?"label-success":"label-default"}})).filter("containername",(function(){return function(e){var t=e.Names[0];return t.substring(1,t.length)}})).filter("swarmversion",(function(){return function(e){return Object(r.a)(e,"/")[1]}})).filter("swarmhostname",(function(){return function(e){return Object(r.a)(e.Names[0],"/")[1]}})).filter("repotags",(function(){return function(e){return e.RepoTags&&e.RepoTags.length>0?"<none>:<none>"===e.RepoTags[0]?[]:e.RepoTags:[]}})).filter("command",(function(){return function(e){if(e)return e.join(" ")}})).filter("hideshasum",(function(){return function(e){return e?e.split("@sha")[0]:""}})).filter("availablenodecount",["ConstraintsHelper",function(e){return function(t,n){for(var a=0,r=0;r<t.length;r++){var i=t[r];"active"===i.Availability&&"ready"===i.Status&&e.matchesServiceConstraints(n,i)&&a++}return a}}]).filter("runningtaskscount",(function(){return function(e){for(var t=0,n=0;n<e.length;n++){var a=e[n];"running"===a.Status.State&&"running"===a.DesiredState&&t++}return t}})).filter("runningcontainers",(function(){return function(e){return e.filter((function(e){return"running"===e.State})).length}})).filter("stoppedcontainers",(function(){return function(e){return e.filter((function(e){return"exited"===e.State})).length}})).filter("healthycontainers",(function(){return function(e){return e.filter((function(e){return"healthy"===e.Status})).length}})).filter("unhealthycontainers",(function(){return function(e){return e.filter((function(e){return"unhealthy"===e.Status})).length}})).filter("imagestotalsize",(function(){return function(e){for(var t=0,n=0;n<e.length;n++){t+=e[n].VirtualSize}return t}})).filter("tasknodename",(function(){return function(e,t){var n=Object(a.a)(t,{Id:e});return n?n.Hostname:""}})).filter("imagelayercommand",(function(){return function(e){return e.replace("/bin/sh -c #(nop) ","").replace("/bin/sh -c ","RUN ")}})).filter("trimshasum",(function(){return function(e){if(e)return 0===e.indexOf("sha256:")?e.substring(7,19):Object(r.a)(e,"@sha256")[0]}}))},function(e,t){angular.module("portainer.docker").factory("ConfigHelper",[function(){"use strict";return{flattenConfig:function(e){return e?{Id:e.ConfigID,Name:e.ConfigName,FileName:e.File.Name,Uid:e.File.UID,Gid:e.File.GID,Mode:e.File.Mode}:{}},configConfig:function(e){return e?{ConfigID:e.Id,ConfigName:e.Name,File:{Name:e.FileName||e.Name,UID:e.Uid||"0",GID:e.Gid||"0",Mode:e.Mode||292}}:{}}}}])},function(e,t,n){"use strict";n.r(t);var a=n(2);function r(e,t,n){this.op=e,this.value=n,this.key=t}var i={nodeId:"node.id",nodeHostname:"node.hostname",nodeRole:"node.role",nodeLabels:"node.labels.",engineLabels:"engine.labels."},o={eq:"==",neq:"!="};function s(e,t){return!t||t.op===o.eq&&e===t.value||t.op===o.neq&&e!==t.value}function l(e,t){return!t||void 0!==Object(a.a)(e,(function(e){return e.key===t.key&&e.value===t.value}))}function c(e,t){return e.split(t).pop().trim()}function d(e,t,n){return e.split(t).shift().trim().replace(n,"")}angular.module("portainer.docker").factory("ConstraintsHelper",[function(){return{transformConstraints:function(e){for(var t={},n=0;n<e.length;n++){var a,s=e[n];s.includes(o.eq)?a=o.eq:s.includes(o.neq)&&(a=o.neq);var l=c(s,a),u="";switch(!0){case s.includes(i.nodeId):t.nodeId=new r(a,u,l);break;case s.includes(i.nodeHostname):t.nodeHostname=new r(a,u,l);break;case s.includes(i.nodeRole):t.nodeRole=new r(a,u,l);break;case s.includes(i.nodeLabels):u=d(s,a,i.nodeLabels),t.nodeLabels=new r(a,u,l);break;case s.includes(i.engineLabels):u=d(s,a,i.engineLabels),t.engineLabels=new r(a,u,l)}}return t},matchesServiceConstraints:function(e,t){if(void 0===e.Constraints||0===e.Constraints.length)return!0;var n=this.transformConstraints(angular.copy(e.Constraints));return!!(s(t.Id,n.nodeId)&&s(t.Hostname,n.nodeHostname)&&s(t.Role,n.nodeRole)&&l(t.Labels,n.nodeLabels)&&l(t.EngineLabels,n.engineLabels))}}}])},function(e,t,n){"use strict";n.r(t);var a=n(31),r=n(172),i=n(26),o=n(9),s=n(4),l=n(22),c=n(411),d=n.n(c),u=/^([1-9]|[1-5]?[0-9]{2,4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$/m;function p(e){return u.test(e)?parseInt(e):0}function m(e){"string"!=typeof e&&(e=e.toString());var t=Object(l.a)(e,"-",2),n=Object(s.a)(t,p);return 1==n.length&&n.push(n[0]),n}function g(e){return"string"==typeof e&&(e=m()),Array.isArray(e)&&2===e.length&&e[0]>0&&e[1]>=e[0]}function f(e,t){"string"!=typeof e&&(e=e.toString());var n=null,a=e.indexOf(":");a>=0&&(n=e.substr(0,a),e=e.substr(a+1)),t="number"==typeof t?t:p(t);var r=m(e),i=Math.min(r[0],t),o=Math.max(r[1],t);return n?n+":"+i+"-"+o:i+"-"+o}angular.module("portainer.docker").factory("ContainerHelper",[function(){var e={commandStringToArray:function(e){return d()(e)},commandArrayToString:function(e){return e.map((function(e){return"'"+e+"'"})).join(" ")},configFromContainer:function(e){var t=e.Config;t.HostConfig=e.HostConfig,t.name=e.Name.replace(/^\//g,"");var n=t.HostConfig.NetworkMode;t.NetworkingConfig={EndpointsConfig:{}},t.NetworkingConfig.EndpointsConfig=e.NetworkSettings.Networks,void 0===t.ExposedPorts&&(t.ExposedPorts={}),-1!==n.indexOf("container:")&&(delete t.Hostname,delete t.ExposedPorts);var a=[],r={};for(var i in e.Mounts)if({}.hasOwnProperty.call(e.Mounts,i)){var o=e.Mounts[i],s=o.Name||o.Source,l=o.Destination;if(s&&l){var c=s+":"+l;r[l]={},!1===o.RW&&(c+=":ro"),a.push(c)}}return t.HostConfig.Binds=a,t.Volumes=r,t},preparePortBindings:function(e){var t={};return Object(o.a)(e,(function(e){if(e.containerPort){var n=e.hostPort,a=m(e.containerPort);if(!g(a))throw new Error("Invalid port specification: "+e.containerPort);var r=a[0],i=a[1],o=void 0,s=0,c=0;if(n){if(n.indexOf("[")>-1){var d=Object(l.a)(n,"]:");if(d.length<2)throw new Error("Invalid port specification: "+e.containerPort);o=d[0].replace("[",""),n=d[1]}else if(n.indexOf(":")>-1){var u=Object(l.a)(n,":");o=u[0],n=u[1]}var p=m(n);if(!g(p))throw new Error("Invalid port specification: "+n);if(s=p[0],c=p[1],i!==r&&i-r!=c-s)throw new Error("Invalid port specification: "+n)}for(var f=0;f<=i-r;f++){var v=(r+f).toString();s>0&&(n=(s+f).toString()),r===i&&s!==c&&(n+="-"+c.toString());var h=v+"/"+e.protocol;t[h]=[{HostIp:o,HostPort:n}]}}})),t},sortAndCombinePorts:function(e){var t=[],n=Object(i.a)(e),s=Object(r.a)(n,(function(e){return Object(l.a)(e,"/")[1]}));return Object(o.a)(s,(function(n,i){var s=Object(r.a)(n,(function(t){return e[t][0].HostIp||""}));Object(o.a)(s,(function(n){var r=Object(a.a)(n,(function(e){return parseInt(Object(l.a)(e,"/")[0])})),s=-1,c=-1;Object(o.a)(r,(function(n){var a=Object(l.a)(n,"/"),r=parseInt(a[0]),o=e[n][0],d=p(o.HostPort);if(d>0){if(t.length>0&&s===d-1&&c===r-1)return t[t.length-1].hostPort=f(t[t.length-1].hostPort,d),t[t.length-1].containerPort=f(t[t.length-1].containerPort,r),s=d,void(c=r);s=d,c=r}else s=-1,c=-1;var u=o.HostPort.toString();o.HostIp&&(u=o.HostIp+":"+u);var m={hostPort:u,containerPort:r,protocol:i};t.push(m)}))}))})),t}};return e}])},function(e,t,n){"use strict";n.r(t);var a=n(22),r=n(6),i=n(82),o=n(21);angular.module("portainer.docker").factory("ImageHelper",[function(){var e={};return e.isValidTag=function(e){return e.match(/^(?![\.\-])([a-zA-Z0-9\_\.\-])+$/g)},e.createImageConfigForContainer=function(e){var t={fromImage:""},n="";if(e.UseRegistry){if(e.Registry.Type===o.RegistryTypes.GITLAB){var a=Object(i.a)(e.Image,":")?"":"/";n=e.Registry.URL+"/"+e.Registry.Gitlab.ProjectPath+a+e.Image}else{var s=e.Registry.URL?e.Registry.URL+"/":"";n=s+e.Image}Object(r.a)(e.Image,":")||(n+=":latest")}else n=e.Image;return t.fromImage=n,t},e.getImagesNamesForDownload=function(e){return{names:e.map((function(e){return"<none>:<none>"!==e.RepoTags[0]?e.RepoTags[0]:e.Id}))}},e.removeDigestFromRepository=function(e){return e.split("@sha")[0]},e.imageContainsURL=function(e){var t=Object(a.a)(e,"/"),n=t[0];if(t.length>1)return Object(r.a)(n,".")||Object(r.a)(n,":");return!1},e}])},function(e,t,n){"use strict";n.r(t);var a=n(96);angular.module("portainer.docker").factory("InfoHelper",[function(){var e={determineEndpointMode:function(e,t){var n={provider:"",role:"",agentProxy:!1};return 2!==t&&4!==t||(n.agentProxy=!0),!e.Swarm||Object(a.a)(e.Swarm.NodeID)?"vSphere Integrated Containers"===e.ID?n.provider="VMWARE_VIC":n.provider="DOCKER_STANDALONE":(n.provider="DOCKER_SWARM_MODE",e.Swarm.ControlAvailable?n.role="MANAGER":n.role="WORKER"),n}};return e}])},function(e,t){angular.module("portainer.docker").factory("LabelHelper",[function(){"use strict";return{fromLabelHashToKeyValue:function(e){return e?Object.keys(e).map((function(t){return{key:t,value:e[t],originalKey:t,originalValue:e[t],added:!0}})):[]},fromKeyValueToLabelHash:function(e){var t={};return e&&e.forEach((function(e){e.key&&(t[e.key]=e.value)})),t}}}])},function(e,t){angular.module("portainer.docker").factory("LogHelper",[function(){"use strict";var e={formatLogs:function(e,t){return e=e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,""),t&&(e=(e=e.substring(8)).replace(/\n(.{8})/g,"\n\r")),e.split("\n")}};return e}])},function(e,t){angular.module("portainer.docker").factory("NodeHelper",[function(){"use strict";return{nodeToConfig:function(e){return{Name:e.Spec.Name,Role:e.Spec.Role,Labels:e.Spec.Labels,Availability:e.Spec.Availability}}}}])},function(e,t){angular.module("portainer.docker").factory("SecretHelper",[function(){"use strict";return{flattenSecret:function(e){return e?{Id:e.SecretID,Name:e.SecretName,FileName:e.File.Name,Uid:e.File.UID,Gid:e.File.GID,Mode:e.File.Mode}:{}},secretConfig:function(e){return e?{SecretID:e.Id,SecretName:e.Name,File:{Name:e.FileName,UID:e.Uid||"0",GID:e.Gid||"0",Mode:e.Mode||444}}:{}}}}])},function(e,t,n){"use strict";n.r(t);var a=n(3),r=n.n(a);angular.module("portainer.docker").factory("ServiceHelper",[function(){var e={associateTasksToService:function(e,t){e.Tasks=[];for(var n=[],a=0;a<t.length;a++){var r=t[a];r.ServiceId===e.Id?(e.Tasks.push(r),r.ServiceName=e.Name):n.push(r)}t=n},serviceToConfig:function(e){return{Name:e.Spec.Name,Labels:e.Spec.Labels,TaskTemplate:e.Spec.TaskTemplate,Mode:e.Spec.Mode,UpdateConfig:e.Spec.UpdateConfig,Networks:e.Spec.Networks,EndpointSpec:e.Spec.EndpointSpec}},translateKeyValueToPlacementPreferences:function(e){if(e){var t=[];return e.forEach((function(e){if(e.strategy&&""!==e.strategy&&e.value&&""!==e.value)switch(e.strategy.toLowerCase()){case"spread":t.push({Spread:{SpreadDescriptor:e.value}})}})),t}return[]},translateKeyValueToPlacementConstraints:function(e){if(e){var t=[];return e.forEach((function(e){e.key&&""!==e.key&&e.value&&""!==e.value&&t.push(e.key+e.operator+e.value)})),t}return[]},translateEnvironmentVariables:function(e){if(e){var t=[];return e.forEach((function(e){var n=e.indexOf("="),a=[e.slice(0,n),e.slice(n+1)],r=a.length>1?a[1]:"";t.push({key:a[0],value:r,originalKey:a[0],originalValue:r,added:!0})})),t}return[]},translateEnvironmentVariablesToEnv:function(e){if(e){var t=[];return e.forEach((function(e){e.key&&""!==e.key&&t.push(e.key+"="+e.value)})),t}return[]},translatePreferencesToKeyValue:function(e){if(e){var t=[];return e.forEach((function(e){e.Spread&&t.push({strategy:"Spread",value:e.Spread.SpreadDescriptor})})),t}return[]},translateConstraintsToKeyValue:function(e){if(e){var t=[];return e.forEach((function(e){var n=function(e){var t=e.indexOf("==");return t>=0?[t,"=="]:[e.indexOf("!="),"!="]}(e),a=e.slice(0,n[0]),r=n[1],i=e.slice(n[0]+2);t.push({key:a,value:i,operator:r,originalKey:a,originalValue:i})})),t}},translateHumanDurationToNanos:function(e){var t,n=e.match(/^([0-9]+)(h|m|s|ms|us|ns)$/i);if(null!==n&&3===n.length){var a=parseInt(n[1],10),i=n[2];switch(i){case"ns":t=a;break;case"us":t=1e3*a;break;default:t=1e6*r.a.duration(a,i).asMilliseconds()}}return t},translateNanosToHumanDuration:function(e){var t="0s",n={ns:1};return n.us=1e3*n.ns,n.ms=1e3*n.us,n.s=1e3*n.ms,n.m=60*n.s,n.h=60*n.m,Object.keys(n).forEach((function(a){e%n[a]==0&&e/n[a]>0&&(t=e/n[a]+a)})),t},translateLogDriverOptsToKeyValue:function(e){var t=[];return e&&Object.keys(e).forEach((function(n){t.push({key:n,value:e[n],originalKey:n,originalValue:e[n],added:!0})})),t},translateKeyValueToLogDriverOpts:function(e){var t={};return e&&e.forEach((function(e){e.key&&""!==e.key&&e.value&&""!==e.value&&(t[e.key]=e.value)})),t},translateHostsEntriesToHostnameIP:function(e){var t=[];return e&&e.forEach((function(e){if(e.indexOf(" ")&&2===e.split(" ").length){var n=e.split(" ");t.push({hostname:n[1],ip:n[0]})}})),t},translateHostnameIPToHostsEntries:function(e){var t=[];return e&&e.forEach((function(e){e.ip&&e.hostname&&t.push(e.ip+" "+e.hostname)})),t}};return e}])},function(e,t){angular.module("portainer.docker").factory("TaskHelper",[function(){"use strict";var e={associateContainerToTask:function(e,t){for(var n=0;n<t.length;n++){var a=t[n];if(e.ContainerId===a.Id){e.Container=a;break}}}};return e}])},function(e,t){angular.module("portainer.docker").factory("VolumeHelper",[function(){"use strict";var e={createDriverOptions:function(e){var t={};return e.forEach((function(e){t[e.name]=e.value})),t},isVolumeUsedByAService:function(e,t){for(var n=0;n<t.length;n++)for(var a=t[n].Mounts,r=0;r<a.length;r++){if(a[r].Source===e.Id)return!0}return!1}};return e}])},function(e,t){angular.module("portainer.app").factory("ContainersInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Containers;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("ImagesInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Images;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("InfoInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Info;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("NetworksInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Networks;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("VersionInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Version;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("VolumesInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Volumes;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t,n){"use strict";n.r(t);var a=n(11);angular.module("portainer.docker").factory("Build",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){return e(t+"/:endpointId/docker/build",{endpointId:n.endpointID},{buildImage:{method:"POST",ignoreLoadingBar:!0,transformResponse:a.jsonObjectsToArrayHandler,isArray:!0,headers:{"Content-Type":"application/x-tar"}},buildImageOverride:{method:"POST",ignoreLoadingBar:!0,transformResponse:a.jsonObjectsToArrayHandler,isArray:!0}})}])},function(e,t){angular.module("portainer.docker").factory("Commit",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/commit",{endpointId:n.endpointID},{commitContainer:{method:"POST",params:{container:"@id",repo:"@repo"},ignoreLoadingBar:!0}})}])},function(e,t){angular.module("portainer.docker").factory("Config",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/configs/:id/:action",{endpointId:n.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0},create:{method:"POST",params:{action:"create"},ignoreLoadingBar:!0},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(11);angular.module("portainer.docker").factory("Container",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","ContainersInterceptor",function(e,t,n,r){return e(t+"/:endpointId/docker/containers/:id/:action",{name:"@name",endpointId:n.endpointID},{query:{method:"GET",params:{all:0,action:"json",filters:"@filters"},isArray:!0,interceptor:r,timeout:15e3},get:{method:"GET",params:{action:"json"}},stop:{method:"POST",params:{id:"@id",action:"stop"}},restart:{method:"POST",params:{id:"@id",action:"restart"}},kill:{method:"POST",params:{id:"@id",action:"kill"}},pause:{method:"POST",params:{id:"@id",action:"pause"}},unpause:{method:"POST",params:{id:"@id",action:"unpause"}},logs:{method:"GET",params:{id:"@id",action:"logs"},timeout:4500,ignoreLoadingBar:!0,transformResponse:a.logsHandler},stats:{method:"GET",params:{id:"@id",stream:!1,action:"stats"},timeout:4500,ignoreLoadingBar:!0},top:{method:"GET",params:{id:"@id",action:"top"},timeout:4500,ignoreLoadingBar:!0},start:{method:"POST",params:{id:"@id",action:"start"},transformResponse:a.genericHandler},create:{method:"POST",params:{action:"create"},transformResponse:a.genericHandler,ignoreLoadingBar:!0},remove:{method:"DELETE",params:{id:"@id",v:"@v",force:"@force"},transformResponse:a.genericHandler},rename:{method:"POST",params:{id:"@id",action:"rename",name:"@name"},transformResponse:a.genericHandler},exec:{method:"POST",params:{id:"@id",action:"exec"},transformResponse:a.genericHandler,ignoreLoadingBar:!0},inspect:{method:"GET",params:{id:"@id",action:"json"}},update:{method:"POST",params:{id:"@id",action:"update"}},prune:{method:"POST",params:{action:"prune",filters:"@filters"}},resize:{method:"POST",params:{id:"@id",action:"resize",h:"@height",w:"@width"},transformResponse:a.genericHandler,ignoreLoadingBar:!0}})}])},function(e,t,n){"use strict";n.r(t);var a=n(11);angular.module("portainer.docker").factory("Exec",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){return e(t+"/:endpointId/docker/exec/:id/:action",{endpointId:n.endpointID},{resize:{method:"POST",params:{id:"@id",action:"resize",h:"@height",w:"@width"},transformResponse:a.genericHandler,ignoreLoadingBar:!0}})}])},function(e,t,n){"use strict";n.r(t);var a=n(11),r=n(302);angular.module("portainer.docker").factory("Image",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","HttpRequestHelper","ImagesInterceptor",function(e,t,n,i,o){return e(t+"/:endpointId/docker/images/:id/:action",{endpointId:n.endpointID},{query:{method:"GET",params:{all:0,action:"json"},isArray:!0,interceptor:o,timeout:15e3},get:{method:"GET",params:{action:"json"}},search:{method:"GET",params:{action:"search"}},history:{method:"GET",params:{action:"history"},isArray:!0},insert:{method:"POST",params:{id:"@id",action:"insert"}},tag:{method:"POST",params:{id:"@id",action:"tag",force:0,repo:"@repo"},ignoreLoadingBar:!0},inspect:{method:"GET",params:{id:"@id",action:"json"}},push:{method:"POST",params:{action:"push",id:"@imageName"},isArray:!0,transformResponse:a.jsonObjectsToArrayHandler,headers:{"X-Registry-Auth":i.registryAuthenticationHeader},ignoreLoadingBar:!0},create:{method:"POST",params:{action:"create",fromImage:"@fromImage"},isArray:!0,transformResponse:a.jsonObjectsToArrayHandler,headers:{"X-Registry-Auth":i.registryAuthenticationHeader},ignoreLoadingBar:!0},download:{method:"GET",params:{action:"get",names:"@names"},transformResponse:r.imageGetResponse,responseType:"blob",ignoreLoadingBar:!0},remove:{method:"DELETE",params:{id:"@id",force:"@force"},isArray:!0,transformResponse:a.deleteImageHandler}})}])},function(e,t,n){"use strict";n.r(t);var a=n(11);angular.module("portainer.docker").factory("Network",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","NetworksInterceptor",function(e,t,n,r){return e(t+"/:endpointId/docker/networks/:id/:action",{id:"@id",endpointId:n.endpointID},{query:{method:"GET",isArray:!0,interceptor:r,timeout:15e3},get:{method:"GET"},create:{method:"POST",params:{action:"create"},transformResponse:a.genericHandler,ignoreLoadingBar:!0},remove:{method:"DELETE",transformResponse:a.genericHandler},connect:{method:"POST",params:{action:"connect"}},disconnect:{method:"POST",params:{action:"disconnect"}}})}])},function(e,t){angular.module("portainer.docker").factory("Node",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/nodes/:id/:action",{endpointId:n.endpointID},{query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"POST",params:{id:"@id",action:"update",version:"@version"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.docker").factory("Plugin",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/plugins/:id/:action",{endpointId:n.endpointID},{query:{method:"GET",isArray:!0}})}])},function(e,t){angular.module("portainer.docker").factory("Secret",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/secrets/:id/:action",{endpointId:n.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0},create:{method:"POST",params:{action:"create"},ignoreLoadingBar:!0},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(11);angular.module("portainer.docker").factory("Service",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","HttpRequestHelper",function(e,t,n,r){return e(t+"/:endpointId/docker/services/:id/:action",{endpointId:n.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0,params:{filters:"@filters"}},create:{method:"POST",params:{action:"create"},headers:{"X-Registry-Auth":r.registryAuthenticationHeader,version:"1.29"},ignoreLoadingBar:!0},update:{method:"POST",params:{id:"@id",action:"update",version:"@version",rollback:"@rollback"},headers:{version:"1.29"}},remove:{method:"DELETE",params:{id:"@id"}},logs:{method:"GET",params:{id:"@id",action:"logs"},timeout:4500,ignoreLoadingBar:!0,transformResponse:a.logsHandler}})}])},function(e,t){angular.module("portainer.docker").factory("Swarm",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/swarm",{endpointId:n.endpointID},{get:{method:"GET"}})}])},function(e,t,n){"use strict";n.r(t);var a=n(11);angular.module("portainer.docker").factory("System",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","InfoInterceptor","VersionInterceptor",function(e,t,n,r,i){return e(t+"/:endpointId/docker/:action/:subAction",{name:"@name",endpointId:n.endpointID},{info:{method:"GET",params:{action:"info"},timeout:15e3,interceptor:r},version:{method:"GET",params:{action:"version"},timeout:4500,interceptor:i},events:{method:"GET",params:{action:"events",since:"@since",until:"@until"},isArray:!0,transformResponse:a.jsonObjectsToArrayHandler},auth:{method:"POST",params:{action:"auth"}},dataUsage:{method:"GET",params:{action:"system",subAction:"df"}}})}])},function(e,t){angular.module("portainer.docker").factory("SystemEndpoint",["$resource","API_ENDPOINT_ENDPOINTS",function(e,t){"use strict";return e(t+"/:endpointId/docker/:action/:subAction",{name:"@name"},{ping:{method:"GET",params:{action:"_ping",endpointId:"@endpointId"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(11);angular.module("portainer.docker").factory("Task",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){return e(t+"/:endpointId/docker/tasks/:id/:action",{endpointId:n.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0,params:{filters:"@filters"}},logs:{method:"GET",params:{id:"@id",action:"logs"},timeout:4500,ignoreLoadingBar:!0,transformResponse:a.logsHandler}})}])},function(e,t,n){"use strict";n.r(t);var a=n(11);angular.module("portainer.docker").factory("Volume",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","VolumesInterceptor",function(e,t,n,r){return e(t+"/:endpointId/docker/volumes/:id/:action",{endpointId:n.endpointID},{query:{method:"GET",interceptor:r,timeout:15e3},get:{method:"GET",params:{id:"@id"}},create:{method:"POST",params:{action:"create"},transformResponse:a.genericHandler,ignoreLoadingBar:!0,headers:{"X-Portainer-VolumeName":function(e){return e.data.Name||""}}},remove:{method:"DELETE",transformResponse:a.genericHandler,params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(115);angular.module("portainer.docker").factory("BuildService",["$q","Build","FileUploadService",function(e,t,n){var r={buildImageFromUpload:function(t,r,i){var o=e.defer();return n.buildImage(t,r,i).then((function(e){var t=new a.ImageBuildModel(e.data);o.resolve(t)})).catch((function(e){o.reject(e)})),o.promise},buildImageFromURL:function(n,r,i){var o={t:n,remote:r,dockerfile:i},s=e.defer();return t.buildImage(o,{}).$promise.then((function(e){var t=new a.ImageBuildModel(e);s.resolve(t)})).catch((function(e){s.reject(e)})),s.promise},buildImageFromDockerfileContent:function(n,r){var i={t:n},o={content:r},s=e.defer();return t.buildImageOverride(i,o).$promise.then((function(e){var t=new a.ImageBuildModel(e);s.resolve(t)})).catch((function(e){s.reject(e)})),s.promise}};return r}])},function(e,t,n){"use strict";n.r(t);var a=n(225);angular.module("portainer.docker").factory("ConfigService",["$q","Config",function(e,t){var n={config:function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.ConfigViewModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve config details",err:e})})),r.promise},configs:function(){var n=e.defer();return t.query({}).$promise.then((function(e){var t=e.map((function(e){return new a.ConfigViewModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve configs",err:e})})),n.promise},remove:function(n){var a=e.defer();return t.remove({id:n}).$promise.then((function(e){e.message?a.reject({msg:e.message}):a.resolve()})).catch((function(e){a.reject({msg:"Unable to remove config",err:e})})),a.promise},create:function(e){return t.create(e).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(81);angular.module("portainer.docker").factory("ContainerService",["$q","Container","ResourceControlService","LogHelper","$timeout",function(e,t,n,r,i){var o={};return o.container=function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.ContainerDetailsViewModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve container information",err:e})})),r.promise},o.containers=function(n,r){var i=e.defer();return t.query({all:n,filters:r}).$promise.then((function(e){var t=e.map((function(e){return new a.ContainerViewModel(e)}));i.resolve(t)})).catch((function(e){i.reject({msg:"Unable to retrieve containers",err:e})})),i.promise},o.resizeTTY=function(n,a,r,o){var s=e.defer();return i((function(){t.resize({},{id:n,height:r,width:a}).$promise.then((function(e){e.message?s.reject({msg:"Unable to resize tty of container "+n,err:e.message}):s.resolve(e)})).catch((function(e){s.reject({msg:"Unable to resize tty of container "+n,err:e})}))}),o),s.promise},o.startContainer=function(e){return t.start({id:e},{}).$promise},o.stopContainer=function(e){return t.stop({id:e},{}).$promise},o.restartContainer=function(e){return t.restart({id:e},{}).$promise},o.killContainer=function(e){return t.kill({id:e},{}).$promise},o.pauseContainer=function(e){return t.pause({id:e},{}).$promise},o.resumeContainer=function(e){return t.unpause({id:e},{}).$promise},o.renameContainer=function(e,n){return t.rename({id:e,name:n},{}).$promise},o.updateRestartPolicy=function(e,n,a){return t.update({id:e},{RestartPolicy:{Name:n,MaximumRetryCount:a}}).$promise},o.createContainer=function(n){var a=e.defer();return t.create(n).$promise.then((function(e){a.resolve(e)})).catch((function(e){a.reject({msg:"Unable to create container",err:e})})),a.promise},o.createAndStartContainer=function(t){var n,a=e.defer();return o.createContainer(t).then((function(e){return n=e,o.startContainer(n.Id)})).then((function(){a.resolve(n)})).catch((function(e){a.reject(e)})),a.promise},o.remove=function(n,a){var r=e.defer();return t.remove({id:n.Id,v:a?1:0,force:!0}).$promise.then((function(e){e.message?r.reject({msg:e.message,err:e.message}):r.resolve()})).catch((function(e){r.reject({msg:"Unable to remove container",err:e})})),r.promise},o.createExec=function(n){var a=e.defer();return t.exec({},n).$promise.then((function(e){e.message?a.reject({msg:e.message,err:e.message}):a.resolve(e)})).catch((function(e){a.reject(e)})),a.promise},o.logs=function(n,a,i,o,s,l,c){var d=e.defer(),u={id:n,stdout:a||0,stderr:i||0,timestamps:o||0,since:s||0,tail:l||"all"};return t.logs(u).$promise.then((function(e){var t=r.formatLogs(e.logs,c);d.resolve(t)})).catch((function(e){d.reject(e)})),d.promise},o.containerStats=function(n){var r=e.defer();return t.stats({id:n}).$promise.then((function(e){var t=new a.ContainerStatsViewModel(e);r.resolve(t)})).catch((function(e){r.reject(e)})),r.promise},o.containerTop=function(e){return t.top({id:e}).$promise},o.inspect=function(e){return t.inspect({id:e}).$promise},o.prune=function(e){return t.prune({filters:e}).$promise},o}])},function(e,t){angular.module("portainer.docker").factory("ExecService",["$q","$timeout","Exec",function(e,t,n){"use strict";var a={resizeTTY:function(a,r,i,o){var s=e.defer();return t((function(){n.resize({},{id:a,height:i,width:r}).$promise.then((function(e){e.message?s.reject({msg:"Unable to resize tty of exec",err:e.message}):s.resolve(e)})).catch((function(e){s.reject({msg:"Unable to resize tty of exec",err:e})}))}),o),s.promise}};return a}])},function(e,t,n){"use strict";n.r(t);var a=n(233),r=n(232),i=n(25),o=n(221),s=n(44),l=n(115),c=n(298),d=n(299);angular.module("portainer.docker").factory("ImageService",["$q","Image","ImageHelper","RegistryService","HttpRequestHelper","ContainerService","FileUploadService",function(e,t,n,u,p,m,g){var f={};return f.image=function(n){var a=e.defer();return t.get({id:n}).$promise.then((function(e){if(e.message)a.reject({msg:e.message});else{var t=new c.ImageDetailsViewModel(e);a.resolve(t)}})).catch((function(e){a.reject({msg:"Unable to retrieve image details",err:e})})),a.promise},f.images=function(n){var a=e.defer();return e.all({containers:n?m.containers(1):[],images:t.query({}).$promise}).then((function(e){var t=e.containers,n=e.images.map((function(e){e.ContainerCount=0;for(var n=0;n<t.length;n++){t[n].ImageID===e.Id&&e.ContainerCount++}return new l.ImageViewModel(e)}));a.resolve(n)})).catch((function(e){a.reject({msg:"Unable to retrieve images",err:e})})),a.promise},f.history=function(n){var a=e.defer();return t.history({id:n}).$promise.then((function(e){if(e.message)a.reject({msg:e.message});else{var t=[],n=e.length;angular.forEach(e,(function(e){t.push(new d.ImageLayerViewModel(n,e)),n--})),a.resolve(t)}})).catch((function(e){a.reject({msg:"Unable to retrieve image details",err:e})})),a.promise},f.pushImage=function(a){var r=e.defer(),i=a.Registry.Authentication?u.encodedCredentials(a.Registry):"";p.setRegistryAuthenticationHeader(i);var o=n.createImageConfigForContainer(a);return t.push({imageName:o.fromImage}).$promise.then((function(e){e[e.length-1].error?r.reject({msg:e[e.length-1].error}):r.resolve()})).catch((function(e){r.reject({msg:"Unable to push image tag",err:e})})),r.promise},f.pullImage=function(a,r){var i=a.Registry.Authentication?u.encodedCredentials(a.Registry):"";p.setRegistryAuthenticationHeader(i);var o=n.createImageConfigForContainer(a);if(r)return function(n){var a=e.defer();return t.create({},n).$promise.finally((function(){a.resolve()})),a.promise}(o);return function(n){var a=e.defer();return t.create({},n).$promise.then((function(e){if(e.length>0&&e[e.length-1].hasOwnProperty("message")){var t=e[e.length-1];a.reject({msg:t.message})}else a.resolve(e)})).catch((function(e){a.reject({msg:"Unable to pull image",err:e})})),a.promise}(o)},f.tagImage=function(e,n){return t.tag({id:e,repo:n}).$promise},f.downloadImages=function(e){var a=n.getImagesNamesForDownload(e);return t.download(a).$promise},f.uploadImage=function(e){return g.loadImages(e)},f.deleteImage=function(n,a){var r=e.defer();return t.remove({id:n,force:a}).$promise.then((function(e){e[0].message?r.reject({msg:e[0].message}):r.resolve()})).catch((function(e){r.reject({msg:"Unable to remove image",err:e})})),r.promise},f.getUniqueTagListFromImages=function(e){return Object(s.a)(Object(o.a)(e,(function(e){return Object(i.a)(e.RepoTags,(function(e){return-1!==e.indexOf("<none>")})),e.RepoTags?Object(r.a)(e.RepoTags,a.a):[]})))},f}])},function(e,t,n){"use strict";n.r(t);var a=n(226);angular.module("portainer.docker").factory("NetworkService",["$q","Network",function(e,t){var n={create:function(n){var a=e.defer();return t.create(n).$promise.then((function(e){a.resolve(e)})).catch((function(e){a.reject({msg:"Unable to create network",err:e})})),a.promise},network:function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.NetworkViewModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve network details",err:e})})),r.promise},networks:function(n,r,i,o){var s=e.defer();return t.query({filters:o}).$promise.then((function(e){var t=e.filter((function(e){return n&&"local"===e.Scope||r&&"swarm"===e.Scope||i&&"swarm"===e.Scope&&!0===e.Attachable?e:void 0})).map((function(e){return new a.NetworkViewModel(e)}));s.resolve(t)})).catch((function(e){s.reject({msg:"Unable to retrieve networks",err:e})})),s.promise},remove:function(e){return t.remove({id:e}).$promise},disconnectContainer:function(e,n,a){return t.disconnect({id:e},{Container:n,Force:a}).$promise},connectContainer:function(e,n,a){var r={Container:n};return a&&(r.EndpointConfig={Aliases:a}),t.connect({id:e},r).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(227);angular.module("portainer.docker").factory("NodeService",["$q","Node",function(e,t){var n={};return n.nodes=function(){var n=e.defer();return t.query({}).$promise.then((function(e){var t=e.map((function(e){return new a.NodeViewModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve nodes",err:e})})),n.promise},n.node=function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.NodeViewModel(e);return r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve node",err:e})})),r.promise},n.updateNode=function(e){return t.update({id:e.Id,version:e.Version},e).$promise},n.getActiveManager=function(){var t=e.defer();return n.nodes().then((function(e){for(var n=0;n<e.length;++n){var a=e[n];if("manager"===a.Role&&"active"===a.Availability&&"ready"===a.Status&&"0.0.0.0"!==a.Addr){t.resolve(a);break}}})).catch((function(e){t.reject({msg:"Unable to retrieve nodes",err:e})})),t.promise},n}])},function(e,t,n){"use strict";n.r(t);var a=n(6),r=n(300);angular.module("portainer.docker").factory("PluginService",["$q","Plugin","SystemService",function(e,t,n){var i={};function o(t,r,o){var s=e.defer();return e.all({system:n.plugins(),plugins:t?[]:i.plugins()}).then((function(e){var t=[],n=e.system,i=e.plugins;n[r]&&(t=t.concat(n[r]));for(var l=0;l<i.length;l++){var c=i[l];c.Enabled&&Object(a.a)(c.Config.Interface.Types,o)&&t.push(c.Name)}s.resolve(t)})).catch((function(e){s.reject({msg:e.msg,err:e})})),s.promise}return i.plugins=function(){var n=e.defer(),a=[];return t.query({}).$promise.then((function(e){for(var t=0;t<e.length;t++){var n=new r.PluginViewModel(e[t]);a.push(n)}})).finally((function(){n.resolve(a)})),n.promise},i.volumePlugins=function(e){return o(e,"Volume","docker.volumedriver/1.0")},i.networkPlugins=function(e){return o(e,"Network","docker.networkdriver/1.0")},i.loggingPlugins=function(e){return o(e,"Log","docker.logdriver/1.0")},i}])},function(e,t,n){"use strict";n.r(t);var a=n(228);angular.module("portainer.docker").factory("SecretService",["$q","Secret",function(e,t){var n={secret:function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.SecretViewModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve secret details",err:e})})),r.promise},secrets:function(){var n=e.defer();return t.query({}).$promise.then((function(e){var t=e.map((function(e){return new a.SecretViewModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve secrets",err:e})})),n.promise},remove:function(n){var a=e.defer();return t.remove({id:n}).$promise.then((function(e){e.message?a.reject({msg:e.message}):a.resolve()})).catch((function(e){a.reject({msg:"Unable to remove secret",err:e})})),a.promise},create:function(e){return t.create(e).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(229);angular.module("portainer.docker").factory("ServiceService",["$q","Service","ServiceHelper","TaskService","ResourceControlService","LogHelper",function(e,t,n,r,i,o){var s={services:function(n){var r=e.defer();return t.query({filters:n||{}}).$promise.then((function(e){var t=e.map((function(e){return new a.ServiceViewModel(e)}));r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve services",err:e})})),r.promise},service:function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.ServiceViewModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve service details",err:e})})),r.promise},remove:function(n){var a=e.defer();return t.remove({id:n.Id}).$promise.then((function(e){e.message?a.reject({msg:e.message,err:e.message}):a.resolve()})).catch((function(e){a.reject({msg:"Unable to remove service",err:e})})),a.promise},update:function(e,n,a){return s.service(e.Id).then((function(r){var i={id:e.Id,version:r.Version};return a&&(i.rollback=a),t.update(i,n).$promise}))},logs:function(n,a,r,i,s,l){var c=e.defer(),d={id:n,stdout:a||0,stderr:r||0,timestamps:i||0,since:s||0,tail:l||"all"};return t.logs(d).$promise.then((function(e){var t=o.formatLogs(e.logs,!0);c.resolve(t)})).catch((function(e){c.reject(e)})),c.promise}};return s}])},function(e,t,n){"use strict";n.r(t);var a=n(301);angular.module("portainer.docker").factory("SwarmService",["$q","Swarm",function(e,t){var n={swarm:function(){var n=e.defer();return t.get().$promise.then((function(e){var t=new a.SwarmViewModel(e);n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve Swarm details",err:e})})),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(297);angular.module("portainer.docker").factory("SystemService",["$q","System","SystemEndpoint",function(e,t,n){var r={plugins:function(){var n=e.defer();return t.info({}).$promise.then((function(e){var t=e.Plugins;n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve plugins information from system",err:e})})),n.promise},info:function(){return t.info({}).$promise},ping:function(e){return n.ping({endpointId:e}).$promise},version:function(){return t.version({}).$promise},events:function(n,r){var i=e.defer();return t.events({since:n,until:r}).$promise.then((function(e){var t=e.map((function(e){return new a.EventViewModel(e)}));i.resolve(t)})).catch((function(e){i.reject({msg:"Unable to retrieve engine events",err:e})})),i.promise},dataUsage:function(){return t.dataUsage().$promise}};return r}])},function(e,t,n){"use strict";n.r(t);var a=n(230);angular.module("portainer.docker").factory("TaskService",["$q","Task","LogHelper",function(e,t,n){var r={task:function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.TaskViewModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve task details",err:e})})),r.promise},tasks:function(n){var r=e.defer();return t.query({filters:n||{}}).$promise.then((function(e){var t=e.map((function(e){return new a.TaskViewModel(e)}));r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve tasks",err:e})})),r.promise},logs:function(a,r,i,o,s,l){var c=e.defer(),d={id:a,stdout:r||0,stderr:i||0,timestamps:o||0,since:s||0,tail:l||"all"};return t.logs(d).$promise.then((function(e){var t=n.formatLogs(e.logs,!0);c.resolve(t)})).catch((function(e){c.reject(e)})),c.promise}};return r}])},function(e,t,n){"use strict";n.r(t);var a=n(173);angular.module("portainer.docker").factory("VolumeService",["$q","Volume","VolumeHelper",function(e,t,n){var r={volumes:function(n){var r=e.defer();return t.query(n).$promise.then((function(e){var t=e.Volumes||[];t=t.map((function(e){return new a.VolumeViewModel(e)})),r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve volumes",err:e})})),r.promise},volume:function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.VolumeViewModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve volume details",err:e})})),r.promise},getVolumes:function(){return t.query({}).$promise},remove:function(n){var a=e.defer();return t.remove({id:n.Id}).$promise.then((function(e){e.message?a.reject({msg:e.message,err:e.message}):a.resolve()})).catch((function(e){a.reject({msg:"Unable to remove volume",err:e})})),a.promise},createVolumeConfiguration:function(e,t,a){return{Name:e,Driver:t,DriverOpts:n.createDriverOptions(a)}},createVolume:function(n){var r=e.defer();return t.create(n).$promise.then((function(e){if(e.message)r.reject({msg:e.message});else{var t=new a.VolumeViewModel(e);r.resolve(t)}})).catch((function(e){r.reject({msg:"Unable to create volume",err:e})})),r.promise},createVolumes:function(t){var n=t.map((function(e){return r.createVolume(e)}));return e.all(n)},createXAutoGeneratedLocalVolumes:function(t){for(var n=[],a=0;a<t;a++)n.push(r.createVolume({Driver:"local"}));return e.all(n)}};return r}])},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=function(e,t){if(!e)return;if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e))){var t=0,n=function(){};return{s:n,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,i=!0,s=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return i=e.done,e},e:function(e){s=!0,r=e},f:function(){try{i||null==a.return||a.return()}finally{if(s)throw r}}}}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function s(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function l(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){s(i,a,r,o,l,"next",e)}function l(e){s(i,a,r,o,l,"throw",e)}o(void 0)}))}}function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(t,n,a,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$state=t,this.ConfigService=n,this.Notifications=a,this.$async=r,this.removeAction=this.removeAction.bind(this),this.removeActionAsync=this.removeActionAsync.bind(this),this.getConfigs=this.getConfigs.bind(this),this.getConfigsAsync=this.getConfigsAsync.bind(this)}var t,n,a,r,o,s;return e.$inject=["$state","ConfigService","Notifications","$async"],t=e,(n=[{key:"getConfigs",value:function(){return this.$async(this.getConfigsAsync)}},{key:"getConfigsAsync",value:(s=l(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.ConfigService.configs();case 3:this.configs=e.sent,e.next=9;break;case 6:e.prev=6,e.t0=e.catch(0),this.Notifications.error("Failure",e.t0,"Unable to retrieve configs");case 9:case"end":return e.stop()}}),e,this,[[0,6]])}))),function(){return s.apply(this,arguments)})},{key:"$onInit",value:(o=l(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:this.configs=[],this.getConfigs();case 2:case"end":return e.stop()}}),e,this)}))),function(){return o.apply(this,arguments)})},{key:"removeAction",value:function(e){return this.$async(this.removeActionAsync,e)}},{key:"removeActionAsync",value:(r=l(regeneratorRuntime.mark((function e(t){var n,a,r,o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=t.length,a=i(t),e.prev=2,a.s();case 4:if((r=a.n()).done){e.next=23;break}return o=r.value,e.prev=6,e.next=9,this.ConfigService.remove(o.Id);case 9:this.Notifications.success("Config successfully removed",o.Name),s=this.configs.indexOf(o),this.configs.splice(s,1),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(6),this.Notifications.error("Failure",e.t0,"Unable to remove config");case 17:return e.prev=17,0==--n&&this.$state.reload(),e.finish(17);case 21:e.next=4;break;case 23:e.next=28;break;case 25:e.prev=25,e.t1=e.catch(2),a.e(e.t1);case 28:return e.prev=28,a.f(),e.finish(28);case 31:case"end":return e.stop()}}),e,this,[[2,25,28,31],[6,14,17,21]])}))),function(e){return r.apply(this,arguments)})}])&&c(t.prototype,n),a&&c(t,a),e}();t.default=d,r.a.module("portainer.docker").controller("ConfigsController",d)},function(e,t,n){"use strict";n.r(t);var a=n(26),r=n(32),i=n(1),o=n.n(i);function s(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function l(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){s(i,a,r,o,l,"next",e)}function l(e){s(i,a,r,o,l,"throw",e)}o(void 0)}))}}function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(t,n,a,i,o,s,l,c){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$state=n,this.$transition$=a,this.Notifications=i,this.ConfigService=o,this.Authentication=s,this.FormValidator=l,this.ResourceControlService=c,this.$async=t,this.formValues={Name:"",Labels:[],AccessControlData:new r.AccessControlFormData,ConfigContent:""},this.state={formValidationError:""},this.editorUpdate=this.editorUpdate.bind(this),this.createAsync=this.createAsync.bind(this)}var t,n,i,o,s;return e.$inject=["$async","$state","$transition$","Notifications","ConfigService","Authentication","FormValidator","ResourceControlService"],t=e,(n=[{key:"$onInit",value:(s=l(regeneratorRuntime.mark((function e(){var t,n,r,i,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.$transition$.params().id){e.next=3;break}return this.formValues.displayCodeEditor=!0,e.abrupt("return");case 3:return e.prev=3,e.next=6,this.ConfigService.config(this.$transition$.params().id);case 6:for(t=e.sent,this.formValues.Name=t.Name+"_copy",this.formValues.Data=t.Data,n=Object(a.a)(t.Labels),r=0;r<n.length;r++)i=n[r],o=t.Labels[i],this.formValues.Labels.push({name:i,value:o});this.formValues.displayCodeEditor=!0,e.next=18;break;case 14:e.prev=14,e.t0=e.catch(3),this.formValues.displayCodeEditor=!0,this.Notifications.error("Failure",e.t0,"Unable to clone config");case 18:case"end":return e.stop()}}),e,this,[[3,14]])}))),function(){return s.apply(this,arguments)})},{key:"addLabel",value:function(){this.formValues.Labels.push({name:"",value:""})}},{key:"removeLabel",value:function(e){this.formValues.Labels.splice(e,1)}},{key:"prepareLabelsConfig",value:function(e){var t={};this.formValues.Labels.forEach((function(e){e.name&&e.value&&(t[e.name]=e.value)})),e.Labels=t}},{key:"prepareConfigData",value:function(e){var t=this.formValues.ConfigContent;e.Data=btoa(unescape(encodeURIComponent(t)))}},{key:"prepareConfiguration",value:function(){var e={};return e.Name=this.formValues.Name,this.prepareConfigData(e),this.prepareLabelsConfig(e),e}},{key:"validateForm",value:function(e,t){var n;return this.state.formValidationError="",!(n=this.FormValidator.validateAccessControl(e,t))||(this.state.formValidationError=n,!1)}},{key:"create",value:function(){return this.$async(this.createAsync)}},{key:"createAsync",value:(o=l(regeneratorRuntime.mark((function e(){var t,n,a,r,i,o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=this.formValues.AccessControlData,n=this.Authentication.getUserDetails(),a=this.Authentication.isAdmin(),""!==this.formValues.ConfigContent){e.next=6;break}return this.state.formValidationError="Config content must not be empty",e.abrupt("return");case 6:if(this.validateForm(t,a)){e.next=8;break}return e.abrupt("return");case 8:return r=this.prepareConfiguration(),e.prev=9,e.next=12,this.ConfigService.create(r);case 12:return i=e.sent,o=i.Portainer.ResourceControl,s=n.ID,e.next=17,this.ResourceControlService.applyResourceControl(s,t,o);case 17:this.Notifications.success("Config successfully created"),this.$state.go("docker.configs",{},{reload:!0}),e.next=24;break;case 21:e.prev=21,e.t0=e.catch(9),this.Notifications.error("Failure",e.t0,"Unable to create config");case 24:case"end":return e.stop()}}),e,this,[[9,21]])}))),function(){return o.apply(this,arguments)})},{key:"editorUpdate",value:function(e){this.formValues.ConfigContent=e.getValue()}}])&&c(t.prototype,n),i&&c(t,i),e}();t.default=d,o.a.module("portainer.docker").controller("CreateConfigController",d)},function(e,t){angular.module("portainer.docker").controller("ConfigController",["$scope","$transition$","$state","ConfigService","Notifications",function(e,t,n,a,r){e.removeConfig=function(e){a.remove(e).then((function(){r.success("Config successfully removed"),n.go("docker.configs",{})})).catch((function(e){r.error("Failure",e,"Unable to remove config")}))},a.config(t.params().id).then((function(t){e.config=t})).catch((function(e){r.error("Failure",e,"Unable to retrieve config details")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(214);angular.module("portainer.docker").controller("ContainerConsoleController",["$scope","$transition$","ContainerService","ImageService","EndpointProvider","Notifications","ContainerHelper","ExecService","HttpRequestHelper","LocalStorage","CONSOLE_COMMANDS_LABEL_PREFIX",function(e,t,n,r,i,o,s,l,c,d,u){var p,m,g=Object.freeze({disconnected:0,connecting:1,connected:2});function f(e,t){t=t||0,m.fit();var n=m.cols;m.resize(n,30),e(n+t,30+t,1)}function v(n,r){var i=f.bind(this,r);t.params().nodeName&&(n+="&nodeName="+t.params().nodeName),n=n.indexOf("https")>-1?n.replace("https://","wss://"):n.replace("http://","ws://"),(p=new WebSocket(n)).onopen=function(){e.state=g.connected,(m=new a.Terminal).on("data",(function(e){p.send(e)}));var t=document.getElementById("terminal-container");m.open(t),m.focus(),m.setOption("cursorBlink",!0),window.onresize=function(){i(),e.$apply()},e.$watch("toggle",(function(){setTimeout(i,400)})),p.onmessage=function(e){m.write(e.data)},p.onerror=function(t){e.disconnect(),e.$apply(),o.error("Failure",t,"Connection error")},p.onclose=function(){e.disconnect(),e.$apply()},i(1),e.$apply()}}e.loaded=!1,e.states=g,e.state=g.disconnected,e.formValues={},e.containerCommands=[],e.$on("$stateChangeStart",(function(){e.disconnect()})),e.connectAttach=function(){var a=this;if(!(e.state>g.disconnected)){e.state=g.connecting;var r=t.params().id;n.container(r).then((function(t){if(!t.State.Running)return o.error("Failure",t,"Container "+r+" is not running!"),void e.disconnect();var s={token:d.getJWT(),endpointId:i.endpointID(),id:r};v(window.location.href.split("#")[0]+"api/websocket/attach?"+Object.keys(s).map((function(e){return e+"="+s[e]})).join("&"),n.resizeTTY.bind(a,r))})).catch((function(t){o.error("Error",t,"Unable to retrieve container details"),e.disconnect()}))}},e.connectExec=function(){if(!(e.state>g.disconnected)){e.state=g.connecting;var a=e.formValues.isCustomCommand?e.formValues.customCommand:e.formValues.command,r={id:t.params().id,AttachStdin:!0,AttachStdout:!0,AttachStderr:!0,Tty:!0,User:e.formValues.user,Cmd:s.commandStringToArray(a)};n.createExec(r).then((function(e){var t={token:d.getJWT(),endpointId:i.endpointID(),id:e.Id};v(window.location.href.split("#")[0]+"api/websocket/exec?"+Object.keys(t).map((function(e){return e+"="+t[e]})).join("&"),l.resizeTTY.bind(this,t.id))})).catch((function(t){o.error("Failure",t,"Unable to exec into container"),e.disconnect()}))}},e.disconnect=function(){p&&p.close(),e.state>g.disconnected&&(e.state=g.disconnected,m&&(m.write("\n\r(connection closed)"),m.dispose()))},e.autoconnectAttachView=function(){return e.initView().then((function(){e.container.State.Running&&e.connectAttach()}))},e.initView=function(){return c.setPortainerAgentTargetHeader(t.params().nodeName),n.container(t.params().id).then((function(t){var n=t;return e.container=n,r.image(n.Image)})).then((function(t){var n=t,a=e.container.Config.Labels;e.imageOS=n.Os,e.formValues.command="windows"===n.Os?"powershell":"bash",e.containerCommands=Object.keys(a).filter((function(e){return 0===e.indexOf(u)})).map((function(e){return{title:e.replace(u,""),command:a[e]}})),e.loaded=!0})).catch((function(e){o.error("Error",e,"Unable to retrieve container details")}))}}])},function(e,t){angular.module("portainer.docker").controller("ContainersController",["$scope","ContainerService","Notifications","EndpointProvider",function(e,t,n,a){function r(){t.containers(1).then((function(t){e.containers=t,e.offlineMode=a.offlineMode()})).catch((function(t){n.error("Failure",t,"Unable to retrieve containers"),e.containers=[]}))}e.offlineMode=!1,e.getContainers=r,r()}])},function(e,t,n){"use strict";n.r(t);var a=n(421),r=n(412),i=n(4),o=n(2),s=n(82),l=n(5),c=n(208),d=n(9),u=n(30),p=n(151),m=n(32),g=n(81);function f(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function v(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){f(i,a,r,o,s,"next",e)}function s(e){f(i,a,r,o,s,"throw",e)}o(void 0)}))}}function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}angular.module("portainer.docker").controller("CreateContainerController",["$q","$scope","$async","$state","$timeout","$transition$","$filter","Container","ContainerHelper","Image","ImageHelper","Volume","NetworkService","ResourceControlService","Authentication","Notifications","ContainerService","ImageService","FormValidator","ModalService","RegistryService","SystemService","SettingsService","PluginService","HttpRequestHelper","ExtensionService",function(e,t,n,f,b,y,x,w,k,S,C,$,I,P,T,A,D,R,E,N,U,O,_,V,L,M){function F(){var e=angular.copy(t.config);return e.Cmd=k.commandStringToArray(e.Cmd),function(e){var n=e.HostConfig.NetworkMode,a=t.formValues.NetworkContainer,r=a;a&&"object"===h(a)&&(r=x("trimcontainername")(a.Names[0]));var i=n;if(r&&(i+=":"+r,e.Hostname=""),e.HostConfig.NetworkMode=i,e.MacAddress=t.formValues.MacAddress,e.NetworkingConfig.EndpointsConfig[i]={IPAMConfig:{IPv4Address:t.formValues.IPv4,IPv6Address:t.formValues.IPv6}},i&&Object(c.a)(t.config.NetworkingConfig.EndpointsConfig[i],"Aliases")){var o=t.config.NetworkingConfig.EndpointsConfig[i].Aliases;e.NetworkingConfig.EndpointsConfig[i].Aliases=Object(l.a)(o,(function(e){return!Object(s.a)(t.fromContainer.Id,e)}))}var d=[];t.formValues.DnsPrimary&&d.push(t.formValues.DnsPrimary),t.formValues.DnsSecondary&&d.push(t.formValues.DnsSecondary),e.HostConfig.Dns=d,t.formValues.ExtraHosts.forEach((function(t){t.value&&e.HostConfig.ExtraHosts.push(t.value)}))}(e),function(e){var n=C.createImageConfigForContainer(t.formValues.RegistryModel);e.Image=n.fromImage}(e),function(e){var t=k.preparePortBindings(e.HostConfig.PortBindings);Object(d.a)(t,(function(t,n){return e.ExposedPorts[n]={}})),e.HostConfig.PortBindings=t}(e),function(e){var n=t.formValues.Console,a=!0,r=!0;"tty"===n?a=!1:"interactive"===n?r=!1:"none"===n&&(a=!1,r=!1),e.OpenStdin=a,e.Tty=r}(e),function(e){var t=[];e.Env.forEach((function(e){e.name&&e.value&&t.push(e.name+"="+e.value)})),e.Env=t}(e),function(e){var n=[],a={};t.formValues.Volumes.forEach((function(e){var t=e.name,r=e.containerPath;if(t&&r){var i=t+":"+r;a[r]={},e.readOnly&&(i+=":ro"),n.push(i)}})),e.HostConfig.Binds=n,e.Volumes=a}(e),function(e){var n={};t.formValues.Labels.forEach((function(e){e.name&&(e.value?n[e.name]=e.value:n[e.name]="")})),e.Labels=n}(e),function(e){var t=[];e.HostConfig.Devices.forEach((function(e){e.pathOnHost&&(""===e.pathInContainer&&(e.pathInContainer=e.pathOnHost),t.push({PathOnHost:e.pathOnHost,PathInContainer:e.pathInContainer,CgroupPermissions:"rwm"}))})),e.HostConfig.Devices=t}(e),function(e){var n=(Math.round(8*t.formValues.MemoryLimit)/8).toFixed(3);(n*=1048576)>0&&(e.HostConfig.Memory=n);var a=(Math.round(8*t.formValues.MemoryReservation)/8).toFixed(3);(a*=1048576)>0&&(e.HostConfig.MemoryReservation=a),t.formValues.CpuLimit>0&&(e.HostConfig.NanoCpus=1e9*t.formValues.CpuLimit)}(e),function(e){var n={};t.formValues.LogDriverName&&(e.HostConfig.LogConfig={Type:t.formValues.LogDriverName},"none"!==t.formValues.LogDriverName&&(t.formValues.LogDriverOpts.forEach((function(e){e.name&&(n[e.name]=e.value)})),0!==Object.keys(n).length&&n.constructor===Object&&(e.HostConfig.LogConfig.Config=n)))}(e),function(e){var n=t.formValues.capabilities.filter((function(e){return!0===e.allowed})),a=t.formValues.capabilities.filter((function(e){return!1===e.allowed})),r=function(e){return e.capability};e.HostConfig.CapAdd=n.map(r),e.HostConfig.CapDrop=a.map(r)}(e),e}function j(){w.get({id:y.params().from}).$promise.then((function(e){var n,a,r=new g.ContainerDetailsViewModel(e);r.ResourceControl&&r.ResourceControl.Public&&(t.formValues.AccessControlData.AccessControlEnabled=!1),t.fromContainer=r,t.config=k.configFromContainer(r.Model),t.config.Cmd?t.config.Cmd=k.commandArrayToString(t.config.Cmd):t.config.Cmd="",n=e.HostConfig.LogConfig,t.formValues.LogDriverName=n.Type,t.formValues.LogDriverOpts=Object(i.a)(n.Config,(function(e,t){return{name:t,value:e}})),a=k.sortAndCombinePorts(t.config.HostConfig.PortBindings),t.config.HostConfig.PortBindings=a,function(e){for(var n in e.Mounts)if({}.hasOwnProperty.call(e.Mounts,n)){var a=e.Mounts[n],r={type:a.Type,name:a.Name||a.Source,containerPath:a.Destination,readOnly:!1===a.RW};t.formValues.Volumes.push(r)}}(e),function(e){if(t.config.NetworkingConfig={EndpointsConfig:{}},"default"===e.HostConfig.NetworkMode&&(t.config.HostConfig.NetworkMode="bridge",Object(o.a)(t.availableNetworks,{Name:"bridge"})||(t.config.HostConfig.NetworkMode="nat")),0===t.config.HostConfig.NetworkMode.indexOf("container:")){var n=t.config.HostConfig.NetworkMode.split(/^container:/)[1];for(var a in t.config.HostConfig.NetworkMode="container",t.runningContainers)t.runningContainers[a].Id==n&&(t.formValues.NetworkContainer=t.runningContainers[a])}if(t.fromContainerMultipleNetworks=Object.keys(e.NetworkSettings.Networks).length>=2,e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode]&&e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode].IPAMConfig&&(e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode].IPAMConfig.IPv4Address&&(t.formValues.IPv4=e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode].IPAMConfig.IPv4Address),e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode].IPAMConfig.IPv6Address&&(t.formValues.IPv6=e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode].IPAMConfig.IPv6Address)),t.config.NetworkingConfig.EndpointsConfig[t.config.HostConfig.NetworkMode]=e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode],Object.keys(e.NetworkSettings.Networks).length>1){var r=e.NetworkSettings.Networks[Object.keys(e.NetworkSettings.Networks)[0]];t.config.NetworkingConfig.EndpointsConfig[t.config.HostConfig.NetworkMode]=r,t.extraNetworks=angular.copy(e.NetworkSettings.Networks),delete t.extraNetworks[Object.keys(e.NetworkSettings.Networks)[0]]}if(t.formValues.MacAddress=e.Config.MacAddress,e.HostConfig.Dns&&e.HostConfig.Dns[0]&&(t.formValues.DnsPrimary=e.HostConfig.Dns[0],e.HostConfig.Dns[1]&&(t.formValues.DnsSecondary=e.HostConfig.Dns[1])),t.config.HostConfig.ExtraHosts){for(var i=t.config.HostConfig.ExtraHosts,s=0;s<i.length;s++){var l=i[s];t.formValues.ExtraHosts.push({value:l})}t.config.HostConfig.ExtraHosts=[]}}(e),function(){var e=[];for(var n in t.config.Env)if({}.hasOwnProperty.call(t.config.Env,n)){var a=t.config.Env[n].split(/\=(.*)/);e.push({name:a[0],value:a[1]})}t.config.Env=e}(),function(){for(var e in t.config.Labels)({}).hasOwnProperty.call(t.config.Labels,e)&&t.formValues.Labels.push({name:e,value:t.config.Labels[e]})}(),t.config.OpenStdin&&t.config.Tty?t.formValues.Console="both":!t.config.OpenStdin&&t.config.Tty?t.formValues.Console="tty":t.config.OpenStdin&&!t.config.Tty?t.formValues.Console="interactive":t.config.OpenStdin||t.config.Tty||(t.formValues.Console="none"),function(){var e=[];for(var n in t.config.HostConfig.Devices)if({}.hasOwnProperty.call(t.config.HostConfig.Devices,n)){var a=t.config.HostConfig.Devices[n];e.push({pathOnHost:a.PathOnHost,pathInContainer:a.PathInContainer})}t.config.HostConfig.Devices=e}(),U.retrievePorRegistryModelFromRepository(t.config.Image).then((function(e){t.formValues.RegistryModel=e})).catch((function(e){A.error("Failure",e,"Unable to retrive registry")})),function(e){e.HostConfig.NanoCpus&&(t.formValues.CpuLimit=e.HostConfig.NanoCpus/1e9),e.HostConfig.Memory&&(t.formValues.MemoryLimit=e.HostConfig.Memory/1024/1024),e.HostConfig.MemoryReservation&&(t.formValues.MemoryReservation=e.HostConfig.MemoryReservation/1024/1024)}(e),function(e){function n(e){return e.capability===i.capability}e.HostConfig.CapAdd&&e.HostConfig.CapAdd.forEach((function(e){t.formValues.capabilities.push(new p.ContainerCapability(e,!0))})),e.HostConfig.CapDrop&&e.HostConfig.CapDrop.forEach((function(e){t.formValues.capabilities.push(new p.ContainerCapability(e,!1))}));for(var a=new p.ContainerCapabilities,r=0;r<a.length;r++){var i=a[r];Object(o.a)(t.formValues.capabilities,n)||t.formValues.capabilities.push(i)}t.formValues.capabilities.sort((function(e,t){return e.capability<t.capability?-1:1}))}(e)})).catch((function(e){A.error("Failure",e,"Unable to retrieve container")}))}function B(){return(B=v(regeneratorRuntime.mark((function e(){var n,a,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=y.params().nodeName,t.formValues.NodeName=n,L.setPortainerAgentTargetHeader(n),t.isAdmin=T.isAdmin(),e.next=6,K();case 6:return t.isAdminOrEndpointAdmin=e.sent,e.next=9,z(t.isAdminOrEndpointAdmin);case 9:return t.showDeviceMapping=e.sent,e.next=12,H(t.isAdminOrEndpointAdmin);case 12:t.areContainerCapabilitiesEnabled=e.sent,$.query({},(function(e){t.availableVolumes=e.Volumes}),(function(e){A.error("Failure",e,"Unable to retrieve volumes")})),a=t.applicationState.endpoint.mode.provider,r=t.applicationState.endpoint.apiVersion,I.networks("DOCKER_STANDALONE"===a||"DOCKER_SWARM_MODE"===a,!1,"DOCKER_SWARM_MODE"===a&&r>=1.25).then((function(e){var n=e;n.push({Name:"container"}),t.availableNetworks=n,Object(o.a)(n,{Name:"nat"})&&(t.config.HostConfig.NetworkMode="nat")})).catch((function(e){A.error("Failure",e,"Unable to retrieve networks")})),w.query({},(function(e){var n=e;t.runningContainers=n,y.params().from?j():(t.fromContainer={},t.formValues.capabilities=t.areContainerCapabilitiesEnabled?new p.ContainerCapabilities:[])}),(function(e){A.error("Failure",e,"Unable to retrieve running containers")})),O.info().then((function(e){t.availableRuntimes=e.Runtimes?Object.keys(e.Runtimes):[],t.config.HostConfig.Runtime="",t.state.sliderMaxCpu=32,e.NCPU&&(t.state.sliderMaxCpu=e.NCPU),t.state.sliderMaxMemory=32768,e.MemTotal&&(t.state.sliderMaxMemory=Math.floor(e.MemTotal/1e3/1e3))})).catch((function(e){A.error("Failure",e,"Unable to retrieve engine details")})),_.publicSettings().then((function(e){t.allowBindMounts=t.isAdminOrEndpointAdmin||e.AllowBindMountsForRegularUsers,t.allowPrivilegedMode=e.AllowPrivilegedModeForRegularUsers})).catch((function(e){A.error("Failure",e,"Unable to retrieve application settings")})),V.loggingPlugins(r<1.25).then((function(e){t.availableLoggingDrivers=e}));case 21:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function z(e){return G.apply(this,arguments)}function G(){return(G=v(regeneratorRuntime.mark((function e(n){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.applicationState.application.allowDeviceMappingForRegularUsers,e.abrupt("return",a||n);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function H(e){return q.apply(this,arguments)}function q(){return(q=v(regeneratorRuntime.mark((function e(n){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.applicationState.application.allowContainerCapabilitiesForRegularUsers,e.abrupt("return",a||n);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function K(){return W.apply(this,arguments)}function W(){return(W=v(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!T.isAdmin()){e.next=2;break}return e.abrupt("return",!0);case 2:return e.next=4,M.extensionEnabled(M.EXTENSIONS.RBAC);case 4:return t=e.sent,e.abrupt("return",!!t&&T.hasAuthorizations(["EndpointResourcesAccess"]));case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}t.create=function(){var i=null;return L.setPortainerAgentTargetHeader(t.formValues.NodeName),o().then((function(e){return i=e,e})).then((function(t){if(!t)return e.when(!0);return n=e.defer(),N.confirm({title:"Are you sure ?",message:"A container with the same name already exists. Portainer can automatically remove it and re-create one. Do you want to replace it?",buttons:{confirm:{label:"Replace",className:"btn-danger"}},callback:function(e){n.resolve(e)}}),n.promise;var n})).then((function(n){if(!n)return e.when();if(!function(e,n){var a;return t.state.formValidationError="",!(a=E.validateAccessControl(e,n))||(t.state.formValidationError=a,!1)}(t.formValues.AccessControlData,t.isAdmin))return e.when();return t.state.actionInProgress=!0,function(){return e.when(t.formValues.alwaysPull&&R.pullImage(t.formValues.RegistryModel,!0))}().then(u).then(m).then(g).then(h).then(b).then(y).catch(c)})).catch((function(e){A.error("Failure",e,"Unable to create container")})).finally((function(){t.state.actionInProgress=!1}));function o(){return w.query({all:1,filters:{name:["^/"+t.config.name+"$"]}}).$promise.then((function(e){if(e.length)return e[0]})).catch((function(e){A.error("Failure",e,"Unable to retrieve containers")}))}function c(t){var n=e.defer();return o().then((function(e){if(e&&(!i||e.Id!==i.Id))return D.remove(e,!0)})).then(d).then((function(){n.reject(t)})).catch((function(e){n.reject(e)})),n.promise}function d(){if(i)return D.renameContainer(i.Id,i.Names[0].substring(1))}function u(){return i?function(t){if("running"!==t.State)return e.when();return D.stopContainer(t.Id)}(i).then(p):e.when()}function p(){return D.renameContainer(i.Id,i.Names[0].substring(1)+"-old")}function m(){return n(v(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=F(),e.next=3,D.createAndStartContainer(t);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)}))))}function g(e){var n=T.getUserDetails().ID,a=e.Portainer.ResourceControl,r=e.Id,i=t.formValues.AccessControlData;return P.applyResourceControl(n,i,a).then((function(){return r}))}function h(n){if(!t.extraNetworks)return e.when();var i=Object(r.a)(t.extraNetworks,(function(e,r){if(Object(a.a)(e,"Aliases"))var i=Object(l.a)(e.Aliases,(function(e){return!Object(s.a)(t.fromContainer.Id,e)}));return I.connectContainer(r,n,i)}));return e.all(i)}function b(){var t=e.defer();if(i)return D.remove(i,!0).then((function(){A.success("Container Removed",i.Id),t.resolve()})).catch((function(e){t.reject({msg:"Unable to remove container",err:e})})),t.promise;t.resolve()}function y(){A.success("Container successfully created"),f.go("docker.containers",{},{reload:!0})}},t.formValues={alwaysPull:!0,Console:"none",Volumes:[],NetworkContainer:"",Labels:[],ExtraHosts:[],MacAddress:"",IPv4:"",IPv6:"",DnsPrimary:"",DnsSecondary:"",AccessControlData:new m.AccessControlFormData,CpuLimit:0,MemoryLimit:0,MemoryReservation:0,NodeName:null,capabilities:[],LogDriverName:"",LogDriverOpts:[],RegistryModel:new u.PorImageRegistryModel},t.extraNetworks={},t.state={formValidationError:"",actionInProgress:!1},t.refreshSlider=function(){b((function(){t.$broadcast("rzSliderForceRender")}))},t.config={Image:"",Env:[],Cmd:"",MacAddress:"",ExposedPorts:{},HostConfig:{RestartPolicy:{Name:"no"},PortBindings:[],PublishAllPorts:!1,Binds:[],AutoRemove:!1,NetworkMode:"bridge",Privileged:!1,Init:!1,Runtime:"",ExtraHosts:[],Devices:[],CapAdd:[],CapDrop:[]},NetworkingConfig:{EndpointsConfig:{}},Labels:{}},t.addVolume=function(){t.formValues.Volumes.push({name:"",containerPath:"",readOnly:!1,type:"volume"})},t.removeVolume=function(e){t.formValues.Volumes.splice(e,1)},t.addEnvironmentVariable=function(){t.config.Env.push({name:"",value:""})},t.removeEnvironmentVariable=function(e){t.config.Env.splice(e,1)},t.addPortBinding=function(){t.config.HostConfig.PortBindings.push({hostPort:"",containerPort:"",protocol:"tcp"})},t.removePortBinding=function(e){t.config.HostConfig.PortBindings.splice(e,1)},t.addLabel=function(){t.formValues.Labels.push({name:"",value:""})},t.removeLabel=function(e){t.formValues.Labels.splice(e,1)},t.addExtraHost=function(){t.formValues.ExtraHosts.push({value:""})},t.removeExtraHost=function(e){t.formValues.ExtraHosts.splice(e,1)},t.addDevice=function(){t.config.HostConfig.Devices.push({pathOnHost:"",pathInContainer:""})},t.removeDevice=function(e){t.config.HostConfig.Devices.splice(e,1)},t.addLogDriverOpt=function(){t.formValues.LogDriverOpts.push({name:"",value:""})},t.removeLogDriverOpt=function(e){t.formValues.LogDriverOpts.splice(e,1)},t.fromContainerMultipleNetworks=!1,t.resetNetworkConfig=function(){t.config.NetworkingConfig={EndpointsConfig:{}}},function(){B.apply(this,arguments)}()}])},function(e,t,n){"use strict";n.r(t);var a=n(3),r=n.n(a),i=n(30);function o(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function s(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function s(e){o(i,a,r,s,l,"next",e)}function l(e){o(i,a,r,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.docker").controller("ContainerController",["$q","$scope","$state","$transition$","$filter","$async","ExtensionService","Commit","ContainerHelper","ContainerService","ImageHelper","NetworkService","Notifications","ModalService","ResourceControlService","RegistryService","ImageService","HttpRequestHelper","Authentication","StateManager",function(e,t,n,a,o,l,c,d,u,p,m,g,f,v,h,b,y,x,w,k){t.activityTime=0,t.portBindings=[],t.displayRecreateButton=!1,t.config={RegistryModel:new i.PorImageRegistryModel,commitInProgress:!1},t.state={recreateContainerInProgress:!1,joinNetworkInProgress:!1,leaveNetworkInProgress:!1},t.updateRestartPolicy=function(n,a){return a="on-failure"===n?a:void 0,p.updateRestartPolicy(t.container.Id,n,a).then((function(){t.container.HostConfig.RestartPolicy={Name:n,MaximumRetryCount:a},f.success("Restart policy updated")})).catch((function(t){return f.error("Failure",t,"Unable to update restart policy"),e.reject(t)}))};var S=function(){var e=a.params().nodeName;x.setPortainerAgentTargetHeader(e),t.nodeName=e,p.container(a.params().id).then((function(e){var n=e;t.container=n,t.container.edit=!1,t.container.newContainerName=o("trimcontainername")(n.Name),n.State.Running?t.activityTime=r.a.duration(r()(n.State.StartedAt).utc().diff(r()().utc())).humanize():"created"===n.State.Status?t.activityTime=r.a.duration(r()(n.Created).utc().diff(r()().utc())).humanize():t.activityTime=r.a.duration(r()().utc().diff(r()(n.State.FinishedAt).utc())).humanize(),t.portBindings=[],n.NetworkSettings.Ports&&angular.forEach(Object.keys(n.NetworkSettings.Ports),(function(e){if(n.NetworkSettings.Ports[e]){var a={};a.container=e,a.host=n.NetworkSettings.Ports[e][0].HostIp+":"+n.NetworkSettings.Ports[e][0].HostPort,t.portBindings.push(a)}}));var a=t.container.Config.Labels["com.docker.swarm.service.id"],i=t.container.HostConfig.AutoRemove,s=w.isAdmin(),l=k.getState().application,d=l.allowHostNamespaceForRegularUsers,u=l.allowDeviceMappingForRegularUsers,p=l.allowBindMountsForRegularUsers,m=l.allowPrivilegedModeForRegularUsers,g=!(p&&u&&d&&m);c.extensionEnabled(c.EXTENSIONS.RBAC).then((function(e){t.displayRecreateButton=!a&&!i&&(!g&&!e||s)}))})).catch((function(e){f.error("Failure",e,"Unable to retrieve container info")}))};function C(e,t,n,a){t(e).then((function(){f.success(n,e),S()})).catch((function(e){f.error("Failure",e,a)}))}function $(){return I.apply(this,arguments)}function I(){return(I=s(regeneratorRuntime.mark((function e(){var r,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.config.commitInProgress=!0,r=t.config.RegistryModel,i=m.createImageConfigForContainer(r),e.prev=3,e.next=6,d.commitContainer({id:a.params().id,repo:i.fromImage}).$promise;case 6:f.success("Image created",a.params().id),n.reload(),e.next=14;break;case 10:e.prev=10,e.t0=e.catch(3),f.error("Failure",e.t0,"Unable to create image"),t.config.commitInProgress=!1;case 14:case"end":return e.stop()}}),e,null,[[3,10]])})))).apply(this,arguments)}t.start=function(){C(a.params().id,p.startContainer,"Container successfully started","Unable to start container")},t.stop=function(){C(a.params().id,p.stopContainer,"Container successfully stopped","Unable to stop container")},t.kill=function(){C(a.params().id,p.killContainer,"Container successfully killed","Unable to kill container")},t.pause=function(){C(a.params().id,p.pauseContainer,"Container successfully paused","Unable to pause container")},t.unpause=function(){C(a.params().id,p.resumeContainer,"Container successfully resumed","Unable to resume container")},t.restart=function(){C(a.params().id,p.restartContainer,"Container successfully restarted","Unable to restart container")},t.renameContainer=function(){var e=t.container;p.renameContainer(a.params().id,e.newContainerName).then((function(){e.Name=e.newContainerName,f.success("Container successfully renamed",e.Name)})).catch((function(t){e.newContainerName=e.Name,f.error("Failure",t,"Unable to rename container")})).finally((function(){t.container.edit=!1}))},t.containerLeaveNetwork=function(e,a){t.state.leaveNetworkInProgress=!0,g.disconnectContainer(a,e.Id,!1).then((function(){f.success("Container left network",e.Id),n.reload()})).catch((function(e){f.error("Failure",e,"Unable to disconnect container from network")})).finally((function(){t.state.leaveNetworkInProgress=!1}))},t.containerJoinNetwork=function(e,a){t.state.joinNetworkInProgress=!0,g.connectContainer(a,e.Id).then((function(){f.success("Container joined network",e.Id),n.reload()})).catch((function(e){f.error("Failure",e,"Unable to connect container to network")})).finally((function(){t.state.joinNetworkInProgress=!1}))},t.commit=function(){return l($)},t.confirmRemove=function(){var e="You are about to remove a container.";t.container.State.Running&&(e="You are about to remove a running container."),v.confirmContainerDeletion(e,(function(e){if(e){var a=!1;e[0]&&(a=!0),function(e){p.remove(t.container,e).then((function(){f.success("Container successfully removed"),n.go("docker.containers",{},{reload:!0})})).catch((function(e){f.error("Failure",e,"Unable to remove container")}))}(a)}}))},t.recreate=function(){v.confirmContainerRecreation((function(a){if(a){var r=!1;a[0]&&(r=!0),function(a){var r=t.container,i=u.configFromContainer(r.Model);t.state.recreateContainerInProgress=!0;var o=r.State.Running;(function(){if(!a)return e.when();return b.retrievePorRegistryModelFromRepository(r.Config.Image).then((function(e){return y.pullImage(e,!0)}))})().then((function(){if(!o)return e.when();return p.stopContainer(r.Id)})).then((function(){return p.renameContainer(r.Id,r.Name+"-old")})).then((function(){var t=i.NetworkingConfig.EndpointsConfig,n=Object.keys(t);n.length>1&&(i.NetworkingConfig.EndpointsConfig={},i.NetworkingConfig.EndpointsConfig[n[0]]=t[0]);return e.all([p.createContainer(i),t])})).then((function(t){var n=t[0],a=t[1],r=Object.keys(a).map((function(e){g.connectContainer(e,n.Id)}));return e.all(r).then((function(){return n}))})).then((function(t){if(!o)return e.when(t);return p.startContainer(t.Id).then((function(){return t}))})).then((function(e){var t=w.getUserDetails().ID,n=r.ResourceControl,a=e.Portainer.ResourceControl;return h.duplicateResourceControl(t,n,a)})).then((function(e){return p.remove(r,!0).then((function(){return e}))})).then((function(){f.success("Container successfully re-created"),n.go("docker.containers",{},{reload:!0})})).catch((function(e){f.error("Failure",e,"Unable to re-create container"),t.state.recreateContainerInProgress=!1}))}(r)}}))};var P=t.applicationState.endpoint.mode.provider,T=t.applicationState.endpoint.apiVersion;g.networks("DOCKER_STANDALONE"===P||"DOCKER_SWARM_MODE"===P,!1,"DOCKER_SWARM_MODE"===P&&T>=1.25).then((function(e){var n=e;t.availableNetworks=n})).catch((function(e){f.error("Failure",e,"Unable to retrieve networks")})),S()}])},function(e,t){angular.module("portainer.docker").controller("ContainerInspectController",["$scope","$transition$","Notifications","ContainerService","HttpRequestHelper",function(e,t,n,a,r){e.state={DisplayTextView:!1},e.containerInfo={},r.setPortainerAgentTargetHeader(t.params().nodeName),a.inspect(t.params().id).then((function(t){e.containerInfo=t})).catch((function(e){n.error("Failure",e,"Unable to inspect container")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(3),r=n.n(a);angular.module("portainer.docker").controller("ContainerLogsController",["$scope","$transition$","$interval","ContainerService","Notifications","HttpRequestHelper",function(e,t,n,a,i,o){function s(){var t=e.repeater;angular.isDefined(t)&&(n.cancel(t),t=null)}function l(o){var l=e.state.refreshRate;e.repeater=n((function(){a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount,o).then((function(t){e.logs=t})).catch((function(e){s(),i.error("Failure",e,"Unable to retrieve container logs")}))}),1e3*l)}e.state={refreshRate:3,lineCount:100,sinceTimestamp:"",displayTimestamps:!1},e.changeLogCollection=function(t){t?l(!e.container.Config.Tty):s()},e.$on("$destroy",(function(){s()})),o.setPortainerAgentTargetHeader(t.params().nodeName),a.container(t.params().id).then((function(n){var o,c=n;e.container=c,o=!c.Config.Tty,a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount,o).then((function(t){e.logs=t,l(o)})).catch((function(e){s(),i.error("Failure",e,"Unable to retrieve container logs")}))})).catch((function(e){i.error("Failure",e,"Unable to retrieve container information")}))}])},function(e,t,n){"use strict";n.r(t),function(e){var t=n(3),a=n.n(t);angular.module("portainer.docker").controller("ContainerStatsController",["$q","$scope","$transition$","$document","$interval","ContainerService","ChartService","Notifications","HttpRequestHelper",function(t,n,r,i,o,s,l,c,d){function u(){var e=n.repeater;angular.isDefined(e)&&(o.cancel(e),e=null)}function p(e,t){if(e.Networks.length>0){var n=e.Networks[0].rx_bytes,r=e.Networks[0].tx_bytes,i=a()(e.read).format("HH:mm:ss");l.UpdateNetworkChart(i,n,r,t)}}function m(e,t){var n=a()(e.read).format("HH:mm:ss");l.UpdateMemoryChart(n,e.MemoryUsage,e.MemoryCache,t)}function g(e,t){var n=a()(e.read).format("HH:mm:ss"),r=e.isWindows?function(e){var t=e.NumProcs*parseFloat(a()(e.read,"YYYY-MM-DDTHH:mm:ss.SSSSSSSSSZ").valueOf()-a()(e.preread,"YYYY-MM-DDTHH:mm:ss.SSSSSSSSSZ").valueOf()),n=0;t>0&&(n=parseFloat(e.CurrentCPUTotalUsage-e.PreviousCPUTotalUsage)/parseFloat(100*t));return n}(e):function(e){var t=0,n=e.CurrentCPUTotalUsage-e.PreviousCPUTotalUsage,a=e.CurrentCPUSystemUsage-e.PreviousCPUSystemUsage;a>0&&n>0&&(t=n/a*e.CPUCores*100);return t}(e);l.UpdateCPUChart(n,r,t)}function f(e,a,i){var l=n.state.refreshRate;n.repeater=o((function(){t.all({stats:s.containerStats(r.params().id),top:s.containerTop(r.params().id)}).then((function(t){var r=t.stats;n.processInfo=t.top,p(r,e),m(r,i),g(r,a)})).catch((function(e){u(),c.error("Failure",e,"Unable to retrieve container statistics")}))}),1e3*l)}function v(){var a=e("#networkChart"),i=l.CreateNetworkChart(a);n.networkChart=i;var o=e("#cpuChart"),d=l.CreateCPUChart(o);n.cpuChart=d;var v=e("#memoryChart"),h=l.CreateMemoryChart(v);n.memoryChart=h,function(e,a,i){t.all({stats:s.containerStats(r.params().id),top:s.containerTop(r.params().id)}).then((function(t){var r=t.stats;n.processInfo=t.top,0===r.Networks.length&&(n.state.networkStatsUnavailable=!0),p(r,e),m(r,i),g(r,a),f(e,a,i)})).catch((function(e){u(),c.error("Failure",e,"Unable to retrieve container statistics")}))}(i,d,h)}n.state={refreshRate:"5",networkStatsUnavailable:!1},n.$on("$destroy",(function(){u()})),n.changeUpdateRepeater=function(){var t=n.networkChart,a=n.cpuChart,r=n.memoryChart;u(),f(t,a,r),e("#refreshRateChange").show(),e("#refreshRateChange").fadeOut(1500)},d.setPortainerAgentTargetHeader(r.params().nodeName),s.container(r.params().id).then((function(e){n.container=e})).catch((function(e){c.error("Failure",e,"Unable to retrieve container information")})),i.ready((function(){v()}))}])}.call(this,n(19))},function(e,t){function n(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function a(e){return function(){var t=this,a=arguments;return new Promise((function(r,i){var o=e.apply(t,a);function s(e){n(o,r,i,s,l,"next",e)}function l(e){n(o,r,i,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.docker").controller("DashboardController",["$scope","$q","Authentication","ContainerService","ImageService","NetworkService","VolumeService","SystemService","ServiceService","StackService","EndpointService","Notifications","EndpointProvider","ExtensionService","StateManager",function(e,t,n,r,i,o,s,l,c,d,u,p,m,g,f){function v(){return(v=a(regeneratorRuntime.mark((function n(){var a,g;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return a=e.applicationState.endpoint.mode,g=m.endpointID(),n.next=4,h();case 4:e.showStacks=n.sent,t.all({containers:r.containers(1),images:i.images(!1),volumes:s.volumes(),networks:o.networks(!0,!0,!0),services:"DOCKER_SWARM_MODE"===a.provider&&"MANAGER"===a.role?c.services():[],stacks:d.stacks(!0,"DOCKER_SWARM_MODE"===a.provider&&"MANAGER"===a.role,g),info:l.info(),endpoint:u.endpoint(g)}).then((function(t){e.containers=t.containers,e.images=t.images,e.volumeCount=t.volumes.length,e.networkCount=t.networks.length,e.serviceCount=t.services.length,e.stackCount=t.stacks.length,e.info=t.info,e.endpoint=t.endpoint,e.offlineMode=m.offlineMode()})).catch((function(e){p.error("Failure",e,"Unable to load dashboard data")}));case 6:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function h(){return b.apply(this,arguments)}function b(){return(b=a(regeneratorRuntime.mark((function t(){var a,r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(a=!e.applicationState.application.authentication||n.isAdmin(),r=e.applicationState.application.allowStackManagementForRegularUsers,!a&&!r){t.next=4;break}return t.abrupt("return",!0);case 4:return t.next=6,g.extensionEnabled(g.EXTENSIONS.RBAC);case 6:if(!t.sent){t.next=9;break}return t.abrupt("return",n.hasAuthorizations(["EndpointResourcesAccess"]));case 9:case"end":return t.stop()}}),t)})))).apply(this,arguments)}e.dismissInformationPanel=function(e){f.dismissInformationPanel(e)},e.offlineMode=!1,e.showStacks=!1,function(){v.apply(this,arguments)}()}])},function(e,t,n){"use strict";n.r(t);var a=n(3),r=n.n(a);angular.module("portainer.docker").controller("EventsController",["$scope","Notifications","SystemService",function(e,t,n){var a,i;a=r()().subtract(24,"hour").unix(),i=r()().unix(),n.events(a,i).then((function(t){e.events=t})).catch((function(e){t.error("Failure",e,"Unable to load events")}))}])},function(e,t){angular.module("portainer.docker").controller("HostBrowserViewController",["SystemService","Notifications",function(e,t){var n=this;n.$onInit=function(){e.info().then((function(e){n.host=e})).catch((function(e){t.error("Unable to retrieve host information",e)}))}}])},function(e,t,n){var a=n(910);angular.module("portainer.docker").component("hostBrowserView",{templateUrl:a,controller:"HostBrowserViewController"})},function(e,t){var n="app/docker/views/host/host-browser-view/host-browser-view.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Host Browser"></rd-header-title>\n  <rd-header-content>\n    Host &gt; <a ui-sref="docker.host">{{ $ctrl.host.Name }}</a> &gt; browse\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <host-browser ng-if="$ctrl.host"></host-browser>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("HostJobController",["SystemService","Notifications",function(e,t){var n=this;n.$onInit=function(){e.info().then((function(e){n.host=e})).catch((function(e){t.error("Unable to retrieve host information",e)}))}}])},function(e,t,n){var a=n(913);angular.module("portainer.docker").component("hostJobView",{templateUrl:a,controller:"HostJobController"})},function(e,t){var n="app/docker/views/host/host-job/host-job.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Host job execution"></rd-header-title>\n  <rd-header-content>\n    Host &gt; <a ui-sref="docker.host">{{ $ctrl.host.Name }}</a> &gt; execute job\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <execute-job-form></execute-job-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("HostViewController",["$q","SystemService","Notifications","StateManager","AgentService","ContainerService","Authentication","EndpointProvider",function(e,t,n,a,r,i,o,s){var l=this;this.$onInit=function(){var c=a.getState();l.state.isAgent=c.endpoint.mode.agentProxy,l.state.isAdmin=o.isAdmin();var d=c.endpoint.agentApiVersion;l.state.agentApiVersion=d,l.state.enableHostManagementFeatures=c.application.enableHostManagementFeatures,e.all({version:t.version(),info:t.info(),jobs:l.state.isAdmin?i.containers(!0,{label:["io.portainer.job.endpoint"]}):[]}).then((function(e){var t;if(l.engineDetails=function(e){var t=e.version,n=e.info;return{releaseVersion:t.Version,apiVersion:t.ApiVersion,rootDirectory:n.DockerRootDir,storageDriver:n.Driver,loggingDriver:n.LoggingDriver,volumePlugins:n.Plugins.Volume,networkPlugins:n.Plugins.Network}}(e),l.hostDetails={os:{arch:(t=e.info).Architecture,type:t.OSType,name:t.OperatingSystem},name:t.Name,kernelVersion:t.KernelVersion,totalCPU:t.NCPU,totalMemory:t.MemTotal},l.state.offlineMode=s.offlineMode(),l.jobs=e.jobs,l.state.isAgent&&d>1)return r.hostInfo(e.info.Hostname).then((function(e){l.devices=e.PCIDevices,l.disks=e.PhysicalDisks}))})).catch((function(e){n.error("Failure",e,"Unable to retrieve engine details")}))},l.state={isAgent:!1,isAdmin:!1,offlineMode:!1},this.engineDetails={},this.hostDetails={},this.devices=null,this.disks=null}])},function(e,t,n){var a=n(916);angular.module("portainer.docker").component("hostView",{templateUrl:a,controller:"HostViewController"})},function(e,t){var n="app/docker/views/host/host-view.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<host-overview\n  engine-details="$ctrl.engineDetails"\n  host-details="$ctrl.hostDetails"\n  is-agent="$ctrl.state.isAgent"\n  agent-api-version="$ctrl.state.agentApiVersion"\n  disks="$ctrl.disks"\n  devices="$ctrl.devices"\n  refresh-url="docker.host"\n  browse-url="docker.host.browser"\n  offline-mode="$ctrl.state.offlineMode"\n  is-job-enabled="$ctrl.state.isAdmin && !$ctrl.state.offlineMode"\n  host-features-enabled="$ctrl.state.enableHostManagementFeatures"\n  job-url="docker.host.job"\n  jobs="$ctrl.jobs"\n></host-overview>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("BuildImageController",["$scope","$state","BuildService","Notifications","HttpRequestHelper",function(e,t,n,a,r){e.state={BuildType:"editor",actionInProgress:!1,activeTab:0},e.formValues={ImageNames:[{Name:""}],UploadFile:null,DockerFileContent:"",URL:"",Path:"Dockerfile",NodeName:null},e.addImageName=function(){e.formValues.ImageNames.push({Name:""})},e.removeImageName=function(t){e.formValues.ImageNames.splice(t,1)},e.buildImage=function(){var t=e.state.BuildType;if("editor"!==t||""!==e.formValues.DockerFileContent){e.state.actionInProgress=!0;var i=e.formValues.ImageNames.filter((function(e){return e.Name})).map((function(e){return e.Name})),o=e.formValues.NodeName;r.setPortainerAgentTargetHeader(o),function(t,a){var r=e.state.BuildType,i=e.formValues.Path;if("upload"===r){var o=e.formValues.UploadFile;return n.buildImageFromUpload(a,o,i)}if("url"===r){var s=e.formValues.URL;return n.buildImageFromURL(a,s,i)}var l=e.formValues.DockerFileContent;return n.buildImageFromDockerfileContent(a,l)}(0,i).then((function(t){e.buildLogs=t.buildLogs,e.state.activeTab=1,t.hasError?a.error("An error occured during build",{msg:"Please check build logs output"}):a.success("Image successfully built")})).catch((function(e){a.error("Failure",e,"Unable to build image")})).finally((function(){e.state.actionInProgress=!1}))}else e.state.formValidationError="Dockerfile content must not be empty"},e.validImageNames=function(){for(var t=0;t<e.formValues.ImageNames.length;t++){if(""!==e.formValues.ImageNames[t].Name)return!0}return!1},e.editorUpdate=function(t){e.formValues.DockerFileContent=t.getValue()}}])},function(e,t,n){"use strict";n.r(t),function(e){var t=n(6),a=n(30);angular.module("portainer.docker").controller("ImageController",["$q","$scope","$transition$","$state","$timeout","ImageService","ImageHelper","RegistryService","Notifications","HttpRequestHelper","ModalService","FileSaver","Blob",function(n,r,i,o,s,l,c,d,u,p,m,g,f){r.formValues={RegistryModel:new a.PorImageRegistryModel},r.state={exportInProgress:!1},r.sortType="Order",r.sortReverse=!1,r.order=function(e){r.sortReverse=r.sortType===e&&!r.sortReverse,r.sortType=e},r.toggleLayerCommand=function(t){e("#layer-command-expander"+t+" span").toggleClass("glyphicon-plus-sign glyphicon-minus-sign"),e("#layer-command-"+t+"-short").toggle(),e("#layer-command-"+t+"-full").toggle()},r.tagImage=function(){var e=r.formValues.RegistryModel,t=c.createImageConfigForContainer(e);l.tagImage(i.params().id,t.fromImage).then((function(){u.success("Image successfully tagged"),o.go("docker.images.image",{id:i.params().id},{reload:!0})})).catch((function(e){u.error("Failure",e,"Unable to tag image")}))},r.pushTag=function(t){e("#uploadResourceHint").show(),d.retrievePorRegistryModelFromRepository(t).then((function(e){return l.pushImage(e)})).then((function(){u.success("Image successfully pushed",t)})).catch((function(e){u.error("Failure",e,"Unable to push image to repository")})).finally((function(){e("#uploadResourceHint").hide()}))},r.pullTag=function(t){e("#downloadResourceHint").show(),d.retrievePorRegistryModelFromRepository(t).then((function(e){return l.pullImage(e,!1)})).then((function(){u.success("Image successfully pulled",t)})).catch((function(e){u.error("Failure",e,"Unable to pull image")})).finally((function(){e("#downloadResourceHint").hide()}))},r.removeTag=function(e){l.deleteImage(e,!1).then((function(){1===r.image.RepoTags.length?(u.success("Image successfully deleted",e),o.go("docker.images",{},{reload:!0})):(u.success("Tag successfully deleted",e),o.go("docker.images.image",{id:i.params().id},{reload:!0}))})).catch((function(e){u.error("Failure",e,"Unable to remove image")}))},r.removeImage=function(e){l.deleteImage(e,!1).then((function(){u.success("Image successfully deleted",e),o.go("docker.images",{},{reload:!0})})).catch((function(e){u.error("Failure",e,"Unable to remove image")}))},r.exportImage=function(e){0===e.RepoTags.length||Object(t.a)(e.RepoTags,"<none>")?u.warning("","Cannot download a untagged image"):m.confirmImageExport((function(t){t&&function(e){p.setPortainerAgentTargetHeader(e.NodeName),r.state.exportInProgress=!0,l.downloadImages([e]).then((function(e){var t=new f([e.file],{type:"application/x-tar"});g.saveAs(t,"images.tar"),u.success("Image successfully downloaded")})).catch((function(e){u.error("Failure",e,"Unable to download image")})).finally((function(){r.state.exportInProgress=!1}))}(e)}))},function(){p.setPortainerAgentTargetHeader(i.params().nodeName);var e=r.applicationState.endpoint.mode.provider;n.all({image:l.image(i.params().id),history:"VMWARE_VIC"!==e?l.history(i.params().id):[]}).then((function(e){r.image=e.image,r.history=e.history})).catch((function(e){u.error("Failure",e,"Unable to retrieve image details"),o.go("docker.images")}))}()}])}.call(this,n(19))},function(e,t,n){"use strict";n.r(t);var a=n(57),r=n(2),i=n(30);angular.module("portainer.docker").controller("ImagesController",["$scope","$state","ImageService","Notifications","ModalService","HttpRequestHelper","FileSaver","Blob","EndpointProvider",function(e,t,n,o,s,l,c,d,u){function p(){n.images(!0).then((function(t){e.images=t,e.offlineMode=u.offlineMode()})).catch((function(t){o.error("Failure",t,"Unable to retrieve images"),e.images=[]}))}e.state={actionInProgress:!1,exportInProgress:!1},e.formValues={RegistryModel:new i.PorImageRegistryModel,NodeName:null},e.pullImage=function(){var a=e.formValues.RegistryModel,r=e.formValues.NodeName;l.setPortainerAgentTargetHeader(r),e.state.actionInProgress=!0,n.pullImage(a,!1).then((function(){o.success("Image successfully pulled",a.Image),t.reload()})).catch((function(e){o.error("Failure",e,"Unable to pull image")})).finally((function(){e.state.actionInProgress=!1}))},e.confirmRemovalAction=function(t,n){s.confirmImageForceRemoval((function(a){a&&e.removeAction(t,n)}))},e.downloadAction=function(t){(function(e){for(var t=0;t<e.length;t++){var n=e[t];if(Object(r.a)(n.RepoTags,(function(e){return e.indexOf("<none>")>-1})))return o.warning("","Cannot download a untagged image"),!1}return!(Object(a.a)(e,"NodeName").length>1)||(o.warning("","Cannot download images from different nodes at the same time"),!1)})(t)&&s.confirmImageExport((function(a){var r;a&&(r=t,l.setPortainerAgentTargetHeader(r[0].NodeName),e.state.exportInProgress=!0,n.downloadImages(r).then((function(e){var t=new d([e.file],{type:"application/x-tar"});c.saveAs(t,"images.tar"),o.success("Image(s) successfully downloaded")})).catch((function(e){o.error("Failure",e,"Unable to download image(s)")})).finally((function(){e.state.exportInProgress=!1})))}))},e.removeAction=function(a,r){var i=a.length;angular.forEach(a,(function(a){l.setPortainerAgentTargetHeader(a.NodeName),n.deleteImage(a.Id,r).then((function(){o.success("Image successfully removed",a.Id);var t=e.images.indexOf(a);e.images.splice(t,1)})).catch((function(e){o.error("Failure",e,"Unable to remove image")})).finally((function(){0===--i&&t.reload()}))}))},e.offlineMode=!1,e.getImages=p,p()}])},function(e,t){angular.module("portainer.docker").controller("ImportImageController",["$scope","$state","ImageService","Notifications","HttpRequestHelper",function(e,t,n,a,r){e.state={actionInProgress:!1},e.formValues={UploadFile:null,NodeName:null},e.uploadImage=function(){e.state.actionInProgress=!0;var t=e.formValues.NodeName;r.setPortainerAgentTargetHeader(t);var i=e.formValues.UploadFile;n.uploadImage(i).then((function(){a.success("Images successfully uploaded")})).catch((function(e){a.error("Failure",e.message,"Unable to upload image")})).finally((function(){e.state.actionInProgress=!1}))}}])},function(e,t,n){"use strict";n.r(t);var a=n(5),r=n(32),i=n(294);angular.module("portainer.docker").controller("CreateNetworkController",["$q","$scope","$state","PluginService","Notifications","NetworkService","LabelHelper","Authentication","ResourceControlService","FormValidator","HttpRequestHelper",function(e,t,n,o,s,l,c,d,u,p,m){function g(){var e=angular.copy(t.config);return function(e){if(t.formValues.IPV4.Subnet){var n={};n.Subnet=t.formValues.IPV4.Subnet,t.formValues.IPV4.Gateway&&(n.Gateway=t.formValues.IPV4.Gateway),t.formValues.IPV4.IPRange&&(n.IPRange=t.formValues.IPV4.IPRange),t.formValues.IPV4.AuxAddress&&(n.AuxAddress=t.formValues.IPV4.AuxAddress),e.IPAM.Config.push(n)}if(t.formValues.IPV6.Subnet){var a={};a.Subnet=t.formValues.IPV6.Subnet,t.formValues.IPV6.Gateway&&(a.Gateway=t.formValues.IPV6.Gateway),t.formValues.IPV6.IPRange&&(a.IPRange=t.formValues.IPV6.IPRange),t.formValues.IPV6.AuxAddress&&(a.AuxAddress=t.formValues.IPV6.AuxAddress),e.EnableIPv6=!0,e.IPAM.Config.push(a)}}(e),function(e){var n={};t.formValues.DriverOptions.forEach((function(e){n[e.name]=e.value})),e.Options=n}(e),function(e){e.Labels=c.fromKeyValueToLabelHash(t.formValues.Labels)}(e),e}function f(e){m.setPortainerAgentTargetHeader(e.nodeName),m.setPortainerAgentManagerOperation(e.managerOperation),t.state.actionInProgress=!0,l.create(e.networkConfiguration).then((function(t){var n=e.userDetails.ID,a=e.accessControlData,r=t.Portainer.ResourceControl;return u.applyResourceControl(n,a,r)})).then((function(){s.success("Network successfully created"),e.reload&&n.go("docker.networks",{},{reload:!0})})).catch((function(e){s.error("Failure",e,"An error occured during network creation")})).finally((function(){t.state.actionInProgress=!1}))}var v;t.formValues={DriverOptions:[],IPV4:{Subnet:"",Gateway:"",IPRange:"",AuxAddress:""},IPV6:{Subnet:"",Gateway:"",IPRange:"",AuxAddress:""},Labels:[],AccessControlData:new r.AccessControlFormData,NodeName:null,Macvlan:new i.MacvlanFormData},t.state={formValidationError:"",actionInProgress:!1},t.availableNetworkDrivers=[],t.config={Driver:"bridge",CheckDuplicate:!0,Internal:!1,Attachable:!1,EnableIPv6:!1,IPAM:{Driver:"default",Config:[]},Labels:{}},t.addDriverOption=function(){t.formValues.DriverOptions.push({name:"",value:""})},t.removeDriverOption=function(e){t.formValues.DriverOptions.splice(e,1)},t.addLabel=function(){t.formValues.Labels.push({key:"",value:""})},t.removeLabel=function(e){t.formValues.Labels.splice(e,1)},t.create=function(){var e=g(),n=t.formValues.AccessControlData,a=d.getUserDetails();if(function(e,n){var a;return t.state.formValidationError="",!(a=p.validateAccessControl(e,n))||(t.state.formValidationError=a,!1)}(n,d.isAdmin())){var r,i={nodeName:t.formValues.NodeName,managerOperation:!1,networkConfiguration:e,userDetails:a,accessControlData:n,reload:!0};if(t.applicationState.endpoint.mode.agentProxy&&"DOCKER_SWARM_MODE"===t.applicationState.endpoint.mode.provider&&"overlay"===t.config.Driver&&(i.managerOperation=!0),"macvlan"===t.config.Driver)if("local"===t.formValues.Macvlan.Scope)(r=e).Internal=null,r.Attachable=null,r.ConfigOnly=!0,r.Options.parent=t.formValues.Macvlan.ParentNetworkCard;else if("swarm"===t.formValues.Macvlan.Scope){var o=t.formValues.Macvlan.SelectedNetworkConfig;!function(e,n){e.ConfigFrom={Network:n.Name},"DOCKER_SWARM_MODE"===t.applicationState.endpoint.mode.provider?e.Scope="swarm":e.Scope="local"}(e,o),i.nodeName=o.NodeName}if("macvlan"===t.config.Driver&&"local"===t.formValues.Macvlan.Scope&&t.applicationState.endpoint.mode.agentProxy&&"DOCKER_SWARM_MODE"===t.applicationState.endpoint.mode.provider){var s=t.formValues.Macvlan.DatatableState.selectedItems;s.forEach((function(e,t){i.nodeName=e.Hostname,i.reload=t===s.length-1,f(i)}))}else f(i)}},v=t.applicationState.endpoint.apiVersion,o.networkPlugins(v<1.25).then((function(e){t.availableNetworkDrivers=e,t.availableNetworkDrivers=Object(a.a)(t.availableNetworkDrivers,(function(e){return"host"!==e&&"null"!==e}))})).catch((function(e){s.error("Failure",e,"Unable to retrieve network drivers")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(114);angular.module("portainer.docker").controller("NetworkController",["$scope","$state","$transition$","$filter","NetworkService","Container","Notifications","HttpRequestHelper","NetworkHelper",function(e,t,n,r,i,o,s,l,c){function d(t,n){var a=[];n.forEach((function(e){var n=t.Containers[e.Id];n&&(n.Id=e.Id,n.Name||(n.Name=r("trimcontainername")(e.Names[0])),a.push(n))})),e.containersInNetwork=a}var u;e.removeNetwork=function(){i.remove(n.params().id,n.params().id).then((function(){s.success("Network removed",n.params().id),t.go("docker.networks",{})})).catch((function(e){s.error("Failure",e,"Unable to remove network")}))},e.containerLeaveNetwork=function(e,a){l.setPortainerAgentTargetHeader(a.NodeName),i.disconnectContainer(n.params().id,a.Id,!1).then((function(){s.success("Container left network",n.params().id),t.go("docker.networks.network",{id:e.Id},{reload:!0})})).catch((function(e){s.error("Failure",e,"Unable to disconnect container from network")}))},e.isSystemNetwork=function(){return e.network&&c.isSystemNetwork(e.network)},e.allowRemove=function(){return!e.isSystemNetwork()},u=n.params().nodeName,l.setPortainerAgentTargetHeader(u),e.nodeName=u,i.network(n.params().id).then((function(t){var r,i;e.network=t,"VMWARE_VIC"!==e.applicationState.endpoint.mode.provider&&(r=t,i=e.applicationState.endpoint.apiVersion,r.Containers&&(i<1.24?o.query({},(function(e){var t=e.filter((function(e){if(e.HostConfig.NetworkMode===r.Name)return e}));d(r,t)}),(function(e){s.error("Failure",e,"Unable to retrieve containers in network")})):o.query({filters:{network:[n.params().id]}},(function(e){d(r,e)}),(function(e){s.error("Failure",e,"Unable to retrieve containers in network")})))),e.network.IPAM.IPV4Configs=a.default.getIPV4Configs(e.network.IPAM.Config),e.network.IPAM.IPV6Configs=a.default.getIPV6Configs(e.network.IPAM.Config)})).catch((function(e){s.error("Failure",e,"Unable to retrieve network info")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(9),r=n(38),i=n(39),o=n(4),s=n(172),l=n(422),c=n(25),d=n(2),u=n(114);function p(e){return function(e){if(Array.isArray(e))return m(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return m(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return m(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function m(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}angular.module("portainer.docker").controller("NetworksController",["$q","$scope","$state","NetworkService","Notifications","HttpRequestHelper","EndpointProvider","AgentService",function(e,t,n,m,g,f,v,h){function b(e,t){var n=Object(c.a)(e,(function(e){return"swarm"!==e.Scope})),a=Object(l.a)(Object(s.a)(e,(function(e){return e.Id}))),u=Object(o.a)(a,(function(e){return Object(i.a)(e,(function(e){return function(e){return Object(d.a)(t,(function(t){return t.NodeName===e.NodeName})).NodeRole}(e)}))})),m=Object(o.a)(u,(function(e){for(var t=e[0],n=1;n<e.length;n++)t.Subs.push(e[n]);return t}));return r.a.apply(void 0,[m].concat(p(n)))}function y(){var n={networks:m.networks(!0,!0,!0)};t.applicationState.endpoint.mode.agentProxy&&"DOCKER_SWARM_MODE"===t.applicationState.endpoint.mode.provider&&(n.agents=h.agents()),e.all(n).then((function(e){t.offlineMode=v.offlineMode();var n=Object(a.a)(e.networks,(function(e){return e.Subs=[]}));t.applicationState.endpoint.mode.agentProxy&&"DOCKER_SWARM_MODE"===t.applicationState.endpoint.mode.provider?t.networks=b(e.networks,e.agents):t.networks=n,Object(a.a)(t.networks,(function(e){e.IPAM.IPV4Configs=u.default.getIPV4Configs(e.IPAM.Config),e.IPAM.IPV6Configs=u.default.getIPV6Configs(e.IPAM.Config)}))})).catch((function(e){t.networks=[],g.error("Failure",e,"Unable to retrieve networks")}))}t.removeAction=function(e){var a=e.length;angular.forEach(e,(function(e){f.setPortainerAgentTargetHeader(e.NodeName),m.remove(e.Id).then((function(){g.success("Network successfully removed",e.Name);var n=t.networks.indexOf(e);t.networks.splice(n,1)})).catch((function(e){g.error("Failure",e,"Unable to remove network")})).finally((function(){0===--a&&n.reload()}))}))},t.offlineMode=!1,t.getNetworks=y,y()}])},function(e,t){angular.module("portainer.docker").controller("NodeBrowserController",["$stateParams","NodeService","HttpRequestHelper","Notifications",function(e,t,n,a){var r=this;r.$onInit=function(){r.nodeId=e.id,t.node(r.nodeId).then((function(e){n.setPortainerAgentTargetHeader(e.Hostname),r.node=e})).catch((function(e){a.error("Unable to retrieve host information",e)}))}}])},function(e,t,n){var a=n(926);angular.module("portainer.docker").component("nodeBrowserView",{templateUrl:a,controller:"NodeBrowserController"})},function(e,t){var n="app/docker/views/nodes/node-browser/node-browser.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Node Browser"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.swarm">Swarm</a> &gt; <a ui-sref="docker.nodes.node({ id: $ctrl.nodeId })">{{ $ctrl.node.Hostname }}</a> &gt; browse\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <host-browser ng-if="$ctrl.node"></host-browser>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("NodeDetailsViewController",["$q","$stateParams","NodeService","StateManager","AgentService","ContainerService","Authentication",function(e,t,n,a,r,i,o){var s=this;function l(e,t){return e.filter((function(e){return e.Type===t})).map((function(e){return e.Name}))}s.$onInit=function(){var c=a.getState();s.state.isAgent=c.endpoint.mode.agentProxy,s.state.isAdmin=o.isAdmin(),s.state.enableHostManagementFeatures=c.application.enableHostManagementFeatures;var d=s.state.isAdmin&&s.state.isAgent,u=t.id;e.all({node:n.node(u),jobs:d?i.containers(!0,{label:["io.portainer.job.endpoint"]}):[]}).then((function(e){var t=e.node;if(s.originalNode=t,s.hostDetails=function(e){return{os:{arch:e.PlatformArchitecture,type:e.PlatformOS},name:e.Hostname,totalCPU:e.CPUs/1e9,totalMemory:e.Memory}}(t),s.engineDetails=function(e){return{releaseVersion:e.EngineVersion,volumePlugins:l(e.Plugins,"Volume"),networkPlugins:l(e.Plugins,"Network"),engineLabels:e.EngineLabels}}(t),s.nodeDetails=function(e){return{name:e.Name,role:e.Role,managerAddress:e.ManagerAddr,availability:e.Availability,status:e.Status,nodeLabels:e.Labels}}(t),s.jobs=e.jobs,s.state.isAgent){var n=c.endpoint.agentApiVersion;if(s.state.agentApiVersion=n,n<2)return;r.hostInfo(t.Hostname).then((function(e){s.devices=e.PCIDevices,s.disks=e.PhysicalDisks}))}}))},s.state={isAgent:!1,isAdmin:!1}}])},function(e,t,n){var a=n(929);angular.module("portainer.docker").component("nodeDetailsView",{templateUrl:a,controller:"NodeDetailsViewController"})},function(e,t){var n="app/docker/views/nodes/node-details/node-details-view.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<host-overview\n  agent-api-version="$ctrl.state.agentApiVersion"\n  is-agent="$ctrl.state.isAgent"\n  host-details="$ctrl.hostDetails"\n  engine-details="$ctrl.engineDetails"\n  disks="$ctrl.disks"\n  devices="$ctrl.devices"\n  refresh-url="docker.nodes.node"\n  browse-url="docker.nodes.node.browse"\n  is-job-enabled="$ctrl.state.isAdmin && $ctrl.state.isAgent"\n  host-features-enabled="$ctrl.state.enableHostManagementFeatures"\n  job-url="docker.nodes.node.job"\n  jobs="$ctrl.jobs"\n>\n  <swarm-node-details-panel details="$ctrl.nodeDetails" original-node="$ctrl.originalNode"></swarm-node-details-panel>\n</host-overview>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("NodeJobController",["$stateParams","NodeService","HttpRequestHelper","Notifications",function(e,t,n,a){var r=this;r.$onInit=function(){r.nodeId=e.id,t.node(r.nodeId).then((function(e){n.setPortainerAgentTargetHeader(e.Hostname),r.node=e})).catch((function(e){a.error("Unable to retrieve host information",e)}))}}])},function(e,t,n){var a=n(932);angular.module("portainer.docker").component("nodeJobView",{templateUrl:a,controller:"NodeJobController"})},function(e,t){var n="app/docker/views/nodes/node-job/node-job.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Host job execution"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.swarm">Swarm</a> &gt; <a ui-sref="docker.nodes.node({ id: $ctrl.nodeId })">{{ $ctrl.node.Hostname }}</a> &gt; execute job\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <execute-job-form node-name="$ctrl.node.Hostname"></execute-job-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(32);angular.module("portainer.docker").controller("CreateSecretController",["$scope","$state","Notifications","SecretService","LabelHelper","Authentication","ResourceControlService","FormValidator",function(e,t,n,r,i,o,s,l){function c(){var t={};return t.Name=e.formValues.Name,function(t){e.formValues.encodeSecret?t.Data=btoa(unescape(encodeURIComponent(e.formValues.Data))):t.Data=e.formValues.Data}(t),function(t){t.Labels=i.fromKeyValueToLabelHash(e.formValues.Labels)}(t),t}e.formValues={Name:"",Data:"",Labels:[],encodeSecret:!0,AccessControlData:new a.AccessControlFormData},e.state={formValidationError:"",actionInProgress:!1},e.addLabel=function(){e.formValues.Labels.push({key:"",value:""})},e.removeLabel=function(t){e.formValues.Labels.splice(t,1)},e.create=function(){var a=e.formValues.AccessControlData,i=o.getUserDetails(),d=o.isAdmin();if(function(t,n){var a;return e.state.formValidationError="",!(a=l.validateAccessControl(t,n))||(e.state.formValidationError=a,!1)}(a,d)){e.state.actionInProgress=!0;var u=c();r.create(u).then((function(e){var t=i.ID,n=e.Portainer.ResourceControl;return s.applyResourceControl(t,a,n)})).then((function(){n.success("Secret successfully created"),t.go("docker.secrets",{},{reload:!0})})).catch((function(e){n.error("Failure",e,"Unable to create secret")})).finally((function(){e.state.actionInProgress=!1}))}}}])},function(e,t){angular.module("portainer.docker").controller("SecretController",["$scope","$transition$","$state","SecretService","Notifications",function(e,t,n,a,r){e.removeSecret=function(e){a.remove(e).then((function(){r.success("Secret successfully removed"),n.go("docker.secrets",{})})).catch((function(e){r.error("Failure",e,"Unable to remove secret")}))},a.secret(t.params().id).then((function(t){e.secret=t})).catch((function(e){r.error("Failure",e,"Unable to retrieve secret details")}))}])},function(e,t){angular.module("portainer.docker").controller("SecretsController",["$scope","$state","SecretService","Notifications",function(e,t,n,a){function r(){n.secrets().then((function(t){e.secrets=t})).catch((function(t){e.secrets=[],a.error("Failure",t,"Unable to retrieve secrets")}))}e.removeAction=function(r){var i=r.length;angular.forEach(r,(function(r){n.remove(r.Id).then((function(){a.success("Secret successfully removed",r.Name);var t=e.secrets.indexOf(r);e.secrets.splice(t,1)})).catch((function(e){a.error("Failure",e,"Unable to remove secret")})).finally((function(){0===--i&&t.reload()}))}))},e.getSecrets=r,r()}])},function(e,t,n){"use strict";n.r(t);var a=n(233),r=n(232),i=n(30),o=n(32);function s(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function l(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){s(i,a,r,o,l,"next",e)}function l(e){s(i,a,r,o,l,"throw",e)}o(void 0)}))}}n(937),n(938),n(939),n(940),angular.module("portainer.docker").controller("CreateServiceController",["$q","$scope","$state","$timeout","Service","ServiceHelper","ConfigService","ConfigHelper","SecretHelper","SecretService","VolumeService","NetworkService","ImageHelper","LabelHelper","Authentication","ResourceControlService","Notifications","FormValidator","PluginService","RegistryService","HttpRequestHelper","NodeService","SettingsService","WebhookService","EndpointProvider","ExtensionService",function(e,t,n,s,c,d,u,p,m,g,f,v,h,b,y,x,w,k,S,C,$,I,P,T,A,D){function R(e){return[].concat.apply([],e.split("'").map((function(e,t){return t%2?e:e.split(" ")}))).filter(Boolean)}function E(){var e=t.formValues,n={Name:e.Name,TaskTemplate:{ContainerSpec:{Mounts:[]},Placement:{},Resources:{Limits:{},Reservations:{}}},Mode:{},EndpointSpec:{}};return function(e,t){"replicated"===t.Mode?e.Mode.Replicated={Replicas:t.Replicas}:e.Mode.Global={}}(n,e),function(e,t){var n=h.createImageConfigForContainer(t.RegistryModel);e.TaskTemplate.ContainerSpec.Image=n.fromImage}(n,e),function(e,t){var n=[];t.Ports.forEach((function(e){var t={Protocol:e.Protocol,PublishMode:e.PublishMode};e.TargetPort&&(t.TargetPort=+e.TargetPort,e.PublishedPort&&(t.PublishedPort=+e.PublishedPort),n.push(t))})),e.EndpointSpec.Ports=n}(n,e),function(e,t){t.EntryPoint&&(e.TaskTemplate.ContainerSpec.Command=R(t.EntryPoint)),t.Command&&(e.TaskTemplate.ContainerSpec.Args=R(t.Command)),t.User&&(e.TaskTemplate.ContainerSpec.User=t.User),t.WorkingDir&&(e.TaskTemplate.ContainerSpec.Dir=t.WorkingDir)}(n,e),function(e,t){var n=[];t.Env.forEach((function(e){e.name&&n.push(e.name+"="+e.value)})),e.TaskTemplate.ContainerSpec.Env=n}(n,e),function(e,t){e.Labels=b.fromKeyValueToLabelHash(t.Labels),e.TaskTemplate.ContainerSpec.Labels=b.fromKeyValueToLabelHash(t.ContainerLabels)}(n,e),function(e,t){t.Volumes.forEach((function(t){if(t.Source&&t.Target)if("volume"!==t.Type)e.TaskTemplate.ContainerSpec.Mounts.push(t);else{var n=function(e,t,n){return{Target:t,Source:e.Id,Type:"volume",ReadOnly:n,VolumeOptions:{Labels:e.Labels,DriverConfig:{Name:e.Driver,Options:e.Options}}}}(t.Source,t.Target,t.ReadOnly);e.TaskTemplate.ContainerSpec.Mounts.push(n)}}))}(n,e),function(e,t){var n=[];t.Network&&n.push({Target:t.Network}),t.ExtraNetworks.forEach((function(e){n.push({Target:e.Name})})),e.Networks=Object(r.a)(n,a.a)}(n,e),function(e,t){var n=[];t.HostsEntries&&(t.HostsEntries.forEach((function(e){if(e.value&&e.value.indexOf(":")&&2===e.value.split(":").length){var t=e.value.split(":");n.push(t[1]+" "+t[0])}})),n.length>0&&(e.TaskTemplate.ContainerSpec.Hosts=n))}(n,e),function(e,t){e.UpdateConfig={Parallelism:t.Parallelism||0,Delay:d.translateHumanDurationToNanos(t.UpdateDelay)||0,FailureAction:t.FailureAction,Order:t.UpdateOrder}}(n,e),function(e,t){if(t.Configs){var n=[];angular.forEach(t.Configs,(function(e){if(e.model){var t=p.configConfig(e.model);t.File.Name=e.FileName||t.File.Name,n.push(t)}})),e.TaskTemplate.ContainerSpec.Configs=n}}(n,e),function(e,t){if(t.Secrets){var n=[];angular.forEach(t.Secrets,(function(e){if(e.model){var t=m.secretConfig(e.model);t.File.Name=t.SecretName,e.overrideTarget&&e.target&&""!==e.target&&(t.File.Name=e.target),n.push(t)}})),e.TaskTemplate.ContainerSpec.Secrets=n}}(n,e),function(e,t){e.TaskTemplate.Placement.Constraints=d.translateKeyValueToPlacementConstraints(t.PlacementConstraints),e.TaskTemplate.Placement.Preferences=d.translateKeyValueToPlacementPreferences(t.PlacementPreferences)}(n,e),function(e,t){t.CpuLimit>0&&(e.TaskTemplate.Resources.Limits.NanoCPUs=1e9*t.CpuLimit),t.CpuReservation>0&&(e.TaskTemplate.Resources.Reservations.NanoCPUs=1e9*t.CpuReservation)}(n,e),function(e,t){var n=(Math.round(8*t.MemoryLimit)/8).toFixed(3);n*=1048576,"GB"===t.MemoryLimitUnit&&(n*=1024),n>0&&(e.TaskTemplate.Resources.Limits.MemoryBytes=n);var a=(Math.round(8*t.MemoryReservation)/8).toFixed(3);a*=1048576,"GB"===t.MemoryReservationUnit&&(a*=1024),a>0&&(e.TaskTemplate.Resources.Reservations.MemoryBytes=a)}(n,e),function(e,t){e.TaskTemplate.RestartPolicy={Condition:t.RestartCondition||"any",Delay:d.translateHumanDurationToNanos(t.RestartDelay)||5e9,MaxAttempts:t.RestartMaxAttempts||0,Window:d.translateHumanDurationToNanos(t.RestartWindow)||0}}(n,e),function(e,t){var n={};t.LogDriverName&&(e.TaskTemplate.LogDriver={Name:t.LogDriverName},"none"!==t.LogDriverName&&(t.LogDriverOpts.forEach((function(e){e.name&&(n[e.name]=e.value)})),0!==Object.keys(n).length&&n.constructor===Object&&(e.TaskTemplate.LogDriver.Options=n)))}(n,e),n}var N;function U(){return O.apply(this,arguments)}function O(){return(O=l(regeneratorRuntime.mark((function e(){var t,n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=y.isAdmin(),e.next=3,P.publicSettings();case 3:if(n=e.sent,a=n.AllowBindMountsForRegularUsers,!t&&!a){e.next=7;break}return e.abrupt("return",!0);case 7:return e.next=9,D.extensionEnabled(D.EXTENSIONS.RBAC);case 9:if(!e.sent){e.next=12;break}return e.abrupt("return",y.hasAuthorizations(["EndpointResourcesAccess"]));case 12:return e.abrupt("return",!1);case 13:case"end":return e.stop()}}),e)})))).apply(this,arguments)}t.formValues={Name:"",RegistryModel:new i.PorImageRegistryModel,Mode:"replicated",Replicas:1,Command:"",EntryPoint:"",WorkingDir:"",User:"",Env:[],Labels:[],ContainerLabels:[],Volumes:[],Network:"",ExtraNetworks:[],HostsEntries:[],Ports:[],Parallelism:1,PlacementConstraints:[],PlacementPreferences:[],UpdateDelay:"0s",UpdateOrder:"stop-first",FailureAction:"pause",Secrets:[],Configs:[],AccessControlData:new o.AccessControlFormData,CpuLimit:0,CpuReservation:0,MemoryLimit:0,MemoryReservation:0,MemoryLimitUnit:"MB",MemoryReservationUnit:"MB",RestartCondition:"any",RestartDelay:"5s",RestartMaxAttempts:0,RestartWindow:"0s",LogDriverName:"",LogDriverOpts:[],Webhook:!1},t.state={formValidationError:"",actionInProgress:!1},t.allowBindMounts=!1,t.refreshSlider=function(){s((function(){t.$broadcast("rzSliderForceRender")}))},t.addPortBinding=function(){t.formValues.Ports.push({PublishedPort:"",TargetPort:"",Protocol:"tcp",PublishMode:"ingress"})},t.removePortBinding=function(e){t.formValues.Ports.splice(e,1)},t.addExtraNetwork=function(){t.formValues.ExtraNetworks.push({Name:""})},t.removeExtraNetwork=function(e){t.formValues.ExtraNetworks.splice(e,1)},t.addHostsEntry=function(){t.formValues.HostsEntries.push({})},t.removeHostsEntry=function(e){t.formValues.HostsEntries.splice(e,1)},t.addVolume=function(){t.formValues.Volumes.push({Source:"",Target:"",ReadOnly:!1,Type:"volume"})},t.removeVolume=function(e){t.formValues.Volumes.splice(e,1)},t.addConfig=function(){t.formValues.Configs.push({})},t.removeConfig=function(e){t.formValues.Configs.splice(e,1)},t.addSecret=function(){t.formValues.Secrets.push({overrideTarget:!1})},t.removeSecret=function(e){t.formValues.Secrets.splice(e,1)},t.addEnvironmentVariable=function(){t.formValues.Env.push({name:"",value:""})},t.removeEnvironmentVariable=function(e){t.formValues.Env.splice(e,1)},t.addPlacementConstraint=function(){t.formValues.PlacementConstraints.push({key:"",operator:"==",value:""})},t.removePlacementConstraint=function(e){t.formValues.PlacementConstraints.splice(e,1)},t.addPlacementPreference=function(){t.formValues.PlacementPreferences.push({strategy:"spread",value:""})},t.removePlacementPreference=function(e){t.formValues.PlacementPreferences.splice(e,1)},t.addLabel=function(){t.formValues.Labels.push({key:"",value:""})},t.removeLabel=function(e){t.formValues.Labels.splice(e,1)},t.addContainerLabel=function(){t.formValues.ContainerLabels.push({key:"",value:""})},t.removeContainerLabel=function(e){t.formValues.ContainerLabels.splice(e,1)},t.addLogDriverOpt=function(){t.formValues.LogDriverOpts.push({name:"",value:""})},t.removeLogDriverOpt=function(e){t.formValues.LogDriverOpts.splice(e,1)},t.create=function(){var a=t.formValues.AccessControlData;(function(e,n){var a;return t.state.formValidationError="",!(a=k.validateAccessControl(e,n))||(t.state.formValidationError=a,!1)})(a,t.isAdmin)&&(t.state.actionInProgress=!0,function(a,r){var i=t.formValues.RegistryModel,o=i.Registry.Authentication?C.encodedCredentials(i.Registry):"";$.setRegistryAuthenticationHeader(o),c.create(a).$promise.then((function(n){var a=n.ID,i=n.Portainer.ResourceControl,o=y.getUserDetails().ID,s=x.applyResourceControl(o,r,i),l=e.when(t.formValues.Webhook&&T.createServiceWebhook(a,A.endpointID()));return e.all([s,l])})).then((function(){w.success("Service successfully created"),n.go("docker.services",{},{reload:!0})})).catch((function(e){w.error("Failure",e,"Unable to create service")})).finally((function(){t.state.actionInProgress=!1}))}(E(),a))},N=t.applicationState.endpoint.apiVersion,e.all({volumes:f.volumes(),networks:v.networks(!0,!0,!1),secrets:N>=1.25?g.secrets():[],configs:N>=1.3?u.configs():[],nodes:I.nodes(),availableLoggingDrivers:S.loggingPlugins(N<1.25),allowBindMounts:U()}).then((function(e){t.availableVolumes=e.volumes,t.availableNetworks=e.networks,t.availableSecrets=e.secrets,t.availableConfigs=e.configs,t.availableLoggingDrivers=e.availableLoggingDrivers,function(e){var n=0,a=0;for(var r in e)e[r].CPUs&&e[r].CPUs>n&&(n=e[r].CPUs),e[r].Memory&&e[r].Memory>a&&(a=e[r].Memory);t.state.sliderMaxCpu=n>0?n/1e9:32,t.state.sliderMaxMemory=a>0?Math.floor(a/1e3/1e3):32768}(e.nodes),t.isAdmin=y.isAdmin(),t.allowBindMounts=e.allowBindMounts})).catch((function(e){w.error("Failure",e,"Unable to initialize view")}))}])},function(e,t){var n="app/docker/views/services/create/includes/update-restart.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="col-sm-12 form-section-title">\n    Update config\n  </div>\n  \x3c!-- parallelism-input --\x3e\n  <div class="form-group">\n    <label for="parallelism" class="col-sm-3 col-lg-2 control-label text-left">Update parallelism</label>\n    <div class="col-sm-4 col-lg-3">\n      <input type="number" class="form-control" ng-model="formValues.Parallelism" id="parallelism" placeholder="e.g. 1" />\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        Maximum number of tasks to be updated simultaneously (0 to update all at once).\n      </p>\n    </div>\n  </div>\n  \x3c!-- !parallelism-input --\x3e\n  \x3c!-- delay-input --\x3e\n  <div class="form-group">\n    <label for="update-delay" class="col-sm-3 col-lg-2 control-label text-left">\n      Update delay\n      <portainer-tooltip position="bottom" message="Supported format examples: 1h, 5m, 10s, 1000ms, 15us, 60ns."></portainer-tooltip>\n    </label>\n    <div class="col-sm-4 col-lg-3">\n      <input type="text" class="form-control" ng-model="formValues.UpdateDelay" id="update-delay" placeholder="e.g. 1m" ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i" />\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        Amount of time between updates expressed by a number followed by unit (ns|us|ms|s|m|h). Default value is 0s, 0 seconds.\n      </p>\n    </div>\n  </div>\n  \x3c!-- !delay-input --\x3e\n  \x3c!-- failureAction-input --\x3e\n  <div class="form-group">\n    <label for="failure-action" class="col-sm-3 col-lg-2 control-label text-left">Update failure action</label>\n    <div class="col-sm-4 col-lg-3">\n      <div class="btn-group btn-group-sm">\n        <label class="btn btn-primary" ng-model="formValues.FailureAction" uib-btn-radio="\'continue\'">Continue</label>\n        <label class="btn btn-primary" ng-model="formValues.FailureAction" uib-btn-radio="\'pause\'">Pause</label>\n      </div>\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        Action taken on failure to start after update.\n      </p>\n    </div>\n  </div>\n  \x3c!-- !failureAction-input --\x3e\n  \x3c!-- order-input --\x3e\n  <div class="form-group" ng-if="applicationState.endpoint.apiVersion >= 1.29">\n    <label for="update-order" class="col-sm-3 col-lg-2 control-label text-left">Update order</label>\n    <div class="col-sm-4 col-lg-3">\n      <div class="btn-group btn-group-sm">\n        <label class="btn btn-primary" ng-model="formValues.UpdateOrder" uib-btn-radio="\'start-first\'">start-first</label>\n        <label class="btn btn-primary" ng-model="formValues.UpdateOrder" uib-btn-radio="\'stop-first\'">stop-first</label>\n      </div>\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        Operation order on failure.\n      </p>\n    </div>\n  </div>\n  \x3c!-- !order-input --\x3e\n\n  <div class="col-sm-12 form-section-title">\n    Restart policy\n  </div>\n  \x3c!-- restartCondition-input --\x3e\n  <div class="form-group">\n    <label for="restart-condition" class="col-sm-3 col-lg-2 control-label text-left">Restart condition</label>\n    <div class="col-sm-4 col-lg-3">\n      <div class="btn-group btn-group-sm">\n        <label class="btn btn-primary" ng-model="formValues.RestartCondition" uib-btn-radio="\'none\'">None</label>\n        <label class="btn btn-primary" ng-model="formValues.RestartCondition" uib-btn-radio="\'on-failure\'">On-failure</label>\n        <label class="btn btn-primary" ng-model="formValues.RestartCondition" uib-btn-radio="\'any\'">Any</label>\n      </div>\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        Restart when condition is met (default condition "any").\n      </p>\n    </div>\n  </div>\n  \x3c!-- !restartCondition-input --\x3e\n  \x3c!-- restartDelay-input --\x3e\n  <div class="form-group">\n    <label for="restart-delay" class="col-sm-3 col-lg-2 control-label text-left">\n      Restart delay\n      <portainer-tooltip position="bottom" message="Supported format examples: 1h, 5m, 10s, 1000ms, 15us, 60ns."></portainer-tooltip>\n    </label>\n    <div class="col-sm-4 col-lg-3">\n      <input type="text" class="form-control" ng-model="formValues.RestartDelay" id="restart-delay" placeholder="e.g. 1m" ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i" />\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        Delay between restart attempts expressed by a number followed by unit (ns|us|ms|s|m|h). Default value is 5s, 5 seconds.\n      </p>\n    </div>\n  </div>\n  \x3c!-- !restartDelay-input --\x3e\n  \x3c!-- restartMaxAttempts-input --\x3e\n  <div class="form-group">\n    <label for="restart-max-attempts" class="col-sm-3 col-lg-2 control-label text-left">Restart max attempts</label>\n    <div class="col-sm-4 col-lg-3">\n      <input type="number" class="form-control" ng-model="formValues.RestartMaxAttempts" id="restart-max-attempts" placeholder="e.g. 0" />\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        Maximum attempts to restart a given task before giving up (default value is 0, which means unlimited).\n      </p>\n    </div>\n  </div>\n  \x3c!-- !restartMaxAttempts-input --\x3e\n  \x3c!-- restartWindow-input --\x3e\n  <div class="form-group">\n    <label for="restart-window" class="col-sm-3 col-lg-2 control-label text-left">\n      Restart window\n      <portainer-tooltip position="bottom" message="Supported format examples: 1h, 5m, 10s, 1000ms, 15us, 60ns."></portainer-tooltip>\n    </label>\n    <div class="col-sm-4 col-lg-3">\n      <input type="text" class="form-control" ng-model="formValues.RestartWindow" id="restart-window" placeholder="e.g. 1m" ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i" />\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        Time window to evaluate restart attempts expressed by a number followed by unit (ns|us|ms|s|m|h). Default value is 0 seconds, which is unbounded.\n      </p>\n    </div>\n  </div>\n  \x3c!-- !restartWindow-input --\x3e\n</form>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/create/includes/secret.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="form-group">\n    <div class="col-sm-12 small text-muted"> By default, secrets will be available under <code>/run/secrets/$SECRET_NAME</code> in containers. </div>\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">Secrets</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addSecret()"> <i class="fa fa-plus-circle" aria-hidden="true"></i> add a secret </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="secret in formValues.Secrets track by $index" style="margin-top: 4px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">secret</span>\n          <select class="form-control" ng-model="secret.model" ng-options="secret.Name for secret in availableSecrets | orderBy: \'Name\'">\n            <option value="" selected="selected">Select a secret</option>\n          </select>\n        </div>\n        <div class="input-group col-sm-4 input-group-sm" ng-if="applicationState.endpoint.apiVersion >= 1.3 && secret.overrideTarget">\n          <span class="input-group-addon">target</span>\n          <input class="form-control" ng-model="secret.target" placeholder="/path/in/container" />\n        </div>\n        <div class="input-group col-sm-3 input-group-sm">\n          <div class="btn-group btn-group-sm" ng-if="applicationState.endpoint.apiVersion >= 1.3">\n            <label class="btn btn-primary" ng-model="secret.overrideTarget" uib-btn-radio="false">Default location</label>\n            <label class="btn btn-primary" ng-model="secret.overrideTarget" uib-btn-radio="true">Override</label>\n          </div>\n          <button class="btn btn-sm btn-danger" type="button" ng-click="removeSecret($index)">\n            <i class="fa fa-trash" aria-hidden="true"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/create/includes/config.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="form-group">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">Configs</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addConfig()"> <i class="fa fa-plus-circle" aria-hidden="true"></i> add a config </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="config in formValues.Configs" style="margin-top: 2px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">config</span>\n          <select class="form-control" ng-model="config.model" ng-options="config.Name for config in availableConfigs | orderBy: \'Name\'">\n            <option value="" selected="selected">Select a config</option>\n          </select>\n        </div>\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">Path in container</span>\n          <input class="form-control" ng-model="config.FileName" placeholder="e.g. /path/in/container" />\n        </div>\n        <button class="btn btn-sm btn-danger" type="button" ng-click="removeConfig($index)">\n          <i class="fa fa-trash" aria-hidden="true"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/create/includes/resources-placement.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="col-sm-12 form-section-title">\n    Resources\n  </div>\n  \x3c!-- memory-reservation-input --\x3e\n  <div class="form-group">\n    <label for="memory-reservation" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n      Memory reservation\n    </label>\n    <div class="col-sm-3">\n      <slider model="formValues.MemoryReservation" floor="0" ceil="state.sliderMaxMemory" step="256" ng-if="state.sliderMaxMemory"></slider>\n    </div>\n    <div class="col-sm-2">\n      <input type="number" min="0" class="form-control" ng-model="formValues.MemoryReservation" />\n    </div>\n    <div class="col-sm-4">\n      <p class="small text-muted" style="margin-top: 7px;">\n        Minimum memory available on a node to run a task (<b>MB</b>)\n      </p>\n    </div>\n  </div>\n  \x3c!-- !memory-reservation-input --\x3e\n  \x3c!-- memory-limit-input --\x3e\n  <div class="form-group">\n    <label for="memory-limit" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n      Memory limit\n    </label>\n    <div class="col-sm-3">\n      <slider model="formValues.MemoryLimit" floor="0" ceil="state.sliderMaxMemory" step="256" ng-if="state.sliderMaxMemory"></slider>\n    </div>\n    <div class="col-sm-2">\n      <input type="number" min="0" class="form-control" ng-model="formValues.MemoryLimit" />\n    </div>\n    <div class="col-sm-4" style="margin-top: 7px;">\n      <p class="small text-muted">\n        Maximum memory usage per task (<b>MB</b>)\n      </p>\n    </div>\n  </div>\n  \x3c!-- !memory-limit-input --\x3e\n  \x3c!-- cpu-reservation-input --\x3e\n  <div class="form-group">\n    <label for="cpu-reservation" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n      CPU reservation\n    </label>\n    <div class="col-sm-5">\n      <slider model="formValues.CpuReservation" floor="0" ceil="state.sliderMaxCpu" step="0.25" precision="2" ng-if="state.sliderMaxCpu"></slider>\n    </div>\n    <div class="col-sm-4" style="margin-top: 20px;">\n      <p class="small text-muted">\n        Minimum CPU available on a node to run a task\n      </p>\n    </div>\n  </div>\n  \x3c!-- !cpu-reservation-input --\x3e\n  \x3c!-- cpu-limit-input --\x3e\n  <div class="form-group">\n    <label for="cpu-limit" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n      CPU limit\n    </label>\n    <div class="col-sm-5">\n      <slider model="formValues.CpuLimit" floor="0" ceil="state.sliderMaxCpu" step="0.25" precision="2" ng-if="state.sliderMaxCpu"></slider>\n    </div>\n    <div class="col-sm-4" style="margin-top: 20px;">\n      <p class="small text-muted">\n        Maximum CPU usage per task\n      </p>\n    </div>\n  </div>\n  \x3c!-- !cpu-limit-input --\x3e\n  <div class="col-sm-12 form-section-title">\n    Placement\n  </div>\n  \x3c!-- placement-constraints --\x3e\n  <div class="form-group">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">Placement constraints</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPlacementConstraint()">\n        <i class="fa fa-plus-circle" aria-hidden="true"></i> placement constraint\n      </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="constraint in formValues.PlacementConstraints" style="margin-top: 2px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">name</span>\n          <input type="text" class="form-control" ng-model="constraint.key" placeholder="e.g. node.role" />\n        </div>\n        <div class="input-group col-sm-1 input-group-sm">\n          <select name="constraintOperator" class="form-control" ng-model="constraint.operator">\n            <option value="==">==</option>\n            <option value="!=">!=</option>\n          </select>\n        </div>\n        <div class="input-group col-sm-5 input-group-sm">\n          <span class="input-group-addon">value</span>\n          <input type="text" class="form-control" ng-model="constraint.value" placeholder="e.g. manager" />\n        </div>\n        <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementConstraint($index)">\n          <i class="fa fa-trash" aria-hidden="true"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !placement-constraints --\x3e\n  \x3c!-- placement-preferences --\x3e\n  <div class="form-group" ng-if="applicationState.endpoint.apiVersion >= 1.3">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">Placement preferences</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPlacementPreference()">\n        <i class="fa fa-plus-circle" aria-hidden="true"></i> placement preference\n      </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="preference in formValues.PlacementPreferences" style="margin-top: 2px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">strategy</span>\n          <input type="text" class="form-control" ng-model="preference.strategy" placeholder="e.g. spread" />\n        </div>\n        <div class="input-group col-sm-5 input-group-sm">\n          <span class="input-group-addon">value</span>\n          <input type="text" class="form-control" ng-model="preference.value" placeholder="e.g. node.labels.datacenter" />\n        </div>\n        <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementPreference($index)">\n          <i class="fa fa-trash" aria-hidden="true"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !placement-preferences --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t),function(e){var t=n(30);n(942),n(943),n(944),n(945),n(946),n(947),n(948),n(949),n(950),n(951),n(952),n(953),n(954),n(955),n(956),n(957),n(958),n(959),angular.module("portainer.docker").controller("ServiceController",["$q","$scope","$transition$","$state","$location","$timeout","$anchorScroll","ServiceService","ConfigService","ConfigHelper","SecretService","ImageService","SecretHelper","Service","ServiceHelper","LabelHelper","TaskService","NodeService","ContainerService","TaskHelper","Notifications","ModalService","PluginService","Authentication","SettingsService","VolumeService","ImageHelper","WebhookService","EndpointProvider","clipboard","WebhookHelper",function(n,a,r,i,o,s,l,c,d,u,p,m,g,f,v,h,b,y,x,w,k,S,C,$,I,P,T,A,D,R,E){a.state={updateInProgress:!1,deletionInProgress:!1,rollbackInProgress:!1},a.formValues={RegistryModel:new t.PorImageRegistryModel},a.tasks=[],a.availableImages=[],a.lastVersion=0;var N={},U=[];function O(e){var t=v.serviceToConfig(e.Model);if(t.Name=e.Name,t.Labels=h.fromKeyValueToLabelHash(e.ServiceLabels),t.TaskTemplate.ContainerSpec.Env=v.translateEnvironmentVariablesToEnv(e.EnvironmentVariables),t.TaskTemplate.ContainerSpec.Labels=h.fromKeyValueToLabelHash(e.ServiceContainerLabels),a.hasChanges(e,["Image"])){var n=T.createImageConfigForContainer(a.formValues.RegistryModel);t.TaskTemplate.ContainerSpec.Image=n.fromImage}else t.TaskTemplate.ContainerSpec.Image=e.Image;if(t.TaskTemplate.ContainerSpec.Secrets=e.ServiceSecrets?e.ServiceSecrets.map(g.secretConfig):[],t.TaskTemplate.ContainerSpec.Configs=e.ServiceConfigs?e.ServiceConfigs.map(u.configConfig):[],t.TaskTemplate.ContainerSpec.Hosts=e.Hosts?v.translateHostnameIPToHostsEntries(e.Hosts):[],"replicated"===e.Mode&&(t.Mode.Replicated.Replicas=e.Replicas),t.TaskTemplate.ContainerSpec.Mounts=e.ServiceMounts,void 0===t.TaskTemplate.Placement&&(t.TaskTemplate.Placement={}),t.TaskTemplate.Placement.Constraints=v.translateKeyValueToPlacementConstraints(e.ServiceConstraints),t.TaskTemplate.Placement.Preferences=v.translateKeyValueToPlacementPreferences(e.ServicePreferences),a.hasChanges(e,["LimitNanoCPUs","LimitMemoryBytes","ReservationNanoCPUs","ReservationMemoryBytes"])){var r=(Math.round(8*e.LimitMemoryBytes)/8).toFixed(3);r*=1048576;var i=(Math.round(8*e.ReservationMemoryBytes)/8).toFixed(3);i*=1048576,t.TaskTemplate.Resources={Limits:{NanoCPUs:1e9*e.LimitNanoCPUs,MemoryBytes:r},Reservations:{NanoCPUs:1e9*e.ReservationNanoCPUs,MemoryBytes:i}}}if(a.hasChanges(e,["UpdateFailureAction","UpdateDelay","UpdateParallelism","UpdateOrder"])&&(t.UpdateConfig={Parallelism:e.UpdateParallelism,Delay:v.translateHumanDurationToNanos(e.UpdateDelay)||0,FailureAction:e.UpdateFailureAction,Order:e.UpdateOrder}),a.hasChanges(e,["RestartCondition","RestartDelay","RestartMaxAttempts","RestartWindow"])&&(t.TaskTemplate.RestartPolicy={Condition:e.RestartCondition,Delay:v.translateHumanDurationToNanos(e.RestartDelay)||5e9,MaxAttempts:e.RestartMaxAttempts,Window:v.translateHumanDurationToNanos(e.RestartWindow)||0}),t.TaskTemplate.LogDriver=null,e.LogDriverName&&(t.TaskTemplate.LogDriver={Name:e.LogDriverName},"none"!==e.LogDriverName)){var o=v.translateKeyValueToLogDriverOpts(e.LogDriverOpts);0!==Object.keys(o).length&&o.constructor===Object&&(t.TaskTemplate.LogDriver.Options=o)}return e.Ports&&e.Ports.forEach((function(e){null!==e.PublishedPort&&""!==e.PublishedPort||delete e.PublishedPort})),t.EndpointSpec={Mode:t.EndpointSpec&&t.EndpointSpec.Mode||"vip",Ports:e.Ports},t}function _(){var e=a.applicationState.endpoint.apiVersion,t=a.applicationState.endpoint.mode.agentProxy,i=null;c.service(r.params().id).then((function(r){return i=r,a.isUpdating=a.lastVersion>=i.Version,a.isUpdating||(a.lastVersion=i.Version),function(e){e.LimitNanoCPUs=e.LimitNanoCPUs/1e9||0,e.ReservationNanoCPUs=e.ReservationNanoCPUs/1e9||0,e.LimitMemoryBytes=e.LimitMemoryBytes/1024/1024||0,e.ReservationMemoryBytes=e.ReservationMemoryBytes/1024/1024||0}(i),function(e){e.ServiceSecrets=e.Secrets?e.Secrets.map(g.flattenSecret):[],e.ServiceConfigs=e.Configs?e.Configs.map(u.flattenConfig):[],e.EnvironmentVariables=v.translateEnvironmentVariables(e.Env),e.LogDriverOpts=v.translateLogDriverOptsToKeyValue(e.LogDriverOpts),e.ServiceLabels=h.fromLabelHashToKeyValue(e.Labels),e.ServiceContainerLabels=h.fromLabelHashToKeyValue(e.ContainerLabels),e.ServiceMounts=angular.copy(e.Mounts),e.ServiceConstraints=v.translateConstraintsToKeyValue(e.Constraints),e.ServicePreferences=v.translatePreferencesToKeyValue(e.Preferences),e.Hosts=v.translateHostsEntriesToHostnameIP(e.Hosts)}(i),function(e){e.RestartDelay=v.translateNanosToHumanDuration(e.RestartDelay)||"5s",e.RestartWindow=v.translateNanosToHumanDuration(e.RestartWindow)||"0s",e.UpdateDelay=v.translateNanosToHumanDuration(e.UpdateDelay)||"0s",e.StopGracePeriod=e.StopGracePeriod?v.translateNanosToHumanDuration(e.StopGracePeriod):""}(i),a.service=i,N=angular.copy(i),n.all({volumes:P.volumes(),tasks:b.tasks({service:[i.Name]}),containers:t?x.containers():[],nodes:y.nodes(),secrets:e>=1.25?p.secrets():[],configs:e>=1.3?d.configs():[],availableImages:m.images(),availableLoggingDrivers:C.loggingPlugins(e<1.25),settings:I.publicSettings(),webhooks:A.webhooks(i.Id,D.endpointID())})})).then((function(e){if(a.nodes=e.nodes,a.configs=e.configs,a.secrets=e.secrets,a.availableImages=m.getUniqueTagListFromImages(e.availableImages),a.availableLoggingDrivers=e.availableLoggingDrivers,a.availableVolumes=e.volumes,a.allowBindMounts=e.settings.AllowBindMountsForRegularUsers,a.isAdmin=$.isAdmin(),e.webhooks.length>0){var n=e.webhooks[0];a.WebhookExists=!0,a.webhookID=n.Id,a.webhookURL=E.returnWebhookUrl(n.Token)}var r=e.tasks;if(t)for(var o=e.containers,c=0;c<r.length;c++){var d=r[c];w.associateContainerToTask(d,o)}v.associateTasksToService(i,r),a.tasks=e.tasks;var u=0;for(var p in e.nodes)e.nodes[p].CPUs&&e.nodes[p].CPUs>u&&(u=e.nodes[p].CPUs);a.state.sliderMaxCpu=u>0?u/1e9:32,a.state.addSecret={override:!1},s((function(){l()}))})).catch((function(e){a.secrets=[],a.configs=[],k.error("Failure",e,"Unable to retrieve service details")}))}function V(e,t){U.push(t),e.hasChanges=!0}a.goToItem=function(e){o.hash()!==e?o.hash(e):l()},a.addEnvironmentVariable=function(e){e.EnvironmentVariables.push({key:"",value:"",originalValue:""}),V(e,"EnvironmentVariables",e.EnvironmentVariables)},a.removeEnvironmentVariable=function(e,t){null!==e.EnvironmentVariables.splice(t,1)&&V(e,"EnvironmentVariables",e.EnvironmentVariables)},a.updateEnvironmentVariable=function(e,t){t.value===t.originalValue&&t.key===t.originalKey||V(e,"EnvironmentVariables",e.EnvironmentVariables)},a.addConfig=function(e,t){t&&0===e.ServiceConfigs.filter((function(e){return e.Id===t.Id})).length&&(e.ServiceConfigs.push({Id:t.Id,Name:t.Name,FileName:t.Name,Uid:"0",Gid:"0",Mode:292}),V(e,"ServiceConfigs",e.ServiceConfigs))},a.removeConfig=function(e,t){null!==e.ServiceConfigs.splice(t,1)&&V(e,"ServiceConfigs",e.ServiceConfigs)},a.updateConfig=function(e){V(e,"ServiceConfigs",e.ServiceConfigs)},a.addSecret=function(e,t){if(t.secret){var n=t.secret.Name;t.override&&(n=t.target),0===e.ServiceSecrets.filter((function(e){return e.Id===t.secret.Id&&e.FileName===n})).length&&(e.ServiceSecrets.push({Id:t.secret.Id,Name:t.secret.Name,FileName:n,Uid:"0",Gid:"0",Mode:444}),V(e,"ServiceSecrets",e.ServiceSecrets))}},a.removeSecret=function(e,t){null!==e.ServiceSecrets.splice(t,1)&&V(e,"ServiceSecrets",e.ServiceSecrets)},a.addLabel=function(e){e.ServiceLabels.push({key:"",value:"",originalValue:""}),V(e,"ServiceLabels",e.ServiceLabels)},a.removeLabel=function(e,t){null!==e.ServiceLabels.splice(t,1)&&V(e,"ServiceLabels",e.ServiceLabels)},a.updateLabel=function(e,t){t.value===t.originalValue&&t.key===t.originalKey||V(e,"ServiceLabels",e.ServiceLabels)},a.addContainerLabel=function(e){e.ServiceContainerLabels.push({key:"",value:"",originalValue:""}),V(e,"ServiceContainerLabels",e.ServiceContainerLabels)},a.removeContainerLabel=function(e,t){null!==e.ServiceContainerLabels.splice(t,1)&&V(e,"ServiceContainerLabels",e.ServiceContainerLabels)},a.updateContainerLabel=function(e,t){t.value===t.originalValue&&t.key===t.originalKey||V(e,"ServiceContainerLabels",e.ServiceContainerLabels)},a.addMount=function(e){e.ServiceMounts.push({Type:"volume",Source:"",Target:"",ReadOnly:!1}),V(e,"ServiceMounts",e.ServiceMounts)},a.removeMount=function(e,t){null!==e.ServiceMounts.splice(t,1)&&V(e,"ServiceMounts",e.ServiceMounts)},a.updateMount=function(e){V(e,"ServiceMounts",e.ServiceMounts)},a.addPlacementConstraint=function(e){e.ServiceConstraints.push({key:"",operator:"==",value:""}),V(e,"ServiceConstraints",e.ServiceConstraints)},a.removePlacementConstraint=function(e,t){null!==e.ServiceConstraints.splice(t,1)&&V(e,"ServiceConstraints",e.ServiceConstraints)},a.updatePlacementConstraint=function(e){V(e,"ServiceConstraints",e.ServiceConstraints)},a.addPlacementPreference=function(e){e.ServicePreferences.push({strategy:"spread",value:""}),V(e,"ServicePreferences",e.ServicePreferences)},a.removePlacementPreference=function(e,t){null!==e.ServicePreferences.splice(t,1)&&V(e,"ServicePreferences",e.ServicePreferences)},a.updatePlacementPreference=function(e){V(e,"ServicePreferences",e.ServicePreferences)},a.addPublishedPort=function(e){e.Ports||(e.Ports=[]),e.Ports.push({PublishedPort:"",TargetPort:"",Protocol:"tcp",PublishMode:"ingress"})},a.updatePublishedPort=function(e){V(e,"Ports",e.Ports)},a.removePortPublishedBinding=function(e,t){null!==e.Ports.splice(t,1)&&V(e,"Ports",e.Ports)},a.addLogDriverOpt=function(e){e.LogDriverOpts.push({key:"",value:"",originalValue:""}),V(e,"LogDriverOpts",e.LogDriverOpts)},a.removeLogDriverOpt=function(e,t){null!==e.LogDriverOpts.splice(t,1)&&V(e,"LogDriverOpts",e.LogDriverOpts)},a.updateLogDriverOpt=function(e,t){t.value===t.originalValue&&t.key===t.originalKey||V(e,"LogDriverOpts",e.LogDriverOpts)},a.updateLogDriverName=function(e){V(e,"LogDriverName",e.LogDriverName)},a.addHostsEntry=function(e){e.Hosts||(e.Hosts=[]),e.Hosts.push({hostname:"",ip:""})},a.removeHostsEntry=function(e,t){null!==e.Hosts.splice(t,1)&&V(e,"Hosts",e.Hosts)},a.updateHostsEntry=function(e){V(e,"Hosts",e.Hosts)},a.updateWebhook=function(e){a.WebhookExists?A.deleteWebhook(a.webhookID).then((function(){a.webhookURL=null,a.webhookID=null,a.WebhookExists=!1})).catch((function(e){k.error("Failure",e,"Unable to delete webhook")})):A.createServiceWebhook(e.Id,D.endpointID()).then((function(e){a.WebhookExists=!0,a.webhookID=e.Id,a.webhookURL=E.returnWebhookUrl(e.Token)})).catch((function(e){k.error("Failure",e,"Unable to create webhook")}))},a.copyWebhook=function(){R.copyText(a.webhookURL),e("#copyNotification").show(),e("#copyNotification").fadeOut(2e3)},a.cancelChanges=function(e,t){t?t.forEach((function(e){if("Image"===e)a.formValues.RegistryModel.Image="";else{var t=U.indexOf(e);t>=0&&U.splice(t,1)}})):(a.formValues.RegistryModel.Image="",t=Object.keys(e),U=[]),t.forEach((function(t){e[t]=N[t]})),e.hasChanges=!1},a.hasChanges=function(e,t){var n=!1;return t.forEach((function(e){n="Image"===e?!(!n&&!a.formValues.RegistryModel.Image):n||U.indexOf(e)>=0})),n},a.rollbackService=function(e){S.confirm({title:"Rollback service",message:"Are you sure you want to rollback?",buttons:{confirm:{label:"Yes",className:"btn-danger"}},callback:function(t){t&&function(e){var t;a.state.rollbackInProgress=!0,t=O(e),c.update(e,t,"previous").then((function(e){e.message&&e.message.match(/^rpc error:/)?k.error(e.message,"Error"):(k.success("Success","Service successfully rolled back"),a.cancelChanges({}),_())})).catch((function(e){e.data.message&&e.data.message.includes("does not have a previous spec")?k.error("Failure",{message:"No previous config to rollback to."}):k.error("Failure",e,"Unable to rollback service")})).finally((function(){a.state.rollbackInProgress=!1}))}(e)}})},a.updateService=function(e){var t;t=O(e),c.update(e,t).then((function(e){e.message&&e.message.match(/^rpc error:/)?k.error(e.message,"Error"):k.success("Service successfully updated","Service updated"),a.cancelChanges({}),_()}),(function(e){k.error("Failure",e,"Unable to update service")}))},a.removeService=function(){S.confirmDeletion("Do you want to remove this service? All the containers associated to this service will be removed too.",(function(e){e&&(a.state.deletionInProgress=!0,c.remove(a.service).then((function(){return n.when(a.webhookID&&A.deleteWebhook(a.webhookID))})).then((function(){k.success("Service successfully deleted"),i.go("docker.services",{})})).catch((function(e){k.error("Failure",e,"Unable to remove service")})).finally((function(){a.state.deletionInProgress=!1})))}))},a.forceUpdateService=function(e){S.confirmServiceForceUpdate("Do you want to force an update of the service? All the tasks associated to the service will be recreated.",(function(t){if(t){var n=!1;t[0]&&(n=!0),function(e,t){var n=v.serviceToConfig(e.Model);t&&(n.TaskTemplate.ContainerSpec.Image=T.removeDigestFromRepository(n.TaskTemplate.ContainerSpec.Image));n.TaskTemplate.ForceUpdate++,a.state.updateInProgress=!0,c.update(e,n).then((function(){k.success("Service successfully updated",e.Name),a.cancelChanges({}),_()})).catch((function(t){k.error("Failure",t,"Unable to force update service",e.Name)})).finally((function(){a.state.updateInProgress=!1}))}(e,n)}}))},a.updateServiceAttribute=function(e,t){e[t]===N[t]&&t in N||(e.hasChanges=!0);U.push(t)},_()}])}.call(this,n(19))},function(e,t){var n="app/docker/views/services/edit/includes/configs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form ng-if="applicationState.endpoint.apiVersion >= 1.3" id="service-configs" ng-submit="updateService(service)">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Configs"> </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="form-inline" style="padding: 10px;" authorization="DockerServiceUpdate">\n        Add a config:\n        <select class="form-control" ng-options="config.Name for config in configs | orderBy: \'Name\'" ng-model="newConfig">\n          <option selected disabled hidden value="">Select a config</option>\n        </select>\n        <a class="btn btn-default btn-sm" ng-click="addConfig(service, newConfig)"> <i class="fa fa-plus-circle" aria-hidden="true"></i> add config </a>\n      </div>\n      <table class="table" style="margin-top: 5px;">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Path in container</th>\n            <th>UID</th>\n            <th>GID</th>\n            <th>Mode</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="config in service.ServiceConfigs">\n            <td\n              ><a ui-sref="docker.configs.config({id: config.Id})">{{ config.Name }}</a></td\n            >\n            <td>\n              <input\n                class="form-control"\n                ng-model="config.FileName"\n                ng-change="updateConfig(service)"\n                placeholder="e.g. /path/in/container"\n                required\n                disable-authorization="DockerServiceUpdate"\n              />\n            </td>\n            <td>{{ config.Uid }}</td>\n            <td>{{ config.Gid }}</td>\n            <td>{{ config.Mode }}</td>\n            <td authorization="DockerServiceUpdate">\n              <button class="btn btn-xs btn-danger pull-right" type="button" ng-click="removeConfig(service, $index)" ng-disabled="isUpdating">\n                <i class="fa fa-trash" aria-hidden="true"></i> Remove config\n              </button>\n            </td>\n          </tr>\n          <tr ng-if="service.ServiceConfigs.length === 0">\n            <td colspan="6" class="text-center text-muted">No configs associated to this service.</td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="submit" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceConfigs\'])">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceConfigs\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</form>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/constraints.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="service.ServiceConstraints" id="service-placement-constraints">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Placement constraints">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating || addPlacementConstraint(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> placement constraint\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceConstraints.length === 0">\n      <p>There are no placement constraints for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServiceConstraints.length > 0" classes="no-padding">\n      <table class="table">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Operator</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="constraint in service.ServiceConstraints">\n            <td>\n              <div class="input-group input-group-sm">\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="constraint.key"\n                  placeholder="e.g. node.role"\n                  ng-change="updatePlacementConstraint(service, constraint)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select\n                  name="constraintOperator"\n                  class="form-control"\n                  ng-model="constraint.operator"\n                  ng-change="updatePlacementConstraint(service, constraint)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                >\n                  <option value="==">==</option>\n                  <option value="!=">!=</option>\n                </select>\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="constraint.value"\n                  placeholder="e.g. manager"\n                  ng-change="updatePlacementConstraint(service, constraint)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementConstraint(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceConstraints\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceConstraints\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/container-specs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title-text="Container spec"></rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td>CMD</td>\n            <td\n              ><code ng-if="service.Command">{{ service.Command | command }}</code></td\n            >\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Command to execute.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Args</td>\n            <td\n              ><code ng-if="service.Arguments">{{ service.Arguments }}</code></td\n            >\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Arguments passed to command in container.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>User</td>\n            <td>{{ service.User }}</td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Username or UID.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Working directory</td>\n            <td>{{ service.Dir }}</td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Working directory inside the container.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Stop grace period</td>\n            <td>{{ service.StopGracePeriod }}</td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Time to wait before force killing a container (default none).\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/containerlabels.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-container-labels">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Container labels">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addContainerLabel(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> container label\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceContainerLabels.length === 0">\n      <p>There are no container labels for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServiceContainerLabels.length > 0" classes="no-padding">\n      <table class="table">\n        <thead>\n          <tr>\n            <th>Label</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="label in service.ServiceContainerLabels">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">name</span>\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="label.key"\n                  placeholder="e.g. com.example.foo"\n                  ng-change="updateContainerLabel(service, label)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">value</span>\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="label.value"\n                  placeholder="e.g. bar"\n                  ng-change="updateContainerLabel(service, label)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeContainerLabel(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceContainerLabels\'])" ng-click="updateService(service)"\n            >Apply changes</button\n          >\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceContainerLabels\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/environmentvariables.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="service.EnvironmentVariables" id="service-env-variables">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Environment variables">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addEnvironmentVariable(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> environment variable\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.EnvironmentVariables.length === 0">\n      <p>There are no environment variables for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.EnvironmentVariables.length > 0" classes="no-padding">\n      <table class="table">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="var in service.EnvironmentVariables">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">name</span>\n                <input type="text" class="form-control" ng-model="var.key" ng-disabled="var.added || isUpdating" placeholder="e.g. FOO" />\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">value</span>\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="var.value"\n                  ng-change="updateEnvironmentVariable(service, var)"\n                  placeholder="e.g. bar"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'EnvironmentVariables\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'EnvironmentVariables\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/hosts.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Hosts file entries">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addHostsEntry(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> add host entry\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="!service.Hosts || service.Hosts.length === 0">\n      <p>The Hosts file has no extra entries.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.Hosts.length > 0" classes="no-padding">\n      <table class="table">\n        <thead>\n          <tr>\n            <th>Hostname</th>\n            <th>IP</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="entry in service.Hosts">\n            <td>\n              <div class="input-group input-group-sm">\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="entry.hostname"\n                  placeholder="e.g. example.com"\n                  ng-change="updateHostsEntry(service, entry)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="entry.ip"\n                  placeholder="e.g. 10.0.1.1"\n                  ng-change="updateHostsEntry(service, entry)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeHostsEntry(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'Hosts\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'Hosts\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/image.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-container-image" authorization="DockerServiceUpdate">\n  <rd-widget>\n    <rd-widget-header icon="fa-clone" title-text="Change container image"> </rd-widget-header>\n    <rd-widget-body ng-if="!isUpdating">\n      <form class="form-horizontal">\n        <por-image-registry model="formValues.RegistryModel" auto-complete="true" label-class="col-sm-1" input-class="col-sm-11"></por-image-registry>\n      </form>\n    </rd-widget-body>\n    <rd-widget-body ng-if="isUpdating">\n      <p>Image modification is disabled while service is updating.</p>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'Image\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'Image\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/logging.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-logging-driver">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Logging driver"> </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="form-inline" style="padding: 10px;" authorization="DockerServiceUpdate">\n        Driver:\n        <select class="form-control" ng-model="service.LogDriverName" ng-change="updateLogDriverName(service)" ng-disabled="isUpdating">\n          <option selected value="">Default logging driver</option>\n          <option ng-repeat="driver in availableLoggingDrivers" ng-value="driver">{{ driver }}</option>\n          <option value="none">none</option>\n        </select>\n        <a class="btn btn-default btn-sm" ng-click="!service.LogDriverName || service.LogDriverName === \'none\' || addLogDriverOpt(service)">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> add logging driver option\n        </a>\n      </div>\n      <table class="table">\n        <thead>\n          <tr>\n            <th>Option</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="option in service.LogDriverOpts">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">name</span>\n                <input type="text" class="form-control" ng-model="option.key" ng-disabled="option.added || isUpdating" placeholder="e.g. FOO" />\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">value</span>\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="option.value"\n                  ng-change="updateLogDriverOpt(service, option)"\n                  placeholder="e.g. bar"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeLogDriverOpt(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n          <tr ng-if="service.LogDriverOpts.length === 0">\n            <td colspan="6" class="text-center text-muted">No options associated to this logging driver.</td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'LogDriverName\', \'LogDriverOpts\'])" ng-click="updateService(service)"\n            >Apply changes</button\n          >\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'LogDriverName\', \'LogDriverOpts\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/mounts.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="service.ServiceMounts" id="service-mounts">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Mounts">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addMount(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> mount\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceMounts.length === 0">\n      <p>There are no mounts for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServiceMounts.length > 0" classes="no-padding">\n      <table class="table">\n        <thead>\n          <tr>\n            <th ng-if="isAdmin || allowBindMounts">Type</th>\n            <th>Source</th>\n            <th>Target</th>\n            <th authorization="DockerServiceUpdate">Read only</th>\n            <th authorization="DockerServiceUpdate">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="mount in service.ServiceMounts">\n            <td ng-if="isAdmin || allowBindMounts">\n              <select name="mountType" class="form-control" ng-model="mount.Type" ng-disabled="isUpdating" disable-authorization="DockerServiceUpdate">\n                <option value="volume">Volume</option>\n                <option value="bind">Bind</option>\n              </select>\n            </td>\n            <td>\n              <select\n                class="form-control"\n                ng-model="mount.Source"\n                ng-options="vol.Id as ((vol.Id|truncate:30) + \' - \' + (vol.Driver|truncate:30))  for vol in availableVolumes"\n                ng-if="mount.Type === \'volume\'"\n                disable-authorization="DockerServiceUpdate"\n              >\n                <option selected disabled hidden value="">Select a volume</option>\n              </select>\n              <input\n                type="text"\n                class="form-control"\n                ng-model="mount.Source"\n                placeholder="e.g. /tmp/portainer/data"\n                ng-change="updateMount(service, mount)"\n                ng-disabled="isUpdating || (!isAdmin && !allowBindMounts && mount.Type === \'bind\')"\n                ng-if="mount.Type === \'bind\'"\n              />\n            </td>\n            <td>\n              <input\n                type="text"\n                class="form-control"\n                ng-model="mount.Target"\n                placeholder="e.g. /tmp/portainer/data"\n                ng-change="updateMount(service, mount)"\n                ng-disabled="isUpdating"\n                disable-authorization="DockerServiceUpdate"\n              />\n            </td>\n            <td authorization="DockerServiceUpdate">\n              <input type="checkbox" class="form-control" ng-model="mount.ReadOnly" ng-change="updateMount(service, mount)" ng-disabled="isUpdating" />\n            </td>\n            <td authorization="DockerServiceUpdate">\n              <span class="input-group-btn">\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeMount(service, $index)" ng-disabled="isUpdating">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceMounts\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceMounts\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/networks.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-network-specs">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Networks"></rd-widget-header>\n    <rd-widget-body ng-if="!service.VirtualIPs || service.VirtualIPs.length === 0">\n      <p>This service is not connected to any networks.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.VirtualIPs && service.VirtualIPs.length > 0" classes="no-padding">\n      <table class="table">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>IP address</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="network in service.VirtualIPs">\n            <td>\n              <a ui-sref="docker.networks.network({id: network.NetworkID})">{{ network.NetworkID }}</a>\n            </td>\n            <td>{{ network.Addr }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/placementPreferences.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="service.ServicePreferences" id="service-placement-preferences">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Placement preferences">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating || addPlacementPreference(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> placement preference\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServicePreferences.length === 0">\n      <p>There are no placement preferences for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServicePreferences.length > 0" classes="no-padding">\n      <table class="table">\n        <thead>\n          <tr>\n            <th>Strategy</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="preference in service.ServicePreferences">\n            <td>\n              <div class="input-group input-group-sm">\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="preference.strategy"\n                  placeholder="e.g. node.role"\n                  ng-change="updatePlacementPreference(service, preference)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="preference.value"\n                  placeholder="e.g. manager"\n                  ng-change="updatePlacementPreference(service, preference)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementPreference(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServicePreferences\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServicePreferences\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/ports.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Published ports">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addPublishedPort(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> port mapping\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="!service.Ports || service.Ports.length === 0">\n      <p>This service has no ports published.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.Ports && service.Ports.length > 0" classes="no-padding">\n      <table class="table">\n        <thead>\n          <tr>\n            <th>Host port</th>\n            <th>Container port</th>\n            <th>Protocol</th>\n            <th>Publish mode</th>\n            <th authorization="DockerServiceUpdate">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="portBinding in service.Ports">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon">host</span>\n                <input\n                  type="number"\n                  class="form-control"\n                  ng-model="portBinding.PublishedPort"\n                  placeholder="e.g. 8080"\n                  ng-change="updatePublishedPort(service, mapping)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon">container</span>\n                <input\n                  type="number"\n                  class="form-control"\n                  ng-model="portBinding.TargetPort"\n                  placeholder="e.g. 80"\n                  ng-change="updatePublishedPort(service, mapping)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select\n                  class="selectpicker form-control"\n                  ng-model="portBinding.Protocol"\n                  ng-change="updatePublishedPort(service, mapping)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                >\n                  <option value="tcp">tcp</option>\n                  <option value="udp">udp</option>\n                </select>\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select\n                  class="selectpicker form-control"\n                  ng-model="portBinding.PublishMode"\n                  ng-change="updatePublishedPort(service, mapping)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                >\n                  <option value="ingress">ingress</option>\n                  <option value="host">host</option>\n                </select>\n              </div>\n            </td>\n            <td authorization="DockerServiceUpdate">\n              <span class="input-group-btn">\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removePortPublishedBinding(service, $index)" ng-disabled="isUpdating">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'Ports\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'Ports\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/resources.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-resources">\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title-text="Resource limits and reservations"> </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td style="vertical-align: middle;">\n              Memory reservation (MB)\n            </td>\n            <td>\n              <input\n                class="input-sm"\n                type="number"\n                step="0.125"\n                min="0"\n                ng-model="service.ReservationMemoryBytes"\n                ng-change="updateServiceAttribute(service, \'ReservationMemoryBytes\')"\n                disable-authorization="DockerServiceUpdate"\n              />\n            </td>\n            <td style="vertical-align: middle;">\n              <p class="small text-muted">\n                Minimum memory available on a node to run a task (set to 0 for unlimited)\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td style="vertical-align: middle;">\n              Memory limit (MB)\n            </td>\n            <td>\n              <input\n                class="input-sm"\n                type="number"\n                step="0.125"\n                min="0"\n                ng-model="service.LimitMemoryBytes"\n                ng-change="updateServiceAttribute(service, \'LimitMemoryBytes\')"\n                disable-authorization="DockerServiceUpdate"\n              />\n            </td>\n            <td style="vertical-align: middle;">\n              <p class="small text-muted">\n                Maximum memory usage per task (set to 0 for unlimited)\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td style="vertical-align: middle;">\n              <div>\n                CPU reservation\n              </div>\n            </td>\n            <td>\n              <slider\n                model="service.ReservationNanoCPUs"\n                floor="0"\n                ceil="state.sliderMaxCpu"\n                step="0.25"\n                precision="2"\n                ng-if="service && state.sliderMaxCpu"\n                on-change="updateServiceAttribute(service, \'ReservationNanoCPUs\')"\n                disable-authorization="DockerServiceUpdate"\n              ></slider>\n            </td>\n            <td style="vertical-align: middle;">\n              <p class="small text-muted">\n                Minimum CPU available on a node to run a task\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td style="vertical-align: middle;">\n              <div>\n                CPU limit\n              </div>\n            </td>\n            <td>\n              <slider\n                model="service.LimitNanoCPUs"\n                floor="0"\n                ceil="state.sliderMaxCpu"\n                step="0.25"\n                precision="2"\n                ng-if="service && state.sliderMaxCpu"\n                on-change="updateServiceAttribute(service, \'LimitNanoCPUs\')"\n                disable-authorization="DockerServiceUpdate"\n              ></slider>\n            </td>\n            <td style="vertical-align: middle;">\n              <p class="small text-muted">\n                Maximum CPU usage per task\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button\n            type="button"\n            class="btn btn-primary btn-sm"\n            ng-disabled="!hasChanges(service, [\'LimitNanoCPUs\', \'LimitMemoryBytes\', \'ReservationNanoCPUs\', \'ReservationMemoryBytes\'])"\n            ng-click="updateService(service)"\n            >Apply changes</button\n          >\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'LimitNanoCPUs\', \'LimitMemoryBytes\', \'ReservationNanoCPUs\', \'ReservationMemoryBytes\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/restart.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-restart-policy">\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title-text="Restart policy"> </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td>Restart condition</td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select\n                  class="selectpicker form-control"\n                  ng-model="service.RestartCondition"\n                  ng-change="updateServiceAttribute(service, \'RestartCondition\')"\n                  disable-authorization="DockerServiceUpdate"\n                >\n                  <option value="none">None</option>\n                  <option value="on-failure">On failure</option>\n                  <option value="any">Any</option>\n                </select>\n              </div>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Condition for restart.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Restart delay</td>\n            <td>\n              <input\n                class="input-sm"\n                type="text"\n                ng-model="service.RestartDelay"\n                ng-change="updateServiceAttribute(service, \'RestartDelay\')"\n                ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i"\n                disable-authorization="DockerServiceUpdate"\n              />\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Delay between restart attempts expressed by a number followed by unit (ns|us|ms|s|m|h). Default value is 5s, 5 seconds.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Restart max attempts</td>\n            <td>\n              <input\n                class="input-sm"\n                type="number"\n                ng-model="service.RestartMaxAttempts"\n                ng-change="updateServiceAttribute(service, \'RestartMaxAttempts\')"\n                disable-authorization="DockerServiceUpdate"\n              />\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Maximum attempts to restart a given task before giving up (default value is 0, which means unlimited).\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Restart window</td>\n            <td>\n              <input\n                class="input-sm"\n                type="text"\n                ng-model="service.RestartWindow"\n                ng-change="updateServiceAttribute(service, \'RestartWindow\')"\n                ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i"\n                disable-authorization="DockerServiceUpdate"\n              />\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Time window to evaluate restart attempts expressed by a number followed by unit (ns|us|ms|s|m|h). Default value is 0 seconds, which is unbounded.\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button\n            type="button"\n            class="btn btn-primary btn-sm"\n            ng-disabled="!hasChanges(service, [\'RestartCondition\', \'RestartDelay\', \'RestartMaxAttempts\', \'RestartWindow\'])"\n            ng-click="updateService(service)"\n            >Apply changes</button\n          >\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'RestartCondition\', \'RestartDelay\', \'RestartMaxAttempts\', \'RestartWindow\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/secrets.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="applicationState.endpoint.apiVersion >= 1.25" id="service-secrets">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Secrets"> </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="form-inline" style="padding: 10px;" authorization="DockerServiceUpdate">\n        Add a secret:\n        <select class="form-control" ng-options="secret.Name for secret in secrets | orderBy: \'Name\'" ng-model="state.addSecret.secret">\n          <option selected disabled hidden value="">Select a secret</option>\n        </select>\n        <div class="form-group" ng-if="applicationState.endpoint.apiVersion >= 1.3 && state.addSecret.override">\n          Target:\n          <input class="form-control" ng-model="state.addSecret.target" placeholder="/path/in/container" />\n        </div>\n        <div class="btn-group btn-group-sm" ng-if="applicationState.endpoint.apiVersion >= 1.3">\n          <label class="btn btn-primary" ng-model="state.addSecret.override" uib-btn-radio="false">Default location</label>\n          <label class="btn btn-primary" ng-model="state.addSecret.override" uib-btn-radio="true">Override</label>\n        </div>\n        <a class="btn btn-default btn-sm" ng-click="addSecret(service, state.addSecret)"> <i class="fa fa-plus-circle" aria-hidden="true"></i> add secret </a>\n      </div>\n      <table class="table" style="margin-top: 5px;">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>File name</th>\n            <th>UID</th>\n            <th>GID</th>\n            <th>Mode</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="secret in service.ServiceSecrets">\n            <td\n              ><a ui-sref="docker.secrets.secret({id: secret.Id})">{{ secret.Name }}</a></td\n            >\n            <td>{{ secret.FileName }}</td>\n            <td>{{ secret.Uid }}</td>\n            <td>{{ secret.Gid }}</td>\n            <td>{{ secret.Mode }}</td>\n            <td authorization="DockerServiceUpdate">\n              <button class="btn btn-xs btn-danger pull-right" type="button" ng-click="removeSecret(service, $index)" ng-disabled="isUpdating">\n                <i class="fa fa-trash" aria-hidden="true"></i> Remove secret\n              </button>\n            </td>\n          </tr>\n          <tr ng-if="service.ServiceSecrets.length === 0">\n            <td colspan="6" class="text-center text-muted">No secrets associated to this service.</td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceSecrets\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceSecrets\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/servicelabels.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-labels">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Service labels">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating || addLabel(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> label\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceLabels.length === 0">\n      <p>There are no labels for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body classes="no-padding" ng-if="service.ServiceLabels.length > 0">\n      <table class="table">\n        <thead>\n          <tr>\n            <th>\n              Label\n            </th>\n            <th>\n              Value\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="label in service.ServiceLabels">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">name</span>\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="label.key"\n                  placeholder="e.g. com.example.foo"\n                  ng-change="updateLabel(service, label)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">value</span>\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="label.value"\n                  placeholder="e.g. bar"\n                  ng-change="updateLabel(service, label)"\n                  ng-disabled="isUpdating"\n                  disable-authorization="DockerServiceUpdate"\n                />\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceLabels\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceLabels\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/tasks.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="tasks.length > 0 && nodes" id="service-tasks">\n  <tasks-datatable\n    title-text="Tasks"\n    title-icon="fa-tasks"\n    dataset="tasks"\n    table-key="service-tasks"\n    order-by="Updated"\n    reverse-order="true"\n    nodes="nodes"\n    show-slot-column="service.Mode !== \'global\'"\n    show-logs-button="applicationState.endpoint.apiVersion >= 1.30"\n    agent-proxy="applicationState.endpoint.mode.agentProxy"\n  ></tasks-datatable>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/updateconfig.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-update-config">\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title-text="Update configuration"> </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td>Update Parallelism</td>\n            <td>\n              <input\n                class="input-sm"\n                type="number"\n                ng-model="service.UpdateParallelism"\n                ng-change="updateServiceAttribute(service, \'UpdateParallelism\')"\n                disable-authorization="DockerServiceUpdate"\n              />\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Maximum number of tasks to be updated simultaneously (0 to update all at once).\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Update Delay</td>\n            <td>\n              <input\n                class="input-sm"\n                type="text"\n                ng-model="service.UpdateDelay"\n                ng-change="updateServiceAttribute(service, \'UpdateDelay\')"\n                ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i"\n                disable-authorization="DockerServiceUpdate"\n              />\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Amount of time between updates expressed by a number followed by unit (ns|us|ms|s|m|h). Example: 1m.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Update Failure Action</td>\n            <td>\n              <div class="form-group">\n                <label class="radio-inline">\n                  <input\n                    type="radio"\n                    name="failure_action"\n                    ng-model="service.UpdateFailureAction"\n                    value="continue"\n                    ng-change="updateServiceAttribute(service, \'UpdateFailureAction\')"\n                    disable-authorization="DockerServiceUpdate"\n                  />\n                  Continue\n                </label>\n                <label class="radio-inline">\n                  <input\n                    type="radio"\n                    name="failure_action"\n                    ng-model="service.UpdateFailureAction"\n                    value="pause"\n                    ng-change="updateServiceAttribute(service, \'UpdateFailureAction\')"\n                    disable-authorization="DockerServiceUpdate"\n                  />\n                  Pause\n                </label>\n              </div>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Action taken on failure to start after update.\n              </p>\n            </td>\n          </tr>\n          <tr ng-if="applicationState.endpoint.apiVersion >= 1.29">\n            <td>Order</td>\n            <td>\n              <div class="form-group">\n                <label class="radio-inline">\n                  <input\n                    type="radio"\n                    name="updateconfig_order"\n                    ng-model="service.UpdateOrder"\n                    value="start-first"\n                    ng-change="updateServiceAttribute(service, \'UpdateOrder\')"\n                    disable-authorization="DockerServiceUpdate"\n                  />\n                  start-first\n                </label>\n                <label class="radio-inline">\n                  <input\n                    type="radio"\n                    name="updateconfig_order"\n                    ng-model="service.UpdateOrder"\n                    value="stop-first"\n                    ng-change="updateServiceAttribute(service, \'UpdateOrder\')"\n                    disable-authorization="DockerServiceUpdate"\n                  />\n                  stop-first\n                </label>\n              </div>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Operation order on failure.\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button\n            type="button"\n            class="btn btn-primary btn-sm"\n            ng-disabled="!hasChanges(service, [\'UpdateFailureAction\', \'UpdateDelay\', \'UpdateParallelism\', \'UpdateOrder\'])"\n            ng-click="updateService(service)"\n            >Apply changes</button\n          >\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'UpdateFailureAction\', \'UpdateDelay\', \'UpdateParallelism\', \'UpdateOrder\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(3),r=n.n(a);angular.module("portainer.docker").controller("ServiceLogsController",["$scope","$transition$","$interval","ServiceService","Notifications",function(e,t,n,a,i){function o(){var t=e.repeater;angular.isDefined(t)&&(n.cancel(t),t=null)}function s(){var s=e.state.refreshRate;e.repeater=n((function(){a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount).then((function(t){e.logs=t})).catch((function(e){o(),i.error("Failure",e,"Unable to retrieve service logs")}))}),1e3*s)}e.state={refreshRate:3,lineCount:100,sinceTimestamp:"",displayTimestamps:!1},e.changeLogCollection=function(e){e?s():o()},e.$on("$destroy",(function(){o()})),a.service(t.params().id).then((function(n){e.service=n,a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount).then((function(t){e.logs=t,s()})).catch((function(e){o(),i.error("Failure",e,"Unable to retrieve service logs")}))})).catch((function(e){i.error("Failure",e,"Unable to retrieve service information")}))}])},function(e,t){angular.module("portainer.docker").controller("ServicesController",["$q","$scope","ServiceService","ServiceHelper","Notifications","TaskService","TaskHelper","NodeService","ContainerService",function(e,t,n,a,r,i,o,s,l){function c(){var c=t.applicationState.endpoint.mode.agentProxy;e.all({services:n.services(),tasks:i.tasks(),containers:c?l.containers(1):[],nodes:s.nodes()}).then((function(e){var n=e.services,r=e.tasks;if(c)for(var i=e.containers,s=0;s<r.length;s++){var l=r[s];o.associateContainerToTask(l,i)}for(var d=0;d<n.length;d++){var u=n[d];a.associateTasksToService(u,r)}t.nodes=e.nodes,t.tasks=r,t.services=n})).catch((function(e){t.services=[],r.error("Failure",e,"Unable to retrieve services")}))}t.getServices=c,c()}])},function(e,t){angular.module("portainer.docker").controller("SwarmController",["$q","$scope","SystemService","NodeService","Notifications","StateManager","Authentication",function(e,t,n,a,r,i,o){function s(e){var n=e.SystemStatus;t.swarm[n[1][0]]=n[1][1],t.swarm[n[2][0]]=n[2][1];var a="primary"===n[0][1]?n[3][1]:n[4][1],r=parseInt(a,10);t.swarm[n[3][0]]=r,t.swarm.Status=[],function(e,t){for(var n="primary"===e[0][1]?4:5,a=0;a<t;a++)l(e,n),n+=9}(n,r)}function l(e,n){var a={};a.name=e[n][0],a.ip=e[n][1],a.Id=e[n+1][1],a.status=e[n+2][1],a.containers=e[n+3][1],a.cpu=e[n+4][1].split("/")[1],a.memory=e[n+5][1].split("/")[1],a.labels=e[n+6][1],a.version=e[n+8][1],t.swarm.Status.push(a)}function c(){"DOCKER_SWARM_MODE"===t.applicationState.endpoint.mode.provider&&a.nodes().then((function(e){var n=e;!function(e){var n=0,a=0;angular.forEach(e,(function(e){n+=e.CPUs,a+=e.Memory})),t.totalCPU=n/1e9,t.totalMemory=a}(n),t.nodes=n})).catch((function(e){r.error("Failure",e,"Unable to retrieve cluster details")}))}t.info={},t.docker={},t.swarm={},t.totalCPU=0,t.totalMemory=0,t.getNodes=c,function(){i.getState().application.authentication&&(t.isAdmin=o.isAdmin());var a=t.applicationState.endpoint.mode.provider;e.all({version:n.version(),info:n.info()}).then((function(e){t.docker=e.version,t.info=e.info,"DOCKER_SWARM_MODE"===a?c():s(e.info)})).catch((function(e){r.error("Failure",e,"Unable to retrieve cluster details")}))}()}])},function(e,t,n){(function(e){angular.module("portainer.docker").controller("SwarmVisualizerController",["$q","$scope","$document","$interval","NodeService","ServiceService","TaskService","Notifications","LocalStorage",function(t,n,a,r,i,o,s,l,c){function d(){var e=n.repeater;angular.isDefined(e)&&(r.cancel(e),e=null)}function u(){var e=n.state.refreshRate;n.repeater=r((function(){t.all({nodes:i.nodes(),services:o.services(),tasks:s.tasks()}).then((function(e){var t=e.nodes;n.nodes=t;var a=e.services;n.services=a;var r=e.tasks;n.tasks=r,p(t,a,r)})).catch((function(e){d(),l.error("Failure",e,"Unable to retrieve cluster information")}))}),1e3*e)}function p(e,t,a){var r={};!function(e,t){for(var n=0;n<e.length;n++)for(var a=e[n],r=0;r<t.length;r++){var i=t[r];i.ServiceId===a.Id&&(i.ServiceName=a.Name)}}(t,a),function(e,t){for(var n=0;n<e.length;n++){var a=e[n];a.Tasks=[];for(var r=0;r<t.length;r++){var i=t[r];i.NodeId===a.Id&&a.Tasks.push(i)}}}(e,a),r.nodes=e,n.visualizerData=r}n.state={ShowInformationPanel:!0,DisplayOnlyRunningTasks:!1,DisplayNodeLabels:!1,refreshRate:"5"},n.$on("$destroy",(function(){d()})),n.changeShowInformationPanel=function(e){n.state.ShowInformationPanel=e,c.storeSwarmVisualizerSettings("show_info_panel",e)},n.changeDisplayOnlyRunningTasks=function(){var e=n.state.DisplayOnlyRunningTasks;c.storeSwarmVisualizerSettings("display_only_running_tasks",e)},n.changeDisplayNodeLabels=function(){var e=n.state.DisplayNodeLabels;c.storeSwarmVisualizerSettings("display_node_labels",e)},n.changeUpdateRepeater=function(){d(),u(),e("#refreshRateChange").show(),e("#refreshRateChange").fadeOut(1500),c.storeSwarmVisualizerSettings("refresh_rate",n.state.refreshRate)},t.all({nodes:i.nodes(),services:o.services(),tasks:s.tasks()}).then((function(e){var t=e.nodes;n.nodes=t;var a=e.services;n.services=a;var r=e.tasks;n.tasks=r,p(t,a,r),u()})).catch((function(e){l.error("Failure",e,"Unable to initialize cluster visualizer")})),function(){var e=c.getSwarmVisualizerSettings("show_info_panel");null!=e&&(n.state.ShowInformationPanel=e);var t=c.getSwarmVisualizerSettings("display_only_running_tasks");null!=t&&(n.state.DisplayOnlyRunningTasks=t);var a=c.getSwarmVisualizerSettings("display_node_labels");null!=a&&(n.state.DisplayNodeLabels=a);var r=c.getSwarmVisualizerSettings("refresh_rate");null!=r&&(n.state.refreshRate=r)}()}])}).call(this,n(19))},function(e,t){angular.module("portainer.docker").controller("TaskController",["$scope","$transition$","TaskService","ServiceService","Notifications",function(e,t,n,a,r){n.task(t.params().id).then((function(t){var n=t;return e.task=n,a.service(n.ServiceId)})).then((function(t){var n=t;e.service=n})).catch((function(e){r.error("Failure",e,"Unable to retrieve task details")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(3),r=n.n(a);angular.module("portainer.docker").controller("TaskLogsController",["$scope","$transition$","$interval","TaskService","ServiceService","Notifications",function(e,t,n,a,i,o){function s(){var t=e.repeater;angular.isDefined(t)&&(n.cancel(t),t=null)}function l(){var i=e.state.refreshRate;e.repeater=n((function(){a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount).then((function(t){e.logs=t})).catch((function(e){s(),o.error("Failure",e,"Unable to retrieve task logs")}))}),1e3*i)}e.state={refreshRate:3,lineCount:100,sinceTimestamp:"",displayTimestamps:!1},e.changeLogCollection=function(e){e?l():s()},e.$on("$destroy",(function(){s()})),a.task(t.params().id).then((function(t){var n=t;return e.task=n,i.service(n.ServiceId)})).then((function(n){var i=n;e.service=i,a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount).then((function(t){e.logs=t,l()})).catch((function(e){s(),o.error("Failure",e,"Unable to retrieve task logs")}))})).catch((function(e){o.error("Failure",e,"Unable to retrieve task details")}))}])},function(e,t){angular.module("portainer.docker").controller("BrowseVolumeController",["$scope","$transition$","StateManager",function(e,t,n){e.volumeId=t.params().id,e.nodeName=t.params().nodeName,e.agentApiVersion=n.getAgentApiVersion()}])},function(e,t,n){"use strict";n.r(t);var a=n(32),r=n(296),i=n(295);angular.module("portainer.docker").controller("CreateVolumeController",["$q","$scope","$state","VolumeService","PluginService","ResourceControlService","Authentication","Notifications","FormValidator","HttpRequestHelper",function(e,t,n,o,s,l,c,d,u,p){var m,g;t.formValues={Driver:"local",DriverOptions:[],AccessControlData:new a.AccessControlFormData,NodeName:null,NFSData:new r.VolumesNFSFormData,CIFSData:new i.VolumesCIFSFormData},t.state={formValidationError:"",actionInProgress:!1},t.availableVolumeDrivers=[],t.addDriverOption=function(){t.formValues.DriverOptions.push({name:"",value:""})},t.removeDriverOption=function(e){t.formValues.DriverOptions.splice(e,1)},t.create=function(){var e=t.formValues.Name,a=t.formValues.Driver,r=t.formValues.DriverOptions,i=t.formValues.StoridgeProfile;"cio:latest"===a&&i&&r.push({name:"profile",value:i.Name}),t.formValues.NFSData.useNFS&&function(e){var n=t.formValues.NFSData;e.push({name:"type",value:n.version.toLowerCase()});var a="addr="+n.serverAddress+","+n.options;e.push({name:"o",value:a});var r=":"===n.mountPoint[0]?n.mountPoint:":"+n.mountPoint;e.push({name:"device",value:r})}(r),t.formValues.CIFSData.useCIFS&&function(e){var n=t.formValues.CIFSData;e.push({name:"type",value:"cifs"});var a=n.share.replace("\\","/");"/"!==a[0]&&(a="/"+a);var r="//"+n.serverAddress+a;e.push({name:"device",value:r});var i=n.versionsNumber[n.versions.indexOf(n.version)],o="username="+n.username+",password="+n.password+",vers="+i;e.push({name:"o",value:o})}(r);var s=o.createVolumeConfiguration(e,a,r),m=t.formValues.AccessControlData,g=c.getUserDetails(),f=c.isAdmin();if(function(e,n){var a;return t.state.formValidationError="",!(a=u.validateAccessControl(e,n))||(t.state.formValidationError=a,!1)}(m,f)){var v=t.formValues.NodeName;p.setPortainerAgentTargetHeader(v),t.state.actionInProgress=!0,o.createVolume(s).then((function(e){var t=g.ID,n=e.ResourceControl;return l.applyResourceControl(t,m,n)})).then((function(){d.success("Volume successfully created"),n.go("docker.volumes",{},{reload:!0})})).catch((function(e){d.error("Failure",e,"An error occured during volume creation")})).finally((function(){t.state.actionInProgress=!1}))}},m=t.applicationState.endpoint.apiVersion,g=t.applicationState.endpoint.mode.provider,s.volumePlugins(m<1.25||"VMWARE_VIC"===g).then((function(e){t.availableVolumeDrivers=e})).catch((function(e){d.error("Failure",e,"Unable to retrieve volume drivers")}))}])},function(e,t){angular.module("portainer.docker").controller("VolumeController",["$scope","$state","$transition$","$q","ModalService","VolumeService","ContainerService","Notifications","HttpRequestHelper","StoridgeVolumeService","StoridgeSnapshotService",function(e,t,n,a,r,i,o,s,l,c,d){e.storidgeSnapshots=[],e.storidgeVolume={},e.removeSnapshot=function(n){r.confirm({title:"Are you sure?",message:"Do you want really want to remove this snapshot?",buttons:{confirm:{label:"Remove",className:"btn-danger"}},callback:function(a){if(a){var r=n.length;angular.forEach(n,(function(n){d.remove(n.Id).then((function(){s.success("Snapshot successfully removed",n.Id);var t=e.storidgeSnapshots.indexOf(n);e.storidgeSnapshots.splice(t,1)})).catch((function(e){s.error("Failure",e,"Unable to remove snapshot")})).finally((function(){0===--r&&t.reload()}))}))}}})},e.removeVolume=function(){i.remove(e.volume).then((function(){s.success("Volume successfully removed",n.params().id),t.go("docker.volumes",{})})).catch((function(e){s.error("Failure",e,"Unable to remove volume")}))},l.setPortainerAgentTargetHeader(n.params().nodeName),i.volume(n.params().id).then((function(t){var r=t;e.volume=r;var i={volume:[r.Id]};return e.isCioDriver=r.Driver.includes("cio"),e.isCioDriver?a.all({containers:o.containers(1,i),storidgeVolume:c.volume(n.params().id)}):o.containers(1,i)})).then((function(t){var n=(e.isCioDriver?t.containers:t).map((function(t){return t.volumeData=function(e,t){return e.Mounts.find((function(e){return e.Name===t}))}(t,e.volume.Id),t}));if(e.containersUsingVolume=n,e.isCioDriver&&(e.storidgeVolume=t.storidgeVolume,e.storidgeVolume.SnapshotEnabled))return d.snapshots(t.storidgeVolume.Vdisk)})).then((function(t){e.storidgeSnapshots=t})).catch((function(e){s.error("Failure",e,"Unable to retrieve volume details")}))}])},function(e,t){angular.module("portainer.docker").controller("VolumesController",["$q","$scope","$state","VolumeService","ServiceService","VolumeHelper","Notifications","HttpRequestHelper","EndpointProvider","Authentication","ExtensionService",function(e,t,n,a,r,i,o,s,l,c,d){function u(){var n=t.applicationState.endpoint.mode.provider,s=t.applicationState.endpoint.mode.role;e.all({attached:a.volumes({filters:{dangling:["false"]}}),dangling:a.volumes({filters:{dangling:["true"]}}),services:"DOCKER_SWARM_MODE"===n&&"MANAGER"===s?r.services():[]}).then((function(e){var n=e.services;t.offlineMode=l.offlineMode(),t.volumes=e.attached.map((function(e){return e.dangling=!1,e})).concat(e.dangling.map((function(e){return e.dangling=!0,i.isVolumeUsedByAService(e,n)&&(e.dangling=!1),e})))})).catch((function(e){o.error("Failure",e,"Unable to retrieve volumes")}))}t.removeAction=function(e){var r=e.length;angular.forEach(e,(function(e){s.setPortainerAgentTargetHeader(e.NodeName),a.remove(e).then((function(){o.success("Volume successfully removed",e.Id);var n=t.volumes.indexOf(e);t.volumes.splice(n,1)})).catch((function(e){o.error("Failure",e,"Unable to remove volume")})).finally((function(){0===--r&&n.reload()}))}))},t.offlineMode=!1,t.getVolumes=u,u(),t.showBrowseAction=t.applicationState.endpoint.mode.agentProxy,t.applicationState.application.authentication&&d.extensionEnabled(d.EXTENSIONS.RBAC).then((function(e){if(!e){var n=c.isAdmin();t.applicationState.application.enableVolumeBrowserForNonAdminUsers||n||(t.showBrowseAction=!1)}}))}])},function(e,t,n){var a=n(971);angular.module("portainer.edge").component("associatedEndpointsDatatable",{templateUrl:a,controller:"AssociatedEndpointsDatatableController",bindings:{titleText:"@",titleIcon:"@",tableKey:"@",orderBy:"@",reverseOrder:"<",retrievePage:"<",updateKey:"<"}})},function(e,t){var n="app/edge/components/associated-endpoints-datatable/associatedEndpointsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          auto-focus\n          placeholder="Search..."\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'GroupName\')">\n                  Group\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'GroupName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'GroupName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in $ctrl.state.filteredDataSet | itemsPerPage: $ctrl.state.paginatedItemLimit"\n              total-items="$ctrl.state.totalFilteredDataSet"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span>{{ item.Name }}</span>\n              </td>\n\n              <td>{{ item.GroupName }}</td>\n            </tr>\n            <tr ng-if="$ctrl.state.loading">\n              <td colspan="5" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="!$ctrl.state.loading && $ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">No endpoint available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="!$ctrl.state.loading">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5" on-page-change="$ctrl.onPageChange(newPageNumber, oldPageNumber)"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var o=function(){function e(t,n,a,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.extendGenericController(n,t),this.DatatableService=a,this.PaginationService=r,this.state=Object.assign(this.state,{orderBy:this.orderBy,loading:!0,filteredDataSet:[],totalFilteredDataset:0,pageNumber:1}),this.onPageChange=this.onPageChange.bind(this),this.paginationChanged=this.paginationChanged.bind(this)}var t,n,a;return e.$inject=["$scope","$controller","DatatableService","PaginationService"],t=e,(n=[{key:"extendGenericController",value:function(e,t){var n=this.$onInit.bind(this),a=this.changePaginationLimit.bind(this),i=this.onTextFilterChange.bind(this);r.a.extend(this,e("GenericDatatableController",{$scope:t})),this.$onInit=n,this.changePaginationLimit=a,this.onTextFilterChange=i}},{key:"$onInit",value:function(){this.setDefaults(),this.prepareTableFromDataset();var e=this.DatatableService.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=this.DatatableService.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var n=this.DatatableService.getDataTableFilters(this.tableKey);null!==n&&(this.filters=n),this.filters&&this.filters.state&&(this.filters.state.open=!1),this.paginationChanged()}},{key:"$onChanges",value:function(e){var t=e.updateKey;t.currentValue&&!t.isFirstChange()&&this.paginationChanged()}},{key:"onPageChange",value:function(e){this.state.pageNumber=e,this.paginationChanged()}},{key:"changePaginationLimit",value:function(){this.PaginationService.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit),this.paginationChanged()}},{key:"onTextFilterChange",value:function(){var e=this.state.textFilter;this.DatatableService.setDataTableTextFilters(this.tableKey,e),this.paginationChanged()}},{key:"paginationChanged",value:function(){var e=this;this.state.loading=!0,this.state.filteredDataSet=[];var t=(this.state.pageNumber-1)*this.state.paginatedItemLimit+1;this.retrievePage(t,this.state.paginatedItemLimit,this.state.textFilter).then((function(t){e.state.filteredDataSet=t.endpoints,e.state.totalFilteredDataSet=t.totalCount})).finally((function(){e.state.loading=!1}))}}])&&i(t.prototype,n),a&&i(t,a),e}();r.a.module("portainer.edge").controller("AssociatedEndpointsDatatableController",o),t.default=o},function(e,t,n){var a=n(974);angular.module("portainer.edge").component("edgeGroupsSelector",{templateUrl:a,bindings:{model:"=",items:"<"}})},function(e,t){var n="app/edge/components/edge-groups-selector/edge-groups-selector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<ui-select\n  multiple\n  ng-model="$ctrl.model"\n  close-on-select="false"\n>\n  <ui-select-match placeholder="Select one or multiple group(s)">\n    <span>\n      {{ $item.Name }}\n    </span>\n  </ui-select-match>\n  <ui-select-choices\n    repeat="item.Id as item in $ctrl.items | filter: { Name: $select.search }"\n  >\n    <span>\n      {{ item.Name }}\n    </span>\n  </ui-select-choices>\n</ui-select>\n')}]),e.exports=n},function(e,t,n){var a=n(976);angular.module("portainer.edge").component("edgeStackEndpointsDatatable",{templateUrl:a,controller:"EdgeStackEndpointsDatatableController",bindings:{titleText:"@",titleIcon:"@",tableKey:"@",orderBy:"@",reverseOrder:"<",retrievePage:"<"}})},function(e,t){var n="app/edge/components/edge-stack-endpoints-datatable/edgeStackEndpointsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          auto-focus\n          placeholder="Search..."\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  Status\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Error\')">\n                  Error\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Error\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Error\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in $ctrl.state.filteredDataSet | itemsPerPage: $ctrl.state.paginatedItemLimit"\n              total-items="$ctrl.state.totalFilteredDataSet"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>{{ item.Name }}</td>\n              <td>{{ $ctrl.statusMap[item.Status.Type] || \'Pending\' }}</td>\n              <td>{{ item.Status.Error ? item.Status.Error : \'-\' }}</td>\n            </tr>\n            <tr ng-if="$ctrl.state.loading">\n              <td colspan="5" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="!$ctrl.state.loading && $ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">No endpoint available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="!$ctrl.state.loading">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5" on-page-change="$ctrl.onPageChange(newPageNumber, oldPageNumber)"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function o(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var s=function(){function e(t,n,a,r,i,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.extendGenericController(a,n),this.DatatableService=r,this.PaginationService=i,this.Notifications=o,this.$async=t,this.state=Object.assign(this.state,{orderBy:this.orderBy,loading:!0,filteredDataSet:[],totalFilteredDataset:0,pageNumber:1}),this.onPageChange=this.onPageChange.bind(this),this.paginationChanged=this.paginationChanged.bind(this),this.paginationChangedAsync=this.paginationChangedAsync.bind(this),this.statusMap={1:"OK",2:"Error",3:"Acknowledged"}}var t,n,a,s,l;return e.$inject=["$async","$scope","$controller","DatatableService","PaginationService","Notifications"],t=e,(n=[{key:"extendGenericController",value:function(e,t){var n=this.$onInit.bind(this),a=this.changePaginationLimit.bind(this),i=this.onTextFilterChange.bind(this);r.a.extend(this,e("GenericDatatableController",{$scope:t})),this.$onInit=n,this.changePaginationLimit=a,this.onTextFilterChange=i}},{key:"$onInit",value:function(){this.setDefaults(),this.prepareTableFromDataset();var e=this.DatatableService.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=this.DatatableService.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var n=this.DatatableService.getDataTableFilters(this.tableKey);null!==n&&(this.filters=n),this.filters&&this.filters.state&&(this.filters.state.open=!1),this.paginationChanged()}},{key:"onPageChange",value:function(e){this.state.pageNumber=e,this.paginationChanged()}},{key:"changePaginationLimit",value:function(){this.PaginationService.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit),this.paginationChanged()}},{key:"onTextFilterChange",value:function(){var e=this.state.textFilter;this.DatatableService.setDataTableTextFilters(this.tableKey,e),this.paginationChanged()}},{key:"paginationChanged",value:function(){this.$async(this.paginationChangedAsync)}},{key:"paginationChangedAsync",value:(s=regeneratorRuntime.mark((function e(){var t,n,a,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.state.loading=!0,this.state.filteredDataSet=[],t=(this.state.pageNumber-1)*this.state.paginatedItemLimit+1,e.prev=3,e.next=6,this.retrievePage(t,this.state.paginatedItemLimit,this.state.textFilter);case 6:n=e.sent,a=n.endpoints,r=n.totalCount,this.state.filteredDataSet=a,this.state.totalFilteredDataSet=r,e.next=16;break;case 13:e.prev=13,e.t0=e.catch(3),this.Notifications.error("Failure",e.t0,"Unable to retrieve endpoints");case 16:return e.prev=16,this.state.loading=!1,e.finish(16);case 19:case"end":return e.stop()}}),e,this,[[3,13,16,19]])})),l=function(){var e=this,t=arguments;return new Promise((function(n,a){var r=s.apply(e,t);function o(e){i(r,n,a,o,l,"next",e)}function l(e){i(r,n,a,o,l,"throw",e)}o(void 0)}))},function(){return l.apply(this,arguments)})}])&&o(t.prototype,n),a&&o(t,a),e}();r.a.module("portainer.edge").controller("EdgeStackEndpointsDatatableController",s),t.default=s},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),i=(n(980),n(979));r.a.module("portainer.edge").component("edgeStackStatus",{templateUrl:i,controller:"EdgeStackStatusController",bindings:{stackStatus:"<"}})},function(e,t){var n="app/edge/components/edge-stack-status/edgeStackStatus.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<span class="status" title="Acknowledged endpoints"><i class="acknowledged icon"></i>{{ $ctrl.status.acknowledged || 0 }}</span>\n<span class="status" title="Successful endpoints"><i class="ok icon"></i>{{ $ctrl.status.ok || 0 }}</span>\n<span class="status" title="Failed endpoints"><i class="error icon"></i>{{ $ctrl.status.error || 0 }}</span>\n')}]),e.exports=n},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var o={1:"ok",2:"error",3:"acknowledged"},s=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,a;return t=e,(n=[{key:"$onChanges",value:function(e){var t=e.stackStatus;if(t&&t.currentValue){var n={ok:0,error:0,acknowledged:0};for(var a in t.currentValue){var r=t.currentValue[a];n[o[r.Type]]++}this.status=n}}}])&&i(t.prototype,n),a&&i(t,a),e}();r.a.module("portainer.edge").controller("EdgeStackStatusController",s),t.default=s},function(e,t,n){var a=n(983);angular.module("portainer.edge").component("edgeStacksDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<",refreshCallback:"<"}})},function(e,t){var n="app/edge/components/edge-stacks-datatable/edgeStacksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i>\n          Edge Stacks\n        </div>\n        <div class="settings">\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle> <i class="fa fa-cog" aria-hidden="true"></i> Settings </span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Table settings\n                </div>\n                <div class="menuContent">\n                  <div>\n                    <div class="md-checkbox">\n                      <input id="setting_auto_refresh" type="checkbox" ng-model="$ctrl.settings.repeater.autoRefresh" ng-change="$ctrl.onSettingsRepeaterChange()" />\n                      <label for="setting_auto_refresh">Auto refresh</label>\n                    </div>\n                    <div ng-if="$ctrl.settings.repeater.autoRefresh">\n                      <label for="settings_refresh_rate">\n                        Refresh rate\n                      </label>\n                      <select id="settings_refresh_rate" ng-model="$ctrl.settings.repeater.refreshRate" ng-change="$ctrl.onSettingsRepeaterChange()" class="small-select">\n                        <option value="10">10s</option>\n                        <option value="30">30s</option>\n                        <option value="60">1min</option>\n                        <option value="120">2min</option>\n                        <option value="300">5min</option>\n                      </select>\n                      <span>\n                        <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">\n                    Close\n                  </a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="edge.stacks.new"> <i class="fa fa-plus space-right" aria-hidden="true"></i>Add stack </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                Status\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CreationDate\')">\n                  Creation Date\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreationDate\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreationDate\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" ng-disabled="!$ctrl.allowSelection(item)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="edge.stacks.edit({ stackId: item.Id })">\n                  {{ item.Name }}\n                </a>\n              </td>\n              <td><edge-stack-status stack-status="item.Status"></edge-stack-status></td>\n              <td>{{ item.CreationDate | getisodatefromtimestamp }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="4" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="4" class="text-center text-muted">\n                No stack available.\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(985);angular.module("portainer.edge").component("editEdgeStackForm",{templateUrl:a,controller:"EditEdgeStackFormController",bindings:{model:"<",actionInProgress:"<",submitAction:"<",edgeGroups:"<"}})},function(e,t){var n="app/edge/components/edit-edge-stack-form/editEdgeStackForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal">\n  <div class="col-sm-12 form-section-title">\n    Edge Groups\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <edge-groups-selector model="$ctrl.model.EdgeGroups" items="$ctrl.edgeGroups"></edge-groups-selector>\n    </div>\n  </div>\n\n  \x3c!-- web-editor --\x3e\n  <div class="col-sm-12 form-section-title">\n    Web editor\n  </div>\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      You can get more information about Compose file format in the\n      <a href="https://docs.docker.com/compose/compose-file/" target="_blank">\n        official documentation\n      </a>\n      .\n    </span>\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <code-editor\n        value="$ctrl.model.StackFileContent"\n        identifier="stack-creation-editor"\n        placeholder="# Define or paste the content of your docker-compose file here"\n        yml="true"\n        on-change="($ctrl.editorUpdate)"\n      ></code-editor>\n    </div>\n  </div>\n  \x3c!-- !web-editor --\x3e\n\n  <div class="col-sm-12 form-section-title">\n    Options\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <label for="EnablePrune" class="control-label text-left">\n        Prune services\n        <portainer-tooltip position="bottom" message="Prune services that are not longer referenced in the stack file."></portainer-tooltip>\n      </label>\n      <label class="switch" style="margin-left: 20px;">\n        <input type="checkbox" name="EnablePrune" ng-model="$ctrl.model.Prune" />\n        <i></i>\n      </label>\n    </div>\n  </div>\n\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    Actions\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button\n        type="button"\n        class="btn btn-primary btn-sm"\n        ng-disabled="$ctrl.actionInProgress\n                  || !$ctrl.model.EdgeGroups.length\n                  || !$ctrl.model.StackFileContent"\n        ng-click="$ctrl.submitAction()"\n        button-spinner="$ctrl.actionInProgress"\n      >\n        <span ng-hide="$ctrl.actionInProgress">Update the stack</span>\n        <span ng-show="$ctrl.actionInProgress">Update in progress...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.editorUpdate=this.editorUpdate.bind(this)}var t,n,a;return t=e,(n=[{key:"editorUpdate",value:function(e){this.model.StackFileContent=e.getValue()}}])&&i(t.prototype,n),a&&i(t,a),e}();r.a.module("portainer.edge").controller("EditEdgeStackFormController",o),t.default=o},function(e,t,n){var a=n(988);angular.module("portainer.edge").component("edgeGroupForm",{templateUrl:a,controller:"EdgeGroupFormController",bindings:{model:"<",groups:"<",tags:"<",formActionLabel:"@",formAction:"<",actionInProgress:"<",loaded:"<",pageType:"@"}})},function(e,t){var n="app/edge/components/group-form/groupForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="EdgeGroupForm" ng-submit="$ctrl.formAction()">\n  <div class="form-group">\n    <label for="group_name" class="col-sm-3 col-lg-2 control-label text-left">\n      Name\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="group_name" name="group_name" ng-model="$ctrl.model.Name" required auto-focus />\n    </div>\n  </div>\n  <div class="form-group" ng-show="EdgeGroupForm.group_name.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="EdgeGroupForm.group_name.$error">\n        <p ng-message="required">\n          <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n          This field is required.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div class="col-sm-12 form-section-title">\n    Group type\n  </div>\n  <div class="form-group col-sm-12">\n    <div class="boxselector_wrapper">\n      <div class="boxselector">\n        <input type="radio" id="static-group" ng-model="$ctrl.model.Dynamic" ng-value="false" ng-checked="!$ctrl.model.Dynamic" />\n        <label for="static-group">\n          <div class="boxselector_header">\n            <i class="fa fa-list-ol" aria-hidden="true" style="margin-right: 2px;"></i>\n            Static\n          </div>\n          <p>Manually select Edge endpoints</p>\n        </label>\n      </div>\n      <div class="boxselector">\n        <input type="radio" id="dynamic-group" ng-model="$ctrl.model.Dynamic" ng-value="true" ng-checked="$ctrl.model.Dynamic" />\n        <label for="dynamic-group">\n          <div class="boxselector_header">\n            <i class="fa fa-tags" aria-hidden="true" style="margin-right: 2px;"></i>\n            Dynamic\n          </div>\n          <p>Automatically associate endpoints via tags</p>\n        </label>\n      </div>\n    </div>\n  </div>\n\n  \x3c!-- StaticGroup --\x3e\n  <div ng-if="!$ctrl.model.Dynamic">\n    <div ng-if="!$ctrl.noEndpoints">\n      \x3c!-- endpoints --\x3e\n      <div class="col-sm-12 form-section-title">\n        Associated endpoints\n      </div>\n      <div class="form-group">\n        <div class="col-sm-12 small text-muted">\n          You can select which endpoint should be part of this group by moving them to the associated endpoints table. Simply click on any endpoint entry to move it from one table\n          to the other.\n        </div>\n        <div class="col-sm-12" style="margin-top: 20px;">\n          \x3c!-- available-endpoints --\x3e\n          <div class="col-sm-6">\n            <div class="text-center small text-muted">Available endpoints</div>\n            <div style="margin-top: 10px;">\n              <group-association-table\n                loaded="$ctrl.loaded"\n                page-type="$ctrl.pageType"\n                table-type="available"\n                retrieve-page="$ctrl.getPaginatedEndpoints"\n                dataset="$ctrl.endpoints.available"\n                entry-click="$ctrl.associateEndpoint"\n                pagination-state="$ctrl.state.available"\n                empty-dataset-message="No endpoint available"\n                tags="$ctrl.tags"\n                show-tags="true"\n                groups="$ctrl.groups"\n                show-groups="true"\n                has-backend-pagination="true"\n              ></group-association-table>\n            </div>\n          </div>\n          \x3c!-- !available-endpoints --\x3e\n          \x3c!-- associated-endpoints --\x3e\n          <div class="col-sm-6">\n            <div class="text-center small text-muted">Associated endpoints</div>\n            <div style="margin-top: 10px;">\n              <group-association-table\n                loaded="$ctrl.loaded"\n                page-type="$ctrl.pageType"\n                table-type="associated"\n                retrieve-page="$ctrl.getPaginatedEndpoints"\n                dataset="$ctrl.endpoints.associated"\n                entry-click="$ctrl.dissociateEndpoint"\n                pagination-state="$ctrl.state.associated"\n                empty-dataset-message="No associated endpoint"\n                tags="$ctrl.tags"\n                show-tags="true"\n                groups="$ctrl.groups"\n                show-groups="true"\n                has-backend-pagination="true"\n              ></group-association-table>\n            </div>\n          </div>\n          \x3c!-- !associated-endpoints --\x3e\n        </div>\n      </div>\n    </div>\n    <div class="form-group" ng-if="$ctrl.noEndpoints">\n      <div class="col-sm-12 small text-muted"> No Edge endpoints available. Head over the <a ui-sref="portainer.endpoints">Endpoints view</a> to add endpoints. </div>\n    </div>\n  </div>\n  \x3c!-- !StaticGroup --\x3e\n\n  \x3c!-- DynamicGroup --\x3e\n  <div ng-if="$ctrl.model.Dynamic">\n    <div class="col-sm-12 form-section-title">\n      Tags\n    </div>\n    <div ng-if="$ctrl.tags.length" class="form-group col-sm-12">\n      <div class="boxselector_wrapper">\n        <div class="boxselector">\n          <input type="radio" id="or-selector" ng-model="$ctrl.model.PartialMatch" ng-value="true" ng-checked="$ctrl.model.PartialMatch" />\n          <label for="or-selector">\n            <div class="boxselector_header">\n              <i class="fa fa-tag" aria-hidden="true" style="margin-right: 2px;"></i>\n              Partial match\n            </div>\n            <p>Associate any endpoint matching at least one of the selected tags</p>\n          </label>\n        </div>\n        <div class="boxselector">\n          <input type="radio" id="and-selector" ng-model="$ctrl.model.PartialMatch" ng-value="false" ng-checked="!$ctrl.model.PartialMatch" />\n          <label for="and-selector">\n            <div class="boxselector_header">\n              <i class="fa fa-tag" aria-hidden="true" style="margin-right: 2px;"></i>\n              Full match\n            </div>\n            <p>Associate any endpoint matching all of the selected tags</p>\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class="form-group">\n      <tag-selector ng-if="$ctrl.tags.length" tags="$ctrl.tags" model="$ctrl.model.TagIds"></tag-selector>\n      <div ng-if="$ctrl.tags && !$ctrl.tags.length" class="col-sm-12 small text-muted">\n        No tags available. Head over to the <a ui-sref="portainer.tags">Tags view</a> to add tags\n      </div>\n    </div>\n    <div class="col-sm-12 form-section-title">\n      Associated endpoints by tags\n    </div>\n    <div class="col-sm-12 form-group">\n      <group-association-table\n        loaded="$ctrl.loaded"\n        page-type="$ctrl.pageType"\n        table-type="associated"\n        retrieve-page="$ctrl.getPaginatedEndpoints"\n        dataset="$ctrl.endpoints.associated"\n        pagination-state="$ctrl.state.associated"\n        empty-dataset-message="No associated endpoint"\n        tags="$ctrl.tags"\n        show-tags="true"\n        groups="$ctrl.groups"\n        show-groups="true"\n        has-backend-pagination="true"\n      ></group-association-table>\n    </div>\n  </div>\n  \x3c!-- !DynamicGroup --\x3e\n\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    Actions\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button\n        type="submit"\n        class="btn btn-primary btn-sm"\n        ng-disabled="$ctrl.actionInProgress || !EdgeGroupForm.$valid || (!$ctrl.model.Dynamic && !$ctrl.model.Endpoints.length) || ($ctrl.model.Dynamic && !$ctrl.model.TagIds.length)"\n        button-spinner="$ctrl.actionInProgress"\n      >\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">In progress...</span>\n      </button>\n    </div>\n  </div>\n</form>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(5),r=n(25),i=n(6),o=n(1),s=n.n(o);function l(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(t,n,a){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.EndpointService=t,this.$async=n,this.state={available:{limit:"10",filter:"",pageNumber:1,totalCount:0},associated:{limit:"10",filter:"",pageNumber:1,totalCount:0}},this.endpoints={associated:[],available:null},this.associateEndpoint=this.associateEndpoint.bind(this),this.dissociateEndpoint=this.dissociateEndpoint.bind(this),this.getPaginatedEndpointsAsync=this.getPaginatedEndpointsAsync.bind(this),this.getPaginatedEndpoints=this.getPaginatedEndpoints.bind(this),a.$watch((function(){return r.model}),(function(){r.getPaginatedEndpoints(r.pageType,"associated")}),!0)}var t,n,o,s,d;return e.$inject=["EndpointService","$async","$scope"],t=e,(n=[{key:"associateEndpoint",value:function(e){Object(i.a)(this.model.Endpoints,e.Id)||(this.endpoints.associated.push(e),this.model.Endpoints.push(e.Id),Object(r.a)(this.endpoints.available,{Id:e.Id}))}},{key:"dissociateEndpoint",value:function(e){Object(r.a)(this.endpoints.associated,{Id:e.Id}),Object(r.a)(this.model.Endpoints,(function(t){return t===e.Id})),this.endpoints.available.push(e)}},{key:"getPaginatedEndpoints",value:function(e,t){return this.$async(this.getPaginatedEndpointsAsync,e,t)}},{key:"getPaginatedEndpointsAsync",value:(s=regeneratorRuntime.mark((function e(t,n){var r,o,s,l,c,d,u,p,m=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=this.state[n],o=r.pageNumber,s=r.limit,l=r.search,c=(o-1)*s+1,d={search:l,type:4},"associated"===n&&(this.model.Dynamic?(d.tagIds=this.model.TagIds,d.tagsPartialMatch=this.model.PartialMatch):d.endpointIds=this.model.Endpoints),e.next=6,this.fetchEndpoints(c,s,d);case 6:u=e.sent,p=parseInt(u.totalCount,10),this.endpoints[n]=u.value,this.state[n].totalCount=p,"available"===n&&(this.noEndpoints=0===p,this.endpoints[n]=Object(a.a)(u.value,(function(e){return!Object(i.a)(m.model.Endpoints,e.Id)})));case 11:case"end":return e.stop()}}),e,this)})),d=function(){var e=this,t=arguments;return new Promise((function(n,a){var r=s.apply(e,t);function i(e){l(r,n,a,i,o,"next",e)}function o(e){l(r,n,a,i,o,"throw",e)}i(void 0)}))},function(e,t){return d.apply(this,arguments)})},{key:"fetchEndpoints",value:function(e,t,n){return n.tagIds&&!n.tagIds.length?{value:[],totalCount:0}:this.EndpointService.endpoints(e,t,n)}}])&&c(t.prototype,n),o&&c(t,o),e}();s.a.module("portainer.edge").controller("EdgeGroupFormController",d),t.default=d},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),i=n(991);r.a.module("portainer.edge").component("edgeGroupsDatatable",{templateUrl:i,controller:"EdgeGroupsDatatableController",bindings:{dataset:"<",titleIcon:"@",tableKey:"@",orderBy:"@",removeAction:"<",updateAction:"<",reverseOrder:"<"}})},function(e,t){var n="app/edge/components/groups-datatable/groupsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-header icon="{{ $ctrl.titleIcon }}" title-text="Edge Groups"> </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="edge.groups.new"> <i class="fa fa-plus space-right" aria-hidden="true"></i>Add Edge group </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Endpoints.length\')">\n                  Endpoints Count\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Endpoints.length\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Endpoints.length\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Dynamic\')">\n                  Group Type\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Dynamic\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Dynamic\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit)) track by $index"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-disabled="item.HasEdgeStack" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="edge.groups.edit({groupId: item.Id})">{{ item.Name }}</a>\n                <span ng-if="item.HasEdgeStack" class="label label-info image-tag space-left">in use</span>\n              </td>\n              <td>{{ item.Endpoints.length }}</td>\n              <td>{{ item.Dynamic ? \'Dynamic\' : \'Static\' }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="4" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="4" class="text-center text-muted">\n                No Edge group available.\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var a=this.allowSelection;r.a.extend(this,n("GenericDatatableController",{$scope:t})),this.allowSelection=a.bind(this)}var t,n,a;return e.$inject=["$scope","$controller"],t=e,(n=[{key:"allowSelection",value:function(e){return!e.HasEdgeStack}}])&&i(t.prototype,n),a&&i(t,a),e}();r.a.module("portainer.edge").controller("EdgeGroupsDatatableController",o),t.default=o},function(e,t,n){"use strict";n.r(t);var a=n(1);n.n(a).a.module("portainer.edge").factory("EdgeGroups",["$resource","API_ENDPOINT_EDGE_GROUPS",function(e,t){return e(t+"/:id/:action",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@Id"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(1);n.n(a).a.module("portainer.edge").factory("EdgeStacks",["$resource","API_ENDPOINT_EDGE_STACKS",function(e,t){return e(t+"/:id/:action",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}},file:{method:"GET",params:{id:"@id",action:"file"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(1);n.n(a).a.module("portainer.edge").factory("EdgeTemplates",["$resource","API_ENDPOINT_EDGE_TEMPLATES",function(e,t){return e(t,{},{query:{method:"GET",isArray:!0}})}])},function(e,t,n){"use strict";n.r(t);var a=n(1);n.n(a).a.module("portainer.edge").factory("EdgeGroupService",["EdgeGroups",function(e){var t={group:function(t){return e.get({id:t}).$promise},groups:function(){return e.query({}).$promise},remove:function(t){return e.remove({id:t}).$promise},create:function(t){return e.create(t).$promise},update:function(t){return e.update(t).$promise}};return t}])},function(e,t,n){"use strict";n.r(t);var a=n(1);function r(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function i(e){return function(){var t=this,n=arguments;return new Promise((function(a,i){var o=e.apply(t,n);function s(e){r(o,a,i,s,l,"next",e)}function l(e){r(o,a,i,s,l,"throw",e)}s(void 0)}))}}n.n(a).a.module("portainer.edge").factory("EdgeStackService",["EdgeStacks","FileUploadService",function(e,t){var n={stack:function(t){return e.get({id:t}).$promise},stacks:function(){return e.query({}).$promise},remove:function(t){return e.remove({id:t}).$promise}};return n.stackFile=function(){var t=i(regeneratorRuntime.mark((function t(n){var a,r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.file({id:n}).$promise;case 3:return a=t.sent,r=a.StackFileContent,t.abrupt("return",r);case 8:throw t.prev=8,t.t0=t.catch(0),{msg:"Unable to retrieve stack content",err:t.t0};case 11:case"end":return t.stop()}}),t,null,[[0,8]])})));return function(e){return t.apply(this,arguments)}}(),n.updateStack=function(){var t=i(regeneratorRuntime.mark((function t(n,a){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",e.update({id:n},a));case 1:case"end":return t.stop()}}),t)})));return function(e,n){return t.apply(this,arguments)}}(),n.createStackFromFileContent=function(){var t=i(regeneratorRuntime.mark((function t(n,a,r){var i;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return i={Name:n,StackFileContent:a,EdgeGroups:r},t.prev=1,t.next=4,e.create({method:"string"},i).$promise;case 4:return t.abrupt("return",t.sent);case 7:throw t.prev=7,t.t0=t.catch(1),{msg:"Unable to create the stack",err:t.t0};case 10:case"end":return t.stop()}}),t,null,[[1,7]])})));return function(e,n,a){return t.apply(this,arguments)}}(),n.createStackFromFileUpload=function(){var e=i(regeneratorRuntime.mark((function e(n,a,r){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t.createEdgeStack(n,a,r);case 3:return e.abrupt("return",e.sent);case 6:throw e.prev=6,e.t0=e.catch(0),{msg:"Unable to create the stack",err:e.t0};case 9:case"end":return e.stop()}}),e,null,[[0,6]])})));return function(t,n,a){return e.apply(this,arguments)}}(),n.createStackFromGitRepository=function(){var t=i(regeneratorRuntime.mark((function t(n,a,r){var i;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return i={Name:n,RepositoryURL:a.RepositoryURL,RepositoryReferenceName:a.RepositoryReferenceName,ComposeFilePathInRepository:a.ComposeFilePathInRepository,RepositoryAuthentication:a.RepositoryAuthentication,RepositoryUsername:a.RepositoryUsername,RepositoryPassword:a.RepositoryPassword,EdgeGroups:r},t.prev=1,t.next=4,e.create({method:"repository"},i).$promise;case 4:return t.abrupt("return",t.sent);case 7:throw t.prev=7,t.t0=t.catch(1),{msg:"Unable to create the stack",err:t.t0};case 10:case"end":return t.stop()}}),t,null,[[1,7]])})));return function(e,n,a){return t.apply(this,arguments)}}(),n.update=function(t){return e.update(t).$promise},n}])},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function o(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.EdgeTemplates=t}var t,n,a,r,s;return e.$inject=["EdgeTemplates"],t=e,(n=[{key:"edgeTemplates",value:function(){return this.EdgeTemplates.query().$promise}},{key:"edgeTemplate",value:(r=regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(t.stackFile);case 2:if((n=e.sent).ok){e.next=5;break}throw new Error(n.statusText);case 5:return e.abrupt("return",n.text());case 6:case"end":return e.stop()}}),e)})),s=function(){var e=this,t=arguments;return new Promise((function(n,a){var o=r.apply(e,t);function s(e){i(o,n,a,s,l,"next",e)}function l(e){i(o,n,a,s,l,"throw",e)}s(void 0)}))},function(e){return s.apply(this,arguments)})}])&&o(t.prototype,n),a&&o(t,a),e}();r.a.module("portainer.edge").service("EdgeTemplateService",s)},function(e,t,n){var a=n(1e3);angular.module("portainer.edge").component("createEdgeStackView",{templateUrl:a,controller:"CreateEdgeStackViewController"})},function(e,t){var n="app/edge/views/edge-stacks/create/createEdgeStackView.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create Edge stack"></rd-header-title>\n  <rd-header-content> <a ui-sref="edge.stacks">Edge Stacks</a> &gt; Create Edge stack </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="stack_name" class="col-sm-1 control-label text-left">\n              Name\n            </label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="$ctrl.formValues.Name" id="stack_name" placeholder="e.g. mystack" auto-focus />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              This stack will be deployed using the equivalent of the\n              <code>docker stack deploy</code> command.\n            </span>\n          </div>\n          <div class="col-sm-12 form-section-title">\n            Edge Groups\n          </div>\n          <div class="form-group" ng-if="$ctrl.edgeGroups">\n            <div class="col-sm-12">\n              <edge-groups-selector ng-if="!$ctrl.noGroups" model="$ctrl.formValues.Groups" on-change="(onChangeGroups)" items="$ctrl.edgeGroups"></edge-groups-selector>\n            </div>\n            <div ng-if="$ctrl.noGroups" class="col-sm-12 small text-muted">\n              No Edge groups are available. Head over the <a ui-sref="edge.groups">Edge groups view</a> to create one.\n            </div>\n          </div>\n          \x3c!-- build-method --\x3e\n          <div class="col-sm-12 form-section-title">\n            Build method\n          </div>\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0;">\n            <div class="boxselector_wrapper">\n              <div>\n                <input type="radio" id="method_editor" ng-model="$ctrl.state.Method" value="editor" ng-change="$ctrl.onChangeMethod()" />\n                <label for="method_editor">\n                  <div class="boxselector_header">\n                    <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Web editor\n                  </div>\n                  <p>Use our Web editor</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="method_upload" ng-model="$ctrl.state.Method" value="upload" ng-change="$ctrl.onChangeMethod()" />\n                <label for="method_upload">\n                  <div class="boxselector_header">\n                    <i class="fa fa-upload" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Upload\n                  </div>\n                  <p>Upload from your computer</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="method_repository" ng-model="$ctrl.state.Method" value="repository" ng-change="$ctrl.onChangeMethod()" />\n                <label for="method_repository">\n                  <div class="boxselector_header">\n                    <i class="fab fa-git" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Repository\n                  </div>\n                  <p>Use a git repository</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="method_template" ng-model="$ctrl.state.Method" value="template" ng-change="$ctrl.onChangeMethod()" />\n                <label for="method_template">\n                  <div class="boxselector_header">\n                    <i class="fas fa-rocket" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Template\n                  </div>\n                  <p>Use an Edge stack template</p>\n                </label>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !build-method --\x3e\n          \x3c!-- web-editor --\x3e\n          <div ng-show="$ctrl.state.Method === \'editor\'">\n            <div class="col-sm-12 form-section-title">\n              Web editor\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                You can get more information about Compose file format in the\n                <a href="https://docs.docker.com/compose/compose-file/" target="_blank">\n                  official documentation\n                </a>\n                .\n              </span>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <code-editor\n                  identifier="stack-creation-editor"\n                  placeholder="# Define or paste the content of your docker-compose file here"\n                  yml="true"\n                  value="$ctrl.formValues.StackFileContent"\n                  on-change="($ctrl.editorUpdate)"\n                ></code-editor>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !web-editor --\x3e\n          \x3c!-- upload --\x3e\n          <div ng-show="$ctrl.state.Method === \'upload\'">\n            <div class="col-sm-12 form-section-title">\n              Upload\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                You can upload a Compose file from your computer.\n              </span>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.formValues.StackFile">\n                  Select file\n                </button>\n                <span style="margin-left: 5px;">\n                  {{ $ctrl.formValues.StackFile.name }}\n                  <i class="fa fa-times red-icon" ng-if="!$ctrl.formValues.StackFile" aria-hidden="true"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !upload --\x3e\n          \x3c!-- repository --\x3e\n          <div ng-show="$ctrl.state.Method === \'repository\'">\n            <div class="col-sm-12 form-section-title">\n              Git repository\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                You can use the URL of a git repository.\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="stack_repository_url" class="col-sm-2 control-label text-left">Repository URL</label>\n              <div class="col-sm-10">\n                <input\n                  type="text"\n                  class="form-control"\n                  ng-model="$ctrl.formValues.RepositoryURL"\n                  id="stack_repository_url"\n                  placeholder="https://github.com/portainer/portainer-compose"\n                />\n              </div>\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                Specify a reference of the repository using the following syntax: branches with\n                <code>refs/heads/branch_name</code> or tags with <code>refs/tags/tag_name</code>. If not specified, will use the default <code>HEAD</code> reference normally the\n                <code>master</code> branch.\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="stack_repository_url" class="col-sm-2 control-label text-left">Repository reference</label>\n              <div class="col-sm-10">\n                <input type="text" class="form-control" ng-model="$ctrl.formValues.RepositoryReferenceName" id="stack_repository_reference_name" placeholder="refs/heads/master" />\n              </div>\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                Indicate the path to the Compose file from the root of your repository.\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="stack_repository_path" class="col-sm-2 control-label text-left">Compose path</label>\n              <div class="col-sm-10">\n                <input type="text" class="form-control" ng-model="$ctrl.formValues.ComposeFilePathInRepository" id="stack_repository_path" placeholder="docker-compose.yml" />\n              </div>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label class="control-label text-left">\n                  Authentication\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="$ctrl.formValues.RepositoryAuthentication" /><i></i> </label>\n              </div>\n            </div>\n            <div class="form-group" ng-if="$ctrl.formValues.RepositoryAuthentication">\n              <span class="col-sm-12 text-muted small">\n                If your git account has 2FA enabled, you may receive an\n                <code>authentication required</code> error when deploying your stack. In this case, you will need to provide a personal-access token instead of your password.\n              </span>\n            </div>\n            <div class="form-group" ng-if="$ctrl.formValues.RepositoryAuthentication">\n              <label for="repository_username" class="col-sm-1 control-label text-left">Username</label>\n              <div class="col-sm-11 col-md-5">\n                <input type="text" class="form-control" ng-model="$ctrl.formValues.RepositoryUsername" name="repository_username" placeholder="myGitUser" />\n              </div>\n              <label for="repository_password" class="col-sm-1 control-label text-left">\n                Password\n              </label>\n              <div class="col-sm-11 col-md-5">\n                <input type="password" class="form-control" ng-model="$ctrl.formValues.RepositoryPassword" name="repository_password" placeholder="myPassword" />\n              </div>\n            </div>\n          </div>\n          \x3c!-- !repository --\x3e\n          \x3c!-- template --\x3e\n          <div ng-show="$ctrl.state.Method === \'template\'">\n            <div class="form-group">\n              <label for="stack_template" class="col-sm-1 control-label text-left">\n                Template\n              </label>\n              <div class="col-sm-11">\n                <select\n                  class="form-control"\n                  ng-model="$ctrl.selectedTemplate"\n                  ng-options="template as template.label for template in $ctrl.templates"\n                  ng-change="$ctrl.onChangeTemplate($ctrl.selectedTemplate)"\n                >\n                  <option value="" label="Select an Edge stack template" disabled selected="selected"> </option>\n                </select>\n              </div>\n            </div>\n            \x3c!-- description --\x3e\n            <div ng-if="$ctrl.selectedTemplate.note">\n              <div class="col-sm-12 form-section-title">\n                Information\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <div class="template-note" ng-bind-html="$ctrl.selectedTemplate.note"></div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !description --\x3e\n            \x3c!-- editor --\x3e\n            <div ng-if="$ctrl.selectedTemplate && $ctrl.formValues.StackFileContent">\n              <div class="col-sm-12 form-section-title">\n                Web editor\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <code-editor\n                    identifier="template-content-editor"\n                    placeholder="# Define or paste the content of your docker-compose file here"\n                    yml="true"\n                    value="$ctrl.formValues.StackFileContent"\n                    on-change="($ctrl.editorUpdate)"\n                  ></code-editor>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !editor --\x3e\n          \x3c!-- !template --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="$ctrl.state.actionInProgress || !$ctrl.formValues.Groups.length\n              || ($ctrl.state.Method === \'editor\' && !$ctrl.formValues.StackFileContent)\n              || ($ctrl.state.Method === \'upload\' && !$ctrl.formValues.StackFile)\n              || ($ctrl.state.Method === \'repository\' && ((!$ctrl.formValues.RepositoryURL || !$ctrl.formValues.ComposeFilePathInRepository) || ($ctrl.formValues.RepositoryAuthentication && (!$ctrl.formValues.RepositoryUsername || !$ctrl.formValues.RepositoryPassword))))\n              || !$ctrl.formValues.Name"\n                ng-click="$ctrl.createStack()"\n                button-spinner="$ctrl.state.actionInProgress"\n              >\n                <span ng-hide="$ctrl.state.actionInProgress">Deploy the stack</span>\n                <span ng-show="$ctrl.state.actionInProgress">Deployment in progress...</span>\n              </button>\n              <span class="text-danger" ng-if="$ctrl.state.formValidationError" style="margin-left: 5px;">\n                {{ $ctrl.state.formValidationError }}\n              </span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(4),r=n(1),i=n.n(r);function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function d(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){c(i,a,r,o,s,"next",e)}function s(e){c(i,a,r,o,s,"throw",e)}o(void 0)}))}}function u(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var p=function(){function e(t,n,a,r,i,o,s){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),Object.assign(this,{$state:t,EdgeStackService:n,EdgeGroupService:a,EdgeTemplateService:r,Notifications:i,FormHelper:o,$async:s}),this.formValues={Name:"",StackFileContent:"",StackFile:null,RepositoryURL:"",RepositoryReferenceName:"",RepositoryAuthentication:!1,RepositoryUsername:"",RepositoryPassword:"",Env:[],ComposeFilePathInRepository:"docker-compose.yml",Groups:[]},this.state={Method:"editor",formValidationError:"",actionInProgress:!1,StackType:null},this.edgeGroups=null,this.createStack=this.createStack.bind(this),this.createStackAsync=this.createStackAsync.bind(this),this.validateForm=this.validateForm.bind(this),this.createStackByMethod=this.createStackByMethod.bind(this),this.createStackFromFileContent=this.createStackFromFileContent.bind(this),this.createStackFromFileUpload=this.createStackFromFileUpload.bind(this),this.createStackFromGitRepository=this.createStackFromGitRepository.bind(this),this.editorUpdate=this.editorUpdate.bind(this),this.onChangeTemplate=this.onChangeTemplate.bind(this),this.onChangeTemplateAsync=this.onChangeTemplateAsync.bind(this),this.onChangeMethod=this.onChangeMethod.bind(this)}var t,n,r,i,o,l;return e.$inject=["$state","EdgeStackService","EdgeGroupService","EdgeTemplateService","Notifications","FormHelper","$async"],t=e,(n=[{key:"$onInit",value:(l=d(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.EdgeGroupService.groups();case 3:this.edgeGroups=e.sent,this.noGroups=0===this.edgeGroups.length,e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),this.Notifications.error("Failure",e.t0,"Unable to retrieve Edge groups");case 10:return e.prev=10,e.next=13,this.EdgeTemplateService.edgeTemplates();case 13:t=e.sent,this.templates=Object(a.a)(t,(function(e){return s({},e,{label:"".concat(e.title," - ").concat(e.description)})})),e.next=20;break;case 17:e.prev=17,e.t1=e.catch(10),this.Notifications.error("Failure",e.t1,"Unable to retrieve Templates");case 20:case"end":return e.stop()}}),e,this,[[0,7],[10,17]])}))),function(){return l.apply(this,arguments)})},{key:"createStack",value:function(){return this.$async(this.createStackAsync)}},{key:"onChangeMethod",value:function(){this.formValues.StackFileContent="",this.selectedTemplate=null}},{key:"onChangeTemplate",value:function(e){return this.$async(this.onChangeTemplateAsync,e)}},{key:"onChangeTemplateAsync",value:(o=d(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.formValues.StackFileContent="",e.prev=1,e.next=4,this.EdgeTemplateService.edgeTemplate(t);case 4:n=e.sent,this.formValues.StackFileContent=n,e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),this.Notifications.error("Failure",e.t0,"Unable to retrieve Template");case 11:case"end":return e.stop()}}),e,this,[[1,8]])}))),function(e){return o.apply(this,arguments)})},{key:"createStackAsync",value:(i=d(regeneratorRuntime.mark((function e(){var t,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=this.formValues.Name,"template"===(n=this.state.Method)&&(n="editor"),this.validateForm(n)){e.next=5;break}return e.abrupt("return");case 5:return this.state.actionInProgress=!0,e.prev=6,e.next=9,this.createStackByMethod(t,n);case 9:this.Notifications.success("Stack successfully deployed"),this.$state.go("edge.stacks"),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(6),this.Notifications.error("Deployment error",e.t0,"Unable to deploy stack");case 16:return e.prev=16,this.state.actionInProgress=!1,e.finish(16);case 19:case"end":return e.stop()}}),e,this,[[6,13,16,19]])}))),function(){return i.apply(this,arguments)})},{key:"validateForm",value:function(e){if(this.state.formValidationError="","editor"!==e||""!==this.formValues.StackFileContent)return!0;this.state.formValidationError="Stack file content must not be empty"}},{key:"createStackByMethod",value:function(e,t){switch(t){case"editor":return this.createStackFromFileContent(e);case"upload":return this.createStackFromFileUpload(e);case"repository":return this.createStackFromGitRepository(e)}}},{key:"createStackFromFileContent",value:function(e){return this.EdgeStackService.createStackFromFileContent(e,this.formValues.StackFileContent,this.formValues.Groups)}},{key:"createStackFromFileUpload",value:function(e){return this.EdgeStackService.createStackFromFileUpload(e,this.formValues.StackFile,this.formValues.Groups)}},{key:"createStackFromGitRepository",value:function(e){var t={RepositoryURL:this.formValues.RepositoryURL,RepositoryReferenceName:this.formValues.RepositoryReferenceName,ComposeFilePathInRepository:this.formValues.ComposeFilePathInRepository,RepositoryAuthentication:this.formValues.RepositoryAuthentication,RepositoryUsername:this.formValues.RepositoryUsername,RepositoryPassword:this.formValues.RepositoryPassword};return this.EdgeStackService.createStackFromGitRepository(e,t,this.formValues.Groups)}},{key:"editorUpdate",value:function(e){this.formValues.StackFileContent=e.getValue()}}])&&u(t.prototype,n),r&&u(t,r),e}();i.a.module("portainer.edge").controller("CreateEdgeStackViewController",p),t.default=p},function(e,t,n){var a=n(1003);angular.module("portainer.edge").component("edgeStacksView",{templateUrl:a,controller:"EdgeStacksViewController"})},function(e,t){var n="app/edge/views/edge-stacks/edgeStacksView.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Edge Stacks list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="edge.stacks" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Edge Stacks</rd-header-content>\n</rd-header>\n<div class="row">\n  <div class="col-sm-12">\n    <edge-stacks-datatable\n      title-text="Edge Stacks"\n      title-icon="fa-th-list"\n      dataset="$ctrl.stacks"\n      table-key="edgeStacks"\n      order-by="Name"\n      remove-action="$ctrl.removeAction"\n      refresh-callback="$ctrl.getStacks"\n    ></edge-stacks-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(25),r=n(1),i=n.n(r);function o(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=function(e,t){if(!e)return;if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}(e))){var t=0,n=function(){};return{s:n,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,i=!0,o=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return i=e.done,e},e:function(e){o=!0,r=e},f:function(){try{i||null==a.return||a.return()}finally{if(o)throw r}}}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function l(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function c(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){l(i,a,r,o,s,"next",e)}function s(e){l(i,a,r,o,s,"throw",e)}o(void 0)}))}}function d(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var u=function(){function e(t,n,a,r,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$state=t,this.Notifications=n,this.EdgeStackService=a,this.$scope=r,this.$async=i,this.stacks=void 0,this.getStacks=this.getStacks.bind(this),this.removeAction=this.removeAction.bind(this),this.removeActionAsync=this.removeActionAsync.bind(this)}var t,n,r,i,s;return e.$inject=["$state","Notifications","EdgeStackService","$scope","$async"],t=e,(n=[{key:"$onInit",value:function(){this.getStacks()}},{key:"removeAction",value:function(e){return this.$async(this.removeActionAsync,e)}},{key:"removeActionAsync",value:(s=c(regeneratorRuntime.mark((function e(t){var n,r,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=o(t),e.prev=1,n.s();case 3:if((r=n.n()).done){e.next=17;break}return i=r.value,e.prev=5,e.next=8,this.EdgeStackService.remove(i.Id);case 8:this.Notifications.success("Stack successfully removed",i.Name),Object(a.a)(this.stacks,i),e.next=15;break;case 12:e.prev=12,e.t0=e.catch(5),this.Notifications.error("Failure",e.t0,"Unable to remove stack "+i.Name);case 15:e.next=3;break;case 17:e.next=22;break;case 19:e.prev=19,e.t1=e.catch(1),n.e(e.t1);case 22:return e.prev=22,n.f(),e.finish(22);case 25:this.$state.reload();case 26:case"end":return e.stop()}}),e,this,[[1,19,22,25],[5,12]])}))),function(e){return s.apply(this,arguments)})},{key:"getStacks",value:(i=c(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.EdgeStackService.stacks();case 3:this.stacks=e.sent,e.next=10;break;case 6:e.prev=6,e.t0=e.catch(0),this.stacks=[],this.Notifications.error("Failure",e.t0,"Unable to retrieve stacks");case 10:case"end":return e.stop()}}),e,this,[[0,6]])}))),function(){return i.apply(this,arguments)})}])&&d(t.prototype,n),r&&d(t,r),e}();i.a.module("portainer.edge").controller("EdgeStacksViewController",u),t.default=u},function(e,t,n){var a=n(1006);angular.module("portainer.edge").component("editEdgeStackView",{templateUrl:a,controller:"EditEdgeStackViewController"})},function(e,t){var n="app/edge/views/edge-stacks/edit/editEdgeStackView.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Edit Edge stack">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="edge.stacks.edit({stackId:$ctrl.stack.Id, tab: $ctrl.state.activeTab})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content> <a ui-sref="edge.stacks">Edge Stacks</a> &gt; {{ $ctrl.stack.Name }} </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="$ctrl.stack">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body classes="no-padding">\n        <uib-tabset active="$ctrl.state.activeTab" justified="true" type="pills">\n          <uib-tab index="0" classes="btn-sm">\n            <uib-tab-heading> <i class="fa fa-layer-group space-right" aria-hidden="true"></i> Stack</uib-tab-heading>\n\n            <div style="padding: 20px;">\n              <edit-edge-stack-form\n                edge-groups="$ctrl.edgeGroups"\n                model="$ctrl.formValues"\n                action-in-progress="$ctrl.state.actionInProgress"\n                submit-action="$ctrl.deployStack"\n              ></edit-edge-stack-form>\n            </div>\n          </uib-tab>\n          <uib-tab index="1" classes="btn-sm">\n            <uib-tab-heading> <i class="fa fa-plug space-right" aria-hidden="true"></i> Endpoints</uib-tab-heading>\n\n            <div style="margin-top: 25px;">\n              <edge-stack-endpoints-datatable\n                title-text="Endpoints Status"\n                dataset="$ctrl.endpoints"\n                title-icon="fa-plug"\n                table-key="edgeStackEndpoints"\n                order-by="Name"\n                retrieve-page="$ctrl.getPaginatedEndpoints"\n              >\n              </edge-stack-endpoints-datatable>\n            </div>\n          </uib-tab>\n        </uib-tabset>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(4),i=n(413),o=n(1),s=n.n(o);function l(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],a=!0,r=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return c(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function d(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function u(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){d(i,a,r,o,s,"next",e)}function s(e){d(i,a,r,o,s,"throw",e)}o(void 0)}))}}function p(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var m=function(){function e(t,n,a,r,i,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$async=t,this.$state=n,this.EdgeGroupService=a,this.EdgeStackService=r,this.EndpointService=i,this.Notifications=o,this.stack=null,this.edgeGroups=null,this.state={actionInProgress:!1,activeTab:0},this.deployStack=this.deployStack.bind(this),this.deployStackAsync=this.deployStackAsync.bind(this),this.getPaginatedEndpoints=this.getPaginatedEndpoints.bind(this),this.getPaginatedEndpointsAsync=this.getPaginatedEndpointsAsync.bind(this)}var t,n,o,s,c,d;return e.$inject=["$async","$state","EdgeGroupService","EdgeStackService","EndpointService","Notifications"],t=e,(n=[{key:"$onInit",value:(d=u(regeneratorRuntime.mark((function e(){var t,n,a,r,i,o,s,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=this.$state.params,n=t.stackId,a=t.tab,this.state.activeTab=a,e.prev=2,e.next=5,Promise.all([this.EdgeGroupService.groups(),this.EdgeStackService.stack(n),this.EdgeStackService.stackFile(n)]);case 5:r=e.sent,i=l(r,3),o=i[0],s=i[1],c=i[2],this.edgeGroups=o,this.stack=s,this.stackEndpointIds=this.filterStackEndpoints(s.EdgeGroups,o),this.originalFileContent=c,this.formValues={StackFileContent:c,EdgeGroups:this.stack.EdgeGroups,Prune:this.stack.Prune},e.next=20;break;case 17:e.prev=17,e.t0=e.catch(2),this.Notifications.error("Failure",e.t0,"Unable to retrieve stack data");case 20:case"end":return e.stop()}}),e,this,[[2,17]])}))),function(){return d.apply(this,arguments)})},{key:"filterStackEndpoints",value:function(e,t){return Object(i.a)(Object(r.a)(e,(function(e){return Object(a.a)(t,{Id:e}).Endpoints})))}},{key:"deployStack",value:function(){return this.$async(this.deployStackAsync)}},{key:"deployStackAsync",value:(c=u(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.state.actionInProgress=!0,e.prev=1,this.originalFileContent!=this.formValues.StackFileContent&&(this.formValues.Version=this.stack.Version+1),e.next=5,this.EdgeStackService.updateStack(this.stack.Id,this.formValues);case 5:this.Notifications.success("Stack successfully deployed"),this.$state.go("edge.stacks"),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(1),this.Notifications.error("Deployment error",e.t0,"Unable to deploy stack");case 12:return e.prev=12,this.state.actionInProgress=!1,e.finish(12);case 15:case"end":return e.stop()}}),e,this,[[1,9,12,15]])}))),function(){return c.apply(this,arguments)})},{key:"getPaginatedEndpoints",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.$async.apply(this,[this.getPaginatedEndpointsAsync].concat(t))}},{key:"getPaginatedEndpointsAsync",value:(s=u(regeneratorRuntime.mark((function e(t,n,a){var i,o,s,l,c,d=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,i={search:a,type:4,endpointIds:this.stackEndpointIds},e.next=4,this.EndpointService.endpoints(t,n,i);case 4:return o=e.sent,s=o.value,l=o.totalCount,c=Object(r.a)(s,(function(e){var t=d.stack.Status[e.Id];return e.Status=t,e})),e.abrupt("return",{endpoints:c,totalCount:l});case 11:e.prev=11,e.t0=e.catch(0),this.Notifications.error("Failure",e.t0,"Unable to retrieve endpoint information");case 14:case"end":return e.stop()}}),e,this,[[0,11]])}))),function(e,t,n){return s.apply(this,arguments)})}])&&p(t.prototype,n),o&&p(t,o),e}();s.a.module("portainer.edge").controller("EditEdgeStackViewController",m),t.default=m},function(e,t,n){var a=n(1009);angular.module("portainer.edge").component("createEdgeGroupView",{templateUrl:a,controller:"CreateEdgeGroupController"})},function(e,t){var n="app/edge/views/groups/create/createEdgeGroupView.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create edge group"></rd-header-title>\n  <rd-header-content> <a ui-sref="edge.groups">Edge groups</a> &gt; Add edge group </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <edge-group-form\n          loaded="$ctrl.state.loaded"\n          page-type="create"\n          form-action-label="Add edge group"\n          form-action="$ctrl.createGroup"\n          groups="$ctrl.endpointGroups"\n          tags="$ctrl.tags"\n          model="$ctrl.model"\n          on-change-tags="($ctrl.onChangeTags)"\n        ></edge-group-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],a=!0,r=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function s(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function l(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){s(i,a,r,o,l,"next",e)}function l(e){s(i,a,r,o,l,"throw",e)}o(void 0)}))}}function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(t,n,a,r,i,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.EdgeGroupService=t,this.GroupService=n,this.TagService=a,this.Notifications=r,this.$state=i,this.$async=o,this.state={actionInProgress:!1,loaded:!1},this.model={Name:"",Endpoints:[],Dynamic:!1,TagIds:[],PartialMatch:!1},this.createGroup=this.createGroup.bind(this),this.createGroupAsync=this.createGroupAsync.bind(this)}var t,n,a,r,o;return e.$inject=["EdgeGroupService","GroupService","TagService","Notifications","$state","$async"],t=e,(n=[{key:"$onInit",value:(o=l(regeneratorRuntime.mark((function e(){var t,n,a,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([this.TagService.tags(),this.GroupService.groups()]);case 2:t=e.sent,n=i(t,2),a=n[0],r=n[1],this.tags=a,this.endpointGroups=r,this.state.loaded=!0;case 9:case"end":return e.stop()}}),e,this)}))),function(){return o.apply(this,arguments)})},{key:"createGroup",value:function(){return this.$async(this.createGroupAsync)}},{key:"createGroupAsync",value:(r=l(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.state.actionInProgress=!0,e.prev=1,e.next=4,this.EdgeGroupService.create(this.model);case 4:this.Notifications.success("Edge group successfully created"),this.$state.go("edge.groups"),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),this.Notifications.error("Failure",e.t0,"Unable to create edge group");case 11:return e.prev=11,this.state.actionInProgress=!1,e.finish(11);case 14:case"end":return e.stop()}}),e,this,[[1,8,11,14]])}))),function(){return r.apply(this,arguments)})}])&&c(t.prototype,n),a&&c(t,a),e}();r.a.module("portainer.edge").controller("CreateEdgeGroupController",d),t.default=d},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),i=n(1012);r.a.module("portainer.edge").component("edgeGroupsView",{templateUrl:i,controller:"EdgeGroupsController"})},function(e,t){var n="app/edge/views/groups/edgeGroupsView.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Edge Groups">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="edge.groups" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Edge Groups</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <edge-groups-datatable title-icon="fa-object-group" table-key="EdgeGroups" order-by="Name" dataset="$ctrl.items" remove-action="$ctrl.removeAction"></edge-groups-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(25),r=n(1),i=n.n(r);function o(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=function(e,t){if(!e)return;if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}(e))){var t=0,n=function(){};return{s:n,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,i=!0,o=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return i=e.done,e},e:function(e){o=!0,r=e},f:function(){try{i||null==a.return||a.return()}finally{if(o)throw r}}}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function l(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function c(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){l(i,a,r,o,s,"next",e)}function s(e){l(i,a,r,o,s,"throw",e)}o(void 0)}))}}function d(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var u=function(){function e(t,n,a,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$async=t,this.$state=n,this.EdgeGroupService=a,this.Notifications=r,this.removeAction=this.removeAction.bind(this),this.removeActionAsync=this.removeActionAsync.bind(this)}var t,n,r,i,s;return e.$inject=["$async","$state","EdgeGroupService","Notifications"],t=e,(n=[{key:"$onInit",value:(s=c(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.EdgeGroupService.groups();case 2:this.items=e.sent;case 3:case"end":return e.stop()}}),e,this)}))),function(){return s.apply(this,arguments)})},{key:"removeAction",value:function(e){return this.$async(this.removeActionAsync,e)}},{key:"removeActionAsync",value:(i=c(regeneratorRuntime.mark((function e(t){var n,r,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=o(t),e.prev=1,n.s();case 3:if((r=n.n()).done){e.next=17;break}return i=r.value,e.prev=5,e.next=8,this.EdgeGroupService.remove(i.Id);case 8:this.Notifications.success("Edge Group successfully removed",i.Name),Object(a.a)(this.items,i),e.next=15;break;case 12:e.prev=12,e.t0=e.catch(5),this.Notifications.error("Failure",e.t0,"Unable to remove Edge Group");case 15:e.next=3;break;case 17:e.next=22;break;case 19:e.prev=19,e.t1=e.catch(1),n.e(e.t1);case 22:return e.prev=22,n.f(),e.finish(22);case 25:this.$state.reload();case 26:case"end":return e.stop()}}),e,this,[[1,19,22,25],[5,12]])}))),function(e){return i.apply(this,arguments)})}])&&d(t.prototype,n),r&&d(t,r),e}();i.a.module("portainer.edge").controller("EdgeGroupsController",u)},function(e,t,n){var a=n(1015);angular.module("portainer.edge").component("editEdgeGroupView",{templateUrl:a,controller:"EditEdgeGroupController"})},function(e,t){var n="app/edge/views/groups/edit/editEdgeGroupView.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Edit edge group"></rd-header-title>\n  <rd-header-content> <a ui-sref="edge.groups">Edge Groups</a> &gt; {{ $ctrl.model.Name }} </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="$ctrl.model">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <edge-group-form\n          loaded="$ctrl.state.loaded"\n          page-type="edit"\n          form-action-label="Save edge group"\n          form-action="$ctrl.updateGroup"\n          endpoints="$ctrl.endpoints"\n          groups="$ctrl.endpointGroups"\n          tags="$ctrl.tags"\n          model="$ctrl.model"\n        ></edge-group-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],a=!0,r=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function s(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function l(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){s(i,a,r,o,l,"next",e)}function l(e){s(i,a,r,o,l,"throw",e)}o(void 0)}))}}function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(t,n,a,r,i,o,s,l){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.EdgeGroupService=t,this.GroupService=n,this.TagService=a,this.Notifications=r,this.$state=i,this.$async=o,this.EndpointService=s,this.EndpointHelper=l,this.state={actionInProgress:!1,loaded:!1},this.updateGroup=this.updateGroup.bind(this),this.updateGroupAsync=this.updateGroupAsync.bind(this)}var t,n,a,r,o;return e.$inject=["EdgeGroupService","GroupService","TagService","Notifications","$state","$async","EndpointService","EndpointHelper"],t=e,(n=[{key:"$onInit",value:(o=l(regeneratorRuntime.mark((function e(){var t,n,a,r,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([this.TagService.tags(),this.GroupService.groups(),this.EdgeGroupService.group(this.$state.params.groupId)]);case 2:t=e.sent,n=i(t,3),a=n[0],r=n[1],(o=n[2])||(this.Notifications.error("Failed to find edge group",{}),this.$state.go("edge.groups")),this.tags=a,this.endpointGroups=r,this.model=o,this.state.loaded=!0;case 12:case"end":return e.stop()}}),e,this)}))),function(){return o.apply(this,arguments)})},{key:"updateGroup",value:function(){return this.$async(this.updateGroupAsync)}},{key:"updateGroupAsync",value:(r=l(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.state.actionInProgress=!0,e.prev=1,e.next=4,this.EdgeGroupService.update(this.model);case 4:this.Notifications.success("Edge group successfully updated"),this.$state.go("edge.groups"),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),this.Notifications.error("Failure",e.t0,"Unable to update edge group");case 11:return e.prev=11,this.state.actionInProgress=!1,e.finish(11);case 14:case"end":return e.stop()}}),e,this,[[1,8,11,14]])}))),function(){return r.apply(this,arguments)})}])&&c(t.prototype,n),a&&c(t,a),e}();r.a.module("portainer.edge").controller("EditEdgeGroupController",d),t.default=d},function(e,t){angular.module("portainer.extensions",["portainer.extensions.registrymanagement","portainer.extensions.oauth","portainer.extensions.rbac"])},function(e,t){angular.module("portainer.extensions.oauth",["ngResource"]).constant("API_ENDPOINT_OAUTH","api/auth/oauth")},function(e,t){angular.module("portainer.extensions.oauth").controller("OAuthProviderSelectorController",(function(){var e=this;this.providers=[{authUrl:"https://login.microsoftonline.com/TENANT_ID/oauth2/authorize",accessTokenUrl:"https://login.microsoftonline.com/TENANT_ID/oauth2/token",resourceUrl:"https://graph.windows.net/TENANT_ID/me?api-version=2013-11-08",userIdentifier:"userPrincipalName",scopes:"id,email,name",name:"microsoft"},{authUrl:"https://accounts.google.com/o/oauth2/auth",accessTokenUrl:"https://accounts.google.com/o/oauth2/token",resourceUrl:"https://www.googleapis.com/oauth2/v1/userinfo?alt=json",userIdentifier:"email",scopes:"profile email",name:"google"},{authUrl:"https://github.com/login/oauth/authorize",accessTokenUrl:"https://github.com/login/oauth/access_token",resourceUrl:"https://api.github.com/user",userIdentifier:"login",scopes:"id email name",name:"github"},{authUrl:"",accessTokenUrl:"",resourceUrl:"",userIdentifier:"",scopes:"",name:"custom"}],this.$onInit=function(){e.provider.authUrl?e.provider=function(t){if(-1!==t.indexOf("login.microsoftonline.com"))return e.providers[0];if(-1!==t.indexOf("accounts.google.com"))return e.providers[1];if(-1!==t.indexOf("github.com"))return e.providers[2];return e.providers[3]}(e.provider.authUrl):e.provider=e.providers[0];e.onSelect(e.provider,!1)}}))},function(e,t,n){var a=n(1021);angular.module("portainer.extensions.oauth").component("oauthProvidersSelector",{templateUrl:a,bindings:{onSelect:"<",provider:"="},controller:"OAuthProviderSelectorController"})},function(e,t){var n="app/extensions/oauth/components/oauth-providers-selector/oauth-providers-selector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="col-sm-12 form-section-title">\n  Provider\n</div>\n\n<div class="form-group"></div>\n<div class="form-group" style="margin-bottom: 0;">\n  <div class="boxselector_wrapper">\n    <div ng-click="$ctrl.onSelect($ctrl.provider, true)">\n      <input type="radio" id="oauth_provider_microsoft" ng-model="$ctrl.provider" ng-value="$ctrl.providers[0]" />\n      <label for="oauth_provider_microsoft">\n        <div class="boxselector_header">\n          <i class="fab fa-microsoft" aria-hidden="true" style="margin-right: 2px;"></i>\n          Microsoft\n        </div>\n        <p>Microsoft OAuth provider</p>\n      </label>\n    </div>\n    <div ng-click="$ctrl.onSelect($ctrl.provider, true)">\n      <input type="radio" id="oauth_provider_google" ng-model="$ctrl.provider" ng-value="$ctrl.providers[1]" />\n      <label for="oauth_provider_google">\n        <div class="boxselector_header">\n          <i class="fab fa-google" aria-hidden="true" style="margin-right: 2px;"></i>\n          Google\n        </div>\n        <p>Google OAuth provider</p>\n      </label>\n    </div>\n    <div ng-click="$ctrl.onSelect($ctrl.provider, true)">\n      <input type="radio" id="oauth_provider_github" ng-model="$ctrl.provider" ng-value="$ctrl.providers[2]" />\n      <label for="oauth_provider_github">\n        <div class="boxselector_header">\n          <i class="fab fa-github" aria-hidden="true" style="margin-right: 2px;"></i>\n          Github\n        </div>\n        <p>Github OAuth provider</p>\n      </label>\n    </div>\n    <div ng-click="$ctrl.onSelect($ctrl.provider, true)">\n      <input type="radio" id="oauth_provider_custom" ng-model="$ctrl.provider" ng-value="$ctrl.providers[3]" />\n      <label for="oauth_provider_custom">\n        <div class="boxselector_header">\n          <i class="fa fa-user-check" aria-hidden="true" style="margin-right: 2px;"></i>\n          Custom\n        </div>\n        <p>Custom OAuth provider</p>\n      </label>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(83);angular.module("portainer.extensions.oauth").controller("OAuthSettingsController",(function(){var e=this;function t(){var t=e.state.microsoftTenantID;e.settings.AuthorizationURI=Object(a.a)("https://login.microsoftonline.com/TENANT_ID/oauth2/authorize","TENANT_ID",t),e.settings.AccessTokenURI=Object(a.a)("https://login.microsoftonline.com/TENANT_ID/oauth2/token","TENANT_ID",t),e.settings.ResourceURI=Object(a.a)("https://graph.windows.net/TENANT_ID/me?api-version=2013-11-08","TENANT_ID",t)}function n(){e.settings.AuthorizationURI=e.state.provider.authUrl,e.settings.AccessTokenURI=e.state.provider.accessTokenUrl,e.settings.ResourceURI=e.state.provider.resourceUrl,e.settings.UserIdentifier=e.state.provider.userIdentifier,e.settings.Scopes=e.state.provider.scopes,"microsoft"===e.state.provider.name&&""!==e.state.microsoftTenantID&&t()}this.state={provider:{},overrideConfiguration:!1,microsoftTenantID:""},this.$onInit=function(){""===e.settings.RedirectURI&&(e.settings.RedirectURI=window.location.origin);if(""!==e.settings.AuthorizationURI&&(e.state.provider.authUrl=e.settings.AuthorizationURI,e.settings.AuthorizationURI.indexOf("login.microsoftonline.com")>-1)){var n=e.settings.AuthorizationURI.match(/login.microsoftonline.com\/(.*?)\//)[1];e.state.microsoftTenantID=n,t()}},this.onSelectProvider=function(a,r){e.state.provider=a,r?n():function(){var n=e.state.provider;e.settings.AuthorizationURI=""===e.settings.AuthorizationURI?n.authUrl:e.settings.AuthorizationURI,e.settings.AccessTokenURI=""===e.settings.AccessTokenURI?n.accessTokenUrl:e.settings.AccessTokenURI,e.settings.ResourceURI=""===e.settings.ResourceURI?n.resourceUrl:e.settings.ResourceURI,e.settings.UserIdentifier=""===e.settings.UserIdentifier?n.userIdentifier:e.settings.UserIdentifier,e.settings.Scopes=""===e.settings.Scopes?n.scopes:e.settings.Scopes,"microsoft"===n.name&&""!==e.state.microsoftTenantID&&t()}()},this.onMicrosoftTenantIDChange=t,this.useDefaultProviderConfiguration=n}))},function(e,t,n){var a=n(1024);angular.module("portainer.extensions.oauth").component("oauthSettings",{templateUrl:a,bindings:{settings:"=",teams:"<"},controller:"OAuthSettingsController"})},function(e,t){var n="app/extensions/oauth/components/oauth-settings/oauth-settings.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <div class="col-sm-12 form-section-title">\n    Automatic user provisioning\n  </div>\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      With automatic user provisioning enabled, Portainer will create user(s) automatically with the standard user role. If disabled, users must be created beforehand in Portainer\n      in order to login.\n    </span>\n  </div>\n  <div class="form-group">\n    <label class="col-sm-3 col-lg-2 control-label text-left">Automatic user provisioning</label>\n    <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="$ctrl.settings.OAuthAutoCreateUsers" /><i></i> </label>\n  </div>\n\n  <div ng-if="$ctrl.settings.OAuthAutoCreateUsers">\n    <div class="form-group">\n      <span class="col-sm-12 text-muted small">\n        <p>The users created by the automatic provisioning feature can be added to a default team on creation.</p>\n        <p\n          >By assigning newly created users to a team, they will be able to access the environments associated to that team. This setting is optional and if not set, newly created\n          users won\'t be able to access any environments.</p\n        >\n      </span>\n    </div>\n    <div class="form-group">\n      <label class="col-sm-3 col-lg-2 control-label text-left">Default team</label>\n      <span class="small text-muted" style="margin-left: 20px;" ng-if="$ctrl.teams.length === 0">\n        You have not yet created any teams. Head over to the <a ui-sref="portainer.teams">Teams view</a> to manage teams.\n      </span>\n      <button type="button" class="btn btn-sm btn-danger" ng-click="$ctrl.settings.DefaultTeamID = null" ng-disabled="!$ctrl.settings.DefaultTeamID" ng-if="$ctrl.teams.length > 0"\n        ><i class="fa fa-times" aria-hidden="true"></i\n      ></button>\n      <div class="col-sm-9 col-lg-9" ng-if="$ctrl.teams.length > 0">\n        <select class="form-control" ng-model="$ctrl.settings.DefaultTeamID" ng-options="team.Id as team.Name for team in $ctrl.teams">\n          <option value="">No team</option>\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <oauth-providers-selector on-select="($ctrl.onSelectProvider)" provider="$ctrl.state.provider"></oauth-providers-selector>\n\n  <div class="col-sm-12 form-section-title">OAuth Configuration</div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'microsoft\'">\n    <label for="oauth_microsoft_tenant_id" class="col-sm-3 col-lg-2 control-label text-left">\n      Tenant ID\n      <portainer-tooltip position="bottom" message="ID of the Azure Directory you wish to authenticate against. Also known as the Directory ID"></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n        type="text"\n        class="form-control"\n        id="oauth_microsoft_tenant_id"\n        placeholder="xxxxxxxxxxxxxxxxxxxx"\n        ng-model="$ctrl.state.microsoftTenantID"\n        ng-change="$ctrl.onMicrosoftTenantIDChange()"\n      />\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label for="oauth_client_id" class="col-sm-3 col-lg-2 control-label text-left">\n      {{ $ctrl.state.provider.name == \'microsoft\' ? \'Application ID\' : \'Client ID\' }}\n      <portainer-tooltip position="bottom" message="Public identifier of the OAuth application"></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="oauth_client_id" ng-model="$ctrl.settings.ClientID" placeholder="xxxxxxxxxxxxxxxxxxxx" />\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label for="oauth_client_secret" class="col-sm-3 col-lg-2 control-label text-left">\n      {{ $ctrl.state.provider.name == \'microsoft\' ? \'Application key\' : \'Client secret\' }}\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="password" class="form-control" id="oauth_client_secret" ng-model="$ctrl.settings.ClientSecret" placeholder="xxxxxxxxxxxxxxxxxxxx" />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_authorization_uri" class="col-sm-3 col-lg-2 control-label text-left">\n      Authorization URL\n      <portainer-tooltip\n        position="bottom"\n        message="URL used to authenticate against the OAuth provider. Will redirect the user to the OAuth provider login view"\n      ></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="oauth_authorization_uri" ng-model="$ctrl.settings.AuthorizationURI" placeholder="https://example.com/oauth/authorize" />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_access_token_uri" class="col-sm-3 col-lg-2 control-label text-left">\n      Access token URL\n      <portainer-tooltip position="bottom" message="URL used by Portainer to exchange a valid OAuth authentication code for an access token"></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="oauth_access_token_uri" ng-model="$ctrl.settings.AccessTokenURI" placeholder="https://example.com/oauth/token" />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_resource_uri" class="col-sm-3 col-lg-2 control-label text-left">\n      Resource URL\n      <portainer-tooltip position="bottom" message="URL used by Portainer to retrieve information about the authenticated user"></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="oauth_resource_uri" ng-model="$ctrl.settings.ResourceURI" placeholder="https://example.com/user" />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_redirect_uri" class="col-sm-3 col-lg-2 control-label text-left">\n      Redirect URL\n      <portainer-tooltip\n        position="bottom"\n        message="URL used by the OAuth provider to redirect the user after successful authentication. Should be set to your Portainer instance URL"\n      ></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="oauth_redirect_uri" ng-model="$ctrl.settings.RedirectURI" placeholder="http://yourportainer.com/" />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_user_identifier" class="col-sm-3 col-lg-2 control-label text-left">\n      User identifier\n      <portainer-tooltip\n        position="bottom"\n        message="Identifier that will be used by Portainer to create an account for the authenticated user. Retrieved from the resource server specified via the Resource URL field"\n      ></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="oauth_user_identifier" ng-model="$ctrl.settings.UserIdentifier" placeholder="id" />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_scopes" class="col-sm-3 col-lg-2 control-label text-left">\n      Scopes\n      <portainer-tooltip\n        position="bottom"\n        message="Scopes required by the OAuth provider to retrieve information about the authenticated user. Refer to your OAuth provider documentation for more information about this"\n      ></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="oauth_scopes" ng-model="$ctrl.settings.Scopes" placeholder="id,email,name" />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name != \'custom\'">\n    <div class="col-sm-12">\n      <a class="small interactive" ng-if="!$ctrl.state.overrideConfiguration" ng-click="$ctrl.state.overrideConfiguration = true;">\n        <i class="fa fa-wrench space-right" aria-hidden="true"></i> Override default configuration\n      </a>\n      <a class="small interactive" ng-if="$ctrl.state.overrideConfiguration" ng-click="$ctrl.state.overrideConfiguration = false; $ctrl.useDefaultProviderConfiguration()">\n        <i class="fa fa-cogs space-right" aria-hidden="true"></i> Use default configuration\n      </a>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.extensions.oauth").factory("OAuth",["$resource","API_ENDPOINT_OAUTH",function(e,t){"use strict";return e(t+"/:action",{},{validate:{method:"POST",ignoreLoadingBar:!0,params:{action:"validate"}}})}])},function(e,t,n){var a=n(1027);angular.module("portainer.extensions.rbac",["ngResource"]).constant("API_ENDPOINT_ROLES","api/roles").config(["$stateRegistryProvider",function(e){"use strict";var t={name:"portainer.roles",url:"/roles",views:{"content@":{templateUrl:a,controller:"RolesController",controllerAs:"ctrl"}}};e.register(t)}])},function(e,t){var n="app/extensions/rbac/views/roles/roles.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Roles">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.roles" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Role management</rd-header-content>\n</rd-header>\n\n<information-panel ng-if="!ctrl.rbacEnabled" title-text="Information">\n  <span class="small">\n    <p class="text-muted">\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      The\n      <a\n        ui-sref="portainer.extensions.extension({id: 3})"\n        tooltip-append-to-body="true"\n        tooltip-placement="bottom"\n        tooltip-class="portainer-tooltip"\n        uib-tooltip="Feature available via an extension"\n        >Role-Based Access Control extension</a\n      >\n      is required to use this feature.\n    </p>\n  </span>\n</information-panel>\n\n<div class="row">\n  <div class="col-sm-12">\n    <roles-datatable title-text="Roles" title-icon="fa-file-code" dataset="ctrl.roles" table-key="roles" order-by="Name" rbac-enabled="ctrl.rbacEnabled"></roles-datatable>\n  </div>\n</div>\n\n<div class="row">\n  <access-viewer ng-if="ctrl.rbacEnabled"> </access-viewer>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1029);angular.module("portainer.app").component("accessViewer",{templateUrl:a,controller:"AccessViewerController",controllerAs:"ctrl"})},function(e,t){var n="app/extensions/rbac/components/access-viewer/accessViewer.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="col-sm-12" style="margin-bottom: 0px;">\n  <rd-widget ng-if="ctrl.users">\n    <rd-widget-header icon="fa-user-lock" title-text="Effective access viewer"></rd-widget-header>\n    <rd-widget-body>\n      <form class="form-horizontal">\n        <div class="col-sm-12 form-section-title">\n          User\n        </div>\n        <div class="form-group">\n          <div class="col-sm-12">\n            <span class="small text-muted" ng-if="ctrl.users.length === 0">\n              No user available\n            </span>\n            <ui-select ng-if="ctrl.users.length > 0" ng-model="ctrl.selectedUser" ng-change="ctrl.onUserSelect()">\n              <ui-select-match placeholder="Select a user">\n                <span>{{ $select.selected.Username }}</span>\n              </ui-select-match>\n              <ui-select-choices repeat="item in (ctrl.users | filter: $select.search)">\n                <span>{{ item.Username }}</span>\n              </ui-select-choices>\n            </ui-select>\n          </div>\n        </div>\n\n        <div class="col-sm-12 form-section-title">\n          Access\n        </div>\n        <div>\n          <div class="small text-muted" style="margin-bottom: 15px;">\n            <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n            Effective role for each endpoint will be displayed for the selected user\n          </div>\n        </div>\n        <access-viewer-datatable ng-if="ctrl.users" table-key="access_viewer" dataset="ctrl.userRoles" order-by="EndpointName"> </access-viewer-datatable>\n      </form>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(9),r=n(175),i=n(31),o=n(1543),s=n(95),l=n(1544),c=n(5),d=n(1),u=n.n(d),p=n(152);function m(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function g(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],a=!0,r=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw i}}return n}(e,t)||v(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=v(e))){var t=0,n=function(){};return{s:n,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,i=!0,o=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return i=e.done,e},e:function(e){o=!0,r=e},f:function(){try{i||null==a.return||a.return()}finally{if(o)throw r}}}}function v(e,t){if(e){if("string"==typeof e)return h(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?h(e,t):void 0}}function h(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function b(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var y=function(){function e(t,n,a,r,i,o,s,l){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.Notifications=t,this.ExtensionService=n,this.RoleService=a,this.UserService=r,this.EndpointService=i,this.GroupService=o,this.TeamService=s,this.TeamMembershipService=l}var t,n,d,u,v;return e.$inject=["Notifications","ExtensionService","RoleService","UserService","EndpointService","GroupService","TeamService","TeamMembershipService"],t=e,(n=[{key:"onUserSelect",value:function(){this.userRoles=[];var e,t={},n=this.selectedUser,a=Object(c.a)(this.teamMemberships,{UserId:n.Id}),r=f(Object(l.a)(this.endpoints));try{for(r.s();!(e=r.n()).done;){var i=g(e.value,2)[1],o=this.getRoleFromUserEndpointPolicy(n,i);(o||(o=this.getRoleFromUserEndpointGroupPolicy(n,i))||(o=this.getRoleFromTeamEndpointPolicies(a,i))||(o=this.getRoleFromTeamEndpointGroupPolicies(a,i)))&&(t[i.Id]=o)}}catch(e){r.e(e)}finally{r.f()}this.userRoles=Object(s.a)(t)}},{key:"findLowestRole",value:function(e){return Object(o.a)(Object(i.a)(e,"RoleId","desc"))}},{key:"getRoleFromUserEndpointPolicy",value:function(e,t){var n=[],a=t.UserAccessPolicies[e.Id];if(a){var r=new p.default(a,t,this.roles,null,null);n.push(r)}return this.findLowestRole(n)}},{key:"getRoleFromUserEndpointGroupPolicy",value:function(e,t){var n=[],a=this.groupUserAccessPolicies[t.GroupId][e.Id];if(a){var r=new p.default(a,t,this.roles,this.groups[t.GroupId],null);n.push(r)}return this.findLowestRole(n)}},{key:"getRoleFromTeamEndpointPolicies",value:function(e,t){var n,a=[],r=f(e);try{for(r.s();!(n=r.n()).done;){var i=n.value,o=t.TeamAccessPolicies[i.TeamId];if(o){var s=new p.default(o,t,this.roles,null,this.teams[i.TeamId]);a.push(s)}}}catch(e){r.e(e)}finally{r.f()}return this.findLowestRole(a)}},{key:"getRoleFromTeamEndpointGroupPolicies",value:function(e,t){var n,a=[],r=f(e);try{for(r.s();!(n=r.n()).done;){var i=n.value,o=this.groupTeamAccessPolicies[t.GroupId][i.TeamId];if(o){var s=new p.default(o,t,this.roles,this.groups[t.GroupId],this.teams[i.TeamId]);a.push(s)}}}catch(e){r.e(e)}finally{r.f()}return this.findLowestRole(a)}},{key:"$onInit",value:(u=regeneratorRuntime.mark((function e(){var t,n=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.ExtensionService.extensionEnabled(this.ExtensionService.EXTENSIONS.RBAC);case 3:if(this.rbacEnabled=e.sent,!this.rbacEnabled){e.next=33;break}return e.next=7,this.UserService.users();case 7:return this.users=e.sent,e.t0=r.a,e.next=11,this.EndpointService.endpoints();case 11:return e.t1=e.sent.value,this.endpoints=(0,e.t0)(e.t1,"Id"),e.next=15,this.GroupService.groups();case 15:return t=e.sent,this.groupUserAccessPolicies={},this.groupTeamAccessPolicies={},Object(a.a)(t,(function(e){n.groupUserAccessPolicies[e.Id]=e.UserAccessPolicies,n.groupTeamAccessPolicies[e.Id]=e.TeamAccessPolicies})),this.groups=Object(r.a)(t,"Id"),e.t2=r.a,e.next=23,this.RoleService.roles();case 23:return e.t3=e.sent,this.roles=(0,e.t2)(e.t3,"Id"),e.t4=r.a,e.next=28,this.TeamService.teams();case 28:return e.t5=e.sent,this.teams=(0,e.t4)(e.t5,"Id"),e.next=32,this.TeamMembershipService.memberships();case 32:this.teamMemberships=e.sent;case 33:e.next=38;break;case 35:e.prev=35,e.t6=e.catch(0),this.Notifications.error("Failure",e.t6,"Unable to retrieve accesses");case 38:case"end":return e.stop()}}),e,this,[[0,35]])})),v=function(){var e=this,t=arguments;return new Promise((function(n,a){var r=u.apply(e,t);function i(e){m(r,n,a,i,o,"next",e)}function o(e){m(r,n,a,i,o,"throw",e)}i(void 0)}))},function(){return v.apply(this,arguments)})}])&&b(t.prototype,n),d&&b(t,d),e}();t.default=y,u.a.module("portainer.app").controller("AccessViewerController",y)},function(e,t,n){var a=n(1032);angular.module("portainer.app").component("accessViewerDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",tableKey:"@",orderBy:"@",dataset:"<"}})},function(e,t){var n="app/extensions/rbac/components/access-viewer/datatable/accessViewerDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <div class="searchBar">\n    <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n    <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="Search..." ng-model-options="{ debounce: 300 }" />\n  </div>\n  <div class="table-responsive">\n    <table class="table table-hover nowrap-cells">\n      <thead>\n        <tr>\n          <th>\n            <a ng-click="$ctrl.changeOrderBy(\'EndpointName\')">\n              Endpoint\n              <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'EndpointName\' && !$ctrl.state.reverseOrder"></i>\n              <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'EndpointName\' && $ctrl.state.reverseOrder"></i>\n            </a>\n          </th>\n          <th>\n            <a ng-click="$ctrl.changeOrderBy(\'RoleName\')">\n              Role\n              <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RoleName\' && !$ctrl.state.reverseOrder"></i>\n              <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RoleName\' && $ctrl.state.reverseOrder"></i>\n            </a>\n          </th>\n          <th>Access origin</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit)) track by $index"\n        >\n          <td>{{ item.EndpointName }}</td>\n          <td>{{ item.RoleName }}</td>\n          <td\n            >{{ item.TeamName ? \'Team\' : \'User\' }} <code ng-if="item.TeamName">{{ item.TeamName }}</code> access defined on {{ item.AccessLocation }}\n            <code ng-if="item.GroupName">{{ item.GroupName }}</code>\n            <a ng-if="item.AccessLocation === \'endpoint\'" ui-sref="portainer.endpoints.endpoint.access({id: item.EndpointId})"\n              ><i style="margin-left: 5px;" class="fa fa-users" aria-hidden="true"></i> Manage access\n            </a>\n            <a ng-if="item.AccessLocation === \'endpoint group\'" ui-sref="portainer.groups.group.access({id: item.GroupId})"\n              ><i style="margin-left: 5px;" class="fa fa-users" aria-hidden="true"></i> Manage access\n            </a>\n          </td>\n        </tr>\n        <tr ng-if="!$ctrl.dataset">\n          <td colspan="3" class="text-center text-muted">Select a user to show associated access and role</td>\n        </tr>\n        <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n          <td colspan="3" class="text-center text-muted">The selected user does not have access to any endpoint(s)</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class="footer" ng-if="$ctrl.dataset">\n    <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n    <div class="paginationControls">\n      <form class="form-inline">\n        <span class="limitSelector">\n          <span style="margin-right: 5px;">\n            Items per page\n          </span>\n          <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </span>\n        <dir-pagination-controls max-size="5"></dir-pagination-controls>\n      </form>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1034);angular.module("portainer.extensions.rbac").component("rolesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",rbacEnabled:"<"}})},function(e,t){var n="app/extensions/rbac/components/roles-datatable/rolesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable" ng-class="{ \'portainer-disabled-datatable\': !$ctrl.rbacEnabled }">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-disabled="!$ctrl.rbacEnabled"\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Description\')">\n                  Description\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Description\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Description\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>{{ item.Name }}</td>\n              <td>{{ item.Description }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="2" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="2" class="text-center text-muted">No role available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){function n(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function a(e){return function(){var t=this,a=arguments;return new Promise((function(r,i){var o=e.apply(t,a);function s(e){n(o,r,i,s,l,"next",e)}function l(e){n(o,r,i,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.extensions.rbac").directive("authorization",["Authentication","ExtensionService","$async",function(e,t,n){function r(e,t,n){return i.apply(this,arguments)}function i(){return(i=a(regeneratorRuntime.mark((function n(a,r,i){var o,s,l;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r.hide(),n.prev=1,n.next=4,t.extensionEnabled(t.EXTENSIONS.RBAC);case 4:if(n.sent){n.next=8;break}return r.show(),n.abrupt("return");case 8:n.next=14;break;case 10:return n.prev=10,n.t0=n.catch(1),r.show(),n.abrupt("return");case 14:for(o=i.authorization.split(","),s=0;s<o.length;s++)o[s]=o[s].trim();(l=e.hasAuthorizations(o))?r.show():l||"A"!==r[0].tagName||(r.show(),r.addClass("portainer-disabled-link"));case 18:case"end":return n.stop()}}),n,null,[[1,10]])})))).apply(this,arguments)}return{restrict:"A",link:function(e,t,a){return n(r,e,t,a)}}}])},function(e,t){function n(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function a(e){return function(){var t=this,a=arguments;return new Promise((function(r,i){var o=e.apply(t,a);function s(e){n(o,r,i,s,l,"next",e)}function l(e){n(o,r,i,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.extensions.rbac").directive("disableAuthorization",["Authentication","ExtensionService","$async",function(e,t,n){function r(e,t,n){return i.apply(this,arguments)}function i(){return(i=a(regeneratorRuntime.mark((function n(a,r,i){var o,s;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,t.extensionEnabled(t.EXTENSIONS.RBAC);case 3:if(n.sent){n.next=6;break}return n.abrupt("return");case 6:n.next=11;break;case 8:return n.prev=8,n.t0=n.catch(0),n.abrupt("return");case 11:for(o=i.disableAuthorization.split(","),s=0;s<o.length;s++)o[s]=o[s].trim();e.hasAuthorizations(o)||(r.attr("disabled",!0),r.is("Slider")&&r.css("pointer-events","none"));case 14:case"end":return n.stop()}}),n,null,[[0,8]])})))).apply(this,arguments)}return{restrict:"A",link:function(e,t,a){return n(r,e,t,a)}}}])},function(e,t){angular.module("portainer.app").factory("Roles",["$resource","API_ENDPOINT_ROLES",function(e,t){"use strict";return e(t+"/:id",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(303);angular.module("portainer.extensions.rbac").factory("RoleService",["$q","Roles",function(e,t){var n={role:function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.RoleViewModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve role",err:e})})),r.promise},roles:function(){return t.query({}).$promise},deleteRole:function(e){return t.remove({id:e}).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function o(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var s=function(){function e(t,n,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.Notifications=t,this.RoleService=n,this.ExtensionService=a}var t,n,a,r,s;return e.$inject=["Notifications","RoleService","ExtensionService"],t=e,(n=[{key:"$onInit",value:(r=regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.roles=[],this.rbacEnabled=!1,e.prev=2,e.next=5,this.ExtensionService.extensionEnabled(this.ExtensionService.EXTENSIONS.RBAC);case 5:return this.rbacEnabled=e.sent,e.next=8,this.RoleService.roles();case 8:this.roles=e.sent,e.next=14;break;case 11:e.prev=11,e.t0=e.catch(2),this.Notifications.error("Failure",e.t0,"Unable to retrieve roles");case 14:case"end":return e.stop()}}),e,this,[[2,11]])})),s=function(){var e=this,t=arguments;return new Promise((function(n,a){var o=r.apply(e,t);function s(e){i(o,n,a,s,l,"next",e)}function l(e){i(o,n,a,s,l,"throw",e)}s(void 0)}))},function(){return s.apply(this,arguments)})}])&&o(t.prototype,n),a&&o(t,a),e}();t.default=s,r.a.module("portainer.extensions.rbac").controller("RolesController",s)},function(e,t,n){var a=n(1041),r=n(1042),i=n(1043),o=n(1044);angular.module("portainer.extensions.registrymanagement",[]).config(["$stateRegistryProvider",function(e){"use strict";var t={name:"portainer.registries.registry.configure",url:"/configure",views:{"content@":{templateUrl:a,controller:"ConfigureRegistryController"}}},n={name:"portainer.registries.registry.repositories",url:"/repositories",views:{"content@":{templateUrl:r,controller:"RegistryRepositoriesController"}}},s={name:"portainer.registries.registry.repository",url:"/:repository",views:{"content@":{templateUrl:i,controller:"RegistryRepositoryController"}}},l={name:"portainer.registries.registry.repository.tag",url:"/:tag",views:{"content@":{templateUrl:o,controller:"RegistryRepositoryTagController",controllerAs:"ctrl"}}};e.register(t),e.register(n),e.register(s),e.register(l)}])},function(e,t){var n="app/extensions/registry-management/views/configure/configureregistry.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Configure registry"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">Registries</a> &gt; <a ui-sref="portainer.registries.registry({id: registry.Id})">{{ registry.Name }}</a> &gt; Management configuration\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            Information\n          </div>\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              The following configuration will be used to access this <a href="https://docs.docker.com/registry/spec/api/" target="_blank">registry API</a> to provide Portainer\n              management features.\n            </span>\n          </div>\n          <div class="col-sm-12 form-section-title">\n            Registry details\n          </div>\n          \x3c!-- registry-url-input --\x3e\n          <div class="form-group">\n            <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n              Registry URL\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="registry_url" ng-model="registry.URL" disabled />\n            </div>\n          </div>\n          \x3c!-- !registry-url-input --\x3e\n          \x3c!-- authentication-checkbox --\x3e\n          <div class="form-group" ng-if="registry.Type === RegistryTypes.CUSTOM || registry.Type === RegistryTypes.GITLAB">\n            <div class="col-sm-12">\n              <label for="registry_auth" class="control-label text-left">\n                Authentication\n                <portainer-tooltip position="bottom" message="Enable this option if you need to specify credentials to connect to this registry."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="model.Authentication" /><i></i> </label>\n            </div>\n          </div>\n          \x3c!-- !authentication-checkbox --\x3e\n          \x3c!-- authentication-credentials --\x3e\n          <div ng-if="model.Authentication">\n            \x3c!-- credentials-user --\x3e\n            <div class="form-group">\n              <label for="credentials_username" class="col-sm-3 col-lg-2 control-label text-left">Username</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="credentials_username" ng-model="model.Username" />\n              </div>\n            </div>\n            \x3c!-- !credentials-user --\x3e\n            \x3c!-- credentials-password --\x3e\n            <div class="form-group">\n              <label for="credentials_password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="credentials_password" ng-model="model.Password" placeholder="*******" />\n              </div>\n            </div>\n            \x3c!-- !credentials-password --\x3e\n          </div>\n          \x3c!-- !authentication-credentials --\x3e\n          \x3c!-- tls --\x3e\n          <div ng-if="registry.Type === RegistryTypes.CUSTOM || registry.Type === RegistryTypes.GITLAB">\n            \x3c!-- tls-checkbox --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  TLS\n                  <portainer-tooltip position="bottom" message="Enable this option if you need to connect to the registry API with TLS."></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="model.TLS" /><i></i> </label>\n              </div>\n            </div>\n            \x3c!-- !tls-checkbox --\x3e\n            \x3c!-- tls-skip-verify --\x3e\n            <div class="form-group" ng-if="model.TLS">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  Skip certificate verification\n                  <portainer-tooltip position="bottom" message="Skip the verification of the server TLS certificate. Not recommended on unsecured networks."></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="model.TLSSkipVerify" /><i></i> </label>\n              </div>\n            </div>\n            \x3c!-- !tls-skip-verify --\x3e\n            <div class="col-sm-12 form-section-title" ng-if="model.TLS && !model.TLSSkipVerify">\n              Required TLS files\n            </div>\n            \x3c!-- tls-file-upload --\x3e\n            <div ng-if="model.TLS && !model.TLSSkipVerify">\n              \x3c!-- tls-ca-file-cert --\x3e\n              <div class="form-group">\n                <label for="tls_cert" class="col-sm-3 col-lg-2 control-label text-left">TLS CA certificate</label>\n                <div class="col-sm-9 col-lg-10">\n                  <button class="btn btn-sm btn-primary" ngf-select ng-model="model.TLSCACertFile">Select file</button>\n                  <span style="margin-left: 5px;">\n                    {{ model.TLSCACertFile.name }}\n                    <i\n                      class="fa fa-check green-icon"\n                      ng-if="model.TLSCACertFile && model.TLSCACertFile === registry.ManagementConfiguration.TLSConfig.TLSCACertFile"\n                      aria-hidden="true"\n                    ></i>\n                    <i class="fa fa-times red-icon" ng-if="!model.TLSCACertFile" aria-hidden="true"></i>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !tls-ca-file-cert --\x3e\n              \x3c!-- tls-file-cert --\x3e\n              <div class="form-group">\n                <label for="tls_cert" class="col-sm-3 col-lg-2 control-label text-left">TLS certificate</label>\n                <div class="col-sm-9 col-lg-10">\n                  <button class="btn btn-sm btn-primary" ngf-select ng-model="model.TLSCertFile">Select file</button>\n                  <span style="margin-left: 5px;">\n                    {{ model.TLSCertFile.name }}\n                    <i\n                      class="fa fa-check green-icon"\n                      ng-if="model.TLSCertFile && model.TLSCertFile === registry.ManagementConfiguration.TLSConfig.TLSCertFile"\n                      aria-hidden="true"\n                    ></i>\n                    <i class="fa fa-times red-icon" ng-if="!model.TLSCertFile" aria-hidden="true"></i>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !tls-file-cert --\x3e\n              \x3c!-- tls-file-key --\x3e\n              <div class="form-group">\n                <label class="col-sm-3 col-lg-2 control-label text-left">TLS key</label>\n                <div class="col-sm-9 col-lg-10">\n                  <button class="btn btn-sm btn-primary" ngf-select ng-model="model.TLSKeyFile">Select file</button>\n                  <span style="margin-left: 5px;">\n                    {{ model.TLSKeyFile.name }}\n                    <i class="fa fa-check green-icon" ng-if="model.TLSKeyFile && model.TLSKeyFile === registry.ManagementConfiguration.TLSConfig.TLSKeyFile" aria-hidden="true"></i>\n                    <i class="fa fa-times red-icon" ng-if="!model.TLSKeyFile" aria-hidden="true"></i>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !tls-file-key --\x3e\n            </div>\n          </div>\n          \x3c!-- !tls --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.testInProgress" ng-click="testConfiguration()" button-spinner="state.testInProgress">\n                <span ng-hide="state.testInProgress">Test configuration</span>\n                <span ng-show="state.testInProgress">Test in progress...</span>\n              </button>\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.updateInProgress || !state.validConfiguration"\n                ng-click="updateConfiguration()"\n                button-spinner="state.updateInProgress"\n              >\n                <span ng-hide="state.updateInProgress">Save configuration</span>\n                <span ng-show="state.updateInProgress">Saving configuration...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/extensions/registry-management/views/repositories/registryRepositories.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Registry repositories">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.registries.registry.repositories" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">Registries</a> &gt;\n    <a ng-if="isAdmin" ui-sref="portainer.registries.registry({id: registry.Id})" ui-sref-opts="{reload:true}">{{ registry.Name }}</a\n    ><span ng-if="!isAdmin">{{ registry.Name }}</span> &gt; Repositories\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <information-panel ng-if="state.displayInvalidConfigurationMessage" title-text="Registry management configuration required">\n    <span class="small text-muted">\n      <p>\n        <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n        Portainer was not able to use this registry management features. You might need to update the configuration used by Portainer to access this registry.\n      </p>\n      <p\n        >Note: Portainer registry management features are only supported with registries exposing the\n        <a href="https://docs.docker.com/registry/spec/api/" target="_blank">v2 registry API</a>.</p\n      >\n      <div style="margin-top: 7px;">\n        <a ui-sref="portainer.registries.registry.configure({id: registry.Id})"> <i class="fa fa-wrench" aria-hidden="true"></i> Configure this registry </a>\n      </div>\n    </span>\n  </information-panel>\n</div>\n\n<div class="row" ng-if="repositories">\n  <div class="col-sm-12">\n    <registry-repositories-datatable\n      title-text="Repositories"\n      title-icon="fa-book"\n      dataset="repositories"\n      table-key="registryRepositories"\n      order-by="Name"\n      pagination-action="paginationAction"\n      loading="state.loading"\n    >\n    </registry-repositories-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/extensions/registry-management/views/repositories/edit/registryRepository.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Repository">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.registries.registry.repository" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">Registries</a> &gt; <a ui-sref="portainer.registries.registry.repositories({id: registry.Id})">{{ registry.Name }}</a> &gt;\n    <a ui-sref="portainer.registries.registry.repository()">{{ repository.Name }} </a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <information-panel ng-if="!state.tagsRetrieval.auto" title-text="Information regarding repository size">\n    <span class="small text-muted">\n      <p>\n        <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n        Portainer needs to retrieve additional information to enable <code>tags modifications (addition, removal, rename)</code> and <code>repository removal</code> features.<br />\n        As this repository contains more than <code>{{ state.tagsRetrieval.limit }}</code> tags, the additional retrieval wasn\'t started automatically.<br />\n        Once started you can still navigate this page, leaving the page will cancel the retrieval process.<br />\n        <br />\n        <span style="font-weight: 700;">Note:</span> on very large repositories or high latency environments the retrieval process can take a few minutes.\n      </p>\n      <button class="btn btn-sm btn-primary" ng-if="!state.tagsRetrieval.running && short.Tags.length === 0" ng-click="startStopRetrieval()">Start</button>\n      <button class="btn btn-sm btn-danger" ng-if="state.tagsRetrieval.running" ng-click="startStopRetrieval()">Cancel</button>\n    </span>\n    <span ng-if="state.tagsRetrieval.running && state.tagsRetrieval.progression !== \'100\'">\n      &nbsp; Retrieval progress : {{ state.tagsRetrieval.progression }}% - {{ state.tagsRetrieval.elapsedTime | number: 0 }}s\n    </span>\n    <span ng-if="!state.tagsRetrieval.running && state.tagsRetrieval.progression === \'100\'">\n      <i class="fa fa-check-circle green-icon"></i> Retrieval completed in {{ state.tagsRetrieval.elapsedTime | number: 0 }}s\n    </span>\n  </information-panel>\n</div>\n\n<div class="row">\n  <div class="col-sm-8">\n    <rd-widget>\n      <rd-widget-header icon="fa-info" title-text="Repository information"> </rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Repository</td>\n              <td>\n                {{ repository.Name }}\n              </td>\n              <td>\n                <button class="btn btn-xs btn-danger" ng-if="!state.tagsRetrieval.running && state.tagsRetrieval.progression !== 0" ng-click="removeRepository()">\n                  <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Delete this repository\n                </button>\n              </td>\n            </tr>\n            <tr>\n              <td>Tags count</td>\n              <td>{{ repository.Tags.length }}</td>\n              <td></td>\n            </tr>\n            <tr ng-if="short.Images.length">\n              <td>Images count</td>\n              <td>{{ short.Images.length }}</td>\n              <td></td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n\n  <div class="col-sm-4" ng-if="short.Images.length > 0">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title-text="Add tag"> </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <label for="tag" class="col-sm-3 col-lg-2 control-label text-left"\n              >Tag\n              <portainer-tooltip\n                position="bottom"\n                message="Tag can only contain alphanumeric (a-zA-Z0-9) and special _ . - characters. Tag must not start with . - characters."\n              ></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="tag" ng-model="formValues.Tag" />\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="image" class="col-sm-3 col-lg-2 control-label text-left">Image</label>\n            <ui-select class="col-sm-9 col-lg-10" ng-model="formValues.SelectedImage" id="image">\n              <ui-select-match placeholder="Select an image" allow-clear="true">\n                <span>{{ $select.selected | trimshasum }}</span>\n              </ui-select-match>\n              <ui-select-choices repeat="image in (short.Images | filter: $select.search)">\n                <span>{{ image | trimshasum }}</span>\n              </ui-select-choices>\n            </ui-select>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-disabled="state.actionInProgress || !formValues.Tag || !formValues.SelectedImage"\n                ng-click="addTag()"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Add tag</span>\n                <span ng-show="state.actionInProgress">Adding tag...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <registries-repository-tags-datatable\n      title-text="Tags"\n      title-icon="fa-tags"\n      dataset="tags"\n      table-key="registryRepositoryTags"\n      order-by="Name"\n      remove-action="removeTags"\n      retag-action="retagAction"\n      advanced-features-available="short.Images.length > 0"\n      pagination-action="paginationAction"\n      loading="state.loading"\n    >\n    </registries-repository-tags-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/extensions/registry-management/views/repositories/tag/registryRepositoryTag.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Tag">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="portainer.registries.registry.repository.tag" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">Registries</a> &gt; <a ui-sref="portainer.registries.registry.repositories()">{{ ctrl.registry.Name }}</a> &gt;\n    <a ui-sref="portainer.registries.registry.repository()">{{ ctrl.context.repository }} </a> &gt;\n    {{ ctrl.context.tag }}\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="ctrl.details.RepoTags.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa fa-tags" title-text="Image tags"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <div class="row">\n              <div class="pull-left" ng-repeat="tag in ctrl.details.RepoTags" style="display: table;">\n                <div class="input-group col-md-1" style="padding: 0 15px;">\n                  <span class="input-group-addon">{{ tag }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="ctrl.details">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title-text="Image details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ ctrl.details.Id }}\n              </td>\n            </tr>\n            <tr ng-if="ctrl.details.Parent">\n              <td>Parent</td>\n              <td>{{ ctrl.details.Parent }}</td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ ctrl.details.Created | getisodate }}</td>\n            </tr>\n            <tr>\n              <td>Build</td>\n              <td>Docker {{ ctrl.details.DockerVersion }} on {{ ctrl.details.Os }}, {{ ctrl.details.Architecture }}</td>\n            </tr>\n            <tr ng-if="ctrl.details.Author">\n              <td>Author</td>\n              <td>{{ ctrl.details.Author }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="ctrl.details">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title-text="Dockerfile details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>CMD</td>\n              <td\n                ><code>{{ ctrl.details.Command | command }}</code></td\n              >\n            </tr>\n            <tr ng-if="ctrl.details.Entrypoint">\n              <td>ENTRYPOINT</td>\n              <td\n                ><code>{{ ctrl.details.Entrypoint | command }}</code></td\n              >\n            </tr>\n            <tr ng-if="ctrl.details.ExposedPorts.length > 0">\n              <td>EXPOSE</td>\n              <td>\n                <span class="label label-default space-right" ng-repeat="port in ctrl.details.ExposedPorts">\n                  {{ port }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="ctrl.details.Volumes.length > 0">\n              <td>VOLUME</td>\n              <td>\n                <span class="label label-default space-right" ng-repeat="volume in ctrl.details.Volumes">\n                  {{ volume }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="ctrl.details.Env.length > 0">\n              <td>ENV</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="var in ctrl.details.Env">\n                    <td>{{ var|key: \'=\' }}</td>\n                    <td>{{ var|value: \'=\' }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="ctrl.tag">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title-text="Image layers"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table id="image-layers" class="table">\n          <thead>\n            <th style="white-space: nowrap;">\n              <a ng-click="ctrl.order(\'Order\')">\n                Order\n                <span ng-show="ctrl.Sort.Type == \'Order\' && !ctrl.Sort.Reverse" class="glyphicon glyphicon-chevron-down"></span>\n                <span ng-show="ctrl.Sort.Type == \'Order\' && ctrl.Sort.Reverse" class="glyphicon glyphicon-chevron-up"></span>\n              </a>\n            </th>\n            <th>\n              <a ng-click="ctrl.order(\'CreatedBy\')">\n                Layer\n                <span ng-show="ctrl.Sort.Type == \'CreatedBy\' && !ctrl.Sort.Reverse" class="glyphicon glyphicon-chevron-down"></span>\n                <span ng-show="ctrl.Sort.Type == \'CreatedBy\' && ctrl.Sort.Reverse" class="glyphicon glyphicon-chevron-up"></span>\n              </a>\n            </th>\n          </thead>\n          <tbody>\n            <tr ng-repeat="layer in ctrl.history | orderBy:ctrl.Sort.Type:ctrl.Sort.Reverse">\n              <td style="white-space: nowrap;">\n                {{ layer.Order }}\n              </td>\n              <td class="expand">\n                <div ng-if="layer.CreatedBy.length > 130">\n                  <span id="layer-command-{{ $index }}-full" style="display: none;">\n                    {{ layer.CreatedBy }}\n                  </span>\n                  <span id="layer-command-{{ $index }}-short">\n                    {{ layer.CreatedBy | truncate: 130 }}\n                    <span ng-if="layer.CreatedBy.length > 130" style="margin-left: 5px;">\n                      <a id="layer-command-expander{{ $index }}" class="btn" ng-click="ctrl.toggleLayerCommand($index)">\n                        <i class="fa fa-plus-circle" aria-hidden="true"></i>\n                      </a>\n                    </span>\n                  </span>\n                </div>\n                <div ng-if="layer.CreatedBy.length <= 130">\n                  <span id="layer-command-{{ $index }}-full">\n                    {{ layer.CreatedBy }}\n                  </span>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1046);angular.module("portainer.extensions.registrymanagement").component("registryRepositoriesDatatable",{templateUrl:a,controller:"RegistryRepositoriesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",paginationAction:"<",loading:"<"}})},function(e,t){var n="app/extensions/registry-management/components/registries-repositories-datatable/registryRepositoriesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-model-options="{ debounce: 300 }"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover table-filters nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Repository\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                Tags count\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              ng-hide="$ctrl.loading"\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <a ui-sref="portainer.registries.registry.repository({repository: item.Name})" title="{{ item.Name }}">{{ item.Name }}</a>\n              </td>\n              <td>{{ item.TagsCount }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset || $ctrl.loading">\n              <td colspan="5" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">No repository available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(5);angular.module("portainer.app").controller("RegistryRepositoriesDatatableController",["$scope","$controller",function(e,t){var n=this;angular.extend(this,t("GenericDatatableController",{$scope:e})),this.state.orderBy=this.orderBy,e.$watch((function(){return n.state.filteredDataSet}),(function(e,t){e&&function(e,t){if(!e||!t)return!0;var n=e.map((function(e){return e.Name})).sort(),a=t.map((function(e){return e.Name})).sort();return n.join(",")!==a.join(",")}(t,e)&&n.paginationAction(Object(a.a)(e,{TagsCount:0}))}),!0)}])},function(e,t,n){var a=n(1049);angular.module("portainer.extensions.registrymanagement").component("registriesRepositoryTagsDatatable",{templateUrl:a,controller:"RegistryRepositoriesTagsDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<",retagAction:"<",advancedFeaturesAvailable:"<",paginationAction:"<",loading:"<"}})},function(e,t){var n="app/extensions/registry-management/components/registries-repository-tags-datatable/registriesRepositoryTagsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar" ng-if="$ctrl.advancedFeaturesAvailable">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-model-options="{ debounce: 300 }"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>Os/Architecture</th>\n              <th>Image ID</th>\n              <th>Compressed size</th>\n              <th ng-if="$ctrl.advancedFeaturesAvailable">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              ng-hide="$ctrl.loading"\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.registries.registry.repository.tag({tag: item.Name})" title="{{ item.Name }}">{{ item.Name }}</a>\n              </td>\n              <td>{{ item.Os }}/{{ item.Architecture }}</td>\n              <td>{{ item.ImageId | trimshasum }}</td>\n              <td>{{ item.Size | humansize }}</td>\n              <td ng-if="$ctrl.advancedFeaturesAvailable">\n                <span ng-if="!item.Modified">\n                  <a class="interactive" ng-click="item.Modified = true; item.NewName = item.Name; $event.stopPropagation();">\n                    <i class="fa fa-tag" aria-hidden="true"></i> Retag\n                  </a>\n                </span>\n                <span ng-if="item.Modified">\n                  <portainer-tooltip\n                    position="bottom"\n                    message="Tag can only contain alphanumeric (a-zA-Z0-9) and special _ . - characters. Tag must not start with . - characters."\n                  ></portainer-tooltip>\n                  <input class="input-sm" type="text" ng-model="item.NewName" on-enter-key="$ctrl.retagAction(item)" auto-focus ng-click="$event.stopPropagation();" />\n                  <a class="interactive" ng-click="item.Modified = false; $event.stopPropagation();"><i class="fa fa-times"></i></a>\n                  <a class="interactive" ng-click="$ctrl.retagAction(item); $event.stopPropagation();"><i class="fa fa-check-square"></i></a>\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="$ctrl.loading">\n              <td colspan="5" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="!$ctrl.loading && $ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">No tag available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(5),r=n(4),i=n(39);angular.module("portainer.app").controller("RegistryRepositoriesTagsDatatableController",["$scope","$controller",function(e,t){angular.extend(this,t("GenericDatatableController",{$scope:e}));var n=this;function o(e){return e.Name+e.ImageDigest}this.state.orderBy=this.orderBy,e.$watch((function(){return n.state.filteredDataSet}),(function(e,t){e&&e.length&&function(e,t){if(!e||!t)return!0;var n=Object(i.a)(Object(r.a)(e,o)),a=Object(i.a)(Object(r.a)(t,o));return n.join(",")!==a.join(",")}(t,e)&&(n.paginationAction(Object(a.a)(e,{ImageId:""})),n.resetSelectionState())}),!0)}])},function(e,t,n){"use strict";n.r(t);var a=n(4),r=n(58);angular.module("portainer.extensions.registrymanagement").factory("RegistryV2Helper",[function(){var e={};return e.manifestsToTag=function(e){var t,n=e.v1,i=e.v2,o=(t=n.history,Object(a.a)(t,(function(e){return angular.fromJson(e.v1Compatibility)}))),s=n.tag,l=o[0].os,c=n.architecture,d=i.layers.reduce((function(e,t){return{size:e.size+t.size}})).size,u=i.config.digest,p=i.digest;return new r.RepositoryTagViewModel(s,l,c,d,p,u,i,o)},e}])},function(e,t,n){"use strict";n.r(t);var a=n(167);angular.module("portainer.extensions.registrymanagement").factory("RegistryCatalog",["$resource","API_ENDPOINT_REGISTRIES",function(e,t){return e(t+"/:id/v2/:action",{},{get:{method:"GET",params:{id:"@id",action:"_catalog"},transformResponse:a.default},ping:{method:"GET",params:{id:"@id"},timeout:3500},pingWithForceNew:{method:"GET",params:{id:"@id"},timeout:3500,headers:{"X-RegistryManagement-ForceNew":"1"}}},{stripTrailingSlashes:!1})}])},function(e,t,n){"use strict";n.r(t);var a=n(235);angular.module("portainer.extensions.registrymanagement").factory("Gitlab",["$resource","API_ENDPOINT_REGISTRIES",function(e,t){return function(n){var r={};n&&(r["Private-Token"]=n.token,r["X-Gitlab-Domain"]=n.url);var i=t+"/:id/proxies/gitlab/api/v4/projects";return e(i,{id:"@id"},{projects:{method:"GET",params:{membership:"true"},transformResponse:a.default,headers:r},repositories:{method:"GET",url:i+"/:projectId/registry/repositories",params:{tags:!0},headers:r,transformResponse:a.default}})}}])},function(e,t,n){"use strict";n.r(t);var a=n(19),r=n.n(a);angular.module("portainer.extensions.registrymanagement").factory("RegistryManifestsJquery",["API_ENDPOINT_REGISTRIES",function(e){function t(t){return e+"/"+t.id+"/v2/"+t.repository+"/manifests/"+t.tag}return{get:function(e){return new Promise((function(n,a){r.a.ajax({type:"GET",dataType:"JSON",url:t(e),headers:{"Cache-Control":"no-cache","If-Modified-Since":"Mon, 26 Jul 1997 05:00:00 GMT"},success:function(e){return n(e)},error:function(e){return a(e)}})}))},getV2:function(e){return new Promise((function(n,a){r.a.ajax({type:"GET",dataType:"JSON",url:t(e),headers:{Accept:"application/vnd.docker.distribution.manifest.v2+json","Cache-Control":"no-cache","If-Modified-Since":"Mon, 26 Jul 1997 05:00:00 GMT"},success:function(e,t,a){e.digest=a.getResponseHeader("Docker-Content-Digest"),n(e)},error:function(e){return a(e)}})}))},put:function(e,n){return new Promise((function(a,i){var o;r.a.ajax({type:"PUT",url:t(e),headers:{"Content-Type":"application/vnd.docker.distribution.manifest.v2+json"},data:(o=n,angular.toJson(o,3)),success:function(e){return a(e)},error:function(e){return i(e)}})}))},delete:function(e){return new Promise((function(n,a){r.a.ajax({type:"DELETE",url:t(e),success:function(e){return n(e)},error:function(e){return a(e)}})}))}}}])},function(e,t,n){"use strict";n.r(t);var a=n(167);angular.module("portainer.extensions.registrymanagement").factory("RegistryTags",["$resource","API_ENDPOINT_REGISTRIES",function(e,t){return e(t+"/:id/v2/:repository/tags/list",{},{get:{method:"GET",params:{id:"@id",repository:"@repository"},transformResponse:a.default}})}])},function(e,t,n){"use strict";n.r(t);var a=n(5),r=n(4),i=n(38),o=n(304),s=n(144);function l(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function c(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){l(i,a,r,o,s,"next",e)}function s(e){l(i,a,r,o,s,"throw",e)}o(void 0)}))}}angular.module("portainer.extensions.registrymanagement").factory("RegistryGitlabService",["$async","Gitlab",function(e,t){var n={};function l(e,t,n){return d.apply(this,arguments)}function d(){return(d=c(regeneratorRuntime.mark((function e(n,a,r){var o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t(n).projects(a).$promise;case 2:if(o=e.sent,r=Object(i.a)(r,o.data),!o.next){e.next=9;break}return a.page=o.next,e.next=8,l(n,a,r);case 8:r=e.sent;case 9:return e.abrupt("return",r);case 10:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function u(e,t){return p.apply(this,arguments)}function p(){return(p=c(regeneratorRuntime.mark((function e(t,n){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,l({url:t,token:n},{page:1},[]);case 3:return a=e.sent,e.abrupt("return",Object(r.a)(a,(function(e){return new o.RegistryGitlabProject(e)})));case 7:throw e.prev=7,e.t0=e.catch(0),{msg:"Unable to retrieve projects",err:e.t0};case 10:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}function m(e,t){return g.apply(this,arguments)}function g(){return(g=c(regeneratorRuntime.mark((function e(n,r){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t().repositories(n).$promise;case 2:if(o=e.sent,s=Object(a.a)(o.data,(function(e){return e.tags&&e.tags.length>0})),r=Object(i.a)(r,s),!o.next){e.next=10;break}return n.page=o.next,e.next=9,m(n,r);case 9:r=e.sent;case 10:return e.abrupt("return",r);case 11:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function f(e){return v.apply(this,arguments)}function v(){return(v=c(regeneratorRuntime.mark((function e(t){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n={id:t.Id,projectId:t.Gitlab.ProjectId,page:1},e.next=4,m(n,[]);case 4:return a=e.sent,e.abrupt("return",Object(r.a)(a,(function(e){return new s.RegistryRepositoryGitlabViewModel(e)})));case 8:throw e.prev=8,e.t0=e.catch(0),{msg:"Unable to retrieve repositories",err:e.t0};case 11:case"end":return e.stop()}}),e,null,[[0,8]])})))).apply(this,arguments)}return n.projects=function(t,n){return e(u,t,n)},n.repositories=function(t){return e(f,t)},n}])},function(e,t,n){"use strict";n.r(t);var a=n(21);angular.module("portainer.extensions.registrymanagement").factory("RegistryServiceSelector",["$q","RegistryV2Service","RegistryGitlabService",function(e,t,n){var r={};return r.ping=function(e,n){return t.ping(e,n)},r.repositories=function(e){var r=t;e.Type===a.RegistryTypes.GITLAB&&(r=n);return r.repositories(e)},r.getRepositoriesDetails=function(e,n){return t.getRepositoriesDetails(e,n)},r.tags=function(e,n){return t.tags(e,n)},r.getTagsDetails=function(e,n,a){return t.getTagsDetails(e,n,a)},r.tag=function(e,n,a){return t.tag(e,n,a)},r.addTag=function(e,n,a,r){return t.addTag(e,n,a,r)},r.deleteManifest=function(e,n,a){return t.deleteManifest(e,n,a)},r.shortTagsWithProgress=function(e,n,a){return t.shortTagsWithProgress(e,n,a)},r.deleteTagsWithProgress=function(e,n,a,r){return t.deleteTagsWithProgress(e,n,a,r)},r.retagWithProgress=function(e,n,a,r,i){return t.retagWithProgress(e,n,a,r,i)},r}])},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(68),i=n(4),o=n(38),s=n(58),l=n(144),c=n(174);function d(e,t){var n={},a=!1;function r(n,r){return a=!0,r=new Promise((function(t){t(e[n](r))})),{done:!1,value:t(r)}}return"function"==typeof Symbol&&Symbol.iterator&&(n[Symbol.iterator]=function(){return this}),n.next=function(e){return a?(a=!1,e):r("next",e)},"function"==typeof e.throw&&(n.throw=function(e){if(a)throw a=!1,e;return r("throw",e)}),"function"==typeof e.return&&(n.return=function(e){return a?(a=!1,e):r("return",e)}),n}function u(e){return new g(e)}function p(e){return function(){return new m(e.apply(this,arguments))}}function m(e){var t,n;function a(t,n){try{var i=e[t](n),o=i.value,s=o instanceof g;Promise.resolve(s?o.wrapped:o).then((function(e){s?a("return"===t?"return":"next",e):r(i.done?"return":"normal",e)}),(function(e){a("throw",e)}))}catch(e){r("throw",e)}}function r(e,r){switch(e){case"return":t.resolve({value:r,done:!0});break;case"throw":t.reject(r);break;default:t.resolve({value:r,done:!1})}(t=t.next)?a(t.key,t.arg):n=null}this._invoke=function(e,r){return new Promise((function(i,o){var s={key:e,arg:r,resolve:i,reject:o,next:null};n?n=n.next=s:(t=n=s,a(e,r))}))},"function"!=typeof e.return&&(this.return=void 0)}function g(e){this.wrapped=e}function f(e){var t;if("undefined"!=typeof Symbol){if(Symbol.asyncIterator&&null!=(t=e[Symbol.asyncIterator]))return t.call(e);if(Symbol.iterator&&null!=(t=e[Symbol.iterator]))return t.call(e)}throw new TypeError("Object is not async iterable")}"function"==typeof Symbol&&Symbol.asyncIterator&&(m.prototype[Symbol.asyncIterator]=function(){return this}),m.prototype.next=function(e){return this._invoke("next",e)},m.prototype.throw=function(e){return this._invoke("throw",e)},m.prototype.return=function(e){return this._invoke("return",e)},angular.module("portainer.extensions.registrymanagement").factory("RegistryV2Service",["$q","$async","RegistryCatalog","RegistryTags","RegistryManifestsJquery","RegistryV2Helper",function(e,t,n,m,g,v){var h={};function b(t){var a=e.defer();return function e(t,a,r){n.get(t).$promise.then((function(n){r=Object(o.a)(r,n.repositories),n.last&&n.n?e({id:t.id,n:n.n,last:n.last},a,r):a.resolve(r)}))}({id:t},a,[]),a.promise}function y(t,n){var a=e.defer();return function e(t,n,a){m.get(t).$promise.then((function(r){a.name=r.name,a.tags=Object(o.a)(a.tags,r.tags),r.last&&r.n?e({id:t.id,repository:t.repository,n:r.n,last:r.last},n,a):n.resolve(a)})).catch((function(e){n.reject({msg:"Unable to retrieve tags",err:e})}))}({id:t.Id,repository:n},a,{tags:[]}),a.promise}function x(t,n,a){var r=e.defer(),i=t.Id,o={v1:g.get({id:i,repository:n,tag:a}),v2:g.getV2({id:i,repository:n,tag:a})};return e.all(o).then((function(e){var t=v.manifestsToTag(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve tag "+a,err:e})})),r.promise}function w(e,t,n){return k(e,t,n.Tag,n.Manifest)}function k(e,t,n,a){var r=e.Id;return delete a.digest,g.put({id:r,repository:t,tag:n},a)}function S(e,t,n){return C.apply(this,arguments)}function C(){return(C=p(regeneratorRuntime.mark((function t(n,a,r){var i,o,s,l,d,p,m,g,v=arguments;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:i=v.length>3&&void 0!==v[3]?v[3]:0,o=!0,s=!1,t.prev=3,d=f(Object(c.default)(e,r,w,[n,a]));case 5:return t.next=7,u(d.next());case 7:return p=t.sent,o=p.done,t.next=11,u(p.value);case 11:if(m=t.sent,o){t.next=24;break}if("number"!=typeof(g=m)){t.next=19;break}return t.next=17,i+g;case 17:t.next=21;break;case 19:return t.next=21,g;case 21:o=!0,t.next=5;break;case 24:t.next=30;break;case 26:t.prev=26,t.t0=t.catch(3),s=!0,l=t.t0;case 30:if(t.prev=30,t.prev=31,o||null==d.return){t.next=35;break}return t.next=35,u(d.return());case 35:if(t.prev=35,!s){t.next=38;break}throw l;case 38:return t.finish(35);case 39:return t.finish(30);case 40:case"end":return t.stop()}}),t,null,[[3,26,30,40],[31,,35,39]])})))).apply(this,arguments)}function $(e,t,n){var a=e.Id;return g.delete({id:a,repository:t,tag:n})}function I(e,t,n){return P.apply(this,arguments)}function P(){return(P=p(regeneratorRuntime.mark((function t(n,a,r){var i,o,s,l,d,p,m;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:i=!0,o=!1,t.prev=2,l=f(Object(c.default)(e,r,$,[n,a]));case 4:return t.next=6,u(l.next());case 6:return d=t.sent,i=d.done,t.next=10,u(d.value);case 10:if(p=t.sent,i){t.next=18;break}return m=p,t.next=15,m;case 15:i=!0,t.next=4;break;case 18:t.next=24;break;case 20:t.prev=20,t.t0=t.catch(2),o=!0,s=t.t0;case 24:if(t.prev=24,t.prev=25,i||null==l.return){t.next=29;break}return t.next=29,u(l.return());case 29:if(t.prev=29,!o){t.next=32;break}throw s;case 32:return t.finish(29);case 33:return t.finish(24);case 34:case"end":return t.stop()}}),t,null,[[2,20,24,34],[25,,29,33]])})))).apply(this,arguments)}function T(e,t,n){return new Promise((function(a,r){g.getV2({id:e,repository:t,tag:n}).then((function(e){return a(new s.RepositoryShortTag(n,e.config.digest,e.digest,e))})).catch((function(e){return r(e)}))}))}function A(){return(A=p(regeneratorRuntime.mark((function t(n,a,r){var i;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return i=n.Id,t.delegateYield(d(f(Object(c.default)(e,r,T,[i,a])),u),"t0",2);case 2:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function D(){return(D=p(regeneratorRuntime.mark((function e(t,n,r,o,l){var c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.delegateYield(d(f(I(t,n,o)),u),"t0",1);case 1:return c=Object(i.a)(l,(function(e){var t=Object(a.a)(r,{Name:e.Name}),n=t&&t.Name!==t.NewName?t.NewName:e.Name;return new s.RepositoryAddTagPayload(n,e.ManifestV2)})),e.delegateYield(d(f(S(t,n,c,o.length)),u),"t1",3);case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function R(){return(R=p(regeneratorRuntime.mark((function e(t,n,a,r){var o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.delegateYield(d(f(I(t,n,a)),u),"t0",1);case 1:return o=Object(i.a)(r,(function(e){return new s.RepositoryAddTagPayload(e.Name,e.ManifestV2)})),e.delegateYield(d(f(S(t,n,o,a.length)),u),"t1",3);case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return h.ping=function(e,t){var a=e.Id;return t?n.pingWithForceNew({id:a}).$promise:n.ping({id:a}).$promise},h.repositories=function(t){var n=e.defer();return b(t.Id).then((function(e){var t=Object(i.a)(e,(function(e){return new l.RegistryRepositoryViewModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve repositories",err:e})})),n.promise},h.getRepositoriesDetails=function(t,n){var a=e.defer(),o=Object(i.a)(n,(function(e){return y(t,e.Name)}));return e.all(o).then((function(e){var t=e.map((function(e){return new l.RegistryRepositoryViewModel(e)}));t=Object(r.a)(t,void 0),a.resolve(t)})).catch((function(e){a.reject({msg:"Unable to retrieve repositories",err:e})})),a.promise},h.tags=y,h.tag=x,h.getTagsDetails=function(t,n,a){var r=Object(i.a)(a,(function(e){return x(t,n,e.Name)}));return e.all(r)},h.shortTagsWithProgress=function(e,t,n){return A.apply(this,arguments)},h.addTag=k,h.deleteManifest=$,h.deleteTagsWithProgress=function(e,t,n,a){return R.apply(this,arguments)},h.retagWithProgress=function(e,t,n,a,r){return D.apply(this,arguments)},h}])},function(e,t,n){"use strict";n.r(t);var a=n(21),r=n(69);angular.module("portainer.extensions.registrymanagement").controller("ConfigureRegistryController",["$scope","$state","$transition$","RegistryService","RegistryServiceSelector","Notifications",function(e,t,n,i,o,s){var l;e.state={testInProgress:!1,updateInProgress:!1,validConfiguration:!1},e.testConfiguration=function(){e.state.testInProgress=!0,i.configureRegistry(e.registry.Id,e.model).then((function(){return o.ping(e.registry,!0)})).then((function(){s.success("Success","Valid management configuration"),e.state.validConfiguration=!0})).catch((function(e){s.error("Failure",e,"Invalid management configuration")})).finally((function(){e.state.testInProgress=!1}))},e.updateConfiguration=function(){e.state.updateInProgress=!0,i.configureRegistry(e.registry.Id,e.model).then((function(){s.success("Success","Registry management configuration updated"),t.go("portainer.registries.registry.repositories",{id:e.registry.Id},{reload:!0})})).catch((function(e){s.error("Failure",e,"Unable to update registry management configuration")})).finally((function(){e.state.updateInProgress=!1}))},l=n.params().id,e.RegistryTypes=a.RegistryTypes,i.registry(l).then((function(t){var n=t,a=new r.RegistryManagementConfigurationDefaultModel(n);e.registry=n,e.model=a})).catch((function(e){s.error("Failure",e,"Unable to retrieve registry details")}))}])},function(e,t,n){var a=n(1061);angular.module("portainer.extensions.registrymanagement").component("progressionModal",{templateUrl:a,bindings:{resolve:"<"}})},function(e,t){var n="app/extensions/registry-management/views/repositories/edit/progression-modal/progressionModal.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-widget>\n  <rd-widget-body>\n    <span class="small text-muted">\n      <p>\n        <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n        {{ $ctrl.resolve.message }}\n      </p>\n    </span>\n    <span> &nbsp; {{ $ctrl.resolve.progressLabel }} : {{ $ctrl.resolve.context.progression }}% - {{ $ctrl.resolve.context.elapsedTime | number: 0 }}s </span>\n  </rd-widget-body>\n</rd-widget>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(38),r=n(57),i=n(418),o=n(6),s=n(5),l=n(39),c=n(44),d=n(68),u=n(4),p=n(117),m=n(58);function g(e){return function(e){if(Array.isArray(e))return h(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||v(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=v(e))){var t=0,n=function(){};return{s:n,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,i=!0,o=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return i=e.done,e},e:function(e){o=!0,r=e},f:function(){try{i||null==a.return||a.return()}finally{if(o)throw r}}}}function v(e,t){if(e){if("string"==typeof e)return h(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?h(e,t):void 0}}function h(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function b(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function y(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){b(i,a,r,o,s,"next",e)}function s(e){b(i,a,r,o,s,"throw",e)}o(void 0)}))}}function x(e){var t;if("undefined"!=typeof Symbol){if(Symbol.asyncIterator&&null!=(t=e[Symbol.asyncIterator]))return t.call(e);if(Symbol.iterator&&null!=(t=e[Symbol.iterator]))return t.call(e)}throw new TypeError("Object is not async iterable")}angular.module("portainer.app").controller("RegistryRepositoryController",["$q","$async","$scope","$uibModal","$interval","$transition$","$state","RegistryServiceSelector","RegistryService","ModalService","Notifications","ImageHelper",function(e,t,n,v,h,b,w,k,S,C,$,I){function P(e){return e/1e3}function T(e,t){return(e/t*100).toFixed()}function A(e){return v.open({component:"progressionModal",backdrop:"static",keyboard:!1,resolve:e})}function D(e){n.state.tagsRetrieval.elapsedTime=P(Date.now()-e)}function R(){n.state.tagsRetrieval.asyncGenerator=k.shortTagsWithProgress(n.registry,n.repository.Name,n.repository.Tags)}function E(){return N.apply(this,arguments)}function N(){return(N=y(regeneratorRuntime.mark((function e(){var t,a,r,i,o,s,c,d;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n.state.tagsRetrieval.running=!0,t=Date.now(),n.state.tagsRetrieval.clock=h(D,1e3,0,!0,t),a=!0,r=!1,e.prev=5,o=x(n.state.tagsRetrieval.asyncGenerator);case 7:return e.next=9,o.next();case 9:return s=e.sent,a=s.done,e.next=13,s.value;case 13:if(c=e.sent,a){e.next=20;break}"number"==typeof(d=c)?n.state.tagsRetrieval.progression=T(d,n.repository.Tags.length):n.short.Tags=Object(l.a)(d,"Name");case 17:a=!0,e.next=7;break;case 20:e.next=26;break;case 22:e.prev=22,e.t0=e.catch(5),r=!0,i=e.t0;case 26:if(e.prev=26,e.prev=27,a||null==o.return){e.next=31;break}return e.next=31,o.return();case 31:if(e.prev=31,!r){e.next=34;break}throw i;case 34:return e.finish(31);case 35:return e.finish(26);case 36:n.state.tagsRetrieval.running=!1,h.cancel(n.state.tagsRetrieval.clock);case 38:case"end":return e.stop()}}),e,null,[[5,22,26,36],[27,,31,35]])})))).apply(this,arguments)}function U(){return O.apply(this,arguments)}function O(){return(O=y(regeneratorRuntime.mark((function e(){var t,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,n.state.actionInProgress=!0,I.isValidTag(n.formValues.Tag)){e.next=4;break}throw{msg:"Invalid tag pattern, see info for more details on format."};case 4:return t=n.short.Tags.find((function(e){return e.ImageId===n.formValues.SelectedImage})),a=t.ManifestV2,e.next=8,k.addTag(n.registry,n.repository.Name,n.formValues.Tag,a);case 8:return $.success("Success","Tag successfully added"),n.short.Tags.push(new m.RepositoryShortTag(n.formValues.Tag,t.ImageId,t.ImageDigest,t.ManifestV2)),e.next=12,q();case 12:n.formValues.Tag="",delete n.formValues.SelectedImage,e.next=19;break;case 16:e.prev=16,e.t0=e.catch(0),$.error("Failure",e.t0,"Unable to add tag");case 19:return e.prev=19,n.state.actionInProgress=!1,e.finish(19);case 22:case"end":return e.stop()}}),e,null,[[0,16,19,22]])})))).apply(this,arguments)}function _(e){n.state.tagsRetag.elapsedTime=P(Date.now()-e)}function V(e,t,a){n.state.tagsRetag.asyncGenerator=k.retagWithProgress(n.registry,n.repository.Name,e,t,a)}function L(){return M.apply(this,arguments)}function M(){return(M=y(regeneratorRuntime.mark((function e(){var t,a,r,i,l,d,m,g,v,b,y,w,k,S,C,P;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=null,e.prev=1,n.state.tagsRetag.running=!0,a=Object(s.a)(n.tags,(function(e){return!0===e.Modified})),r=f(a),e.prev=5,r.s();case 7:if((i=r.n()).done){e.next=13;break}if(l=i.value,I.isValidTag(l.NewName)){e.next=11;break}throw{msg:"Invalid tag pattern, see info for more details on format."};case 11:e.next=7;break;case 13:e.next=18;break;case 15:e.prev=15,e.t0=e.catch(5),r.e(e.t0);case 18:return e.prev=18,r.f(),e.finish(18);case 21:return e.next=23,A({message:function(){return"Retag is in progress! Closing your browser or refreshing the page while this operation is in progress will result in loss of tags."},progressLabel:function(){return"Retag progress"},context:function(){return n.state.tagsRetag}});case 23:t=e.sent,d=Object(c.a)(Object(u.a)(a,"ImageDigest")),m=Object(s.a)(n.short.Tags,(function(e){return Object(o.a)(d,e.ImageDigest)})),g=d.length+m.length,V(a,d,m),v=Date.now(),n.state.tagsRetag.clock=h(_,1e3,0,!0,v),b=!0,y=!1,e.prev=32,k=x(n.state.tagsRetag.asyncGenerator);case 34:return e.next=36,k.next();case 36:return S=e.sent,b=S.done,e.next=40,S.value;case 40:if(C=e.sent,b){e.next=47;break}"number"==typeof(P=C)&&(n.state.tagsRetag.progression=T(P,g));case 44:b=!0,e.next=34;break;case 47:e.next=53;break;case 49:e.prev=49,e.t1=e.catch(32),y=!0,w=e.t1;case 53:if(e.prev=53,e.prev=54,b||null==k.return){e.next=58;break}return e.next=58,k.return();case 58:if(e.prev=58,!y){e.next=61;break}throw w;case 61:return e.finish(58);case 62:return e.finish(53);case 63:return Object(u.a)(a,(function(e){var t=Object(p.a)(n.short.Tags,(function(t){return t.Name===e.Name}));n.short.Tags[t].Name=e.NewName})),$.success("Success","Tags successfully renamed"),e.next=67,q();case 67:e.next=72;break;case 69:e.prev=69,e.t2=e.catch(1),$.error("Failure",e.t2,"Unable to rename tags");case 72:return e.prev=72,h.cancel(n.state.tagsRetag.clock),n.state.tagsRetag.running=!1,t&&t.close(),e.finish(72);case 77:case"end":return e.stop()}}),e,null,[[1,69,72,77],[5,15,18,21],[32,49,53,63],[54,,58,62]])})))).apply(this,arguments)}function F(e){n.state.tagsDelete.elapsedTime=P(Date.now()-e)}function j(e,t){n.state.tagsDelete.asyncGenerator=k.deleteTagsWithProgress(n.registry,n.repository.Name,e,t)}function B(e){return z.apply(this,arguments)}function z(){return(z=y(regeneratorRuntime.mark((function e(t){var a,l,p,m,f,v,b,y,k,S,C,I,P,D,R;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=null,e.prev=1,n.state.tagsDelete.running=!0,e.next=5,A({message:function(){return"Tag delete is in progress! Closing your browser or refreshing the page while this operation is in progress will result in loss of tags."},progressLabel:function(){return"Deletion progress"},context:function(){return n.state.tagsDelete}});case 5:a=e.sent,l=Object(u.a)(t,"Name"),p=Object(s.a)(n.short.Tags,(function(e){return Object(o.a)(l,e.Name)})),m=Object(c.a)(Object(u.a)(p,"ImageDigest")),f=Object(s.a)(n.short.Tags,(function(e){return Object(o.a)(m,e.ImageDigest)})),v=d.a.apply(void 0,[f].concat(g(p))),b=m.length+v.length,j(m,v),y=Date.now(),n.state.tagsDelete.clock=h(F,1e3,0,!0,y),k=!0,S=!1,e.prev=17,I=x(n.state.tagsDelete.asyncGenerator);case 19:return e.next=21,I.next();case 21:return P=e.sent,k=P.done,e.next=25,P.value;case 25:if(D=e.sent,k){e.next=32;break}"number"==typeof(R=D)&&(n.state.tagsDelete.progression=T(R,b));case 29:k=!0,e.next=19;break;case 32:e.next=38;break;case 34:e.prev=34,e.t0=e.catch(17),S=!0,C=e.t0;case 38:if(e.prev=38,e.prev=39,k||null==I.return){e.next=43;break}return e.next=43,I.return();case 43:if(e.prev=43,!S){e.next=46;break}throw C;case 46:return e.finish(43);case 47:return e.finish(38);case 48:return i.a.apply(void 0,[n.short.Tags].concat(g(p))),n.short.Images=Object(u.a)(Object(r.a)(n.short.Tags,"ImageId"),"ImageId"),$.success("Success","Tags successfully deleted"),0===n.short.Tags.length&&w.go("portainer.registries.registry.repositories",{id:n.registry.Id},{reload:!0}),e.next=54,q();case 54:e.next=59;break;case 56:e.prev=56,e.t1=e.catch(1),$.error("Failure",e.t1,"Unable to delete tags");case 59:return e.prev=59,h.cancel(n.state.tagsDelete.clock),n.state.tagsDelete.running=!1,a.close(),e.finish(59);case 64:case"end":return e.stop()}}),e,null,[[1,56,59,64],[17,34,38,48],[39,,43,47]])})))).apply(this,arguments)}function G(){return H.apply(this,arguments)}function H(){return(H=y(regeneratorRuntime.mark((function e(){var t,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=Object(r.a)(n.short.Tags,"ImageDigest"),a=[],Object(u.a)(t,(function(e){return a.push(k.deleteManifest(n.registry,n.repository.Name,e.ImageDigest))})),e.next=6,Promise.all(a);case 6:$.success("Success","Repository sucessfully removed"),w.go("portainer.registries.registry.repositories",{id:n.registry.Id},{reload:!0}),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),$.error("Failure",e.t0,"Unable to delete repository");case 13:case"end":return e.stop()}}),e,null,[[0,10]])})))).apply(this,arguments)}function q(){return K.apply(this,arguments)}function K(){return(K=y(regeneratorRuntime.mark((function e(){var t,r,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=n.registry,r=n.repository.Name,e.next=5,k.tags(t,r);case 5:i=e.sent,n.tags=[],n.repository.Tags=[],n.repository.Tags=Object(l.a)(Object(a.a)(n.repository.Tags,Object(d.a)(i.tags,null))),Object(u.a)(n.repository.Tags,(function(e){return n.tags.push(new m.RepositoryTagViewModel(e))})),e.next=15;break;case 12:e.prev=12,e.t0=e.catch(0),$.error("Failure",e.t0,"Unable to retrieve tags details");case 15:case"end":return e.stop()}}),e,null,[[0,12]])})))).apply(this,arguments)}function W(){return Y.apply(this,arguments)}function Y(){return(Y=y(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=b.params().id,n.repository.Name=b.params().repository,n.state.loading=!0,e.next=6,S.registry(t);case 6:return n.registry=e.sent,e.next=9,q();case 9:n.repository.Tags.length>n.state.tagsRetrieval.limit&&(n.state.tagsRetrieval.auto=!1),R(),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(0),$.error("Failure",e.t0,"Unable to retrieve repository information");case 16:return e.prev=16,n.state.loading=!1,e.finish(16);case 19:case"end":return e.stop()}}),e,null,[[0,13,16,19]])})))).apply(this,arguments)}n.state={actionInProgress:!1,loading:!1,tagsRetrieval:{auto:!0,running:!1,limit:100,progression:0,elapsedTime:0,asyncGenerator:null,clock:null},tagsRetag:{running:!1,progression:0,elapsedTime:0,asyncGenerator:null,clock:null},tagsDelete:{running:!1,progression:0,elapsedTime:0,asyncGenerator:null,clock:null}},n.formValues={Tag:""},n.tags=[],n.short={Tags:[],Images:[]},n.repository={Name:"",Tags:[]},n.paginationAction=function(e){n.state.loading=!0,k.getTagsDetails(n.registry,n.repository.Name,e).then((function(e){for(var t=0;t<e.length;t++){var a=Object(p.a)(n.tags,{Name:e[t].Name});-1!==a&&(n.tags[a]=e[t])}n.state.loading=!1})).catch((function(e){$.error("Failure",e,"Unable to retrieve tags details")}))},n.startStopRetrieval=function(){n.state.tagsRetrieval.running?(n.state.tagsRetrieval.asyncGenerator.return(),h.cancel(n.state.tagsRetrieval.clock)):t(E).then((function(){var e;R(),0===n.short.Tags.length?(n.state.tagsRetrieval.running=!1,n.state.tagsRetrieval.progression=0,n.state.tagsRetrieval.elapsedTime=0,n.state.tagsRetrieval.clock=null):(e=Object(u.a)(n.short.Tags,"ImageId"),n.short.Images=Object(d.a)(Object(c.a)(e),""))}))},n.addTag=function(){return t(U)},n.retagAction=function(){return t(L)},n.removeTags=function(e){C.confirmDeletion("Are you sure you want to remove the selected tags ?",(function(n){if(n)return t(B,e)}))},n.removeRepository=function(){C.confirmDeletion("This action will only remove the manifests linked to this repository. You need to manually trigger a garbage collector pass on your registry to remove orphan layers and really remove the images content. THIS ACTION CAN NOT BE UNDONE",(function(e){if(e)return t(G)}))},n.$on("$destroy",(function(){n.state.tagsRetrieval.asyncGenerator&&n.state.tagsRetrieval.asyncGenerator.return(),n.state.tagsRetrieval.clock&&h.cancel(n.state.tagsRetrieval.clock),n.state.tagsRetag.asyncGenerator&&n.state.tagsRetag.asyncGenerator.return(),n.state.tagsRetag.clock&&h.cancel(n.state.tagsRetag.clock),n.state.tagsDelete.asyncGenerator&&n.state.tagsDelete.asyncGenerator.return(),n.state.tagsDelete.clock&&h.cancel(n.state.tagsDelete.clock)})),this.$onInit=function(){return t(W).then((function(){n.state.tagsRetrieval.auto&&n.startStopRetrieval()}))}}])},function(e,t,n){"use strict";n.r(t);var a=n(117),r=n(21);angular.module("portainer.extensions.registrymanagement").controller("RegistryRepositoriesController",["$transition$","$scope","RegistryService","RegistryServiceSelector","Notifications","Authentication",function(e,t,n,i,o,s){var l;t.state={displayInvalidConfigurationMessage:!1,loading:!1},t.paginationAction=function(e){t.registry.Type!==r.RegistryTypes.GITLAB&&(t.state.loading=!0,i.getRepositoriesDetails(t.registry,e).then((function(e){for(var n=0;n<e.length;n++){var r=Object(a.a)(t.repositories,{Name:e[n].Name});-1!==r&&(0===e[n].TagsCount?t.repositories.splice(r,1):t.repositories[r].TagsCount=e[n].TagsCount)}t.state.loading=!1})).catch((function(e){o.error("Failure",e,"Unable to retrieve repositories details")})))},l=e.params().id,t.applicationState.application.authentication&&(t.isAdmin=s.isAdmin()),n.registry(l).then((function(e){t.registry=e,i.ping(t.registry,!1).then((function(){return i.repositories(t.registry)})).then((function(e){t.repositories=e})).catch((function(){t.state.displayInvalidConfigurationMessage=!0}))})).catch((function(e){o.error("Failure",e,"Unable to retrieve registry details")}))}])},function(e,t,n){"use strict";n.r(t),function(e){var a=n(9),r=n(4),i=n(1),o=n.n(i),s=n(306),l=n(305);function c(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function d(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var u=function(){function t(e,n,a,r,i,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.$transition$=e,this.$async=n,this.Notifications=a,this.RegistryService=r,this.RegistryServiceSelector=i,this.imagelayercommandFilter=o,this.context={},this.onInit=this.onInit.bind(this)}var n,i,o,u,p;return t.$inject=["$transition$","$async","Notifications","RegistryService","RegistryServiceSelector","imagelayercommandFilter"],n=t,(i=[{key:"toggleLayerCommand",value:function(t){e("#layer-command-expander"+t+" span").toggleClass("glyphicon-plus-sign glyphicon-minus-sign"),e("#layer-command-"+t+"-short").toggle(),e("#layer-command-"+t+"-full").toggle()}},{key:"order",value:function(e){this.Sort.Reverse=this.Sort.Type===e&&!this.Sort.Reverse,this.Sort.Type=e}},{key:"onInit",value:(u=regeneratorRuntime.mark((function e(){var t,n=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.context.registryId=this.$transition$.params().id,this.context.repository=this.$transition$.params().repository,this.context.tag=this.$transition$.params().tag,this.Sort={Type:"Order",Reverse:!1},e.prev=4,e.next=7,this.RegistryService.registry(this.context.registryId);case 7:return this.registry=e.sent,e.next=10,this.RegistryServiceSelector.tag(this.registry,this.context.repository,this.context.tag);case 10:this.tag=e.sent,t=this.tag.History.length,this.history=Object(r.a)(this.tag.History,(function(e,n){return new s.RegistryImageLayerViewModel(t-n,e)})),Object(a.a)(this.history,(function(e){return e.CreatedBy=n.imagelayercommandFilter(e.CreatedBy)})),this.details=new l.RegistryImageDetailsViewModel(this.tag.History[0]),e.next=20;break;case 17:e.prev=17,e.t0=e.catch(4),this.Notifications.error("Failure",e.t0,"Unable to retrieve tag");case 20:case"end":return e.stop()}}),e,this,[[4,17]])})),p=function(){var e=this,t=arguments;return new Promise((function(n,a){var r=u.apply(e,t);function i(e){c(r,n,a,i,o,"next",e)}function o(e){c(r,n,a,i,o,"throw",e)}i(void 0)}))},function(){return p.apply(this,arguments)})},{key:"$onInit",value:function(){return this.$async(this.onInit)}}])&&d(n.prototype,i),o&&d(n,o),t}();t.default=u,o.a.module("portainer.extensions.registrymanagement").controller("RegistryRepositoryTagController",u)}.call(this,n(19))},function(e,t){angular.module("portainer.integrations",["portainer.integrations.storidge"])},function(e,t,n){var a=n(1067),r=n(1068),i=n(1069),o=n(1070),s=n(1071),l=n(1072),c=n(1073),d=n(1074),u=n(1075);angular.module("portainer.integrations.storidge",[]).config(["$stateRegistryProvider",function(e){"use strict";var t={name:"storidge.profiles",url:"/profiles",views:{"content@":{templateUrl:a,controller:"StoridgeProfilesController"}}},n={name:"storidge.profiles.profile",url:"/:id",views:{"content@":{templateUrl:r,controller:"StoridgeProfileController"}}},p={name:"storidge.drives",url:"/drives",views:{"content@":{templateUrl:i,controller:"StoridgeDrivesController"}}},m={name:"storidge.drives.drive",url:"/:id",views:{"content@":{templateUrl:o,controller:"StoridgeDriveController"}}},g={name:"docker.volumes.volume.snapshot",url:"/:snapshotId",views:{"content@":{templateUrl:s,controller:"StoridgeSnapshotController"}}},f={name:"storidge.profiles.new",url:"/new",params:{profileName:""},views:{"content@":{templateUrl:l,controller:"StoridgeCreateProfileController"}}},v={name:"storidge.cluster",url:"/cluster",views:{"content@":{templateUrl:c,controller:"StoridgeClusterController"}}},h={name:"storidge.cluster.node",url:"/:name",views:{"content@":{templateUrl:d,controller:"StoridgeNodeController"}}},b={name:"storidge.monitor",url:"/events",views:{"content@":{templateUrl:u,controller:"StoridgeMonitorController"}}};e.register({name:"storidge",parent:"root",abstract:!0,url:"/storidge"}),e.register(p),e.register(m),e.register(g),e.register(t),e.register(n),e.register(f),e.register(v),e.register(h),e.register(b)}])},function(e,t){var n="app/integrations/storidge/views/profiles/profiles.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Storidge profiles">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="storidge.profiles" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content> <a ui-sref="storidge.cluster">Storidge</a> &gt; <a ui-sref="storidge.profiles">Profiles</a> </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title-text="Add a profile"> </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="profile_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="profile_name" placeholder="e.g. myProfile" />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">Note: The profile will be created using the default properties.</span>\n            </div>\n          </div>\n          \x3c!-- !tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-click="create()"\n                ng-disabled="state.actionInProgress || !formValues.Name"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Create the profile</span>\n                <span ng-show="state.actionInProgress">Creating profile...</span>\n              </button>\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.Name" ui-sref="storidge.profiles.new({ profileName: formValues.Name })"\n                >Modify defaults...</button\n              >\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <storidge-profiles-datatable\n      title-text="Profiles"\n      title-icon="fa-sticky-note"\n      dataset="profiles"\n      table-key="storidge_profiles"\n      order-by="Name"\n      remove-action="removeAction"\n    ></storidge-profiles-datatable>\n  </div>\n</div>\n\n\x3c!-- <div class="row">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-sticky-note" title-text="Profiles">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-md-12">\n        <div class="pull-left">\n          <button type="button" class="btn btn-danger" ng-click="removeProfiles()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove</button>\n        </div>\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n                </th>\n                <th>\n                  <a ng-click="order(\'Name\')">\n                    Name\n                    <span ng-show="sortType == \'Name\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Name\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="profile in (state.filteredProfiles = (profiles | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n                <td><input type="checkbox" ng-model="profile.Checked" ng-change="selectItem(profile)" /></td>\n                <td>\n                  <a ui-sref="storidge.profiles.profile({id: profile.Name})">{{ profile.Name }}</a>\n                </td>\n              </tr>\n              <tr ng-if="!profiles">\n                <td colspan="3" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="state.filteredProfiles.length == 0">\n                <td colspan="3" class="text-center text-muted">No profiles available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="profiles" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div> --\x3e\n')}]),e.exports=n},function(e,t){var n="app/integrations/storidge/views/profiles/edit/profile.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Profile details"></rd-header-title>\n  <rd-header-content> <a ui-sref="storidge.cluster">Storidge</a> &gt; <a ui-sref="storidge.profiles">Profiles</a> &gt; {{ profile.Name }} </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="profile">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="storidgeUpdateProfileForm">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="profile_name" class="col-sm-2 col-lg-1 control-label text-left">Name</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="profile.Name" name="profile_name" disabled />\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Profile configuration\n          </div>\n          \x3c!-- directory --\x3e\n          <div class="form-group" ng-class="{ \'has-error\': storidgeUpdateProfileForm.profile_directory.$invalid }">\n            <label for="profile_directory" class="col-sm-2 col-lg-1 control-label text-left">Directory</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="profile.Directory" name="profile_directory" placeholder="e.g. /cio/myProfile" required />\n            </div>\n          </div>\n          <div class="form-group" ng-show="storidgeUpdateProfileForm.profile_directory.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="storidgeUpdateProfileForm.profile_directory.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !directory --\x3e\n          \x3c!-- capacity --\x3e\n          <div class="form-group" ng-class="{ \'has-error\': storidgeUpdateProfileForm.profile_capacity.$invalid }">\n            <label for="profile_capacity" class="col-sm-2 col-lg-1 control-label text-left">Capacity</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="number" class="form-control" ng-model="profile.Capacity" name="profile_capacity" ng-min="1" ng-max="64000" placeholder="2" required />\n            </div>\n          </div>\n          <div class="form-group" ng-show="storidgeUpdateProfileForm.profile_capacity.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="storidgeUpdateProfileForm.profile_capacity.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n                <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Minimum value for capacity: 1.</p>\n                <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Maximum value for capacity: 64000.</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !capacity --\x3e\n          \x3c!-- redundancy --\x3e\n          <div class="form-group">\n            <label for="profile_redundancy" class="col-sm-2 col-lg-1 control-label text-left">Redundancy</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_redundancy" ng-model="profile.Redundancy" ng-options="+(opt.value) as opt.label for opt in RedundancyOptions" class="form-control"> </select>\n            </div>\n          </div>\n          \x3c!-- !redudancy --\x3e\n          \x3c!-- provisioning --\x3e\n          <div class="form-group">\n            <label for="profile_provisioning" class="col-sm-2 col-lg-1 control-label text-left">Provisioning</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_provisioning" ng-model="profile.Provisioning" class="form-control">\n                <option value="thin">Thin</option>\n                <option value="thick">Thick</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !provisioning --\x3e\n          \x3c!-- type --\x3e\n          <div class="form-group">\n            <label for="profile_type" class="col-sm-2 col-lg-1 control-label text-left">Type</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_type" ng-model="profile.Type" class="form-control">\n                <option value="ssd">SSD</option>\n                <option value="hdd">HDD</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !type --\x3e\n          \x3c!-- Filesystem --\x3e\n          <div class="form-group">\n            <label for="profile_filesystem" class="col-sm-2 col-lg-1 control-label text-left">Filesystem</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_filesystem" ng-model="profile.Filesystem" class="form-control">\n                <option value="btrfs">btrfs</option>\n                <option value="ext4">ext4</option>\n                <option value="xfs">xfs</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !Filesystem --\x3e\n          \x3c!-- snapshotEnabled --\x3e\n          <div class="form-group">\n            <label for="profile_snapshotEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n              Enable snapshots\n            </label>\n            <label class="switch" style="margin-left: 20px;"> <input name="profile_snapshotEnabled" type="checkbox" ng-model="profile.SnapshotEnabled" /><i></i> </label>\n          </div>\n          \x3c!-- !snapshotEnabled --\x3e\n          \x3c!-- snapshotMax --\x3e\n          <div class="form-group" ng-if="profile.SnapshotEnabled">\n            <label for="profile_snapshotMax" class="col-sm-2 col-lg-1 control-label text-left" style="margin-top: 20px;">\n              Snapshot max\n            </label>\n            <div class="col-sm-4">\n              <slider model="profile.SnapshotMax" floor="1" ceil="100" step="1"></slider>\n            </div>\n            <div class="col-sm-2">\n              <input type="number" min="1" class="form-control" ng-model="profile.SnapshotMax" id="profile_snapshotMax" />\n            </div>\n            <div class="col-sm-4">\n              <p class="small text-muted" style="margin-top: 7px;">\n                Snapshot max (<b>count</b>)\n              </p>\n            </div>\n          </div>\n          \x3c!-- !snapshotMax --\x3e\n          \x3c!-- snapshotEnabled --\x3e\n          <div class="form-group" ng-if="profile.SnapshotEnabled">\n            <label for="profile_recurringSnapshotEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n              Enable periodic snapshots\n            </label>\n            <label class="switch" style="margin-left: 20px;">\n              <input name="profile_recurringSnapshotEnabled" type="checkbox" ng-model="state.RecurringSnapshotEnabled" /><i></i>\n            </label>\n          </div>\n          \x3c!-- !snapshotEnabled --\x3e\n          \x3c!-- snapshotInterval --\x3e\n          <div class="form-group" ng-if="profile.SnapshotEnabled && state.RecurringSnapshotEnabled">\n            <label for="profile_snapshotInterval" class="col-sm-2 col-lg-1 control-label text-left" style="margin-top: 20px;">\n              Snapshot interval\n            </label>\n            <div class="col-sm-4">\n              <slider model="profile.SnapshotInterval" floor="1" ceil="2880" step="1"></slider>\n            </div>\n            <div class="col-sm-2">\n              <input type="number" min="1" class="form-control" ng-model="profile.SnapshotInterval" id="profile_snapshotInterval" />\n            </div>\n            <div class="col-sm-4">\n              <p class="small text-muted" style="margin-top: 7px;">\n                Snapshot interval (<b>minutes</b>)\n              </p>\n            </div>\n          </div>\n          \x3c!-- !snapshotInterval --\x3e\n          \x3c!-- encryptionEnabled --\x3e\n          <div class="form-group">\n            <label for="profile_encryptionEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n              Enable encryption\n            </label>\n            <label class="switch" style="margin-left: 20px;"> <input name="profile_encryptionEnabled" type="checkbox" ng-model="profile.EncryptionEnabled" /><i></i> </label>\n          </div>\n          \x3c!-- !encryptionEnabled --\x3e\n          \x3c!-- interfaceType --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceType" class="col-sm-2 col-lg-1 control-label text-left">Interface type</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_interfaceType" ng-model="profile.InterfaceType" class="form-control">\n                <option value=""></option>\n                <option value="nfs">nfs</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !interfaceType --\x3e\n          \x3c!-- interfaceDriver --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceDriver" class="col-sm-2 col-lg-1 control-label text-left">Network driver</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_interfaceDriver" ng-model="profile.InterfaceDriver" class="form-control">\n                <option value=""></option>\n                <option value="macvlan">macvlan</option>\n                <option value="overlay">overlay</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !interfaceDriver --\x3e\n          \x3c!-- interfaceNetwork --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceNetwork" class="col-sm-2 col-lg-1 control-label text-left">Network name</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="profile.InterfaceNetwork" name="profile_interfaceNetwork" pattern="[a-zA-Z0-9]+" />\n            </div>\n          </div>\n          \x3c!-- !interfaceNetwork --\x3e\n          \x3c!-- interfaceConf --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceConf" class="col-sm-2 col-lg-1 control-label text-left">Interface conf</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="profile.InterfaceConf" name="profile_interfaceConf" />\n            </div>\n          </div>\n          \x3c!-- !interfaceConf --\x3e\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">Labels</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()"> <i class="fa fa-plus-circle" aria-hidden="true"></i> add label </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="label.name" placeholder="e.g. com.example.foo" />\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels --\x3e\n          \x3c!-- iops --\x3e\n          <div ng-if="!state.LimitBandwidth || state.NoLimit">\n            <div class="col-sm-12 form-section-title">\n              IOPS\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="permissions" class="control-label text-left">\n                  Limit IOPS\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="state.LimitIOPS" ng-change="state.NoLimit = (!state.LimitBandwidth && !state.LimitIOPS)" /><i></i>\n                </label>\n              </div>\n            </div>\n            <div class="form-group" ng-if="state.LimitIOPS">\n              <label for="min_iops" class="col-sm-1 control-label text-left">Min</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeUpdateProfileForm.min_iops.$invalid }">\n                <input type="number" class="form-control" ng-model="profile.MinIOPS" name="min_iops" ng-min="30" ng-max="999999" placeholder="100" required />\n              </div>\n              <label for="max_iops" class="col-sm-1 control-label text-left">Max</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeUpdateProfileForm.max_iops.$invalid }">\n                <input type="number" class="form-control" ng-model="profile.MaxIOPS" name="max_iops" ng-min="30" ng-max="999999" placeholder="2000" required />\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeUpdateProfileForm.min_iops.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeUpdateProfileForm.min_iops.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A value is required for Min IOPS.</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Minimum value for Min IOPS: 30.</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Maximum value for Min IOPS: 999999.</p>\n                </div>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeUpdateProfileForm.max_iops.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeUpdateProfileForm.max_iops.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A value is required for Max IOPS.</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Minimum value for Max IOPS: 30.</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Maximum value for Max IOPS: 999999.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !iops --\x3e\n          \x3c!-- bandwidth --\x3e\n          <div ng-if="!state.LimitIOPS || state.NoLimit">\n            <div class="col-sm-12 form-section-title">\n              Bandwidth\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="permissions" class="control-label text-left">\n                  Limit bandwidth\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="state.LimitBandwidth" ng-change="state.NoLimit = (!state.LimitBandwidth && !state.LimitIOPS)" /><i></i>\n                </label>\n              </div>\n            </div>\n            <div class="form-group" ng-if="state.LimitBandwidth">\n              <label for="min_bandwidth" class="col-sm-1 control-label text-left">Min</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeUpdateProfileForm.min_bandwidth.$invalid }">\n                <input type="number" class="form-control" ng-model="profile.MinBandwidth" name="min_bandwidth" ng-min="1" ng-max="5000" placeholder="1" required />\n              </div>\n              <label for="max_bandwidth" class="col-sm-1 control-label text-left">Max</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeUpdateProfileForm.max_bandwidth.$invalid }">\n                <input type="number" class="form-control" ng-model="profile.MaxBandwidth" name="max_bandwidth" ng-min="1" ng-max="5000" placeholder="100" required />\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeUpdateProfileForm.min_bandwidth.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeUpdateProfileForm.min_bandwidth.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A value is required for Min bandwidth.</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Minimum value for Min bandwidth: 1.</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Maximum value for Min bandwidth: 5000.</p>\n                </div>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeUpdateProfileForm.max_bandwidth.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeUpdateProfileForm.max_bandwidth.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A value is required for Max bandwidth.</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Minimum value for Max bandwidth: 1.</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Maximum value for Max bandwidth: 5000.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !bandwidth --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-click="update()"\n                ng-disabled="state.updateInProgress || !storidgeUpdateProfileForm.$valid"\n                button-spinner="state.updateInProgress"\n              >\n                <span ng-hide="state.updateInProgress">Update the profile</span>\n                <span ng-show="state.updateInProgress">Updating profile...</span>\n              </button>\n              <button type="button" class="btn btn-danger btn-sm" ng-click="delete()" ng-disabled="state.deleteInProgress" button-spinner="state.deleteInProgress">\n                <span ng-hide="state.deleteInProgress">Delete the profile</span>\n                <span ng-show="state.deleteInProgress">Deleting profile...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/integrations/storidge/views/drives/drives.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Storidge drives">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="storidge.drives" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content> <a ui-sref="storidge.cluster">Storidge</a> &gt; <a ui-sref="storidge.drives">Drives</a> </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <storidge-drives-datatable\n      title-text="Drives"\n      title-icon="fa-hdd"\n      dataset="drives"\n      table-key="storidge_drives"\n      order-by="Id"\n      rescan-action="rescanAction"\n      add-action="addAction"\n      action-in-progress="state.actionInProgress"\n      addition-in-progress="state.additionInProgress"\n    ></storidge-drives-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/integrations/storidge/views/drives/inspect/drive.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Drive details"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">Storidge</a> &gt; <a ui-sref="storidge.drives">Drives</a> &gt; <a ui-sref="storidge.drives.drive({id: drive.Id})">{{ drive.Id }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-hdd" title-text="Drive details "></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ drive.Id }}\n                <button class="btn btn-xs btn-danger" ng-click="removeDrive()" ng-if="drive.Status === \'faulty\'" button-spinner="actionInProgress" ng-disabled="actionInProgress">\n                  <span ng-hide="actionInProgress"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove from storage pool</span>\n                  <span ng-show="actionInProgress">Removal in progress...</span>\n                </button>\n              </td>\n            </tr>\n            <tr>\n              <td>Node</td>\n              <td>{{ drive.Node }}</td>\n            </tr>\n            <tr>\n              <td>Device</td>\n              <td>{{ drive.Device }}</td>\n            </tr>\n            <tr>\n              <td>Size</td>\n              <td>{{ drive.Size }}</td>\n            </tr>\n            <tr>\n              <td>Use</td>\n              <td>{{ drive.Use }}</td>\n            </tr>\n            <tr>\n              <td>Type</td>\n              <td>{{ drive.Type }}</td>\n            </tr>\n            <tr>\n              <td>Status</td>\n              <td>\n                <span class="label label-{{ drive.Status | drivestatusbadge }}">{{ drive.Status | capitalize }}</span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/integrations/storidge/views/snapshots/inspect/snapshot.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Snasphot details"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.volumes">Volumes</a> &gt; <a ui-sref="docker.volumes.volume({id: volumeId})">{{ volumeId }}</a> &gt; Snapshots &gt;\n    <a ui-sref="docker.volumes.volume.snapshot({id: snapshot.Id})">{{ snapshot.Id }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-hdd" title-text="Snapshot details "></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ snapshot.Id }}\n                <button class="btn btn-xs btn-danger" ng-click="removeSnapshot()"> <i class="fa fa-trash space-right" aria-hidden="true"></i>Remove snapshot </button>\n              </td>\n            </tr>\n            <tr>\n              <td>Date</td>\n              <td>{{ snapshot.Date }}</td>\n            </tr>\n            <tr>\n              <td>Description</td>\n              <td>{{ snapshot.Description }}</td>\n            </tr>\n            <tr>\n              <td>SourceID</td>\n              <td>{{ snapshot.SourceID }}</td>\n            </tr>\n            <tr>\n              <td>Type</td>\n              <td>{{ snapshot.Type }}</td>\n            </tr>\n            <tr>\n              <td>Directory</td>\n              <td>{{ snapshot.Directory }}</td>\n            </tr>\n            <tr>\n              <td>Source</td>\n              <td>{{ snapshot.Source }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/integrations/storidge/views/profiles/create/createprofile.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Create profile"></rd-header-title>\n  <rd-header-content> <a ui-sref="storidge.cluster">Storidge</a> &gt; <a ui-sref="storidge.profiles">Profiles</a> &gt; Add profile </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="storidgeCreateProfileForm">\n          \x3c!-- name-input --\x3e\n          <div class="form-group" ng-class="{ \'has-error\': storidgeCreateProfileForm.profile_name.$invalid }">\n            <label for="profile_name" class="col-sm-2 col-lg-1 control-label text-left">Name</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="model.Name" name="profile_name" placeholder="e.g. myProfile" ng-change="updatedName()" required />\n            </div>\n          </div>\n          <div class="form-group" ng-show="storidgeCreateProfileForm.profile_name.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="storidgeCreateProfileForm.profile_name.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Profile configuration\n          </div>\n          \x3c!-- directory --\x3e\n          <div class="form-group" ng-class="{ \'has-error\': storidgeCreateProfileForm.profile_directory.$invalid }">\n            <label for="profile_directory" class="col-sm-2 col-lg-1 control-label text-left">Directory</label>\n            <div class="col-sm-10 col-lg-11">\n              <input\n                type="text"\n                class="form-control"\n                ng-model="model.Directory"\n                name="profile_directory"\n                placeholder="e.g. /cio/myProfile"\n                ng-change="updatedDirectory()"\n                required\n              />\n            </div>\n          </div>\n          <div class="form-group" ng-show="storidgeCreateProfileForm.profile_directory.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="storidgeCreateProfileForm.profile_directory.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !directory --\x3e\n          \x3c!-- capacity --\x3e\n          <div class="form-group" ng-class="{ \'has-error\': storidgeCreateProfileForm.profile_capacity.$invalid }">\n            <label for="profile_capacity" class="col-sm-2 col-lg-1 control-label text-left">Capacity</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="number" class="form-control" ng-model="model.Capacity" name="profile_capacity" ng-min="1" ng-max="64000" placeholder="2" required />\n            </div>\n          </div>\n          <div class="form-group" ng-show="storidgeCreateProfileForm.profile_capacity.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="storidgeCreateProfileForm.profile_capacity.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n                <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Minimum value for capacity: 1.</p>\n                <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Maximum value for capacity: 64000.</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !capacity --\x3e\n          \x3c!-- redundancy --\x3e\n          <div class="form-group">\n            <label for="profile_redundancy" class="col-sm-2 col-lg-1 control-label text-left">Redundancy</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_redundancy" ng-model="model.Redundancy" ng-options="+(opt.value) as opt.label for opt in RedundancyOptions" class="form-control"> </select>\n            </div>\n          </div>\n          \x3c!-- !redudancy --\x3e\n          \x3c!-- provisioning --\x3e\n          <div class="form-group">\n            <label for="profile_provisioning" class="col-sm-2 col-lg-1 control-label text-left">Provisioning</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_provisioning" ng-model="model.Provisioning" class="form-control">\n                <option value="thin">Thin</option>\n                <option value="thick">Thick</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !provisioning --\x3e\n          \x3c!-- type --\x3e\n          <div class="form-group">\n            <label for="profile_type" class="col-sm-2 col-lg-1 control-label text-left">Type</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_type" ng-model="model.Type" class="form-control">\n                <option value="ssd">SSD</option>\n                <option value="hdd">HDD</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !type --\x3e\n          \x3c!-- Filesystem --\x3e\n          <div class="form-group">\n            <label for="profile_filesystem" class="col-sm-2 col-lg-1 control-label text-left">Filesystem</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_filesystem" ng-model="model.Filesystem" class="form-control">\n                <option value="btrfs">btrfs</option>\n                <option value="ext4">ext4</option>\n                <option value="xfs">xfs</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !Filesystem --\x3e\n          \x3c!-- snapshotEnabled --\x3e\n          <div class="form-group">\n            <label for="profile_snapshotEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n              Enable snapshots\n            </label>\n            <label class="switch" style="margin-left: 20px;"> <input name="profile_snapshotEnabled" type="checkbox" ng-model="model.SnapshotEnabled" /><i></i> </label>\n          </div>\n          \x3c!-- !snapshotEnabled --\x3e\n          \x3c!-- snapshotMax --\x3e\n          <div class="form-group" ng-if="model.SnapshotEnabled">\n            <label for="profile_snapshotMax" class="col-sm-2 col-lg-1 control-label text-left" style="margin-top: 20px;">\n              Snapshot max\n            </label>\n            <div class="col-sm-4">\n              <slider model="model.SnapshotMax" floor="1" ceil="100" step="1"></slider>\n            </div>\n            <div class="col-sm-2">\n              <input type="number" min="1" class="form-control" ng-model="model.SnapshotMax" id="profile_snapshotMax" />\n            </div>\n            <div class="col-sm-4">\n              <p class="small text-muted" style="margin-top: 7px;">\n                Snapshot max (<b>count</b>)\n              </p>\n            </div>\n          </div>\n          \x3c!-- !snapshotMax --\x3e\n          \x3c!-- snapshotEnabled --\x3e\n          <div class="form-group" ng-if="model.SnapshotEnabled">\n            <label for="profile_recurringSnapshotEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n              Enable periodic snapshots\n            </label>\n            <label class="switch" style="margin-left: 20px;">\n              <input name="profile_recurringSnapshotEnabled" type="checkbox" ng-model="state.RecurringSnapshotEnabled" /><i></i>\n            </label>\n          </div>\n          \x3c!-- !snapshotEnabled --\x3e\n          \x3c!-- snapshotInterval --\x3e\n          <div class="form-group" ng-if="model.SnapshotEnabled && state.RecurringSnapshotEnabled">\n            <label for="profile_snapshotInterval" class="col-sm-2 col-lg-1 control-label text-left" style="margin-top: 20px;">\n              Snapshot interval\n            </label>\n            <div class="col-sm-4">\n              <slider model="model.SnapshotInterval" floor="1" ceil="2880" step="1"></slider>\n            </div>\n            <div class="col-sm-2">\n              <input type="number" min="1" class="form-control" ng-model="model.SnapshotInterval" id="profile_snapshotInterval" />\n            </div>\n            <div class="col-sm-4">\n              <p class="small text-muted" style="margin-top: 7px;">\n                Snapshot interval (<b>minutes</b>)\n              </p>\n            </div>\n          </div>\n          \x3c!-- !snapshotInterval --\x3e\n          \x3c!-- encryptionEnabled --\x3e\n          <div class="form-group">\n            <label for="profile_encryptionEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n              Enable encryption\n            </label>\n            <label class="switch" style="margin-left: 20px;"> <input name="profile_encryptionEnabled" type="checkbox" ng-model="model.EncryptionEnabled" /><i></i> </label>\n          </div>\n          \x3c!-- !encryptionEnabled --\x3e\n          \x3c!-- interfaceType --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceType" class="col-sm-2 col-lg-1 control-label text-left">Interface type</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_interfaceType" ng-model="model.InterfaceType" class="form-control">\n                <option value=""></option>\n                <option value="nfs">nfs</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !interfaceType --\x3e\n          \x3c!-- interfaceDriver --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceDriver" class="col-sm-2 col-lg-1 control-label text-left">Network driver</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_interfaceDriver" ng-model="model.InterfaceDriver" class="form-control">\n                <option value=""></option>\n                <option value="macvlan">macvlan</option>\n                <option value="overlay">overlay</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !interfaceDriver --\x3e\n          \x3c!-- interfaceNetwork --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceNetwork" class="col-sm-2 col-lg-1 control-label text-left">Network name</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="model.InterfaceNetwork" name="profile_interfaceNetwork" pattern="[a-zA-Z0-9]+" />\n            </div>\n          </div>\n          \x3c!-- !interfaceNetwork --\x3e\n          \x3c!-- interfaceConf --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceConf" class="col-sm-2 col-lg-1 control-label text-left">Interface conf</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="model.InterfaceConf" name="profile_interfaceConf" />\n            </div>\n          </div>\n          \x3c!-- !interfaceConf --\x3e\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">Labels</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()"> <i class="fa fa-plus-circle" aria-hidden="true"></i> add label </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="label.name" placeholder="e.g. com.example.foo" />\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels --\x3e\n          \x3c!-- iops --\x3e\n          <div ng-if="!state.LimitBandwidth || state.NoLimit">\n            <div class="col-sm-12 form-section-title">\n              IOPS\n            </div>\n            <div class="form-group">\n              <div class="col-md-1 col-sm-2">\n                <label for="permissions" class="control-label text-left">\n                  Limit IOPS\n                </label>\n              </div>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="state.LimitIOPS" ng-change="state.NoLimit = (!state.LimitBandwidth && !state.LimitIOPS)" /><i></i>\n              </label>\n            </div>\n            <div class="form-group" ng-if="state.LimitIOPS">\n              <label for="min_iops" class="col-sm-1 control-label text-left">Min</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeCreateProfileForm.min_iops.$invalid }">\n                <input type="number" class="form-control" ng-model="model.MinIOPS" name="min_iops" ng-min="30" ng-max="999999" placeholder="100" required />\n              </div>\n              <label for="max_iops" class="col-sm-1 control-label text-left">Max</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeCreateProfileForm.max_iops.$invalid }">\n                <input type="number" class="form-control" ng-model="model.MaxIOPS" name="max_iops" ng-min="30" ng-max="999999" placeholder="2000" required />\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeCreateProfileForm.min_iops.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeCreateProfileForm.min_iops.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A value is required for Min IOPS.</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Minimum value for Min IOPS: 30.</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Maximum value for Min IOPS: 999999.</p>\n                </div>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeCreateProfileForm.max_iops.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeCreateProfileForm.max_iops.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A value is required for Max IOPS.</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Minimum value for Max IOPS: 30.</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Maximum value for Max IOPS: 999999.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !iops --\x3e\n          \x3c!-- bandwidth --\x3e\n          <div ng-if="!state.LimitIOPS || state.NoLimit">\n            <div class="col-sm-12 form-section-title">\n              Bandwidth\n            </div>\n            <div class="form-group">\n              <div class="col-md-1 col-sm-2">\n                <label for="permissions" class="control-label text-left">\n                  Limit bandwidth\n                </label>\n              </div>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="state.LimitBandwidth" ng-change="state.NoLimit = (!state.LimitBandwidth && !state.LimitIOPS)" /><i></i>\n              </label>\n            </div>\n            <div class="form-group" ng-if="state.LimitBandwidth">\n              <label for="min_bandwidth" class="col-sm-1 control-label text-left">Min</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeCreateProfileForm.min_bandwidth.$invalid }">\n                <input type="number" class="form-control" ng-model="model.MinBandwidth" name="min_bandwidth" ng-min="1" ng-max="5000" placeholder="1" required />\n              </div>\n              <label for="max_bandwidth" class="col-sm-1 control-label text-left">Max</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeCreateProfileForm.max_bandwidth.$invalid }">\n                <input type="number" class="form-control" ng-model="model.MaxBandwidth" name="max_bandwidth" ng-min="1" ng-max="5000" placeholder="100" required />\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeCreateProfileForm.min_bandwidth.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeCreateProfileForm.min_bandwidth.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A value is required for Min bandwidth.</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Minimum value for Min bandwidth: 1.</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Maximum value for Min bandwidth: 5000.</p>\n                </div>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeCreateProfileForm.max_bandwidth.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeCreateProfileForm.max_bandwidth.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A value is required for Max bandwidth.</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Minimum value for Max bandwidth: 1.</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Maximum value for Max bandwidth: 5000.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !bandwidth --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="button"\n                class="btn btn-primary btn-sm"\n                ng-click="create()"\n                ng-disabled="state.actionInProgress || !storidgeCreateProfileForm.$valid"\n                button-spinner="state.actionInProgress"\n              >\n                <span ng-hide="state.actionInProgress">Create the profile</span>\n                <span ng-show="state.actionInProgress">Creating profile...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/integrations/storidge/views/cluster/cluster.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Storidge cluster">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="storidge.cluster" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">Storidge</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-bolt" title-text="Cluster details"></rd-widget-header>\n      <rd-widget-body>\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Domain</td>\n              <td>{{ clusterInfo.Domain }}</td>\n            </tr>\n            <tr>\n              <td>Condition</td>\n              <td\n                ><i class="fa fa-heartbeat space-right {{ clusterInfo.Condition | storidgeClusterConditionBadge }}"></i>\n                {{ clusterInfo.Condition }}\n              </td>\n            </tr>\n            <tr>\n              <td>Version</td>\n              <td>{{ clusterVersion }}</td>\n            </tr>\n          </tbody>\n        </table>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-danger btn-sm" ng-click="shutdownCluster()" ng-disabled="state.shutdownInProgress" button-spinner="state.shutdownInProgress">\n                <span ng-hide="state.shutdownInProgress"><i class="fa fa-power-off space-right" aria-hidden="true"></i> Shutdown the cluster</span>\n                <span ng-show="state.shutdownInProgress">Shutting down cluster...</span>\n              </button>\n              <button type="button" class="btn btn-danger btn-sm" ng-click="rebootCluster()" ng-disabled="state.rebootInProgress" button-spinner="state.shutdownInProgress">\n                <span ng-hide="state.rebootInProgress"><i class="fa fa-sync space-right" aria-hidden="true"></i> Reboot the cluster</span>\n                <span ng-show="state.rebootInProgress">Rebooting cluster...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <storidge-nodes-datatable title-text="Storage nodes" title-icon="fa-object-group" dataset="clusterNodes" table-key="storidge_nodes" order-by="Name"></storidge-nodes-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/integrations/storidge/views/nodes/inspect/node.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Node details"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">Storidge</a> &gt; <a ui-sref="storidge.cluster.node({id: node.Name})">{{ node.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="Node details">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="(node.Status | lowercase) !== \'normal\'" ng-click="removeNodeAction()">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove node\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ng-disabled="(node.Status | lowercase) !== \'normal\'" ng-click="cordonNodeAction()">\n          <i class="fas fa-wrench space-right" aria-hidden="true"></i>Enter maintenance mode\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ng-disabled="(node.Status | lowercase) !== \'cordoned\'" ng-click="uncordonNodeAction()">\n          <i class="fa fa-power-off space-right" aria-hidden="true"></i>Exit maintenance mode\n        </button>\n      </rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table description-table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{{ node.Name }}</td>\n            </tr>\n            <tr>\n              <td>Domain</td>\n              <td>{{ node.Domain }}</td>\n            </tr>\n            <tr>\n              <td>Domain ID</td>\n              <td>{{ node.DomainID }}</td>\n            </tr>\n            <tr>\n              <td>Node status</td>\n              <td>\n                <i class="fa fa-heartbeat space-right {{ node.Status | storidgeNodeStatusBadge }}"></i>\n                {{ node.Status }}\n              </td>\n            </tr>\n            <tr>\n              <td>Operating condition</td>\n              <td>\n                <i class="fa fa-heartbeat space-right {{ node.Condition | storidgeClusterConditionBadge }}"></i>\n                {{ node.Condition }}\n              </td>\n            </tr>\n            <tr>\n              <td>Metadata version</td>\n              <td>{{ node.MetadataVersion }}</td>\n            </tr>\n            <tr>\n              <td>Nodes</td>\n              <td>{{ node.Nodes }}</td>\n            </tr>\n            <tr>\n              <td>HDDs</td>\n              <td>{{ node.Hdds }}</td>\n            </tr>\n            <tr>\n              <td>SSDs</td>\n              <td>{{ node.Ssds }}</td>\n            </tr>\n            <tr>\n              <td>VDisks</td>\n              <td>{{ node.Vdisks }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="Bandwidth details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table description-table">\n          <tbody>\n            <tr>\n              <td>Free</td>\n              <td>{{ node.FreeBandwidth }}</td>\n            </tr>\n            <tr>\n              <td>Used</td>\n              <td>{{ node.UsedBandwidth }}</td>\n            </tr>\n            <tr>\n              <td>Provisioned</td>\n              <td>{{ node.ProvisionedBandwidth }}</td>\n            </tr>\n            <tr>\n              <td>Total</td>\n              <td>{{ node.TotalBandwidth }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="Capacity details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table description-table">\n          <tbody>\n            <tr>\n              <td>Free</td>\n              <td>{{ node.FreeCapacity | bytes }}</td>\n            </tr>\n            <tr>\n              <td>Used</td>\n              <td>{{ node.UsedCapacity | bytes }}</td>\n            </tr>\n            <tr>\n              <td>Provisioned</td>\n              <td>{{ node.ProvisionedCapacity | bytes }}</td>\n            </tr>\n            <tr>\n              <td>Total</td>\n              <td>{{ node.TotalCapacity | bytes }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="IOPS details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table description-table">\n          <tbody>\n            <tr>\n              <td>Free</td>\n              <td>{{ node.FreeIOPS }}</td>\n            </tr>\n            <tr>\n              <td>Used</td>\n              <td>{{ node.UsedIOPS }}</td>\n            </tr>\n            <tr>\n              <td>Provisioned</td>\n              <td>{{ node.ProvisionedIOPS }}</td>\n            </tr>\n            <tr>\n              <td>Total</td>\n              <td>{{ node.TotalIOPS }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/integrations/storidge/views/monitor/monitor.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Storidge monitor">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="storidge.monitor" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content> <a ui-sref="storidge.cluster">Storidge</a> &gt; <a ui-sref="storidge.monitor">Cluster monitoring</a> </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-md-4 col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tachometer-alt" title-text="Cluster capacity"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="capacityChart" width="770" height="400"></canvas>\n        </div>\n        <div style="margin-top: 10px;" ng-if="info">\n          <table class="table">\n            <tbody>\n              <tr>\n                <td>Capacity available</td>\n                <td>{{ ((info.FreeCapacity * 100) / info.TotalCapacity).toFixed(1) }}%</td>\n              </tr>\n              <tr>\n                <td>Provisioned capacity</td>\n                <td>\n                  {{ info.ProvisionedCapacity | humansize }}\n                  <span ng-if="+info.ProvisionedCapacity >= +info.TotalCapacity">\n                    <i class="fa fa-exclamation-triangle red-icon" aria-hidden="true" style="margin-left: 2px;"></i>\n                  </span>\n                </td>\n              </tr>\n              <tr>\n                <td>Total capacity</td>\n                <td>{{ info.TotalCapacity | humansize }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-md-4 col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-chart-area" title-text="IOPS usage"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="iopsChart" width="770" height="400"></canvas>\n        </div>\n        <div style="margin-top: 10px;" ng-if="info">\n          <table class="table">\n            <tbody>\n              <tr>\n                <td>IOPS available</td>\n                <td>{{ ((info.FreeIOPS * 100) / info.TotalIOPS).toFixed(1) }}%</td>\n              </tr>\n              <tr>\n                <td>Provisioned IOPS</td>\n                <td>\n                  {{ info.ProvisionedIOPS | number }}\n                  <span ng-if="+info.ProvisionedIOPS >= +info.TotalIOPS">\n                    <i class="fa fa-exclamation-triangle red-icon" aria-hidden="true" style="margin-left: 2px;"></i>\n                  </span>\n                </td>\n              </tr>\n              <tr>\n                <td>Total IOPS</td>\n                <td>{{ info.TotalIOPS | number }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-md-4 col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-chart-area" title-text="Bandwith usage"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="bandwithChart" width="770" height="400"></canvas>\n        </div>\n        <div style="margin-top: 10px;" ng-if="info">\n          <table class="table">\n            <tbody>\n              <tr>\n                <td>Bandwidth available</td>\n                <td>{{ ((info.FreeBandwidth * 100) / info.TotalBandwidth).toFixed(1) }}%</td>\n              </tr>\n              <tr>\n                <td>Provisioned bandwidth</td>\n                <td>\n                  {{ info.ProvisionedBandwidth | humansize }}\n                  <span ng-if="+info.ProvisionedBandwidth >= +info.TotalBandwidth">\n                    <i class="fa fa-exclamation-triangle red-icon" aria-hidden="true" style="margin-left: 2px;"></i>\n                  </span>\n                </td>\n              </tr>\n              <tr>\n                <td>Total bandwidth</td>\n                <td>{{ info.TotalBandwidth | humansize }} /s</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <storidge-cluster-events-datatable\n      title-text="Cluster events"\n      title-icon="fa-history"\n      dataset="events"\n      table-key="storidge_cluster_events"\n      order-by="Time"\n      reverse-order="true"\n    ></storidge-cluster-events-datatable>\n  </div>\n</div>\n\n\x3c!-- <div class="row">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-history" title-text="Cluster events">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12">\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ng-click="order(\'Time\')">\n                    Date\n                    <span ng-show="sortType == \'Time\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Time\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="order(\'Category\')">\n                    Category\n                    <span ng-show="sortType == \'Category\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Category\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="order(\'Module\')">\n                    Module\n                    <span ng-show="sortType == \'Module\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Module\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="order(\'Content\')">\n                    Content\n                    <span ng-show="sortType == \'Content\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Content\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="event in (events | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count)">\n                <td>{{ event.Time }}</td>\n                <td>{{ event.Category }}</td>\n                <td>{{ event.Module }}</td>\n                <td>{{ event.Content }}</td>\n              </tr>\n              <tr ng-if="!events">\n                <td colspan="4" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="events.length === 0">\n                <td colspan="4" class="text-center text-muted">No events available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="events" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div> --\x3e\n')}]),e.exports=n},function(e,t,n){var a=n(1077);angular.module("portainer.integrations.storidge").component("storidgeClusterEventsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/integrations/storidge/components/cluster-events-datatable/storidgeClusterEventsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Time\')">\n                  Date\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Time\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Time\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Category\')">\n                  Category\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Category\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Category\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Module\')">\n                  Module\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Module\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Module\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Content\')">\n                  Content\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Content\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Content\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>{{ item.Time }}</td>\n              <td>{{ item.Category }}</td>\n              <td>{{ item.Module }}</td>\n              <td>{{ item.Content }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="4" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="4" class="text-center text-muted">No events available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1079);angular.module("portainer.integrations.storidge").component("storidgeDrivesDatatable",{templateUrl:a,controller:"StoridgeDrivesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<",addAction:"<",rescanAction:"<",actionInProgress:"<",additionInProgress:"<"}})},function(e,t){var n="app/integrations/storidge/components/drives-datatable/storidgeDrivesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.rescanAction()"> <i class="fa fa-sync space-right" aria-hidden="true"></i>Rescan drives </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Id\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Node\')">\n                  Node\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Node\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Node\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Device\')">\n                  Device\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Device\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Device\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Size\')">\n                  Size\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Size\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Size\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Use\')">\n                  Use\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Use\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Use\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n                  Type\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  Status\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <a ui-sref="storidge.drives.drive({id: item.Id})"> {{ item.Id }}</a>\n              </td>\n              <td>{{ item.Node }}</td>\n              <td>{{ item.Device }}</td>\n              <td>{{ item.Size }}</td>\n              <td>{{ item.Use }}</td>\n              <td>{{ item.Type }}</td>\n              <td>\n                <span class="label label-{{ item.Status | drivestatusbadge }}">{{ item.Status | capitalize }}</span>\n              </td>\n              <td>\n                <button\n                  ng-if="item.Status === \'available\'"\n                  type="button"\n                  class="btn btn-sm btn-primary btn-datatable"\n                  ng-click="$ctrl.addAction(item, $index)"\n                  button-spinner="$ctrl.additionInProgress[$index]"\n                  ng-disabled="$ctrl.actionInProgress"\n                >\n                  <span ng-hide="$ctrl.additionInProgress[$index]"><i class="fa fa-plus space-right" aria-hidden="true"></i>Add to storage pool</span>\n                  <span ng-show="$ctrl.additionInProgress[$index]">Addition in progress...</span>\n                </button>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="7" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td class="text-center text-muted">No drives available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("StoridgeDrivesDatatableController",["$scope","$controller","DatatableService",function(e,t,n){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.allowSelection=function(e){return"normal"!==e.Status},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters&&this.filters.state&&(this.filters.state.open=!1);var r=n.getDataTableSettings(this.tableKey);null!==r&&(this.settings=r,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(1082);angular.module("portainer.integrations.storidge").component("storidgeNodesDatatable",{templateUrl:a,controller:"StoridgeNodesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/integrations/storidge/components/nodes-datatable/storidgeNodesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <div class="row">\n          <button type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.addNodeAction()"> <i class="fa fa-plus space-right" aria-hidden="true"></i>Add node </button>\n          <div style="margin-bottom: 0px;">\n            <span ng-if="$ctrl.addInfo" class="text-muted small">\n              To add a node to this cluster, run the following command on your new node\n              <code>\n                {{ $ctrl.addInfo }}\n              </code>\n              <span class="btn btn-primary btn-sm space-left" ng-click="$ctrl.copyAddNodeCommand()"><i class="fa fa-copy space-right" aria-hidden="true"></i>Copy</span>\n              <span>\n                <i id="copyNotification" class="fa fa-check green-icon" aria-hidden="true" style="margin-left: 7px; display: none;"></i>\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'IP\')">\n                  IP Address\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IP\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IP\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Role\')">\n                  Role\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  Status\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <a ui-sref="storidge.cluster.node({name: item.Name})"> {{ item.Name }}</a>\n              </td>\n              <td>{{ item.IP }}</td>\n              <td>{{ item.Role }}</td>\n              <td>\n                <i class="fa fa-heartbeat space-right {{ item.Status | storidgeNodeStatusBadge }}"></i>\n                {{ item.Status }}\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="4" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="4" class="text-center text-muted">No nodes available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){(function(e){angular.module("portainer.integrations.storidge").controller("StoridgeNodesDatatableController",["$scope","$controller","clipboard","Notifications","StoridgeNodeService","DatatableService",function(t,n,a,r,i,o){angular.extend(this,n("GenericDatatableController",{$scope:t}));var s=this;this.addNodeAction=function(){i.add().then((function(e){s.addInfo=e.content})).catch((function(e){r.error("Failure",e,'Unable to retrieve the "add node" command')}))},this.copyAddNodeCommand=function(){a.copyText(s.addInfo),e("#copyNotification").show(),e("#copyNotification").fadeOut(2e3)},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=o.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=o.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var n=o.getDataTableFilters(this.tableKey);null!==n&&(this.filters=n),this.filters&&this.filters.state&&(this.filters.state.open=!1);var a=o.getDataTableSettings(this.tableKey);null!==a&&(this.settings=a,this.settings.open=!1),this.onSettingsRepeaterChange()}}])}).call(this,n(19))},function(e,t,n){var a=n(1085);angular.module("portainer.integrations.storidge").component("storidgeProfileSelector",{templateUrl:a,controller:"StoridgeProfileSelectorController",bindings:{storidgeProfile:"="}})},function(e,t){var n="app/integrations/storidge/components/profileSelector/storidgeProfileSelector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="form-group">\n  <label for="storidge_profile" class="col-sm-2 col-lg-1 control-label text-left">Profile</label>\n  <div class="col-sm-10 col-lg-11">\n    <select id="storidge_profile" ng-model="$ctrl.storidgeProfile" ng-options="profile.Name for profile in $ctrl.profiles" class="form-control">\n      <option selected disabled hidden value="">Select a profile</option>\n    </select>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.integrations.storidge").controller("StoridgeProfileSelectorController",["StoridgeProfileService","Notifications",function(e,t){var n=this;e.profiles().then((function(e){n.profiles=e})).catch((function(e){t.error("Failure",e,"Unable to retrieve Storidge profiles")}))}])},function(e,t,n){var a=n(1088);angular.module("portainer.integrations.storidge").component("storidgeProfilesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/integrations/storidge/components/profiles-datatable/storidgeProfilesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="storidge.profiles.profile({id: item.Name})">{{ item.Name }}</a>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td class="text-center text-muted">No profile available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1090);angular.module("portainer.docker").component("storidgeSnapshotCreation",{templateUrl:a,controller:"StoridgeSnapshotCreationController",bindings:{volumeId:"<"}})},function(e,t){var n="app/integrations/storidge/components/snapshot-creation/storidgeSnapshotCreation.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-widget>\n  <rd-widget-header icon="fa-plus" title-text="Create snapshot"> </rd-widget-header>\n  <rd-widget-body>\n    <form class="form-horizontal">\n      <div class="form-group">\n        <label for="description" class="col-sm-3 col-lg-2 control-label text-left">Description</label>\n        <div class="col-sm-9 col-lg-10">\n          <input type="text" class="form-control" id="description" ng-model="$ctrl.formValues.Description" />\n        </div>\n      </div>\n      <div class="form-group">\n        <div class="col-sm-12">\n          <button\n            type="button"\n            class="btn btn-primary btn-sm"\n            ng-disabled="$ctrl.state.actionInProgress"\n            ng-click="$ctrl.createSnapshot()"\n            button-spinner="$ctrl.state.actionInProgress"\n          >\n            <span ng-hide="$ctrl.state.actionInProgress">Create snapshot</span>\n            <span ng-show="$ctrl.state.actionInProgress">Creating snapshot...</span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </rd-widget-body>\n</rd-widget>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("StoridgeSnapshotCreationController",["StoridgeSnapshotService","Notifications","$state",function(e,t,n){var a=this;this.formValues={},this.state={actionInProgress:!1},this.createSnapshot=function(){a.state.actionInProgress=!0,e.create(a.volumeId,a.formValues.Description).then((function(){t.success("Success","Snapshot successfully created"),n.reload()})).catch((function(e){t.error("Failure",e,"Unable to create snapshot")})).finally((function(){a.state.actionInProgress=!1}))}}])},function(e,t,n){var a=n(1093);angular.module("portainer.integrations.storidge").component("storidgeSnapshotsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/integrations/storidge/components/snapshots-datatable/storidgeSnapshotsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Id\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Date\')">\n                  Date\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Date\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Date\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Description\')">\n                  Description\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Description\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Description\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" ng-disabled="item.Status === \'normal\'" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="docker.volumes.volume.snapshot({snapshotId: item.Id})"> {{ item.Id }}</a>\n              </td>\n              <td>{{ item.Date }}</td>\n              <td>{{ item.Description }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="7" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">No snapshots available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1095);angular.module("portainer.docker").component("volumeStoridgeInfo",{templateUrl:a,controller:"VolumeStoridgeInfoController",bindings:{volume:"<"}})},function(e,t){var n="app/integrations/storidge/components/volume-storidge-info/volumeStoridgeInfo.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-widget>\n  <rd-widget-header icon="fa-cube" title-text="Storidge details">\n    <div class="form-group">\n      <div class="col-sm-12">\n        <button type="button" class="btn btn-primary btn-sm" ng-click="$ctrl.updateVolume()" ng-if="!$ctrl.state.updateInProgress">\n          <span>Update the volume</span>\n        </button>\n        <button type="button" class="btn btn-primary btn-sm" ng-click="$ctrl.confirmUpdate()" ng-if="$ctrl.state.updateInProgress" button-spinner="$ctrl.state.isUpdating">\n          <span ng-hide="$ctrl.state.isUpdating">Confirm</span>\n          <span ng-show="$ctrl.state.isUpdating">Updating the volume...</span>\n        </button>\n        <button type="button" class="btn btn-danger btn-sm" ng-click="$ctrl.cancelUpdate()" ng-if="$ctrl.state.updateInProgress" ng-disabled="$ctrl.state.isUpdating">\n          <span>Cancel</span>\n        </button>\n      </div>\n    </div>\n  </rd-widget-header>\n  <rd-widget-body classes="no-padding" ng-if="!$ctrl.state.updateInProgress">\n    <table class="table">\n      <tbody>\n        <tr>\n          <td>Name</td>\n          <td>{{ $ctrl.volume.Name }}</td>\n        </tr>\n        <tr>\n          <td>UUID</td>\n          <td>{{ $ctrl.volume.Uuid }}</td>\n        </tr>\n        <tr>\n          <td>Node</td>\n          <td>{{ $ctrl.volume.Node }}</td>\n        </tr>\n        <tr>\n          <td>Node ID</td>\n          <td>{{ $ctrl.volume.NodeID }}</td>\n        </tr>\n        <tr>\n          <td>Directory</td>\n          <td>{{ $ctrl.volume.Directory }}</td>\n        </tr>\n        <tr>\n          <td>Capacity</td>\n          <td>{{ $ctrl.volume.Capacity }}</td>\n        </tr>\n        <tr>\n          <td>Allocated</td>\n          <td>{{ $ctrl.volume.Allocated }}</td>\n        </tr>\n        <tr>\n          <td>IOPS Min</td>\n          <td>{{ $ctrl.volume.IOPSMin }}</td>\n        </tr>\n        <tr>\n          <td>IOPS Max</td>\n          <td>{{ $ctrl.volume.IOPSMax }}</td>\n        </tr>\n        <tr>\n          <td>Bandwidth Min</td>\n          <td>{{ $ctrl.volume.BandwidthMin }}</td>\n        </tr>\n        <tr>\n          <td>Bandwidth Max</td>\n          <td>{{ $ctrl.volume.BandwidthMax }}</td>\n        </tr>\n        <tr>\n          <td>Local Drive Only</td>\n          <td>{{ $ctrl.volume.LocalDriveOnly }}</td>\n        </tr>\n        <tr>\n          <td>Provisioning</td>\n          <td>{{ $ctrl.volume.Provisioning }}</td>\n        </tr>\n        <tr>\n          <td>Redundancy</td>\n          <td>{{ $ctrl.volume.Redundancy }}</td>\n        </tr>\n        <tr>\n          <td>Vdisk</td>\n          <td>{{ $ctrl.volume.Vdisk }}</td>\n        </tr>\n        <tr>\n          <td>IP</td>\n          <td>{{ $ctrl.volume.IP }}</td>\n        </tr>\n        <tr>\n          <td>Drive Type</td>\n          <td>{{ $ctrl.volume.DriveType }}</td>\n        </tr>\n        <tr>\n          <td>Encryption</td>\n          <td>{{ $ctrl.volume.Encryption }}</td>\n        </tr>\n        <tr>\n          <td>Snapshot Enabled</td>\n          <td>{{ $ctrl.volume.SnapshotEnabled }}</td>\n        </tr>\n        <tr>\n          <td>Snapshot Interval</td>\n          <td>{{ $ctrl.volume.SnapshotInterval }} minute(s)</td>\n        </tr>\n        <tr>\n          <td>Max Snapshots</td>\n          <td>{{ $ctrl.volume.SnapshotMax }}</td>\n        </tr>\n        <tr>\n          <td>Filesystem</td>\n          <td>{{ $ctrl.volume.Filesystem }}</td>\n        </tr>\n        <tr ng-if="$ctrl.volume.Labels">\n          <td>Labels</td>\n          <td>\n            <table class="table table-bordered table-condensed">\n              <tr ng-repeat="var in $ctrl.volume.Labels">\n                <td>{{ var|key: \'=\' }}</td>\n                <td>{{ var|value: \'=\' }}</td>\n              </tr>\n            </table>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </rd-widget-body>\n  <rd-widget-body ng-if="$ctrl.state.updateInProgress">\n    <form class="form-horizontal" name="storidgeUpdateVolumeForm">\n      \x3c!-- Node --\x3e\n      <div class="form-group">\n        <label for="volume_node" class="col-sm-2 col-lg-1 control-label text-left">Node</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="text" class="form-control" ng-model="$ctrl.formValues.Node" name="volume_node" placeholder="2" />\n        </div>\n      </div>\n      \x3c!-- !Node --\x3e\n      \x3c!-- Capacity --\x3e\n      <div class="form-group">\n        <label for="volume_capacity" class="col-sm-2 col-lg-1 control-label text-left">Capacity</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="text" class="form-control" ng-model="$ctrl.formValues.Capacity" name="volume_capacity" placeholder="2" />\n        </div>\n      </div>\n      \x3c!-- !Capacity --\x3e\n      \x3c!-- IOPS --\x3e\n      <div class="form-group">\n        <label for="min_iops" class="col-sm-2 col-lg-1 control-label text-left">Min IOPS</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="number" class="form-control" ng-model="$ctrl.formValues.IOPSMin" name="min_iops" placeholder="100" />\n        </div>\n      </div>\n      <div class="form-group">\n        <label for="max_iops" class="col-sm-2 col-lg-1 control-label text-left">Max IOPS</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="number" class="form-control" ng-model="$ctrl.formValues.IOPSMax" name="max_iops" placeholder="2000" />\n        </div>\n      </div>\n      \x3c!-- !IOPS --\x3e\n      \x3c!-- Bandwidth --\x3e\n      <div class="form-group">\n        <label for="min_bandwidth" class="col-sm-2 col-lg-1 control-label text-left">Min Bandwidth</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="number" class="form-control" ng-model="$ctrl.formValues.BandwidthMin" name="min_bandwidth" placeholder="100" />\n        </div>\n      </div>\n      <div class="form-group">\n        <label for="max_bandwidth" class="col-sm-2 col-lg-1 control-label text-left">Max Bandwidth</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="number" class="form-control" ng-model="$ctrl.formValues.BandwidthMax" name="max_bandwidth" placeholder="2000" />\n        </div>\n      </div>\n      \x3c!-- !Bandwidth --\x3e\n      \x3c!-- labels --\x3e\n      <div class="form-group">\n        <div class="col-sm-12" style="margin-top: 5px;">\n          <label class="control-label text-left">Labels</label>\n          <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addLabel()">\n            <i class="fa fa-plus-circle" aria-hidden="true"></i> add label\n          </span>\n        </div>\n        \x3c!-- labels-input-list --\x3e\n        <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n          <div ng-repeat="label in $ctrl.formValues.Labels" style="margin-top: 2px;">\n            <div class="input-group col-sm-5 input-group-sm">\n              <span class="input-group-addon">name</span>\n              <input type="text" class="form-control" ng-model="label.name" placeholder="e.g. com.example.foo" />\n            </div>\n            <div class="input-group col-sm-5 input-group-sm">\n              <span class="input-group-addon">value</span>\n              <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n            </div>\n            <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removeLabel($index)">\n              <i class="fa fa-trash" aria-hidden="true"></i>\n            </button>\n          </div>\n        </div>\n        \x3c!-- !labels-input-list --\x3e\n      </div>\n      \x3c!-- !labels --\x3e\n    </form>\n  </rd-widget-body>\n</rd-widget>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("VolumeStoridgeInfoController",["$state","StoridgeVolumeService","Notifications",function(e,t,n){var a=this;this.state={updateInProgress:!1,isUpdating:!1},this.addLabel=function(){this.formValues.Labels.push({name:"",value:""})},this.removeLabel=function(e){this.formValues.Labels.splice(e,1)},this.initLabels=function(){var e=this.volume.Labels;e&&(this.formValues.Labels=Object.keys(e).map((function(t){return{name:t,value:e[t]}})))},this.updateVolume=function(){this.state.updateInProgress=!0,this.formValues={IOPSMin:this.volume.IOPSMin,IOPSMax:this.volume.IOPSMax,Node:this.volume.Node,Capacity:this.volume.Capacity,BandwidthMin:this.volume.BandwidthMin,BandwidthMax:this.volume.BandwidthMax,Labels:[]},this.initLabels()},this.cancelUpdate=function(){this.state.updateInProgress=!1,this.formValues={}},this.prepareLabels=function(e){var t={};this.formValues.Labels.forEach((function(e){e.name&&e.value&&(t[e.name]=e.value)})),e.Labels=t},this.prepareVolume=function(){var e=angular.copy(this.formValues),t=this.volume;return e.Node!==t.Node&&e.Node||delete e.Node,e.Capacity!==t.Capacity&&e.Capacity||delete e.Capacity,e.IOPSMin!==t.IOPSMin&&e.IOPSMin?e.IOPSMin=e.IOPSMin.toString():delete e.IOPSMin,e.IOPSMax!==t.IOPSMax&&e.IOPSMax?e.IOPSMax=e.IOPSMax.toString():delete e.IOPSMax,e.BandwidthMin!==t.BandwidthMin&&e.BandwidthMin||delete e.BandwidthMin,e.BandwidthMax!==t.BandwidthMax&&e.BandwidthMax||delete e.BandwidthMax,this.prepareLabels(e),e},this.confirmUpdate=function(){this.state.isUpdating=!0;var r=this.prepareVolume();r.Name=this.volume.Name,t.update(r).then((function(){n.success("Volume successfully updated"),e.reload()})).catch((function(e){n.error("Failure",e,"Unable to update volume"),a.state.isUpdating=!1}))}}])},function(e,t,n){"use strict";n.r(t);var a=n(33);angular.module("portainer.integrations.storidge").filter("drivestatusbadge",(function(){return function(e){var t=e?Object(a.a)(e):"";return"available"===t?"info":"faulty"===t?"danger":"success"}})).filter("storidgeNodeStatusBadge",(function(){return function(e){var t=e?Object(a.a)(e):"";return"cordoned"===t||"maintenance"===t?"orange-icon":"leaving"===t||"failed"===t?"red-icon":"green-icon"}})).filter("storidgeClusterConditionBadge",(function(){return function(e){var t=e?Object(a.a)(e):"";return"alert"===t?"red-icon":"warning"===t?"orange-icon":"green-icon"}})).filter("bytes",(function(){return function(e,t){if(e=parseFloat(e),isNaN(e)||!isFinite(e))return"-";t||(t=1);var n=Math.floor(Math.log(e)/Math.log(1024));return 0===e?"0 B":(e/Math.pow(1024,Math.floor(n))).toFixed(t)+" "+["B","kB","MB","GB","TB","PB"][n]}}))},function(e,t){angular.module("portainer.integrations.storidge").factory("Storidge",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/storidge/:resource/:id/:action",{endpointId:n.endpointID},{rebootCluster:{method:"POST",params:{resource:"clusters",action:"reboot"}},shutdownCluster:{method:"POST",params:{resource:"clusters",action:"shutdown"}},queryEvents:{method:"GET",params:{resource:"clusters",action:"events"},timeout:4500,ignoreLoadingBar:!0,isArray:!0},getVersion:{method:"GET",params:{resource:"clusters",action:"version"}},getInfo:{method:"GET",params:{resource:"clusters",action:"info"},timeout:4500,ignoreLoadingBar:!0},queryNodes:{method:"GET",params:{resource:"nodes"}},getNode:{method:"GET",params:{resource:"nodes",id:"@id"}},addNode:{method:"POST",params:{resource:"nodes"}},removeNode:{method:"DELETE",params:{resource:"nodes",id:"@id"}},cordonNode:{method:"POST",params:{resource:"nodes",action:"cordon",id:"@id"}},uncordonNode:{method:"POST",params:{resource:"nodes",action:"uncordon",id:"@id"}},queryProfiles:{method:"GET",params:{resource:"profiles"}},getProfile:{method:"GET",params:{resource:"profiles"}},createProfile:{method:"POST",params:{resource:"profiles"}},updateProfile:{method:"PUT",params:{resource:"profiles",id:"@name"}},deleteProfile:{method:"DELETE",params:{resource:"profiles"}},queryDrives:{method:"GET",params:{resource:"drives"}},getDrive:{method:"GET",params:{resource:"drives",id:"@id"}},addDrive:{method:"POST",params:{resource:"drives"}},removeDrive:{method:"DELETE",params:{resource:"drives",id:"@id"}},rescanDrives:{method:"POST",params:{resource:"drives",action:"rescan"}},queryVolumes:{method:"GET",params:{resource:"volumes"}},createVolume:{method:"POST",params:{resource:"volumes"}},getVolume:{method:"GET",params:{resource:"volumes",id:"@id"}},updateVolume:{method:"POST",params:{resource:"volumes",id:"@name"}},removeVolume:{method:"DELETE",params:{resource:"volumes",id:"@id"}},querySnapshots:{method:"GET",params:{resource:"volumes",id:"@id",action:"snapshots"}},createSnapshot:{method:"POST",params:{resource:"volumes",id:"@id",action:"snapshot"}},getSnapshot:{method:"GET",params:{resource:"snapshots",id:"@id"}},removeSnapshot:{method:"DELETE",params:{resource:"snapshots",id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(100),r=n.n(a),i=n(84),o=n.n(i);angular.module("portainer.integrations.storidge").factory("StoridgeChartService",[function(){var e={};function t(e){return e>5?o()(e,{base:10,round:1}):e.toFixed(1)+"B/s"}return e.CreateCapacityChart=function(e){return new r.a(e,{type:"doughnut",data:{datasets:[{data:[],backgroundColor:["rgba(171, 213, 255, 0.7)","rgba(229, 57, 53, 0.7)"]}],labels:[]},options:{tooltips:{callbacks:{label:function(e,t){var n=t.datasets[e.datasetIndex],a=t.labels[e.index],r=n.data[e.index];return a+": "+o()(r,{base:10,round:1})}}},animation:{duration:0},responsiveAnimationDuration:0,responsive:!0,hover:{animationDuration:0}}})},e.CreateIOPSChart=function(e){return new r.a(e,{type:"line",data:{labels:[],datasets:[{label:"IOPS",data:[],fill:!0,backgroundColor:"rgba(151,187,205,0.4)",borderColor:"rgba(151,187,205,0.6)",pointBackgroundColor:"rgba(151,187,205,1)",pointBorderColor:"rgba(151,187,205,1)",pointRadius:2,borderWidth:2}]},options:{animation:{duration:0},responsiveAnimationDuration:0,responsive:!0,tooltips:{mode:"index",intersect:!1,position:"nearest"},hover:{animationDuration:0},scales:{yAxes:[{ticks:{beginAtZero:!0}}]}}})},e.CreateBandwidthChart=function(e){return new r.a(e,{type:"line",data:{labels:[],datasets:[{label:"Bandwidth",data:[],fill:!0,backgroundColor:"rgba(151,187,205,0.4)",borderColor:"rgba(151,187,205,0.6)",pointBackgroundColor:"rgba(151,187,205,1)",pointBorderColor:"rgba(151,187,205,1)",pointRadius:2,borderWidth:2}]},options:{animation:{duration:0},responsiveAnimationDuration:0,responsive:!0,tooltips:{mode:"index",intersect:!1,position:"nearest",callbacks:{label:function(e,t){return function(e,t){var n=0;n=t>5?o()(t,{base:10,round:1}):t.toFixed(1)+"B";return e+": "+n+"/s"}(t.datasets[e.datasetIndex].label,e.yLabel)}}},hover:{animationDuration:0},scales:{yAxes:[{ticks:{beginAtZero:!0,callback:t}}]}}})},e.UpdateChart=function(e,t,n){n.data.labels.push(e),n.data.datasets[0].data.push(t),n.data.datasets[0].data.length>600&&(n.data.labels.pop(),n.data.datasets[0].data.pop()),n.update(0)},e.UpdatePieChart=function(e,t,n){var a=n.data.labels.indexOf(e);a>-1?n.data.datasets[0].data[a]=t:(n.data.labels.push(e),n.data.datasets[0].data.push(t)),n.update(0)},e}])},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t);var a=n(308),r=n(307);angular.module("portainer.integrations.storidge").factory("StoridgeClusterService",["$q","Storidge",function(e,t){var n={reboot:function(){return t.rebootCluster().$promise},shutdown:function(){return t.shutdownCluster().$promise},info:function(){var n=e.defer();return t.getInfo().$promise.then((function(e){var t=new a.StoridgeInfoModel(e);n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve Storidge information",err:e})})),n.promise},version:function(){var n=e.defer();return t.getVersion().$promise.then((function(e){var t=e.version;n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve Storidge version",err:e})})),n.promise},events:function(){var n=e.defer();return t.queryEvents().$promise.then((function(e){var t=e.map((function(e){return new r.StoridgeEventModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve Storidge events",err:e})})),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(236);angular.module("portainer.integrations.storidge").factory("StoridgeDriveService",["$q","Storidge",function(e,t){var n={drives:function(){var n=e.defer();return t.queryDrives().$promise.then((function(e){var t=e.drives.map((function(e){return new a.StoridgeDriveModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve Storidge drives",err:e})})),n.promise},drive:function(n){var r=e.defer();return t.getDrive({id:n}).$promise.then((function(e){var n=new a.StoridgeDriveModel(e);t.getNode({id:e.nodeid}).$promise.then((function(e){n.Node=e.name,r.resolve(n)}))})).catch((function(e){r.reject({msg:"Unable to retrieve Storidge drive",err:e})})),r.promise},add:function(n,a){var r=e.defer();return t.addDrive({device:n,node:a}).$promise.then((function(){r.resolve()})).catch((function(e){r.reject({msg:"Unable to add Storidge drive",err:e})})),r.promise},remove:function(n){var a=e.defer();return t.removeDrive({id:n}).$promise.then((function(){a.resolve()})).catch((function(e){a.reject({msg:"Unable to remove Storidge drive",err:e})})),a.promise},rescan:function(){return t.rescanDrives().$promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(237);angular.module("portainer.integrations.storidge").factory("StoridgeNodeService",["$q","Storidge",function(e,t){var n={nodes:function(){var n=e.defer();return t.queryNodes().$promise.then((function(e){var t=e.nodes,r=[];for(var i in t)t.hasOwnProperty(i)&&r.push(new a.StoridgeNodeModel(i,t[i]));n.resolve(r)})).catch((function(e){n.reject({msg:"Unable to retrieve Storidge nodes",err:e})})),n.promise},node:function(n){var r=e.defer();return t.getNode({id:n}).$promise.then((function(e){var t=new a.StoridgeNodeDetailedModel(e.name,e.properties);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve Storidge node",err:e})})),r.promise},add:function(){return t.addNode().$promise},cordon:function(e){return t.cordonNode({id:e}).$promise},uncordon:function(e){return t.uncordonNode({id:e}).$promise},remove:function(e){return t.removeNode({id:e}).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(70);angular.module("portainer.integrations.storidge").factory("StoridgeProfileService",["$q","Storidge",function(e,t){var n={create:function(e){var n=new a.StoridgeCreateProfileRequest(e);return t.createProfile(n).$promise},update:function(e){var n=new a.StoridgeCreateProfileRequest(e);return t.updateProfile(n).$promise},delete:function(e){return t.deleteProfile({id:e}).$promise},profile:function(n){var r=e.defer();return t.getProfile({id:n}).$promise.then((function(e){var t=new a.StoridgeProfileModel(n,e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve Storidge profile details",err:e})})),r.promise},profiles:function(){var n=e.defer();return t.queryProfiles().$promise.then((function(e){var t=e.profiles.map((function(e){return new a.StoridgeProfileListModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve Storidge profiles",err:e})})),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(238);angular.module("portainer.integrations.storidge").factory("StoridgeSnapshotService",["$q","Storidge",function(e,t){var n={};return n.snapshots=function(n){var r=e.defer();return t.querySnapshots({id:n}).$promise.then((function(e){var t=e.snapshots,n=[];for(var i in t)t.hasOwnProperty(i)&&n.push(t[i]);var o=n.map((function(e){return new a.StoridgeSnapshotModel(e)}));r.resolve(o)})).catch((function(e){r.reject({msg:"Unable to retrieve Storidge snapshots",err:e})})),r.promise},n.snapshot=function(n){var r=e.defer();return t.getSnapshot({id:n}).$promise.then((function(e){var t=new a.StoridgeSnapshotModel(e.snapshot);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve Storidge snapshot",err:e})})),r.promise},n.create=function(n,a){var r=e.defer();return t.createSnapshot({id:n,opts:{description:a}}).$promise.then((function(e){r.resolve(e)})).catch((function(e){r.reject({msg:"Unable to create Storidge volume snapshot",err:e})})),r.promise},n.remove=function(n){var a=e.defer();return t.removeSnapshot({id:n}).$promise.then((function(){a.resolve()})).catch((function(e){a.reject({msg:"Unable to remove Storidge volume snapshot",err:e})})),a.promise},n}])},function(e,t,n){"use strict";n.r(t);var a=n(239);angular.module("portainer.integrations.storidge").factory("StoridgeVolumeService",["$q","Storidge",function(e,t){var n={volume:function(n){var r=e.defer();return t.getVolume({id:n}).$promise.then((function(e){var t=new a.StoridgeVolumeModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve Storidge volume",err:e})})),r.promise},update:function(n){var r=e.defer(),i=new a.StoridgeVolumeUpdateModel(n);return t.updateVolume(i).$promise.then((function(e){r.resolve(e)})).catch((function(e){r.reject({msg:"Unable to update Storidge volume",err:e})})),r.promise}};return n}])},function(e,t){angular.module("portainer.integrations.storidge").controller("StoridgeClusterController",["$q","$scope","$state","Notifications","StoridgeClusterService","StoridgeNodeService","ModalService",function(e,t,n,a,r,i,o){t.state={shutdownInProgress:!1,rebootInProgress:!1},t.rebootCluster=function(){o.confirm({title:"Are you sure?",message:"All the nodes in the cluster will reboot during the process. Do you want to reboot the Storidge cluster?",buttons:{confirm:{label:"Reboot",className:"btn-danger"}},callback:function(e){e&&(t.state.rebootInProgress=!0,r.reboot().finally((function(){t.state.rebootInProgress=!1,a.success("Cluster successfully rebooted"),n.reload()})))}})},t.shutdownCluster=function(){o.confirm({title:"Are you sure?",message:"All the nodes in the cluster will shutdown. Do you want to shutdown the Storidge cluster?",buttons:{confirm:{label:"Shutdown",className:"btn-danger"}},callback:function(e){e&&(t.state.shutdownInProgress=!0,r.shutdown().finally((function(){t.state.shutdownInProgress=!1,a.success("Cluster successfully shutdown"),n.go("docker.dashboard")})))}})},e.all({info:r.info(),version:r.version(),nodes:i.nodes()}).then((function(e){t.clusterInfo=e.info,t.clusterVersion=e.version,t.clusterNodes=e.nodes})).catch((function(e){a.error("Failure",e,"Unable to retrieve cluster information")}))}])},function(e,t){angular.module("portainer.integrations.storidge").controller("StoridgeDrivesController",["$scope","$state","Notifications","StoridgeDriveService",function(e,t,n,a){e.state={additionInProgress:[],actionInProgress:!1},e.addAction=function(r,i){e.state.additionInProgress[i]=!0,e.state.actionInProgress=!0,a.add(r.Device,r.Node).then((function(){n.success("Drive "+r.Device+" successfully added on node "+r.Node),t.reload()})).catch((function(e){n.error("Failure",e,"Unable to add drive")})).finally((function(){e.state.additionInProgress[i]=!1,e.state.actionInProgress=!1}))},e.rescanAction=function(){a.rescan().then((function(){t.reload()})).catch((function(e){n.error("Failure",e,"Unable to scan drives")}))},a.drives().then((function(t){e.drives=t})).catch((function(e){n.error("Failure",e,"Unable to retrieve drives")}))}])},function(e,t){angular.module("portainer.integrations.storidge").controller("StoridgeDriveController",["$scope","$state","$transition$","Notifications","ModalService","StoridgeDriveService",function(e,t,n,a,r,i){e.actionInProgress=!1,e.removeDrive=function(){r.confirm({title:"Are you sure?",message:"Do you want really want to remove this drive from the storage pool?",buttons:{confirm:{label:"Remove",className:"btn-danger"}},callback:function(n){n&&(e.actionInProgress=!0,i.remove(e.drive.Id).then((function(){a.success("Success","Drive removed from storage pool"),t.go("storidge.drives",{},{reload:!0})})).catch((function(e){a.error("Failure",e,"Unable to remove drive from storage pool")})).finally((function(){e.actionInProgress=!1})))}})},e.id=n.params().id,i.drive(e.id).then((function(t){e.drive=t})).catch((function(e){a.error("Failure",e,"Unable to retrieve drive details")}))}])},function(e,t,n){"use strict";n.r(t),function(e){var t=n(3),a=n.n(t);angular.module("portainer.integrations.storidge").controller("StoridgeMonitorController",["$q","$scope","$interval","$document","Notifications","StoridgeClusterService","StoridgeChartService",function(t,n,r,i,o,s,l){function c(){var e=n.repeater;angular.isDefined(e)&&(r.cancel(e),e=null)}function d(e,t){var n=e.UsedIOPS,r=a()(new Date).format("HH:mm:ss");l.UpdateChart(r,n,t)}function u(e,t){var n=e.UsedBandwidth,r=a()(new Date).format("HH:mm:ss");l.UpdateChart(r,n,t)}function p(e,t){var n=e.UsedCapacity,a=e.FreeCapacity;l.UpdatePieChart("Free",a,t),l.UpdatePieChart("Used",n,t)}function m(e,a,i){t.all({events:s.events(),info:s.info()}).then((function(l){n.events=l.events;var m=l.info;n.info=m,d(m,e),u(m,a),p(m,i),function(e,a,i){n.repeater=r((function(){t.all({events:s.events(),info:s.info()}).then((function(t){n.events=t.events;var r=t.info;n.info=r,d(r,e),u(r,a),p(r,i)})).catch((function(e){c(),o.error("Failure",e,"Unable to retrieve cluster information")}))}),5e3)}(e,a,i)})).catch((function(e){c(),o.error("Failure",e,"Unable to retrieve cluster information")}))}n.$on("$destroy",(function(){c()})),i.ready((function(){var t,n,a,r,i;t=e("#iopsChart"),n=l.CreateIOPSChart(t),a=e("#bandwithChart"),r=l.CreateBandwidthChart(a),i=e("#capacityChart"),m(n,r,l.CreateCapacityChart(i))}))}])}.call(this,n(19))},function(e,t){angular.module("portainer.integrations.storidge").controller("StoridgeNodeController",["$scope","$state","$transition$","Notifications","StoridgeNodeService","ModalService",function(e,t,n,a,r,i){e.removeNodeAction=function(n){i.confirm({title:"Are you sure?",message:"Do you want really want to remove the node from the cluster?",buttons:{confirm:{label:"Remove",className:"btn-danger"}},callback:function(n){n&&r.remove(e.node.Name).then((function(){a.success("Node successfully removed",e.node.Name),t.go("storidge.cluster")})).catch((function(e){a.error("Failure",e,"Unable to remove node")}))}})},e.cordonNodeAction=function(n){i.confirm({title:"Are you sure?",message:"Do you want really want to put the node in maintenance mode?",buttons:{confirm:{label:"Enter maintenance",className:"btn-danger"}},callback:function(n){n&&r.cordon(e.node.Name).then((function(){a.success("Node successfully put in maintenance")})).catch((function(e){a.error("Failure",e,"Unable to put node in maintenance mode")})).finally((function(){t.reload()}))}})},e.uncordonNodeAction=function(n){i.confirm({title:"Are you sure?",message:"Do you want really want to bring the nodes out of maintenance mode?",buttons:{confirm:{label:"Exit maintenance",className:"btn-danger"}},callback:function(n){n&&r.uncordon(e.node.Name).then((function(){a.success("Node successfully bringed back")})).catch((function(e){a.error("Failure",e,"Unable to put node out of maintenance mode")})).finally((function(){t.reload()}))}})},e.name=n.params().name,r.node(e.name).then((function(t){e.node=t})).catch((function(e){a.error("Failure",e,"Unable to retrieve node details")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(33),r=n(70);angular.module("portainer.integrations.storidge").controller("StoridgeCreateProfileController",["$scope","$state","$transition$","Notifications","StoridgeProfileService",function(e,t,n,i,o){var s;e.formValues={Labels:[]},e.state={NoLimit:!0,LimitIOPS:!1,LimitBandwidth:!1,ManualInputDirectory:!1,actionInProgress:!1},e.RedundancyOptions=[{value:2,label:"2-copy"},{value:3,label:"3-copy"}],e.addLabel=function(){e.formValues.Labels.push({name:"",value:""})},e.removeLabel=function(t){e.formValues.Labels.splice(t,1)},e.create=function(){var n=e.model;e.state.LimitIOPS||(delete n.MinIOPS,delete n.MaxIOPS),e.state.LimitBandwidth||(delete n.MinBandwidth,delete n.MaxBandwidth),n.SnapshotEnabled?((!n.SnapshotMax||n.SnapshotMax<=0)&&(n.SnapshotMax=1),e.state.RecurringSnapshotEnabled||delete n.SnapshotInterval,e.state.RecurringSnapshotEnabled&&(!n.SnapshotInterval||n.SnapshotInterval<=0)&&(n.SnapshotInterval=1440)):(delete n.SnapshotMax,delete n.SnapshotInterval),function(t){var n={};e.formValues.Labels.forEach((function(e){e.name&&e.value&&(n[e.name]=e.value)})),t.Labels=n}(n),e.state.actionInProgress=!0,o.create(n).then((function(){i.success("Profile successfully created"),t.go("storidge.profiles")})).catch((function(e){i.error("Failure",e,"Unable to create profile")})).finally((function(){e.state.actionInProgress=!1}))},e.updatedName=function(){if(!e.state.ManualInputDirectory){var t=e.model;t.Directory="/cio/"+(t.Name?Object(a.a)(t.Name):"")}},e.updatedDirectory=function(){e.state.ManualInputDirectory||(e.state.ManualInputDirectory=!0)},(s=new r.StoridgeProfileDefaultModel).Name=n.params().profileName,s.Directory=s.Directory+Object(a.a)(s.Name),e.model=s}])},function(e,t){angular.module("portainer.integrations.storidge").controller("StoridgeProfileController",["$scope","$state","$transition$","Notifications","StoridgeProfileService","ModalService",function(e,t,n,a,r,i){e.formValues={Labels:[]},e.state={NoLimit:!1,LimitIOPS:!1,LimitBandwidth:!1,updateInProgress:!1,deleteInProgress:!1,RecurringSnapshotEnabled:!1},e.addLabel=function(){e.formValues.Labels.push({name:"",value:""})},e.removeLabel=function(t){e.formValues.Labels.splice(t,1)},e.RedundancyOptions=[{value:2,label:"2-copy"},{value:3,label:"3-copy"}],e.update=function(){var n=e.profile;e.state.LimitIOPS||(delete n.MinIOPS,delete n.MaxIOPS),e.state.LimitBandwidth||(delete n.MinBandwidth,delete n.MaxBandwidth),n.SnapshotEnabled?((!n.SnapshotMax||n.SnapshotMax<=0)&&(n.SnapshotMax=1),e.state.RecurringSnapshotEnabled||delete n.SnapshotInterval,e.state.RecurringSnapshotEnabled&&(!n.SnapshotInterval||n.SnapshotInterval<=0)&&(n.SnapshotInterval=1440)):(delete n.SnapshotMax,delete n.SnapshotInterval),function(t){var n={};e.formValues.Labels.forEach((function(e){e.name&&e.value&&(n[e.name]=e.value)})),t.Labels=n}(n),e.state.updateInProgress=!0,r.update(n).then((function(){a.success("Profile successfully updated"),t.go("storidge.profiles")})).catch((function(e){a.error("Failure",e,"Unable to update profile")})).finally((function(){e.state.updateInProgress=!1}))},e.delete=function(){i.confirmDeletion("Do you want to remove this profile?",(function(n){var i;n&&(i=e.profile,e.state.deleteInProgress=!0,r.delete(i.Name).then((function(){a.success("Profile successfully deleted"),t.go("storidge.profiles")})).catch((function(e){a.error("Failure",e,"Unable to delete profile")})).finally((function(){e.state.deleteInProgress=!1})))}))},r.profile(n.params().id).then((function(t){var n,a=t;a.MinIOPS&&0!==a.MinIOPS||a.MaxIOPS&&0!==a.MaxIOPS?e.state.LimitIOPS=!0:a.MinBandwidth&&0!==a.MinBandwidth||a.MaxBandwidth&&0!==a.MaxBandwidth?e.state.LimitBandwidth=!0:e.state.NoLimit=!0,a.SnapshotEnabled&&0!==a.SnapshotInterval&&(e.state.RecurringSnapshotEnabled=!0),n=a.Labels,e.formValues.Labels=Object.keys(n).map((function(e){return{name:e,value:n[e]}})),e.profile=a})).catch((function(e){a.error("Failure",e,"Unable to retrieve profile details")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(33),r=n(70);angular.module("portainer.integrations.storidge").controller("StoridgeProfilesController",["$q","$scope","$state","Notifications","StoridgeProfileService",function(e,t,n,i,o){t.state={actionInProgress:!1},t.formValues={Name:""},t.removeAction=function(e){var a=e.length;angular.forEach(e,(function(e){o.delete(e.Name).then((function(){i.success("Profile successfully removed",e.Name);var n=t.profiles.indexOf(e);t.profiles.splice(n,1)})).catch((function(e){i.error("Failure",e,"Unable to remove profile")})).finally((function(){0===--a&&n.reload()}))}))},t.create=function(){var e=new r.StoridgeProfileDefaultModel;e.Labels={},e.Name=t.formValues.Name,e.Directory=e.Directory+Object(a.a)(e.Name),delete e.MinBandwidth,delete e.MaxBandwidth,delete e.MinIOPS,delete e.MaxIOPS,t.state.actionInProgress=!0,o.create(e).then((function(){i.success("Profile successfully created"),n.reload()})).catch((function(e){i.error("Failure",e,"Unable to create profile")})).finally((function(){t.state.actionInProgress=!1}))},o.profiles().then((function(e){t.profiles=e})).catch((function(e){i.error("Failure",e,"Unable to retrieve profiles")}))}])},function(e,t){angular.module("portainer.integrations.storidge").controller("StoridgeSnapshotController",["$scope","$state","$transition$","Notifications","ModalService","StoridgeSnapshotService",function(e,t,n,a,r,i){e.removeSnapshot=function(){r.confirm({title:"Are you sure?",message:"Do you want really want to remove this snapshot?",buttons:{confirm:{label:"Remove",className:"btn-danger"}},callback:function(n){n&&i.remove(e.snapshot.Id).then((function(){a.success("Success","Snapshot removed"),t.go("portainer.volumes.volume",{id:e.volumeId})})).catch((function(e){a.error("Failure",e,"Unable to remove snapshot")}))}})},e.volumeId=n.params().id,e.snapshotId=n.params().snapshotId,i.snapshot(e.snapshotId).then((function(t){e.snapshot=t})).catch((function(e){a.error("Failure",e,"Unable to retrieve snapshot details")}))}])},function(e,t,n){var a=n(1163);angular.module("portainer.app").component("accessDatatable",{templateUrl:a,controller:"AccessDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",roles:"<",tableKey:"@",orderBy:"@",removeAction:"<",updateAction:"<",reverseOrder:"<",rbacEnabled:"<",inheritFrom:"<"}})},function(e,t){var n="app/portainer/components/access-datatable/accessDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-header icon="{{ $ctrl.titleIcon }}" title-text="{{ $ctrl.titleText }}"> </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar small" ng-if="$ctrl.inheritFrom">\n        Access tagged as <code>inherited</code> are inherited from the group access. They cannot be removed or modified at the endpoint level but they can be overriden.\n      </div>\n      <div class="toolBar small" ng-if="$ctrl.inheritFrom"> Access tagged as <code>override</code> are overriding the group access for the related users/teams. </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button\n          ng-if="$ctrl.rbacEnabled"\n          type="button"\n          class="btn btn-sm btn-primary"\n          ng-disabled="($ctrl.dataset | filter:{ Updated: true}).length === 0 "\n          ng-click="$ctrl.updateAction()"\n        >\n          <i class="fa fa-check space-right" aria-hidden="true"></i>Update\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n                  Type\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.rbacEnabled">\n                <a ng-click="$ctrl.changeOrderBy(\'RoleName\')">\n                  Role\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RoleName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RoleName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit)) track by $index"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-disabled="item.Inherited" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                {{ item.Name }}\n                <span ng-if="item.Inherited" class="text-muted small" style="margin-left: 2px;"><code style="font-size: 85% !important;">inherited</code></span>\n                <span ng-if="item.Override" class="text-muted small" style="margin-left: 2px;"><code style="font-size: 85% !important;">override</code></span>\n              </td>\n              <td>{{ item.Type }}</td>\n              <td ng-if="$ctrl.rbacEnabled">\n                <span ng-if="!item.Updated">\n                  {{ item.Role.Name }}\n                  <a ng-if="!item.Inherited" class="interactive" ng-click="item.Updated = true; item.OldRole = item.Role; $event.stopPropagation();">\n                    <i class="fa fa-edit" aria-hidden="true"></i> Edit\n                  </a>\n                </span>\n                <span ng-if="item.Updated">\n                  <select ng-model="item.Role" ng-options="role.Name for role in $ctrl.roles"> </select>\n                  <a class="interactive" ng-click="item.Updated = false; item.Role = item.OldRole; item.OldRole = null; $event.stopPropagation();"><i class="fa fa-times"></i></a>\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="4" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="4" class="text-center text-muted">No authorized users or teams.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("AccessDatatableController",["$scope","$controller","DatatableService",function(e,t,n){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.disableRemove=function(e){return e.Inherited},this.allowSelection=function(e){return!this.disableRemove(e)},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters&&this.filters.state&&(this.filters.state.open=!1);var r=n.getDataTableSettings(this.tableKey);null!==r&&(this.settings=r,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(1166);angular.module("portainer.app").component("accessTable",{templateUrl:a,controller:function(){this.state={orderBy:"Name",reverseOrder:!1,paginatedItemLimit:"10",textFilter:""},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e}},bindings:{dataset:"<",entryClick:"<",emptyDatasetMessage:"@"}})},function(e,t){var n="app/portainer/components/access-table/accessTable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <table class="table table-hover">\n    <div class="col-sm-12">\n      <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n      <input\n        type="text"\n        class="searchInput"\n        ng-model="$ctrl.state.textFilter"\n        ng-change="$ctrl.onTextFilterChange()"\n        placeholder="Search..."\n        ng-model-options="{ debounce: 300 }"\n      />\n    </div>\n    <thead>\n      <tr>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n            Name\n            <span ng-show="$ctrl.state.orderBy == \'Name\' && !$ctrl.state.reverseOrder" class="glyphicon glyphicon-chevron-down"></span>\n            <span ng-show="$ctrl.state.orderBy == \'Name\' && $ctrl.state.reverseOrder" class="glyphicon glyphicon-chevron-up"></span>\n          </a>\n        </th>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n            Type\n            <span ng-show="$ctrl.state.orderBy == \'Type\' && !$ctrl.state.reverseOrder" class="glyphicon glyphicon-chevron-down"></span>\n            <span ng-show="$ctrl.state.orderBy == \'Type\' && $ctrl.state.reverseOrder" class="glyphicon glyphicon-chevron-up"></span>\n          </a>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        ng-click="!item.Inherited && $ctrl.entryClick(item)"\n        ng-class="{ interactive: !item.Inherited }"\n        dir-paginate="item in $ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit"\n      >\n        <td>\n          {{ item.Name }}\n          \x3c!-- <span class="image-tag label label-">inherited</span> --\x3e\n          <span ng-if="item.Inherited" class="text-muted small" style="margin-left: 2px;"><code style="font-size: 85% !important;">inherited</code></span>\n        </td>\n        <td>\n          <i class="fa" ng-class="item.Type === \'user\' ? \'fa-user\' : \'fa-users\'" aria-hidden="true" style="margin-right: 2px;"></i>\n          {{ item.Type }}\n        </td>\n      </tr>\n      <tr ng-if="!$ctrl.dataset">\n        <td colspan="2" class="text-center text-muted">Loading...</td>\n      </tr>\n      <tr\n        ng-if="\n          $ctrl.dataset.length === 0 ||\n          ($ctrl.dataset | filter: $ctrl.state.textFilter | orderBy: $ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit).length === 0\n        "\n      >\n        <td colspan="2" class="text-center text-muted">{{ $ctrl.emptyDatasetMessage }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <div class="footer" ng-if="$ctrl.dataset">\n    <div class="paginationControls">\n      <form class="form-inline">\n        <span class="limitSelector">\n          <span style="margin-right: 5px;">\n            Items per page\n          </span>\n          <select ng-model="$ctrl.state.paginatedItemLimit">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </span>\n        <dir-pagination-controls max-size="5"></dir-pagination-controls>\n      </form>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1168);angular.module("portainer.app").component("porAccessControlForm",{templateUrl:a,controller:"porAccessControlFormController",bindings:{formData:"=",resourceControl:"<"}})},function(e,t){var n="app/portainer/components/accessControlForm/porAccessControlForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <div class="col-sm-12 form-section-title">\n    Access control\n  </div>\n  \x3c!-- access-control-switch --\x3e\n  <div class="form-group">\n    <div class="col-sm-12">\n      <label for="ownership" class="control-label text-left">\n        Enable access control\n        <portainer-tooltip position="bottom" message="When enabled, you can restrict the access and management of this resource."></portainer-tooltip>\n      </label>\n      <label class="switch" style="margin-left: 20px;"> <input name="ownership" type="checkbox" ng-model="$ctrl.formData.AccessControlEnabled" /><i></i> </label>\n    </div>\n  </div>\n  \x3c!-- !access-control-switch --\x3e\n  \x3c!-- restricted-access --\x3e\n  <div class="form-group" ng-if="$ctrl.formData.AccessControlEnabled" style="margin-bottom: 0;">\n    <div class="boxselector_wrapper">\n      <div ng-if="$ctrl.isAdmin">\n        <input type="radio" id="access_administrators" ng-model="$ctrl.formData.Ownership" value="administrators" />\n        <label for="access_administrators">\n          <div class="boxselector_header">\n            <i ng-class="\'administrators\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            Administrators\n          </div>\n          <p>I want to restrict the management of this resource to administrators only</p>\n        </label>\n      </div>\n      <div ng-if="$ctrl.isAdmin">\n        <input type="radio" id="access_restricted" ng-model="$ctrl.formData.Ownership" value="restricted" />\n        <label for="access_restricted">\n          <div class="boxselector_header">\n            <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            Restricted\n          </div>\n          <p>\n            I want to restrict the management of this resource to a set of users and/or teams\n          </p>\n        </label>\n      </div>\n      <div ng-if="!$ctrl.isAdmin">\n        <input type="radio" id="access_private" ng-model="$ctrl.formData.Ownership" value="private" />\n        <label for="access_private">\n          <div class="boxselector_header">\n            <i ng-class="\'private\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            Private\n          </div>\n          <p>\n            I want to this resource to be manageable by myself only\n          </p>\n        </label>\n      </div>\n      <div ng-if="!$ctrl.isAdmin && $ctrl.availableTeams.length > 0">\n        <input type="radio" id="access_restricted" ng-model="$ctrl.formData.Ownership" value="restricted" />\n        <label for="access_restricted">\n          <div class="boxselector_header">\n            <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            Restricted\n          </div>\n          <p ng-if="$ctrl.availableTeams.length === 1">\n            I want any member of my team (<b>{{ $ctrl.availableTeams[0].Name }}</b\n            >) to be able to manage this resource\n          </p>\n          <p ng-if="$ctrl.availableTeams.length > 1">\n            I want to restrict the management of this resource to one or more of my teams\n          </p>\n        </label>\n      </div>\n    </div>\n  </div>\n  \x3c!-- restricted-access --\x3e\n  \x3c!-- authorized-teams --\x3e\n  <div\n    class="form-group"\n    ng-if="$ctrl.formData.AccessControlEnabled && $ctrl.formData.Ownership === $ctrl.RCO.RESTRICTED && ($ctrl.isAdmin || (!$ctrl.isAdmin && $ctrl.availableTeams.length > 1))"\n  >\n    <div class="col-sm-12">\n      <label for="group-access" class="control-label text-left">\n        Authorized teams\n        <portainer-tooltip\n          ng-if="$ctrl.isAdmin && $ctrl.availableTeams.length > 0"\n          position="bottom"\n          message="You can select which teams(s) will be able to manage this resource."\n        ></portainer-tooltip>\n        <portainer-tooltip\n          ng-if="!$ctrl.isAdmin && $ctrl.availableTeams.length > 1"\n          position="bottom"\n          message="As you are a member of multiple teams, you can select which teams(s) will be able to manage this resource."\n        ></portainer-tooltip>\n      </label>\n      <span ng-if="$ctrl.isAdmin && $ctrl.availableTeams.length === 0" class="small text-muted" style="margin-left: 20px;">\n        You have not yet created any teams. Head over to the <a ui-sref="portainer.teams">Teams view</a> to manage teams.\n      </span>\n      <span\n        isteven-multi-select\n        ng-if="($ctrl.isAdmin && $ctrl.availableTeams.length > 0) || (!$ctrl.isAdmin && $ctrl.availableTeams.length > 1)"\n        input-model="$ctrl.availableTeams"\n        output-model="$ctrl.formData.AuthorizedTeams"\n        button-label="Name"\n        item-label="Name"\n        tick-property="selected"\n        helper-elements="filter"\n        search-property="Name"\n        translation="{nothingSelected: \'Select one or more teams\', search: \'Search...\'}"\n        style="margin-left: 20px;"\n      >\n      </span>\n    </div>\n  </div>\n  \x3c!-- !authorized-teams --\x3e\n  \x3c!-- authorized-users --\x3e\n  <div class="form-group" ng-if="$ctrl.formData.AccessControlEnabled && $ctrl.formData.Ownership === $ctrl.RCO.RESTRICTED && $ctrl.isAdmin">\n    <div class="col-sm-12">\n      <label for="group-access" class="control-label text-left">\n        Authorized users\n        <portainer-tooltip\n          ng-if="$ctrl.isAdmin && $ctrl.availableUsers.length > 0"\n          position="bottom"\n          message="You can select which user(s) will be able to manage this resource."\n        ></portainer-tooltip>\n      </label>\n      <span ng-if="$ctrl.availableUsers.length === 0" class="small text-muted" style="margin-left: 20px;">\n        You have not yet created any users. Head over to the <a ui-sref="portainer.users">Users view</a> to manage users.\n      </span>\n      <span\n        isteven-multi-select\n        ng-if="$ctrl.availableUsers.length > 0"\n        input-model="$ctrl.availableUsers"\n        output-model="$ctrl.formData.AuthorizedUsers"\n        button-label="Username"\n        item-label="Username"\n        tick-property="selected"\n        helper-elements="filter"\n        search-property="Username"\n        translation="{nothingSelected: \'Select one or more users\', search: \'Search...\'}"\n        style="margin-left: 20px;"\n      >\n      </span>\n    </div>\n  </div>\n  \x3c!-- !authorized-users --\x3e\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(31),r=n(2),i=n(7);angular.module("portainer.app").controller("porAccessControlFormController",["$q","UserService","TeamService","Notifications","Authentication","ResourceControlService",function(e,t,n,o,s,l){var c,d=this;d.RCO=i.ResourceControlOwnership,d.availableTeams=[],d.availableUsers=[],c=s.isAdmin(),d.isAdmin=c,c&&(d.formData.Ownership=d.RCO.ADMINISTRATORS),e.all({availableTeams:n.teams(),availableUsers:c?t.users(!1):[]}).then((function(t){d.availableUsers=Object(a.a)(t.availableUsers,"Username","asc");var n=Object(a.a)(t.availableTeams,"Name","asc");return d.availableTeams=n,c||1!==n.length||(d.formData.AuthorizedTeams=n),e.when(d.resourceControl&&l.retrieveOwnershipDetails(d.resourceControl))})).then((function(e){if(e){var t=e.authorizedUsers,n=e.authorizedTeams;!function(e,t){t&&e.Ownership===i.ResourceControlOwnership.PRIVATE?d.formData.Ownership=i.ResourceControlOwnership.RESTRICTED:d.formData.Ownership=e.Ownership}(d.resourceControl,c),function(e,t){angular.forEach(d.availableUsers,(function(t){Object(r.a)(e,{Id:t.Id})&&(t.selected=!0)})),angular.forEach(d.availableTeams,(function(e){Object(r.a)(t,{Id:e.Id})&&(e.selected=!0)}))}(t,n)}})).catch((function(e){o.error("Failure",e,"Unable to retrieve access control information")}))}])},function(e,t,n){var a=n(1171);angular.module("portainer.app").component("porAccessControlPanel",{templateUrl:a,controller:"porAccessControlPanelController",bindings:{resourceId:"<",resourceControl:"=",resourceType:"<",disableOwnershipChange:"<"}})},function(e,t){var n="app/portainer/components/accessControlPanel/porAccessControlPanel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-sm-12" ng-if="$ctrl.state.displayAccessControlPanel">\n    <rd-widget>\n      <rd-widget-header icon="fa-eye" title-text="Access control"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            \x3c!-- ownership --\x3e\n            <tr>\n              <td>Ownership</td>\n              <td>\n                <i ng-class="$ctrl.resourceControl.Ownership | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                <span ng-if="!$ctrl.resourceControl">\n                  administrators\n                  <portainer-tooltip message="This resource can only be managed by administrators." position="bottom" style="margin-left: -3px;"></portainer-tooltip>\n                </span>\n                <span ng-if="$ctrl.resourceControl">\n                  {{ $ctrl.resourceControl.Ownership }}\n                  <portainer-tooltip\n                    ng-if="$ctrl.resourceControl.Ownership === $ctrl.RCO.PUBLIC"\n                    message="This resource can be managed by any user with access to this endpoint."\n                    position="bottom"\n                    style="margin-left: -3px;"\n                  ></portainer-tooltip>\n                  <portainer-tooltip\n                    ng-if="$ctrl.resourceControl.Ownership === $ctrl.RCO.PRIVATE"\n                    message="Management of this resource is restricted to a single user."\n                    position="bottom"\n                    style="margin-left: -3px;"\n                  ></portainer-tooltip>\n                  <portainer-tooltip\n                    ng-if="$ctrl.resourceControl.Ownership === $ctrl.RCO.RESTRICTED"\n                    message="This resource can be managed by a restricted set of users and/or teams."\n                    position="bottom"\n                    style="margin-left: -3px;"\n                  ></portainer-tooltip>\n                </span>\n              </td>\n            </tr>\n            \x3c!-- !ownership --\x3e\n            <tr ng-if="$ctrl.resourceControl.Type === $ctrl.RCTI.SERVICE && $ctrl.resourceType === $ctrl.RCTS.CONTAINER">\n              <td colspan="2">\n                <i class="fa fa-info-circle" aria-hidden="true" style="margin-right: 2px;"></i>\n                Access control on this resource is inherited from the following service:\n                <a ui-sref="docker.services.service({ id: $ctrl.resourceControl.ResourceId })">{{ $ctrl.resourceControl.ResourceId | truncate }}</a>\n                <portainer-tooltip\n                  message="Access control applied on a service is also applied on each container of that service."\n                  position="bottom"\n                  style="margin-left: 2px;"\n                ></portainer-tooltip>\n              </td>\n            </tr>\n            <tr ng-if="$ctrl.resourceControl.Type === $ctrl.RCTI.CONTAINER && $ctrl.resourceType === $ctrl.RCTS.VOLUME">\n              <td colspan="2">\n                <i class="fa fa-info-circle" aria-hidden="true" style="margin-right: 2px;"></i>\n                Access control on this resource is inherited from the following container:\n                <a ui-sref="docker.containers.container({ id: $ctrl.resourceControl.ResourceId })">{{ $ctrl.resourceControl.ResourceId | truncate }}</a>\n                <portainer-tooltip\n                  message="Access control applied on a container created using a template is also applied on each volume associated to the container."\n                  position="bottom"\n                  style="margin-left: 2px;"\n                ></portainer-tooltip>\n              </td>\n            </tr>\n            <tr ng-if="$ctrl.resourceControl.Type === $ctrl.RCTI.STACK && $ctrl.resourceType !== $ctrl.RCTS.STACK">\n              <td colspan="2">\n                <i class="fa fa-info-circle" aria-hidden="true" style="margin-right: 2px;"></i>\n                Access control on this resource is inherited from the following stack: {{ $ctrl.resourceControl.ResourceId }}\n                <portainer-tooltip\n                  message="Access control applied on a stack is also applied on each resource in the stack."\n                  position="bottom"\n                  style="margin-left: 2px;"\n                ></portainer-tooltip>\n              </td>\n            </tr>\n            \x3c!-- authorized-users --\x3e\n            <tr ng-if="$ctrl.resourceControl.UserAccesses.length > 0">\n              <td>Authorized users</td>\n              <td>\n                <span ng-repeat="user in $ctrl.authorizedUsers">{{ user.Username }}{{ $last ? \'\' : \', \' }} </span>\n              </td>\n            </tr>\n            \x3c!-- !authorized-users --\x3e\n            \x3c!-- authorized-teams --\x3e\n            <tr ng-if="$ctrl.resourceControl.TeamAccesses.length > 0">\n              <td>Authorized teams</td>\n              <td>\n                <span ng-repeat="team in $ctrl.authorizedTeams">{{ team.Name }}{{ $last ? \'\' : \', \' }} </span>\n              </td>\n            </tr>\n            \x3c!-- !authorized-teams --\x3e\n            \x3c!-- edit-ownership --\x3e\n            <tr ng-if="$ctrl.canEditOwnership();">\n              <td colspan="2">\n                <a ng-click="$ctrl.state.editOwnership = true"><i class="fa fa-edit space-right" aria-hidden="true"></i>Change ownership</a>\n              </td>\n            </tr>\n            \x3c!-- !edit-ownership --\x3e\n            \x3c!-- edit-ownership-choices --\x3e\n            <tr ng-if="$ctrl.state.editOwnership">\n              <td colspan="2" style="white-space: inherit;">\n                <div class="boxselector_wrapper">\n                  <div ng-if="$ctrl.isAdmin">\n                    <input type="radio" id="access_administrators" ng-model="$ctrl.formValues.Ownership" ng-value="$ctrl.RCO.ADMINISTRATORS" />\n                    <label for="access_administrators">\n                      <div class="boxselector_header">\n                        <i ng-class="\'administrators\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Administrators\n                      </div>\n                      <p>I want to restrict the management of this resource to administrators only</p>\n                    </label>\n                  </div>\n                  <div ng-if="$ctrl.isAdmin">\n                    <input type="radio" id="access_restricted" ng-model="$ctrl.formValues.Ownership" ng-value="$ctrl.RCO.RESTRICTED" />\n                    <label for="access_restricted">\n                      <div class="boxselector_header">\n                        <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Restricted\n                      </div>\n                      <p>\n                        I want to restrict the management of this resource to a set of users and/or teams\n                      </p>\n                    </label>\n                  </div>\n                  <div ng-if="!$ctrl.isAdmin && $ctrl.state.canChangeOwnershipToTeam && $ctrl.availableTeams.length > 0">\n                    <input type="radio" id="access_restricted" ng-model="$ctrl.formValues.Ownership" ng-value="$ctrl.RCO.RESTRICTED" />\n                    <label for="access_restricted">\n                      <div class="boxselector_header">\n                        <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Restricted\n                      </div>\n                      <p ng-if="$ctrl.availableTeams.length === 1">\n                        I want any member of my team (<b>{{ $ctrl.availableTeams[0].Name }}</b\n                        >) to be able to manage this resource\n                      </p>\n                      <p ng-if="$ctrl.availableTeams.length > 1">\n                        I want to restrict the management of this resource to one or more of my teams\n                      </p>\n                    </label>\n                  </div>\n                  <div>\n                    <input type="radio" id="access_public" ng-model="$ctrl.formValues.Ownership" ng-value="$ctrl.RCO.PUBLIC" />\n                    <label for="access_public">\n                      <div class="boxselector_header">\n                        <i ng-class="\'public\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Public\n                      </div>\n                      <p>I want any user with access to this endpoint to be able to manage this resource</p>\n                    </label>\n                  </div>\n                </div>\n              </td>\n            </tr>\n            \x3c!-- edit-ownership-choices --\x3e\n            \x3c!-- select-teams --\x3e\n            <tr ng-if="$ctrl.state.editOwnership && $ctrl.formValues.Ownership === $ctrl.RCO.RESTRICTED && ($ctrl.isAdmin || (!$ctrl.isAdmin && $ctrl.availableTeams.length > 1))">\n              <td colspan="2">\n                <span>Teams</span>\n                <span ng-if="$ctrl.isAdmin && $ctrl.availableTeams.length === 0" class="small text-muted" style="margin-left: 10px;">\n                  You have not yet created any teams. Head over to the <a ui-sref="portainer.teams">Teams view</a> to manage teams.\n                </span>\n                <span\n                  isteven-multi-select\n                  ng-if="($ctrl.isAdmin && $ctrl.availableTeams.length > 0) || (!$ctrl.isAdmin && $ctrl.availableTeams.length > 1)"\n                  input-model="$ctrl.availableTeams"\n                  output-model="$ctrl.formValues.Ownership_Teams"\n                  button-label="Name"\n                  item-label="Name"\n                  tick-property="selected"\n                  helper-elements="filter"\n                  search-property="Name"\n                  max-labels="3"\n                  translation="{nothingSelected: \'Select one or more teams\', search: \'Search...\'}"\n                >\n                </span>\n              </td>\n            </tr>\n            \x3c!-- !select-teams --\x3e\n            \x3c!-- select-users --\x3e\n            <tr ng-if="$ctrl.isAdmin && $ctrl.state.editOwnership && $ctrl.formValues.Ownership === $ctrl.RCO.RESTRICTED">\n              <td colspan="2">\n                <span>Users</span>\n                <span ng-if="$ctrl.availableUsers.length === 0" class="small text-muted" style="margin-left: 10px;">\n                  You have not yet created any users. Head over to the <a ui-sref="portainer.users">Users view</a> to manage users.\n                </span>\n                <span\n                  isteven-multi-select\n                  ng-if="$ctrl.availableUsers.length > 0"\n                  input-model="$ctrl.availableUsers"\n                  output-model="$ctrl.formValues.Ownership_Users"\n                  button-label="Username"\n                  item-label="Username"\n                  tick-property="selected"\n                  helper-elements="filter"\n                  search-property="Username"\n                  max-labels="3"\n                  translation="{nothingSelected: \'Select one or more users\', search: \'Search...\'}"\n                >\n                </span>\n              </td>\n            </tr>\n            \x3c!-- !select-users --\x3e\n            \x3c!-- ownership-actions --\x3e\n            <tr ng-if="$ctrl.state.editOwnership">\n              <td colspan="2">\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.state.editOwnership = false">Cancel</a>\n                  <a type="button" class="btn btn-primary btn-sm" ng-click="$ctrl.confirmUpdateOwnership()">Update ownership</a>\n                  <span class="text-danger" ng-if="$ctrl.state.formValidationError" style="margin-left: 5px;">{{ $ctrl.state.formValidationError }}</span>\n                </div>\n              </td>\n            </tr>\n            \x3c!-- !ownership-actions --\x3e\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(31),i=n(7),o=n(72),s=n(309);angular.module("portainer.app").controller("porAccessControlPanelController",["$q","$state","UserService","TeamService","ResourceControlHelper","ResourceControlService","Notifications","Authentication","ModalService","FormValidator",function(e,t,n,l,c,d,u,p,m,g){var f=this;f.RCO=i.ResourceControlOwnership,f.RCTS=o.ResourceControlTypeString,f.RCTI=o.ResourceControlTypeInt,f.state={displayAccessControlPanel:!1,canEditOwnership:!1,editOwnership:!1,formValidationError:""},f.formValues=new s.AccessControlPanelData,f.authorizedUsers=[],f.availableUsers=[],f.authorizedTeams=[],f.availableTeams=[],f.canEditOwnership=function(){var e=f.resourceControl,t=e&&f.resourceControl.Type===o.ResourceControlTypeInt.CONTAINER&&f.resourceType===o.ResourceControlTypeString.VOLUME,n=e&&f.resourceControl.Type===o.ResourceControlTypeInt.SERVICE&&f.resourceType===o.ResourceControlTypeString.CONTAINER,a=e&&f.resourceControl.Type===o.ResourceControlTypeInt.STACK&&f.resourceType!==o.ResourceControlTypeString.STACK,r=f.disableOwnershipChange;return!t&&!n&&!a&&!r&&!f.state.editOwnership&&(f.isAdmin||f.state.canEditOwnership)},f.confirmUpdateOwnership=function(){(function(){f.state.formValidationError="";var e,t={AccessControlEnabled:f.formValues.Ownership!==i.ResourceControlOwnership.PUBLIC,Ownership:f.formValues.Ownership,AuthorizedUsers:f.formValues.Ownership_Users,AuthorizedTeams:f.formValues.Ownership_Teams},n=f.isAdmin;if(e=g.validateAccessControl(t,n))return f.state.formValidationError=e,!1;return!0})()&&m.confirmAccessControlUpdate((function(e){e&&d.applyResourceControlChange(f.resourceType,f.resourceId,f.resourceControl,f.formValues).then((function(){u.success("Access control successfully updated"),t.reload()})).catch((function(e){u.error("Failure",e,"Unable to update access control")}))}))},function(){var t=p.getUserDetails(),o=p.isAdmin(),s=t.ID;f.isAdmin=o;var c=f.resourceControl;f.formValues.Ownership=o&&c?c.Ownership===i.ResourceControlOwnership.PRIVATE?i.ResourceControlOwnership.RESTRICTED:c.Ownership:i.ResourceControlOwnership.ADMINISTRATORS,d.retrieveOwnershipDetails(c).then((function(e){return f.authorizedUsers=e.authorizedUsers,f.authorizedTeams=e.authorizedTeams,d.retrieveUserPermissionsOnResource(s,o,c)})).then((function(t){return f.state.canEditOwnership=t.isPartOfRestrictedUsers||t.isLeaderOfAnyRestrictedTeams,f.state.canChangeOwnershipToTeam=t.isPartOfRestrictedUsers,e.all({availableUsers:o?n.users(!1):[],availableTeams:o||t.isPartOfRestrictedUsers?l.teams():[]})})).then((function(e){f.availableUsers=Object(r.a)(e.availableUsers,"Username","asc"),angular.forEach(f.availableUsers,(function(e){Object(a.a)(f.authorizedUsers,{Id:e.Id})&&(e.selected=!0)})),f.availableTeams=Object(r.a)(e.availableTeams,"Name","asc"),angular.forEach(e.availableTeams,(function(e){Object(a.a)(f.authorizedTeams,{Id:e.Id})&&(e.selected=!0)})),1===e.availableTeams.length&&f.formValues.Ownership_Teams.push(e.availableTeams[0]),f.state.displayAccessControlPanel=!0})).catch((function(e){u.error("Failure",e,"Unable to retrieve access control information")}))}()}])},function(e,t,n){var a=n(1174);angular.module("portainer.app").component("porAccessManagement",{templateUrl:a,controller:"porAccessManagementController",controllerAs:"ctrl",bindings:{accessControlledEntity:"<",inheritFrom:"<",entityType:"@",updateAccess:"<",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/accessManagement/porAccessManagement.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-sm-12">\n    <rd-widget ng-if="ctrl.availableUsersAndTeams && ctrl.accessControlledEntity">\n      <rd-widget-header icon="fa-user-lock" title-text="Create access"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <label class="col-sm-3 col-lg-2 control-label text-left">\n              Select user(s) and/or team(s)\n            </label>\n            <div class="col-sm-9 col-lg-4">\n              <span class="small text-muted" ng-if="ctrl.availableUsersAndTeams.length === 0">\n                No users or teams available.\n              </span>\n              <span\n                isteven-multi-select\n                ng-if="ctrl.availableUsersAndTeams.length > 0"\n                input-model="ctrl.availableUsersAndTeams"\n                output-model="ctrl.formValues.multiselectOutput"\n                button-label="icon \'-\' Name"\n                item-label="icon \'-\' Name"\n                tick-property="ticked"\n                helper-elements="filter"\n                search-property="Name"\n                translation="{nothingSelected: \'Select one or more users and/or teams\', search: \'Search...\'}"\n              >\n              </span>\n            </div>\n          </div>\n\n          <div class="form-group" ng-if="ctrl.entityType !== \'registry\'">\n            <label class="col-sm-3 col-lg-2 control-label text-left">\n              Role\n            </label>\n            <div class="col-sm-9 col-lg-4">\n              <select ng-if="ctrl.rbacEnabled" class="form-control" ng-model="ctrl.formValues.selectedRole" ng-options="role.Name for role in ctrl.roles"> </select>\n              <span class="small text-muted" ng-if="!ctrl.rbacEnabled">\n                The <a ui-sref="portainer.extensions.extension({id: 3})">Role-Based Access Control extension</a> is required to select a specific role.\n              </span>\n            </div>\n          </div>\n\n          \x3c!-- actions --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button\n                type="submit"\n                class="btn btn-primary btn-sm"\n                ng-disabled="(ctrl.availableUsersAndTeams | filter:{ticked:true}).length === 0 || ctrl.actionInProgress"\n                ng-click="ctrl.authorizeAccess()"\n                button-spinner="ctrl.actionInProgress"\n              >\n                <span ng-hide="ctrl.state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> Create access</span>\n                <span ng-show="ctrl.state.actionInProgress">Creating access...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n<div class="row">\n  <div class="col-sm-12">\n    <access-datatable\n      ng-if="ctrl.authorizedUsersAndTeams"\n      title-text="Access"\n      title-icon="fa-user-lock"\n      table-key="{{ \'access_\' + ctrl.entityType }}"\n      order-by="Name"\n      rbac-enabled="ctrl.rbacEnabled && ctrl.entityType !== \'registry\'"\n      inherit-from="ctrl.inheritFrom"\n      dataset="ctrl.authorizedUsersAndTeams"\n      roles="ctrl.roles"\n      update-action="ctrl.updateAction"\n      remove-action="ctrl.unauthorizeAccess"\n    >\n    </access-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(31),r=n(9),i=n(5),o=n(1),s=n.n(o);function l(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(t,n,a,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.Notifications=t,this.ExtensionService=n,this.AccessService=a,this.RoleService=r,this.unauthorizeAccess=this.unauthorizeAccess.bind(this),this.updateAction=this.updateAction.bind(this)}var t,n,o,s,d;return e.$inject=["Notifications","ExtensionService","AccessService","RoleService"],t=e,(n=[{key:"updateAction",value:function(){var e=this.accessControlledEntity,t=e.UserAccessPolicies,n=e.TeamAccessPolicies,a=Object(i.a)(this.authorizedUsersAndTeams,{Updated:!0,Type:"user",Inherited:!1}),r=Object(i.a)(this.authorizedUsersAndTeams,{Updated:!0,Type:"team",Inherited:!1}),o=this.AccessService.generateAccessPolicies(t,n,a,r);this.accessControlledEntity.UserAccessPolicies=o.userAccessPolicies,this.accessControlledEntity.TeamAccessPolicies=o.teamAccessPolicies,this.updateAccess()}},{key:"authorizeAccess",value:function(){var e=this.accessControlledEntity,t=e.UserAccessPolicies,n=e.TeamAccessPolicies,a=this.rbacEnabled?this.formValues.selectedRole.Id:0,r=Object(i.a)(this.formValues.multiselectOutput,(function(e){return"user"===e.Type})),o=Object(i.a)(this.formValues.multiselectOutput,(function(e){return"team"===e.Type})),s=this.AccessService.generateAccessPolicies(t,n,r,o,a);this.accessControlledEntity.UserAccessPolicies=s.userAccessPolicies,this.accessControlledEntity.TeamAccessPolicies=s.teamAccessPolicies,this.updateAccess()}},{key:"unauthorizeAccess",value:function(e){var t=this.accessControlledEntity,n=t.UserAccessPolicies,a=t.TeamAccessPolicies,o=Object(i.a)(e,(function(e){return"user"===e.Type})),s=Object(i.a)(e,(function(e){return"team"===e.Type}));Object(r.a)(o,(function(e){return delete n[e.Id]})),Object(r.a)(s,(function(e){return delete a[e.Id]})),this.updateAccess()}},{key:"$onInit",value:(s=regeneratorRuntime.mark((function e(){var t,n,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=this.accessControlledEntity){e.next=4;break}return this.Notifications.error("Failure","Unable to retrieve accesses"),e.abrupt("return");case 4:return t.UserAccessPolicies||(t.UserAccessPolicies={}),t.TeamAccessPolicies||(t.TeamAccessPolicies={}),(n=this.inheritFrom)&&!n.UserAccessPolicies&&(n.UserAccessPolicies={}),n&&!n.TeamAccessPolicies&&(n.TeamAccessPolicies={}),this.roles=[],this.rbacEnabled=!1,e.prev=11,e.next=14,this.ExtensionService.extensionEnabled(this.ExtensionService.EXTENSIONS.RBAC);case 14:if(this.rbacEnabled=e.sent,!this.rbacEnabled){e.next=20;break}return e.next=18,this.RoleService.roles();case 18:this.roles=e.sent,this.formValues={selectedRole:this.roles[0]};case 20:return e.next=22,this.AccessService.accesses(t.UserAccessPolicies,t.TeamAccessPolicies,n?n.UserAccessPolicies:{},n?n.TeamAccessPolicies:{},this.roles);case 22:r=e.sent,this.availableUsersAndTeams=Object(a.a)(r.availableUsersAndTeams,"Name","asc"),this.authorizedUsersAndTeams=r.authorizedUsersAndTeams,e.next=32;break;case 27:e.prev=27,e.t0=e.catch(11),this.availableUsersAndTeams=[],this.authorizedUsersAndTeams=[],this.Notifications.error("Failure",e.t0,"Unable to retrieve accesses");case 32:case"end":return e.stop()}}),e,this,[[11,27]])})),d=function(){var e=this,t=arguments;return new Promise((function(n,a){var r=s.apply(e,t);function i(e){l(r,n,a,i,o,"next",e)}function o(e){l(r,n,a,i,o,"throw",e)}i(void 0)}))},function(){return d.apply(this,arguments)})}])&&c(t.prototype,n),o&&c(t,o),e}();t.default=d,s.a.module("portainer.app").controller("porAccessManagementController",d)},function(e,t){angular.module("portainer.app").directive("autoFocus",["$timeout",function(e){return{restrict:"A",link:function(t,n){e((function(){n[0].focus()}))}}}])},function(e,t){angular.module("portainer.app").directive("buttonSpinner",(function(){return{restrict:"A",scope:{spinning:"=buttonSpinner"},transclude:!0,template:'<ng-transclude></ng-transclude><span ng-show="spinning"><i class="fa fa-circle-notch fa-spin" style="margin-left: 2px;"></i>&nbsp;</span>'}}))},function(e,t,n){var a=n(1179);angular.module("portainer.app").component("codeEditor",{templateUrl:a,controller:"CodeEditorController",bindings:{identifier:"@",placeholder:"@",yml:"<",readOnly:"<",onChange:"<",value:"<"}})},function(e,t){var n="app/portainer/components/code-editor/codeEditor.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<textarea id="{{ $ctrl.identifier }}" class="form-control" placeholder="{{ $ctrl.placeholder }}"></textarea>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("CodeEditorController",["$document","CodeMirrorService","$scope",function(e,t,n){var a=this;this.$onInit=function(){e.ready((function(){var r=e[0].getElementById(a.identifier);a.editor=t.applyCodeMirrorOnElement(r,a.yml,a.readOnly),a.onChange&&a.editor.on("change",(function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return n.$apply((function(){return a.onChange.apply(a,t)}))})),a.value&&a.editor.setValue(a.value)}))}}])},function(e,t,n){var a=n(1182);angular.module("portainer.app").component("endpointsDatatable",{templateUrl:a,controller:"EndpointsDatatableController",bindings:{titleText:"@",titleIcon:"@",tableKey:"@",orderBy:"@",reverseOrder:"<",endpointManagement:"<",accessManagement:"<",removeAction:"<",retrievePage:"<"}})},function(e,t){var n="app/portainer/components/datatables/endpoints-datatable/endpointsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar" ng-if="$ctrl.endpointManagement">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.endpoints.new"> <i class="fa fa-plus space-right" aria-hidden="true"></i>Add endpoint </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          auto-focus\n          placeholder="Search..."\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" ng-if="$ctrl.endpointManagement">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n                  Type\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'URL\')">\n                  URL\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'URL\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'URL\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'GroupName\')">\n                  Group\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'GroupName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'GroupName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in $ctrl.state.filteredDataSet | itemsPerPage: $ctrl.state.paginatedItemLimit"\n              total-items="$ctrl.state.totalFilteredDataSet"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox" ng-if="$ctrl.endpointManagement">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.endpoints.endpoint({id: item.Id})" ng-if="$ctrl.endpointManagement">{{ item.Name }}</a>\n                <span ng-if="!$ctrl.endpointManagement">{{ item.Name }}</span>\n              </td>\n              <td>\n                <span>\n                  <i ng-class="item.Type | endpointtypeicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                  {{ item.Type | endpointtypename }}\n                </span>\n              </td>\n              <td>{{ item.URL | stripprotocol }}</td>\n              <td>{{ item.GroupName }}</td>\n              <td>\n                <a ui-sref="portainer.endpoints.endpoint.access({id: item.Id})" ng-if="$ctrl.accessManagement"> <i class="fa fa-users" aria-hidden="true"></i> Manage access </a>\n              </td>\n            </tr>\n            <tr ng-if="$ctrl.state.loading">\n              <td colspan="5" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="!$ctrl.state.loading && $ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">No endpoint available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="!$ctrl.state.loading">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5" on-page-change="$ctrl.onPageChange(newPageNumber, oldPageNumber)"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("EndpointsDatatableController",["$scope","$controller","DatatableService","PaginationService",function(e,t,n,a){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.state=Object.assign(this.state,{orderBy:this.orderBy,loading:!0,filteredDataSet:[],totalFilteredDataset:0,pageNumber:1}),this.paginationChanged=function(){var e=this;this.state.loading=!0,this.state.filteredDataSet=[];var t=(this.state.pageNumber-1)*this.state.paginatedItemLimit+1;this.retrievePage(t,this.state.paginatedItemLimit,this.state.textFilter).then((function(t){e.state.filteredDataSet=t.endpoints,e.state.totalFilteredDataSet=t.totalCount})).finally((function(){e.state.loading=!1}))},this.onPageChange=function(e){this.state.pageNumber=e,this.paginationChanged()},this.onTextFilterChange=function(){var e=this.state.textFilter;n.setDataTableTextFilters(this.tableKey,e),this.paginationChanged()},this.changePaginationLimit=function(){a.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit),this.paginationChanged()},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset();var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters&&this.filters.state&&(this.filters.state.open=!1),this.paginationChanged()}}])},function(e,t,n){"use strict";n.r(t),function(e){var t=n(9),a=n(5),r=n(4),i=(n(1185),n(7));angular.module("portainer.app").controller("GenericDatatableController",["$interval","PaginationService","DatatableService","PAGINATION_MAX_ITEMS",function(n,o,s,l){this.RCO=i.ResourceControlOwnership,this.state={selectAll:!1,orderBy:this.orderBy,paginatedItemLimit:l,displayTextFilter:!1,get selectedItemCount(){return this.selectedItems.length||0},selectedItems:[]},this.settings={open:!1,repeater:{autoRefresh:!1,refreshRate:"30"}},this.resetSelectionState=function(){this.state.selectAll=!1,this.state.selectedItems=[],Object(r.a)(this.state.filteredDataSet,(function(e){return e.Checked=!1}))},this.onTextFilterChange=function(){s.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e,s.setDataTableOrder(this.tableKey,e,this.state.reverseOrder)},this.selectItem=function(e,n){var r=this;if(n&&n.originalEvent.shiftKey&&this.state.firstClickedItem){var i=this.state.filteredDataSet.indexOf(this.state.firstClickedItem),o=this.state.filteredDataSet.indexOf(e),s=Object(a.a)(this.state.filteredDataSet,(function(e,t){return function(e,t,n){return e>=t&&e<=n||e>=n&&e<=t}(t,i,o)})),l=e.Checked;Object(t.a)(s,(function(e){r.allowSelection(e)&&(e.Checked=l)})),this.state.firstClickedItem=e}else n&&(this.state.firstClickedItem=e);this.state.selectedItems=this.state.filteredDataSet.filter((function(e){return e.Checked})),n&&this.state.selectAll&&this.state.selectedItems.length!==this.state.filteredDataSet.length&&(this.state.selectAll=!1),this.onSelectionChanged()},this.selectAll=function(){this.state.firstClickedItem=null;for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];this.allowSelection(t)&&t.Checked!==this.state.selectAll&&(t.Checked=this.state.selectAll,this.selectItem(t))}this.onSelectionChanged()},this.allowSelection=function(){return!0},this.prepareTableFromDataset=function(){},this.onSelectionChanged=function(){},this.changePaginationLimit=function(){o.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit)},this.setDefaults=function(){this.showTextFilter=!!this.showTextFilter&&this.showTextFilter,this.state.reverseOrder=!!this.reverseOrder&&this.reverseOrder,this.state.paginatedItemLimit=o.getPaginationLimit(this.tableKey)},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=s.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=s.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var n=s.getDataTableFilters(this.tableKey);null!==n&&(this.filters=n),this.filters&&this.filters.state&&(this.filters.state.open=!1);var a=s.getDataTableSettings(this.tableKey);null!==a&&(this.settings=a,this.settings.open=!1),this.onSettingsRepeaterChange()},this.repeater=void 0,this.$onDestroy=function(){this.stopRepeater()},this.stopRepeater=function(){angular.isDefined(this.repeater)&&(n.cancel(this.repeater),this.repeater=void 0)},this.startRepeater=function(){var e=this;this.repeater=n((function(){e.refreshCallback()}),1e3*this.settings.repeater.refreshRate)},this.onSettingsRepeaterChange=function(){this.stopRepeater(),angular.isDefined(this.refreshCallback)&&this.settings.repeater.autoRefresh&&(this.startRepeater(),e("#refreshRateChange").show(),e("#refreshRateChange").fadeOut(1500)),s.setDataTableSettings(this.tableKey,this.settings)}}])}.call(this,n(19))},function(e,t,n){},function(e,t,n){var a=n(1187);angular.module("portainer.app").component("groupsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",accessManagement:"<",removeAction:"<"}})},function(e,t){var n="app/portainer/components/datatables/groups-datatable/groupsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.groups.new"> <i class="fa fa-plus space-right" aria-hidden="true"></i>Add group </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.groups.group({id: item.Id})">{{ item.Name }}</a>\n              </td>\n              <td>\n                <a ui-sref="portainer.groups.group.access({id: item.Id})" ng-if="$ctrl.accessManagement"> <i class="fa fa-users" aria-hidden="true"></i> Manage access </a>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">No group available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1189);angular.module("portainer.app").component("registriesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",accessManagement:"<",removeAction:"<",registryManagement:"<",canBrowse:"<"}})},function(e,t){var n="app/portainer/components/datatables/registries-datatable/registriesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar" ng-if="$ctrl.accessManagement">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.registries.new"> <i class="fa fa-plus space-right" aria-hidden="true"></i>Add registry </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" ng-if="$ctrl.accessManagement">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'URL\')">\n                  URL\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'URL\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'URL\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox" ng-if="$ctrl.accessManagement">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.registries.registry({id: item.Id})" ng-if="$ctrl.accessManagement">{{ item.Name }}</a>\n                <span ng-if="!$ctrl.accessManagement">{{ item.Name }}</span>\n                <span ng-if="item.Authentication" style="margin-left: 5px;" class="label label-info image-tag">authentication-enabled</span>\n              </td>\n              <td>\n                {{ item.URL }}\n              </td>\n              <td>\n                <a ui-sref="portainer.registries.registry.access({id: item.Id})" ng-if="$ctrl.accessManagement"> <i class="fa fa-users" aria-hidden="true"></i> Manage access </a>\n                <a ui-sref="portainer.registries.registry.repositories({id: item.Id})" ng-if="$ctrl.registryManagement && $ctrl.canBrowse(item)" class="space-left">\n                  <i class="fa fa-search" aria-hidden="true"></i> Browse\n                </a>\n                <a\n                  ui-sref="portainer.extensions.extension({id: 1})"\n                  ng-if="!$ctrl.registryManagement && $ctrl.canBrowse(item)"\n                  class="space-left"\n                  style="color: #767676;"\n                  tooltip-append-to-body="true"\n                  tooltip-placement="bottom"\n                  tooltip-class="portainer-tooltip"\n                  uib-tooltip="Feature available via an extension"\n                >\n                  <i class="fa fa-search" aria-hidden="true"></i> Browse (extension)\n                </a>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">No registry available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1191);angular.module("portainer.docker").component("scheduleTasksDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",goToContainerLogs:"<",getEdgeTaskLogs:"<"}})},function(e,t){var n="app/portainer/components/datatables/schedule-tasks-datatable/scheduleTasksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <div class="datatable">\n      <rd-widget>\n        <rd-widget-body classes="no-padding">\n          <div class="toolBar">\n            <div class="toolBarTitle">\n              <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i>\n              {{ $ctrl.titleText }}\n            </div>\n          </div>\n          <div class="searchBar">\n            <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n            <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" placeholder="Search..." auto-focus ng-model-options="{ debounce: 300 }" />\n          </div>\n          <div class="table-responsive">\n            <table class="table table-hover table-filters nowrap-cells">\n              <thead>\n                <tr>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Endpoint\')">\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Endpoint\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Endpoint\' && $ctrl.state.reverseOrder"></i>\n                      Endpoint\n                    </a>\n                  </th>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                      Id\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                    </a>\n                  </th>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                      State\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                    </a>\n                  </th>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Created\')">\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && $ctrl.state.reverseOrder"></i>\n                      Created\n                    </a>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n                >\n                  <td>\n                    {{ item.Endpoint.Name }}\n                    <a ng-if="item.Edge" ng-click="$ctrl.getEdgeTaskLogs(item.EndpointId, item.Id)"\n                      ><i class="fa fa-download" aria-hidden="true" style="margin-left: 5px; margin-right: 2px;"></i> Download logs</a\n                    >\n                  </td>\n                  <td>\n                    <a ng-if="!item.Edge" ng-click="$ctrl.goToContainerLogs(item.EndpointId, item.Id)">{{ item.Id | truncate: 32 }}</a>\n                    <span ng-if="item.Edge">-</span>\n                  </td>\n                  <td>\n                    <span ng-if="!item.Edge" class="label label-{{ item.Status | containerstatusbadge }}">{{ item.Status }}</span>\n                    <span ng-if="item.Edge">-</span>\n                  </td>\n                  <td>\n                    <span ng-if="!item.Edge">{{ item.Created | getisodatefromtimestamp }}</span>\n                    <span ng-if="item.Edge">-</span>\n                  </td>\n                </tr>\n                <tr ng-if="!$ctrl.dataset">\n                  <td colspan="9" class="text-center text-muted">Loading...</td>\n                </tr>\n                <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n                  <td colspan="9" class="text-center text-muted">No tasks available.</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class="footer" ng-if="$ctrl.dataset">\n            <div class="paginationControls">\n              <form class="form-inline">\n                <span class="limitSelector">\n                  <span style="margin-right: 5px;">\n                    Items per page\n                  </span>\n                  <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                    <option value="0">All</option>\n                    <option value="10">10</option>\n                    <option value="25">25</option>\n                    <option value="50">50</option>\n                    <option value="100">100</option>\n                  </select>\n                </span>\n                <dir-pagination-controls max-size="5"></dir-pagination-controls>\n              </form>\n            </div>\n          </div>\n        </rd-widget-body>\n      </rd-widget>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1193);angular.module("portainer.app").component("schedulesDatatable",{templateUrl:a,controller:"SchedulesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/portainer/components/datatables/schedules-datatable/schedulesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.schedules.new"> <i class="fa fa-plus space-right" aria-hidden="true"></i>Add schedule </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" placeholder="Search..." auto-focus ng-model-options="{ debounce: 300 }" />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CronExpression\')">\n                  Cron expression\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CronExpression\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CronExpression\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Created\')">\n                  Created\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" ng-disabled="!$ctrl.allowSelection(item)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <span ng-if="item.JobType !== 1">{{ item.Name }}</span>\n                <a ng-if="item.JobType === 1" ui-sref="portainer.schedules.schedule({id: item.Id})">{{ item.Name }}</a>\n              </td>\n              <td>\n                {{ item.CronExpression }}\n              </td>\n              <td>{{ item.Created | getisodatefromtimestamp }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">No schedule available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("SchedulesDatatableController",["$scope","$controller","DatatableService",function(e,t,n){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.allowSelection=function(e){return 1===e.JobType},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters&&this.filters.state&&(this.filters.state.open=!1);var r=n.getDataTableSettings(this.tableKey);null!==r&&(this.settings=r,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(1196);angular.module("portainer.app").component("stacksDatatable",{templateUrl:a,controller:"StacksDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",removeAction:"<",offlineMode:"<",refreshCallback:"<",createEnabled:"<"}})},function(e,t){var n="app/portainer/components/datatables/stacks-datatable/stacksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"><i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n        <div class="settings">\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle><i class="fa fa-cog" aria-hidden="true"></i> Settings</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  Table settings\n                </div>\n                <div class="menuContent">\n                  <div>\n                    <div class="md-checkbox">\n                      <input id="setting_auto_refresh" type="checkbox" ng-model="$ctrl.settings.repeater.autoRefresh" ng-change="$ctrl.onSettingsRepeaterChange()" />\n                      <label for="setting_auto_refresh">Auto refresh</label>\n                    </div>\n                    <div ng-if="$ctrl.settings.repeater.autoRefresh">\n                      <label for="settings_refresh_rate">\n                        Refresh rate\n                      </label>\n                      <select id="settings_refresh_rate" ng-model="$ctrl.settings.repeater.refreshRate" ng-change="$ctrl.onSettingsRepeaterChange()" class="small-select">\n                        <option value="10">10s</option>\n                        <option value="30">30s</option>\n                        <option value="60">1min</option>\n                        <option value="120">2min</option>\n                        <option value="300">5min</option>\n                      </select>\n                      <span>\n                        <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">Close</a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <div class="actionBar" ng-if="!$ctrl.offlineMode" authorization="PortainerStackCreate, PortainerStackDelete">\n        <button\n          type="button"\n          class="btn btn-sm btn-danger"\n          authorization="PortainerStackDelete"\n          ng-disabled="$ctrl.state.selectedItemCount === 0"\n          ng-click="$ctrl.removeAction($ctrl.state.selectedItems)"\n        >\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.stacks.newstack" ng-disabled="!$ctrl.createEnabled" authorization="PortainerStackCreate">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>Add stack\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="PortainerStackCreate, PortainerStackDelete">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n                  Type\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>Control</th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  Ownership\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="PortainerStackCreate, PortainerStackDelete">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" ng-disabled="!$ctrl.allowSelection(item)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ng-if="!$ctrl.offlineMode" ui-sref="portainer.stacks.stack({ name: item.Name, id: item.Id, type: item.Type, external: item.External })">{{ item.Name }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item.Name }}</span>\n              </td>\n              <td>{{ item.Type === 1 ? \'Swarm\' : \'Compose\' }}</td>\n              <td>\n                <span\n                  ng-if="item.External"\n                  class="interactive"\n                  tooltip-append-to-body="true"\n                  tooltip-placement="bottom"\n                  tooltip-class="portainer-tooltip"\n                  uib-tooltip="This stack was created outside of Portainer. Control over this stack is limited."\n                >\n                  Limited <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-left: 2px;"></i>\n                </span>\n                <span ng-if="!item.External">Total</span>\n              </td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = $ctrl.RCO.ADMINISTRATORS }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="4" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="4" class="text-center text-muted">No stack available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }}\n          item(s) selected\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("StacksDatatableController",["$scope","$controller","DatatableService","Authentication",function(e,t,n,a){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.allowSelection=function(e){return(!e.External||2!==e.Type)&&!(e.External&&!this.isAdmin&&!this.isEndpointAdmin)},this.$onInit=function(){this.isAdmin=a.isAdmin(),this.isEndpointAdmin=a.hasAuthorizations(["EndpointResourcesAccess"]),this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var r=n.getDataTableFilters(this.tableKey);null!==r&&(this.filters=r),this.filters&&this.filters.state&&(this.filters.state.open=!1);var i=n.getDataTableSettings(this.tableKey);null!==i&&(this.settings=i,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(1199);angular.module("portainer.app").component("tagsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/portainer/components/datatables/tags-datatable/tagsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                {{ item.Name }}\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="1" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="1" class="text-center text-muted">No tag available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1201);angular.module("portainer.app").component("teamsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/portainer/components/datatables/teams-datatable/teamsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.teams.team({id: item.Id})">{{ item.Name }}</a>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td class="text-center text-muted">No team available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1203);angular.module("portainer.app").component("usersDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<",authenticationMethod:"<"}})},function(e,t){var n="app/portainer/components/datatables/users-datatable/usersDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Username\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Username\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Username\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'RoleName\')">\n                  Role\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RoleName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RoleName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'AuthenticationMethod\')">\n                  Authentication\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'AuthenticationMethod\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'AuthenticationMethod\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.users.user({id: item.Id})">{{ item.Username }}</a>\n              </td>\n              <td>\n                <span>\n                  <i class="fa fa-user-circle" aria-hidden="true" style="margin-right: 5px;" ng-if="item.Role === 1 && !item.isTeamLeader"></i>\n                  <i class="fa fa-user-plus" aria-hidden="true" style="margin-right: 5px;" ng-if="item.Role !== 1 && item.isTeamLeader"></i>\n                  <i class="fa fa-user" aria-hidden="true" style="margin-right: 5px;" ng-if="item.Role !== 1 && !item.isTeamLeader"></i>\n                  {{ item.RoleName ? item.RoleName : \'-\' }}\n                </span>\n              </td>\n              <td>\n                <span ng-if="item.Id === 1 || ($ctrl.authenticationMethod !== 2 && $ctrl.authenticationMethod !== 3)">Internal</span>\n                <span ng-if="item.Id !== 1 && $ctrl.authenticationMethod === 2">LDAP</span>\n                <span ng-if="item.Id !== 1 && $ctrl.authenticationMethod === 3">OAuth</span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">No user available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),i=n(310),o=n(1252);r.a.module("portainer.app").component("endpointItem",{templateUrl:o,bindings:{model:"<",onSelect:"<",onEdit:"<",isAdmin:"<",tags:"<"},controller:i.default})},function(e,t,n){var a="app/portainer/components/endpoint-list/endpoint-item/endpointItem.html",r='<div class="blocklist-item" ng-click="$ctrl.onSelect($ctrl.model)">\n  <div class="blocklist-item-box">\n    <span ng-class="[\'blocklist-item-logo\', \'endpoint-item\', { azure: $ctrl.model.Type === 3 }]">\n      <i ng-if="$ctrl.model.Type !== 4" ng-class="$ctrl.model.Type | endpointtypeicon" class="fa-4x blue-icon" aria-hidden="true"></i>\n      <img ng-if="$ctrl.model.Type === 4" src="'+n(1253)+'" />\n    </span>\n\n    <span class="col-sm-12">\n      <div class="blocklist-item-line endpoint-item">\n        <span>\n          <span class="blocklist-item-title endpoint-item">\n            {{ $ctrl.model.Name }}\n          </span>\n          <span class="space-left blocklist-item-subtitle">\n            <span ng-if="$ctrl.model.Type === 4" class="small text-muted">\n              <span ng-if="$ctrl.model.EdgeID"><i class="fas fa-link"></i> associated</span>\n              <span ng-if="!$ctrl.model.EdgeID"><i class="fas fa-unlink"></i> <s>associated</s></span>\n            </span>\n            <span class="label label-{{ $ctrl.model.Status | endpointstatusbadge }}" ng-if="$ctrl.model.Type !== 4">\n              {{ $ctrl.model.Status === 1 ? \'up\' : \'down\' }}\n            </span>\n            <span class="space-left small text-muted" ng-if="$ctrl.model.Snapshots[0]">\n              {{ $ctrl.model.Snapshots[0].Time | getisodatefromtimestamp }}\n            </span>\n          </span>\n        </span>\n        <span>\n          <span class="small" ng-if="$ctrl.model.GroupName"> Group: {{ $ctrl.model.GroupName }} </span>\n          <button ng-if="$ctrl.isAdmin" class="btn btn-link btn-xs" ng-click="$ctrl.editEndpoint($event)"><i class="fa fa-pencil-alt"></i> </button>\n        </span>\n      </div>\n\n      <div class="blocklist-item-line endpoint-item" ng-if="$ctrl.model.Snapshots[0]">\n        <span class="blocklist-item-desc">\n          <span>\n            <span style="padding: 0 7px 0 0;">\n              <i class="fa fa-th-list space-right" aria-hidden="true"></i>{{ $ctrl.model.Snapshots[0].StackCount }}\n              {{ $ctrl.model.Snapshots[0].StackCount === 1 ? \'stack\' : \'stacks\' }}\n            </span>\n            <span style="padding: 0 7px 0 7px;" ng-if="$ctrl.model.Snapshots[0].Swarm">\n              <i class="fa fa-list-alt space-right" aria-hidden="true"></i>{{ $ctrl.model.Snapshots[0].ServiceCount }}\n              {{ $ctrl.model.Snapshots[0].ServiceCount === 1 ? \'service\' : \'services\' }}\n            </span>\n            <span style="padding: 0 7px 0 7px;">\n              <i class="fa fa-server space-right" aria-hidden="true"></i>{{ $ctrl.model.Snapshots[0].RunningContainerCount + $ctrl.model.Snapshots[0].StoppedContainerCount }}\n              {{ $ctrl.model.Snapshots[0].RunningContainerCount + $ctrl.model.Snapshots[0].StoppedContainerCount === 1 ? \'container\' : \'containers\' }}\n              <span ng-if="$ctrl.model.Snapshots[0].RunningContainerCount > 0 || $ctrl.model.Snapshots[0].StoppedContainerCount > 0">\n                -\n                <i class="fa fa-power-off green-icon" aria-hidden="true"></i> {{ $ctrl.model.Snapshots[0].RunningContainerCount }}\n                <i class="fa fa-power-off red-icon" aria-hidden="true"></i> {{ $ctrl.model.Snapshots[0].StoppedContainerCount }}\n                /\n                <i class="fa fa-heartbeat green-icon" aria-hidden="true"></i> {{ $ctrl.model.Snapshots[0].HealthyContainerCount }}\n                <i class="fa fa-heartbeat orange-icon" aria-hidden="true"></i> {{ $ctrl.model.Snapshots[0].UnhealthyContainerCount }}\n              </span>\n            </span>\n            <span style="padding: 0 7px 0 7px;">\n              <i class="fa fa-cubes space-right" aria-hidden="true"></i>{{ $ctrl.model.Snapshots[0].VolumeCount }}\n              {{ $ctrl.model.Snapshots[0].VolumeCount === 1 ? \'volume\' : \'volumes\' }}\n            </span>\n            <span style="padding: 0 7px 0 7px;">\n              <i class="fa fa-clone space-right" aria-hidden="true"></i>{{ $ctrl.model.Snapshots[0].ImageCount }}\n              {{ $ctrl.model.Snapshots[0].ImageCount === 1 ? \'image\' : \'images\' }}\n            </span>\n          </span>\n        </span>\n        <span class="small text-muted">\n          {{ $ctrl.model.Snapshots[0].Swarm ? \'Swarm\' : \'Standalone\' }} {{ $ctrl.model.Snapshots[0].DockerVersion }}\n          <span ng-if="$ctrl.model.Type === 2">+ <i class="fa fa-bolt" aria-hidden="true"></i> Agent</span>\n        </span>\n      </div>\n\n      <div class="blocklist-item-line endpoint-item" ng-if="!$ctrl.model.Snapshots[0]">\n        <span class="blocklist-item-desc">\n          No snapshot available\n        </span>\n      </div>\n\n      <div class="blocklist-item-line endpoint-item">\n        <span class="small text-muted">\n          <span ng-if="$ctrl.model.Type === 1">\n            <span class="small text-muted">\n              <i class="fa fa-microchip"></i> {{ $ctrl.model.Snapshots[0].TotalCPU }}<i class="fa fa-memory space-left"></i> {{ $ctrl.model.Snapshots[0].TotalMemory | humansize }}\n            </span>\n            <span class="space-left space-right">-</span>\n          </span>\n          <span ng-if="$ctrl.endpointTags.length === 0"> <i class="fa fa-tags" aria-hidden="true"></i> No tags </span>\n          <span ng-if="$ctrl.endpointTags.length > 0">\n            <i class="fa fa-tags" aria-hidden="true"></i>\n            {{ $ctrl.endpointTags }}\n          </span>\n        </span>\n        <span class="small text-muted" ng-if="$ctrl.model.Type !== 4">\n          {{ $ctrl.model.URL | stripprotocol }}\n        </span>\n      </div>\n    </span>\n  </div>\n</div>\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t,n){e.exports=n.p+"eb45a68ab4c8d154c69396d27d5721be.png"},function(e,t,n){"use strict";n.r(t);var a=n(250),r=n(6),i=n(419),o=n(5);angular.module("portainer.app").controller("EndpointListController",["DatatableService","PaginationService",function(e,t){this.state={totalFilteredEndpoints:this.totalCount,textFilter:"",filteredEndpoints:[],paginatedItemLimit:"10",pageNumber:1,loading:!0},this.$onChanges=function(e){this.handleEndpointsChange(e.endpoints)},this.handleEndpointsChange=function(e){e&&e.currentValue&&this.onTextFilterChange()},this.onTextFilterChange=function(){this.state.loading=!0;var t=this.state.textFilter;e.setDataTableTextFilters(this.tableKey,t),this.hasBackendPagination()?this.paginationChangedAction():(this.state.filteredEndpoints=function(e,t,n){if(!e||!e.length||!n)return e;var s=n.split(" ");return Object(o.a)(e,(function(e){var n=1===e.Status?"up":"down";return Object(i.a)(s,(function(i){var o=i.toLowerCase();return Object(r.a)(e.Name.toLowerCase(),o)||Object(r.a)(e.GroupName.toLowerCase(),o)||Object(r.a)(e.URL.toLowerCase(),o)||Object(a.a)(e.TagIds,(function(e){var n=t.find((function(t){return t.Id===e}));return!!n&&Object(r.a)(n.Name.toLowerCase(),o)}))||Object(r.a)(n,i)}))}))}(this.endpoints,this.tags,t),this.state.loading=!1)},this.hasBackendPagination=function(){return this.totalCount&&this.totalCount>100},this.paginationChangedAction=function(){var e=this;if(this.hasBackendPagination()){this.state.loading=!0,this.state.filteredEndpoints=[];var t=(this.state.pageNumber-1)*this.state.paginatedItemLimit+1;this.retrievePage(t,this.state.paginatedItemLimit,this.state.textFilter).then((function(t){e.state.filteredEndpoints=t.endpoints,e.state.totalFilteredEndpoints=t.totalCount,e.state.loading=!1}))}},this.pageChangeHandler=function(e){this.state.pageNumber=e,this.paginationChangedAction()},this.changePaginationLimit=function(){t.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit),this.paginationChangedAction()},this.$onInit=function(){var n=e.getDataTableTextFilters(this.tableKey);this.state.paginatedItemLimit=t.getPaginationLimit(this.tableKey),null!==n?this.state.textFilter=n:this.paginationChangedAction()}}])},function(e,t,n){var a=n(1256);angular.module("portainer.app").component("endpointList",{templateUrl:a,controller:"EndpointListController",bindings:{titleText:"@",titleIcon:"@",endpoints:"<",tags:"<",tableKey:"@",dashboardAction:"<",snapshotAction:"<",showSnapshotAction:"<",editAction:"<",isAdmin:"<",totalCount:"<",retrievePage:"<"}})},function(e,t){var n="app/portainer/components/endpoint-list/endpointList.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n\n      <div class="actionBar" ng-if="$ctrl.showSnapshotAction">\n        <button type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.snapshotAction()"> <i class="fa fa-sync space-right" aria-hidden="true"></i>Refresh </button>\n      </div>\n\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          ng-model-options="{ debounce: 300 }"\n          placeholder="Search by name, group, tag, status, URL..."\n          auto-focus\n        />\n      </div>\n\n      <div class="blocklist">\n        <endpoint-item\n          ng-if="$ctrl.hasBackendPagination()"\n          dir-paginate="endpoint in $ctrl.state.filteredEndpoints | itemsPerPage: $ctrl.state.paginatedItemLimit"\n          model="endpoint"\n          total-items="$ctrl.state.totalFilteredEndpoints"\n          on-select="($ctrl.dashboardAction)"\n          on-edit="($ctrl.editAction)"\n          is-admin="$ctrl.isAdmin"\n          tags="$ctrl.tags"\n        ></endpoint-item>\n        <endpoint-item\n          ng-if="!$ctrl.hasBackendPagination()"\n          dir-paginate="endpoint in $ctrl.state.filteredEndpoints | itemsPerPage: $ctrl.state.paginatedItemLimit"\n          model="endpoint"\n          on-select="($ctrl.dashboardAction)"\n          on-edit="($ctrl.editAction)"\n          is-admin="$ctrl.isAdmin"\n          tags="$ctrl.tags"\n        ></endpoint-item>\n        <div ng-if="$ctrl.state.loading" class="text-center text-muted">\n          Loading...\n        </div>\n        <div ng-if="!$ctrl.state.loading && !$ctrl.state.filteredEndpoints.length" class="text-center text-muted">\n          No endpoint available.\n        </div>\n      </div>\n\n      <div class="footer" ng-if="$ctrl.endpoints">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0" ng-if="!$ctrl.hasBackendPagination()">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5" on-page-change="$ctrl.pageChangeHandler(newPageNumber, oldPageNumber)"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1258);angular.module("portainer.app").component("endpointSelector",{templateUrl:a,controller:"EndpointSelectorController",bindings:{model:"=",endpoints:"<",groups:"<"}})},function(e,t){var n="app/portainer/components/endpoint-selector/endpointSelector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<ui-select ng-model="$ctrl.model">\n  <ui-select-match placeholder="Select an endpoint">\n    <span>{{ $select.selected.Name }}</span>\n  </ui-select-match>\n  <ui-select-choices group-by="$ctrl.groupEndpoints" group-filter="$ctrl.sortGroups" repeat="endpoint in ($ctrl.endpoints | filter: $select.search) track by endpoint.Id">\n    <span>{{ endpoint.Name }}</span>\n  </ui-select-choices>\n</ui-select>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(39);angular.module("portainer.app").controller("EndpointSelectorController",(function(){var e=this;this.sortGroups=function(e){return Object(a.a)(e,["name"])},this.groupEndpoints=function(t){for(var n=0;n<e.availableGroups.length;n++){var a=e.availableGroups[n];if(t.GroupId===a.Id)return a.Name}},this.$onInit=function(){var e,t;this.availableGroups=(e=this.groups,t=this.endpoints,e.filter((function(e){for(var n=0;n<t.length;n++)if(t[n].GroupId===e.Id)return!0;return!1})))}}))},function(e,t,n){var a=n(1261);angular.module("portainer.app").component("porEndpointSecurity",{templateUrl:a,controller:"porEndpointSecurityController",bindings:{formData:"=",endpoint:"<"}})},function(e,t){var n="app/portainer/components/endpointSecurity/porEndpointSecurity.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  \x3c!-- tls-checkbox --\x3e\n  <div class="form-group">\n    <div class="col-sm-12">\n      <label for="tls" class="control-label text-left">\n        TLS\n        <portainer-tooltip position="bottom" message="Enable this option if you need to connect to the Docker endpoint with TLS."></portainer-tooltip>\n      </label>\n      <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="$ctrl.formData.TLS" /><i></i> </label>\n    </div>\n  </div>\n  \x3c!-- !tls-checkbox --\x3e\n  <div class="col-sm-12 form-section-title" ng-if="$ctrl.formData.TLS">\n    TLS mode\n  </div>\n  \x3c!-- note --\x3e\n  <div class="form-group" ng-if="$ctrl.formData.TLS">\n    <div class="col-sm-12">\n      <span class="small text-muted">\n        You can find out more information about how to protect a Docker environment with TLS in the\n        <a href="https://docs.docker.com/engine/security/https/" target="_blank">Docker documentation</a>.\n      </span>\n    </div>\n  </div>\n  <div class="form-group"></div>\n  \x3c!-- endpoint-tls-mode --\x3e\n  <div class="form-group" style="margin-bottom: 0;" ng-if="$ctrl.formData.TLS">\n    <div class="boxselector_wrapper">\n      <div>\n        <input type="radio" id="tls_client_ca" ng-model="$ctrl.formData.TLSMode" value="tls_client_ca" />\n        <label for="tls_client_ca">\n          <div class="boxselector_header">\n            <i class="fa fa-shield-alt" aria-hidden="true" style="margin-right: 2px;"></i>\n            TLS with server and client verification\n          </div>\n          <p>Use client certificates and server verification</p>\n        </label>\n      </div>\n      <div>\n        <input type="radio" id="tls_client_noca" ng-model="$ctrl.formData.TLSMode" value="tls_client_noca" />\n        <label for="tls_client_noca">\n          <div class="boxselector_header">\n            <i class="fa fa-shield-alt" aria-hidden="true" style="margin-right: 2px;"></i>\n            TLS with client verification only\n          </div>\n          <p>Use client certificates without server verification</p>\n        </label>\n      </div>\n      <div>\n        <input type="radio" id="tls_ca" ng-model="$ctrl.formData.TLSMode" value="tls_ca" />\n        <label for="tls_ca">\n          <div class="boxselector_header">\n            <i class="fa fa-shield-alt" aria-hidden="true" style="margin-right: 2px;"></i>\n            TLS with server verification only\n          </div>\n          <p>Only verify the server certificate</p>\n        </label>\n      </div>\n      <div>\n        <input type="radio" id="tls_only" ng-model="$ctrl.formData.TLSMode" value="tls_only" />\n        <label for="tls_only">\n          <div class="boxselector_header">\n            <i class="fa fa-shield-alt" aria-hidden="true" style="margin-right: 2px;"></i>\n            TLS only\n          </div>\n          <p>No server/client verification</p>\n        </label>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !endpoint-tls-mode --\x3e\n  <div class="col-sm-12 form-section-title" ng-if="$ctrl.formData.TLS && $ctrl.formData.TLSMode !== \'tls_only\'">\n    Required TLS files\n  </div>\n  \x3c!-- tls-file-upload --\x3e\n  <div ng-if="$ctrl.formData.TLS">\n    \x3c!-- tls-file-ca --\x3e\n    <div class="form-group" ng-if="$ctrl.formData.TLSMode === \'tls_client_ca\' || $ctrl.formData.TLSMode === \'tls_ca\'">\n      <label class="col-sm-3 col-lg-2 control-label text-left">TLS CA certificate</label>\n      <div class="col-sm-9 col-lg-10">\n        <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.formData.TLSCACert">Select file</button>\n        <span style="margin-left: 5px;">\n          {{ $ctrl.formData.TLSCACert.name }}\n          <i class="fa fa-check green-icon" ng-if="$ctrl.formData.TLSCACert && $ctrl.formData.TLSCACert === $ctrl.endpoint.TLSConfig.TLSCACert" aria-hidden="true"></i>\n          <i class="fa fa-times red-icon" ng-if="!$ctrl.formData.TLSCACert" aria-hidden="true"></i>\n        </span>\n      </div>\n    </div>\n    \x3c!-- !tls-file-ca --\x3e\n    \x3c!-- tls-files-cert-key --\x3e\n    <div ng-if="$ctrl.formData.TLSMode === \'tls_client_ca\' || $ctrl.formData.TLSMode === \'tls_client_noca\'">\n      \x3c!-- tls-file-cert --\x3e\n      <div class="form-group">\n        <label for="tls_cert" class="col-sm-3 col-lg-2 control-label text-left">TLS certificate</label>\n        <div class="col-sm-9 col-lg-10">\n          <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.formData.TLSCert">Select file</button>\n          <span style="margin-left: 5px;">\n            {{ $ctrl.formData.TLSCert.name }}\n            <i class="fa fa-check green-icon" ng-if="$ctrl.formData.TLSCert && $ctrl.formData.TLSCert === $ctrl.endpoint.TLSConfig.TLSCert" aria-hidden="true"></i>\n            <i class="fa fa-times red-icon" ng-if="!$ctrl.formData.TLSCert" aria-hidden="true"></i>\n          </span>\n        </div>\n      </div>\n      \x3c!-- !tls-file-cert --\x3e\n      \x3c!-- tls-file-key --\x3e\n      <div class="form-group">\n        <label class="col-sm-3 col-lg-2 control-label text-left">TLS key</label>\n        <div class="col-sm-9 col-lg-10">\n          <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.formData.TLSKey">Select file</button>\n          <span style="margin-left: 5px;">\n            {{ $ctrl.formData.TLSKey.name }}\n            <i class="fa fa-check green-icon" ng-if="$ctrl.formData.TLSKey && $ctrl.formData.TLSKey === $ctrl.endpoint.TLSConfig.TLSKey" aria-hidden="true"></i>\n            <i class="fa fa-times red-icon" ng-if="!$ctrl.formData.TLSKey" aria-hidden="true"></i>\n          </span>\n        </div>\n      </div>\n      \x3c!-- !tls-file-key --\x3e\n    </div>\n    \x3c!-- tls-files-cert-key --\x3e\n  </div>\n  \x3c!-- !tls-file-upload --\x3e\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("porEndpointSecurityController",[function(){var e=this;!function(){if(e.endpoint){var t=e.endpoint,n=t.TLSConfig.TLS;e.formData.TLS=n;var a=t.TLSConfig.TLSCACert;e.formData.TLSCACert=a;var r=t.TLSConfig.TLSCert;e.formData.TLSCert=r;var i=t.TLSConfig.TLSKey;e.formData.TLSKey=i,n&&(e.formData.TLSMode=a&&r&&i?"tls_client_ca":r&&i?"tls_client_noca":a?"tls_ca":"tls_only")}}()}])},function(e,t,n){var a=n(1264);angular.module("portainer.app").component("extensionItem",{templateUrl:a,controller:"ExtensionItemController",bindings:{model:"<",currentDate:"<"}})},function(e,t){var n="app/portainer/components/extension-list/extension-item/extensionItem.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'\x3c!-- extension --\x3e\n<div class="blocklist-item" ng-click="$ctrl.goToExtensionView()" ng-class="{ \'blocklist-item--disabled\': !$ctrl.model.Available }">\n  <div class="blocklist-item-box">\n    \x3c!-- extension-image --\x3e\n    <span ng-if="$ctrl.model.Logo" style="width: 75px; text-align: center;">\n      \x3c!-- <img class="blocklist-item-logo" ng-src="{{ $ctrl.model.Logo }}" /> --\x3e\n      <i class="{{ $ctrl.model.Logo }} fa fa-4x blue-icon" aria-hidden="true"></i>\n    </span>\n    <span class="blocklist-item-logo" ng-if="!$ctrl.model.Logo">\n      <i class="fa fa-bolt fa-4x blue-icon" style="margin-left: 14px;" aria-hidden="true"></i>\n    </span>\n    \x3c!-- !extension-image --\x3e\n    \x3c!-- extension-details --\x3e\n    <span class="col-sm-12">\n      \x3c!-- blocklist-item-line1 --\x3e\n      <div class="blocklist-item-line">\n        <span>\n          <span class="blocklist-item-title">\n            {{ $ctrl.model.Name }}\n          </span>\n        </span>\n        <span>\n          <span class="label label-primary" ng-if="!$ctrl.model.Enabled && !$ctrl.model.Available">coming soon</span>\n          <span class="label label-warning" ng-if="!$ctrl.model.Enabled && $ctrl.model.Deal && !$ctrl.model.License.Expiration">deal</span>\n          <span class="label label-danger" ng-if="!$ctrl.model.Enabled && $ctrl.model.License.Expiration && !$ctrl.model.License.Valid">expired</span>\n          <span class="label label-success" ng-if="$ctrl.model.Enabled && $ctrl.model.License.Valid">enabled</span>\n          <span class="label label-primary" ng-if="$ctrl.model.Enabled && $ctrl.model.License.Valid && $ctrl.model.UpdateAvailable">update available</span>\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line1 --\x3e\n      \x3c!-- blocklist-item-line2 --\x3e\n      <div class="blocklist-item-line">\n        <span>\n          <span class="blocklist-item-desc">\n            {{ $ctrl.model.ShortDescription }}\n          </span>\n        </span>\n        <span ng-if="$ctrl.model.License.Company">\n          <span class="small text-muted">Licensed to {{ $ctrl.model.License.Company }} - Expires on {{ $ctrl.model.License.Expiration }}</span>\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line2 --\x3e\n    </span>\n    \x3c!-- !extension-details --\x3e\n  </div>\n  \x3c!-- !extension --\x3e\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("ExtensionItemController",["$state",function(e){var t=this;t.goToExtensionView=function(){t.model.Available&&e.go("portainer.extensions.extension",{id:t.model.Id})}}])},function(e,t,n){var a=n(1267);angular.module("portainer.app").component("extensionList",{templateUrl:a,bindings:{extensions:"<",currentDate:"<"}})},function(e,t){var n="app/portainer/components/extension-list/extensionList.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa fa-bolt" aria-hidden="true" style="margin-right: 2px;"></i> Available extensions </div>\n      </div>\n\n      <div class="blocklist">\n        <extension-item ng-repeat="extension in $ctrl.extensions" model="extension" current-date="$ctrl.currentDate"></extension-item>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("JobFormController",["$state","LocalStorage","EndpointService","EndpointProvider","Notifications",function(e,t,n,a,r){var i=this;i.$onInit=function(){var e=t.getJobImage();e&&(i.formValues.Image=e)},i.editorUpdate=function(e){i.formValues.JobFileContent=e.getValue()},i.executeJob=function(){var o=i.state.Method;if("editor"===o&&""===i.formValues.JobFileContent)return void(i.state.formValidationError="Script file content must not be empty");var s=i.formValues.Image;t.storeJobImage(s),i.state.actionInProgress=!0,function(e,t){var r=a.endpointID(),o=i.nodeName;if("editor"===t){var s=i.formValues.JobFileContent;return n.executeJobFromFileContent(e,s,r,o)}var l=i.formValues.JobFile;return n.executeJobFromFileUpload(e,l,r,o)}(s,o).then((function(){r.success("Job successfully created"),e.go("^")})).catch((function(e){r.error("Job execution failure",e)})).finally((function(){i.state.actionInProgress=!1}))},i.state={Method:"editor",formValidationError:"",actionInProgress:!1},i.formValues={Image:"ubuntu:latest",JobFileContent:"",JobFile:null}}])},function(e,t,n){var a=n(1270);angular.module("portainer.app").component("executeJobForm",{templateUrl:a,controller:"JobFormController",bindings:{nodeName:"<"}})},function(e,t){var n="app/portainer/components/forms/execute-job-form/execute-job-form.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="executeJobForm">\n  \x3c!-- image-input --\x3e\n  <div class="form-group">\n    <label for="job_image" class="col-sm-1 control-label text-left">Image</label>\n    <div class="col-sm-11">\n      <input type="text" class="form-control" ng-model="$ctrl.formValues.Image" id="job_image" name="job_image" placeholder="e.g. ubuntu:latest" required auto-focus />\n    </div>\n  </div>\n  <div class="form-group" ng-show="executeJobForm.job_image.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="executeJobForm.job_image.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !image-input --\x3e\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      This job will run inside a privileged container on the host. You can access the host filesystem under the\n      <code>/host</code> folder.\n    </span>\n  </div>\n  \x3c!-- execution-method --\x3e\n  <div class="col-sm-12 form-section-title">\n    Job creation\n  </div>\n  <div class="form-group"></div>\n  <div class="form-group" style="margin-bottom: 0;">\n    <div class="boxselector_wrapper">\n      <div>\n        <input type="radio" id="method_editor" ng-model="$ctrl.state.Method" value="editor" />\n        <label for="method_editor">\n          <div class="boxselector_header">\n            <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n            Web editor\n          </div>\n          <p>Use our Web editor</p>\n        </label>\n      </div>\n      <div>\n        <input type="radio" id="method_upload" ng-model="$ctrl.state.Method" value="upload" />\n        <label for="method_upload">\n          <div class="boxselector_header">\n            <i class="fa fa-upload" aria-hidden="true" style="margin-right: 2px;"></i>\n            Upload\n          </div>\n          <p>Upload from your computer</p>\n        </label>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !execution-method --\x3e\n  \x3c!-- web-editor --\x3e\n  <div ng-show="$ctrl.state.Method === \'editor\'">\n    <div class="col-sm-12 form-section-title">\n      Web editor\n    </div>\n    <div class="form-group">\n      <div class="col-sm-12">\n        <code-editor identifier="execute-job-editor" placeholder="# Define or paste the content of your script file here" on-change="($ctrl.editorUpdate)"> </code-editor>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !web-editor --\x3e\n  \x3c!-- upload --\x3e\n  <div ng-show="$ctrl.state.Method === \'upload\'">\n    <div class="col-sm-12 form-section-title">\n      Upload\n    </div>\n    <div class="form-group">\n      <span class="col-sm-12 text-muted small">\n        You can upload a script file from your computer.\n      </span>\n    </div>\n    <div class="form-group">\n      <div class="col-sm-12">\n        <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.formValues.JobFile">Select file</button>\n        <span style="margin-left: 5px;">\n          {{ $ctrl.formValues.JobFile.name }}\n          <i class="fa fa-times red-icon" ng-if="!$ctrl.formValues.JobFile" aria-hidden="true"></i>\n        </span>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !upload --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    Actions\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button\n        type="button"\n        class="btn btn-primary btn-sm"\n        ng-disabled="$ctrl.state.actionInProgress || !executeJobForm.$valid\n        || ($ctrl.state.Method === \'upload\' && !$ctrl.formValues.JobFile)"\n        ng-click="$ctrl.executeJob()"\n        button-spinner="$ctrl.state.actionInProgress"\n      >\n        <span ng-hide="$ctrl.state.actionInProgress">Execute</span>\n        <span ng-show="$ctrl.state.actionInProgress">Starting job...</span>\n      </button>\n      <span class="text-danger" ng-if="$ctrl.state.formValidationError" style="margin-left: 5px;">\n        {{ $ctrl.state.formValidationError }}\n      </span>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),i=n(311),o=n(1272);r.a.module("portainer.app").component("groupForm",{templateUrl:o,controller:i.default,bindings:{loaded:"<",pageType:"@",model:"=",availableEndpoints:"=",availableTags:"<",associatedEndpoints:"=",addLabelAction:"<",removeLabelAction:"<",formAction:"<",formActionLabel:"@",actionInProgress:"<",onCreateTag:"<"}})},function(e,t){var n="app/portainer/components/forms/group-form/groupForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="endpointGroupForm">\n  \x3c!-- name-input --\x3e\n  <div class="form-group" ng-class="{ \'has-error\': endpointGroupForm.group_name.$invalid }">\n    <label for="group_name" class="col-sm-3 col-lg-2 control-label text-left">Name</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="group_name" ng-model="$ctrl.model.Name" placeholder="e.g. my-group" required auto-focus />\n    </div>\n  </div>\n  <div class="form-group" ng-show="endpointGroupForm.group_name.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="endpointGroupForm.group_name.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !name-input --\x3e\n  \x3c!-- description-input --\x3e\n  <div class="form-group">\n    <label for="group_description" class="col-sm-3 col-lg-2 control-label text-left">Description</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="group_description" ng-model="$ctrl.model.Description" placeholder="e.g. production environments..." />\n    </div>\n  </div>\n  \x3c!-- !description-input --\x3e\n  <div class="col-sm-12 form-section-title">\n    Metadata\n  </div>\n  \x3c!-- tags --\x3e\n  <div class="form-group">\n    <tag-selector\n      ng-if="$ctrl.model && $ctrl.availableTags"\n      tags="$ctrl.availableTags"\n      model="$ctrl.model.TagIds"\n      allow-create="$ctrl.state.allowCreateTag"\n      on-create="($ctrl.onCreateTag)"\n    ></tag-selector>\n  </div>\n  \x3c!-- !tags --\x3e\n  \x3c!-- endpoints --\x3e\n  <div ng-if="$ctrl.model.Id !== 1">\n    <div class="col-sm-12 form-section-title">\n      Associated endpoints\n    </div>\n    <div class="form-group">\n      <div class="col-sm-12 small text-muted">\n        You can select which endpoint should be part of this group by moving them to the associated endpoints table. Simply click on any endpoint entry to move it from one table to\n        the other.\n      </div>\n      <div class="col-sm-12" style="margin-top: 20px;">\n        \x3c!-- available-endpoints --\x3e\n        <div class="col-sm-6">\n          <div class="text-center small text-muted">Available endpoints</div>\n          <div style="margin-top: 10px;">\n            <group-association-table\n              loaded="$ctrl.loaded"\n              page-type="$ctrl.pageType"\n              table-type="available"\n              retrieve-page="$ctrl.getPaginatedEndpointsByGroup"\n              dataset="$ctrl.availableEndpoints"\n              entry-click="$ctrl.associateEndpoint"\n              pagination-state="$ctrl.state.available"\n              empty-dataset-message="No endpoint available"\n            ></group-association-table>\n          </div>\n        </div>\n        \x3c!-- !available-endpoints --\x3e\n        \x3c!-- associated-endpoints --\x3e\n        <div class="col-sm-6">\n          <div class="text-center small text-muted">Associated endpoints</div>\n          <div style="margin-top: 10px;">\n            <group-association-table\n              loaded="$ctrl.loaded"\n              page-type="$ctrl.pageType"\n              table-type="associated"\n              retrieve-page="$ctrl.getPaginatedEndpointsByGroup"\n              dataset="$ctrl.associatedEndpoints"\n              entry-click="$ctrl.dissociateEndpoint"\n              pagination-state="$ctrl.state.associated"\n              empty-dataset-message="No associated endpoint"\n              has-backend-pagination="this.pageType !== \'create\'"\n            ></group-association-table>\n          </div>\n        </div>\n        \x3c!-- !associated-endpoints --\x3e\n      </div>\n    </div>\n  </div>\n  <div ng-if="$ctrl.model.Id === 1">\n    <div class="col-sm-12 form-section-title">\n      Unassociated endpoints\n    </div>\n    <div style="margin-top: 10px;">\n      <group-association-table\n        loaded="$ctrl.loaded"\n        page-type="$ctrl.pageType"\n        table-type="associated"\n        retrieve-page="$ctrl.getPaginatedEndpointsByGroup"\n        dataset="$ctrl.associatedEndpoints"\n        pagination-state="$ctrl.state.associated"\n        empty-dataset-message="No endpoint available"\n      ></group-association-table>\n    </div>\n  </div>\n  \x3c!-- !endpoints --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    Actions\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button\n        type="button"\n        class="btn btn-primary btn-sm"\n        ng-click="$ctrl.formAction()"\n        ng-disabled="$ctrl.actionInProgress || !endpointGroupForm.$valid"\n        button-spinner="$ctrl.actionInProgress"\n      >\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">In progress...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(1274);angular.module("portainer.app").component("registryFormAzure",{templateUrl:a,bindings:{model:"=",formAction:"<",formActionLabel:"@",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/forms/registry-form-azure/registry-form-azure.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="registryFormAzure" ng-submit="$ctrl.formAction()">\n  <div class="col-sm-12 form-section-title">\n    Azure registry details\n  </div>\n  \x3c!-- name-input --\x3e\n  <div class="form-group">\n    <label for="registry_name" class="col-sm-3 col-lg-2 control-label text-left">Name</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_name" name="registry_name" ng-model="$ctrl.model.Name" placeholder="my-azure-registry" required auto-focus />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormAzure.registry_name.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormAzure.registry_name.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !name-input --\x3e\n  \x3c!-- url-input --\x3e\n  <div class="form-group">\n    <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n      Registry URL\n      <portainer-tooltip position="bottom" message="URL of an Azure Container Registry. Any protocol will be stripped."></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_url" name="registry_url" ng-model="$ctrl.model.URL" placeholder="myproject.azurecr.io" required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormAzure.registry_url.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormAzure.registry_url.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- url-input --\x3e\n  \x3c!-- credentials-user --\x3e\n  <div class="form-group">\n    <label for="registry_username" class="col-sm-3 col-lg-2 control-label text-left">Username</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_username" name="registry_username" ng-model="$ctrl.model.Username" required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormAzure.registry_username.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormAzure.registry_username.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !credentials-user --\x3e\n  \x3c!-- credentials-password --\x3e\n  <div class="form-group">\n    <label for="registry_password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="password" class="form-control" id="registry_password" name="registry_password" ng-model="$ctrl.model.Password" required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormAzure.registry_password.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormAzure.registry_password.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !credentials-password --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    Actions\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="submit" class="btn btn-primary btn-sm" ng-disabled="$ctrl.actionInProgress || !registryFormAzure.$valid" button-spinner="$ctrl.actionInProgress">\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">In progress...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(1276);angular.module("portainer.app").component("registryFormCustom",{templateUrl:a,bindings:{model:"=",formAction:"<",formActionLabel:"@",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/forms/registry-form-custom/registry-form-custom.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="registryFormCustom" ng-submit="$ctrl.formAction()">\n  <div class="col-sm-12 form-section-title">\n    Important notice\n  </div>\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      Docker requires you to connect to a <a href="https://docs.docker.com/registry/deploying/#running-a-domain-registry" target="_blank">secure registry</a>. You can find more\n      information about how to connect to an insecure registry <a href="https://docs.docker.com/registry/insecure/" target="_blank">in the Docker documentation</a>.\n    </span>\n  </div>\n  <div class="col-sm-12 form-section-title">\n    Custom registry details\n  </div>\n  \x3c!-- name-input --\x3e\n  <div class="form-group">\n    <label for="registry_name" class="col-sm-3 col-lg-2 control-label text-left">Name</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_name" name="registry_name" ng-model="$ctrl.model.Name" placeholder="my-custom-registry" required auto-focus />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormCustom.registry_name.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormCustom.registry_name.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !name-input --\x3e\n  \x3c!-- url-input --\x3e\n  <div class="form-group">\n    <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n      Registry URL\n      <portainer-tooltip position="bottom" message="URL or IP address of a Docker registry. Any protocol will be stripped."></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_url" name="registry_url" ng-model="$ctrl.model.URL" placeholder="10.0.0.10:5000 or myregistry.domain.tld" required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormCustom.registry_url.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormCustom.registry_url.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- url-input --\x3e\n  \x3c!-- authentication-checkbox --\x3e\n  <div class="form-group">\n    <div class="col-sm-12">\n      <label for="registry_auth" class="control-label text-left">\n        Authentication\n        <portainer-tooltip position="bottom" message="Enable this option if you need to specify credentials to connect to this registry."></portainer-tooltip>\n      </label>\n      <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="$ctrl.model.Authentication" /><i></i> </label>\n    </div>\n  </div>\n  \x3c!-- !authentication-checkbox --\x3e\n  <div ng-if="$ctrl.model.Authentication">\n    \x3c!-- credentials-user --\x3e\n    <div class="form-group">\n      <label for="registry_username" class="col-sm-3 col-lg-2 control-label text-left">Username</label>\n      <div class="col-sm-9 col-lg-10">\n        <input type="text" class="form-control" id="registry_username" name="registry_username" ng-model="$ctrl.model.Username" required />\n      </div>\n    </div>\n    <div class="form-group" ng-show="registryFormCustom.registry_username.$invalid">\n      <div class="col-sm-12 small text-warning">\n        <div ng-messages="registryFormCustom.registry_username.$error">\n          <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !credentials-user --\x3e\n    \x3c!-- credentials-password --\x3e\n    <div class="form-group">\n      <label for="registry_password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n      <div class="col-sm-9 col-lg-10">\n        <input type="password" class="form-control" id="registry_password" name="registry_password" ng-model="$ctrl.model.Password" required />\n      </div>\n    </div>\n    <div class="form-group" ng-show="registryFormCustom.registry_password.$invalid">\n      <div class="col-sm-12 small text-warning">\n        <div ng-messages="registryFormCustom.registry_password.$error">\n          <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !credentials-password --\x3e\n  </div>\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    Actions\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="submit" class="btn btn-primary btn-sm" ng-disabled="$ctrl.actionInProgress || !registryFormCustom.$valid" button-spinner="$ctrl.actionInProgress">\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">In progress...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(1278);angular.module("portainer.app").component("gitlabProjectsDatatable",{templateUrl:a,controller:"GitlabProjectsDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",state:"="}})},function(e,t){var n="app/portainer/components/forms/registry-form-gitlab/gitlab-projects-datatable/gitlabProjectsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="Search..." auto-focus />\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Namespace\')">\n                  Namespace\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Namespace\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Namespace\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  Name\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'PathWithNamespace\')">\n                  Path with namespace\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'PathWithNamespace\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'PathWithNamespace\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{ active: item.Checked }"\n            >\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-click="$ctrl.selectItem(item, $event)" ng-disabled="$ctrl.disableSelection(item)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                {{ item.Namespace }}\n              </td>\n              <td>\n                {{ item.Name }}\n              </td>\n              <td>\n                {{ item.PathWithNamespace }}\n              </td>\n              <td>\n                {{ item.Description }}\n              </td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">No projects available.</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0"> {{ $ctrl.state.selectedItemCount }} item(s) selected </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                Items per page\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">All</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("GitlabProjectsDatatableController",["$scope","$controller","DatatableService",function(e,t,n){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.disableSelection=function(e){return!this.allowSelection(e)},this.allowSelection=function(e){return e.RegistryEnabled},this.$onInit=function(){this.setDefaults(),this.prepareTableFromDataset(),this.state.orderBy=this.orderBy;var e=n.getDataTableOrder(this.tableKey);null!==e&&(this.state.reverseOrder=e.reverse,this.state.orderBy=e.orderBy);var t=n.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t,this.onTextFilterChange());var a=n.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters&&this.filters.state&&(this.filters.state.open=!1);var r=n.getDataTableSettings(this.tableKey);null!==r&&(this.settings=r,this.settings.open=!1),this.onSettingsRepeaterChange()}}])},function(e,t,n){var a=n(1281);angular.module("portainer.app").component("registryFormGitlab",{templateUrl:a,bindings:{model:"=",retrieveRegistries:"<",createRegistries:"<",actionInProgress:"<",projects:"=",state:"=",resetDefaults:"<"}})},function(e,t){var n="app/portainer/components/forms/registry-form-gitlab/registry-form-gitlab.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="registryFormGitlab" ng-submit="$ctrl.retrieveRegistries()">\n  <div class="col-sm-12 form-section-title">\n    Important notice\n  </div>\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      <p>\n        For information on how to generate a Gitlab Personal Access Token, follow the\n        <a href="https://gitlab.com/help/user/profile/personal_access_tokens.md" target="_blank">gitlab guide</a>.\n      </p>\n      <p>\n        <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i> You must provide a token with <code>api</code> scope. Failure to do so\n        will mean you can only push/pull from your registry but not manage it using the <a ui-sref="portainer.extensions.extension({id: 1})">registry management (extension)</a>.\n      </p>\n    </span>\n  </div>\n  <div class="col-sm-12 form-section-title">\n    Gitlab registry connection details\n  </div>\n  \x3c!-- credentials-user --\x3e\n  <div class="form-group">\n    <label for="registry_username" class="col-sm-3 col-lg-2 control-label text-left">Username</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_username" name="registry_username" ng-model="$ctrl.model.Username" required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormGitlab.registry_username.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormGitlab.registry_username.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !credentials-user --\x3e\n  \x3c!-- credentials-pat --\x3e\n  <div class="form-group">\n    <label for="registry_perso_acc_token" class="col-sm-3 col-lg-2 control-label text-left">Personal Access Token </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="password" class="form-control" id="registry_perso_acc_token" name="registry_perso_acc_token" ng-model="$ctrl.model.Token" required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormGitlab.registry_perso_acc_token.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormGitlab.registry_perso_acc_token.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !credentials-pat --\x3e\n\n  <div class="form-group">\n    <div class="col-sm-12">\n      <a class="small interactive" ng-if="!$ctrl.state.overrideConfiguration" ng-click="$ctrl.state.overrideConfiguration = true;">\n        <i class="fa fa-wrench space-right" aria-hidden="true"></i> Override default configuration\n      </a>\n      <a class="small interactive" ng-if="$ctrl.state.overrideConfiguration" ng-click="$ctrl.state.overrideConfiguration = false; $ctrl.resetDefaults()">\n        <i class="fa fa-cogs space-right" aria-hidden="true"></i> Use default configuration\n      </a>\n    </div>\n  </div>\n\n  \x3c!-- url-input --\x3e\n  <div class="form-group" ng-if="$ctrl.state.overrideConfiguration">\n    <label for="instance_url" class="col-sm-3 col-lg-2 control-label text-left">\n      Instance URL\n      <portainer-tooltip position="bottom" message="URL of Gitlab instance."></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="instance_url" name="instance_url" ng-model="$ctrl.model.Gitlab.InstanceURL" placeholder="https://gitlab.com" required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormGitlab.instance_url.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormGitlab.instance_url.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !url-input --\x3e\n  \x3c!-- url-input --\x3e\n  <div class="form-group" ng-if="$ctrl.state.overrideConfiguration">\n    <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n      Registry URL\n      <portainer-tooltip position="bottom" message="URL of Gitlab registry instance."></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_url" name="registry_url" ng-model="$ctrl.model.URL" placeholder="https://registry.gitlab.com" required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormGitlab.registry_url.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormGitlab.registry_url.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !url-input --\x3e\n\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="submit" class="btn btn-primary btn-sm" ng-disabled="$ctrl.actionInProgress || !registryFormGitlab.$valid" button-spinner="$ctrl.actionInProgress">\n        <span ng-hide="$ctrl.actionInProgress">Retrieve projects</span>\n        <span ng-show="$ctrl.actionInProgress">In progress...</span>\n      </button>\n    </div>\n  </div>\n</form>\n<div class="form-horizontal" ng-if="$ctrl.projects">\n  <div class="col-sm-12 form-section-title">\n    Gitlab projects\n  </div>\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      Select the project\'s registries you want to manage. Portainer will create one registry for each selected project.\n    </span>\n    <span class="col-sm-12 text-muted small">\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      If you can\'t select a project, make sure that registry feature is activated on it.\n    </span>\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <gitlab-projects-datatable\n        title-text="Gitlab projects"\n        title-icon="fa-project-diagram"\n        dataset="$ctrl.projects"\n        table-key="gitlab_projects"\n        state="$ctrl.state.gitlab"\n        order-by="Name"\n      ></gitlab-projects-datatable>\n    </div>\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button\n        ng-click="$ctrl.createRegistries()"\n        class="btn btn-primary btn-sm"\n        ng-disabled="$ctrl.actionInProgress || !$ctrl.state.gitlab.selectedItemCount"\n        button-spinner="$ctrl.actionInProgress"\n      >\n        <span ng-hide="$ctrl.actionInProgress">Create registries</span>\n        <span ng-show="$ctrl.actionInProgress">In progress...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1283);angular.module("portainer.app").component("registryFormQuay",{templateUrl:a,bindings:{model:"=",formAction:"<",formActionLabel:"@",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/forms/registry-form-quay/registry-form-quay.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="registryFormQuay" ng-submit="$ctrl.formAction()">\n  <div class="col-sm-12 form-section-title">\n    Quay account details\n  </div>\n  \x3c!-- credentials-user --\x3e\n  <div class="form-group">\n    <label for="registry_username" class="col-sm-3 col-lg-2 control-label text-left">Username</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_username" name="registry_username" ng-model="$ctrl.model.Username" required auto-focus />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormQuay.registry_username.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormQuay.registry_username.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !credentials-user --\x3e\n  \x3c!-- credentials-password --\x3e\n  <div class="form-group">\n    <label for="registry_password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="password" class="form-control" id="registry_password" name="registry_password" ng-model="$ctrl.model.Password" required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormQuay.registry_password.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormQuay.registry_password.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !credentials-password --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    Actions\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="submit" class="btn btn-primary btn-sm" ng-disabled="$ctrl.actionInProgress || !registryFormQuay.$valid" button-spinner="$ctrl.actionInProgress">\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">In progress...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(3),r=n.n(a),i=n(1285);angular.module("portainer.app").component("scheduleForm",{templateUrl:i,controller:function(){var e=this;e.state={formValidationError:""},e.scheduleValues=[{displayed:"Every hour",cron:"0 * * * *"},{displayed:"Every 2 hours",cron:"0 */2 * * *"},{displayed:"Every day",cron:"0 0 * * *"}],e.formValues={datetime:e.model.CronExpression?function(e){if(5!==e.split(" ").length)return r()();return r()(e,"s m H D M")}(e.model.CronExpression):r()(),scheduleValue:e.scheduleValues[0],cronMethod:e.model.Recurring?"advanced":"basic"},this.action=function(){var t,n;(e.state.formValidationError="","editor"!==e.model.Job.Method||""!==e.model.Job.FileContent)?("basic"===e.formValues.cronMethod?!1===e.model.Recurring?e.model.CronExpression=(t=e.formValues.datetime,n=r()(t),"0 ".concat(n.minutes()," ",n.hours()," ",n.date()," ",n.month()+1," *")):e.model.CronExpression=e.formValues.scheduleValue.cron:e.model.Recurring=!0,e.formAction()):e.state.formValidationError="Script file content must not be empty"},this.editorUpdate=function(t){e.model.Job.FileContent=t.getValue()}},bindings:{model:"=",endpoints:"<",groups:"<",tags:"<",addLabelAction:"<",removeLabelAction:"<",formAction:"<",formActionLabel:"@",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/forms/schedule-form/scheduleForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="scheduleForm">\n  <div class="col-sm-12 form-section-title">\n    Information\n  </div>\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      <p>\n        <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i> Due to how schedules behave differently on Edge endpoints and other\n        endpoints it is recommended to create specific schedules that will only target one type of endpoint.\n      </p>\n    </span>\n  </div>\n  <div class="col-sm-12 form-section-title">\n    Schedule configuration\n  </div>\n  \x3c!-- name-input --\x3e\n  <div class="form-group">\n    <label for="schedule_name" class="col-sm-1 control-label text-left">Name</label>\n    <div class="col-sm-11">\n      <input type="text" class="form-control" ng-model="$ctrl.model.Name" id="schedule_name" name="schedule_name" placeholder="backup-app-prod" required auto-focus />\n    </div>\n  </div>\n  <div class="form-group" ng-show="scheduleForm.schedule_name.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="scheduleForm.schedule_name.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !name-input --\x3e\n  \x3c!-- cron-input --\x3e\n  \x3c!-- schedule-method-select --\x3e\n  <div class="col-sm-12 form-section-title">\n    Schedule configuration\n  </div>\n  <div class="form-group"></div>\n  <div class="form-group" style="margin-bottom: 0;">\n    <div class="boxselector_wrapper">\n      <div>\n        <input type="radio" id="config_basic" ng-model="$ctrl.formValues.cronMethod" value="basic" />\n        <label for="config_basic">\n          <div class="boxselector_header">\n            <i class="fa fa-calendar-alt" aria-hidden="true" style="margin-right: 2px;"></i>\n            Basic configuration\n          </div>\n          <p>Select date from calendar</p>\n        </label>\n      </div>\n      <div>\n        <input type="radio" id="config_advanced" ng-model="$ctrl.formValues.cronMethod" value="advanced" />\n        <label for="config_advanced">\n          <div class="boxselector_header">\n            <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n            Advanced configuration\n          </div>\n          <p>Write your own cron rule</p>\n        </label>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !schedule-method-select --\x3e\n  \x3c!-- basic-schedule --\x3e\n  <div ng-if="$ctrl.formValues.cronMethod === \'basic\'">\n    <div class="form-group">\n      <label for="recurring" class="col-sm-2 control-label text-left">Recurring schedule</label>\n      <div class="col-sm-10">\n        <label class="switch" style="margin-left: 20px;"> <input type="checkbox" name="recurring" ng-model="$ctrl.model.Recurring" /><i></i> </label>\n      </div>\n    </div>\n    \x3c!-- not-recurring --\x3e\n    <div ng-if="!$ctrl.model.Recurring">\n      <div class="form-group">\n        <label for="schedule_cron" class="col-sm-2 control-label text-left">Schedule date</label>\n        <div class="col-sm-10">\n          <input class="form-control" moment-picker ng-model="$ctrl.formValues.datetime" format="YYYY-MM-DD HH:mm" />\n        </div>\n        <div ng-show="scheduleForm.datepicker.$invalid">\n          <div class="col-sm-12 small text-warning">\n            <div ng-messages="scheduleForm.datepicker.$error">\n              <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !not-recurring --\x3e\n    \x3c!-- recurring --\x3e\n    <div ng-if="$ctrl.model.Recurring">\n      <div class="form-group">\n        <label for="schedule_value" class="col-sm-2 control-label text-left">Schedule time</label>\n        <div class="col-sm-10">\n          <select\n            id="schedule_value"\n            name="schedule_value"\n            class="form-control"\n            ng-model="$ctrl.formValues.scheduleValue"\n            ng-options="value.displayed for value in $ctrl.scheduleValues"\n            required\n          ></select>\n        </div>\n        <div ng-show="scheduleForm.schedule_value.$invalid">\n          <div class="col-sm-12 small text-warning">\n            <div ng-messages="scheduleForm.schedule_value.$error">\n              <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !recurring --\x3e\n  </div>\n  \x3c!-- !basic-schedule --\x3e\n  \x3c!-- advanced-schedule --\x3e\n  <div ng-if="$ctrl.formValues.cronMethod === \'advanced\'">\n    <div class="form-group">\n      <label for="schedule_cron" class="col-sm-2 control-label text-left">Cron rule</label>\n      <div class="col-sm-10">\n        <input type="text" class="form-control" ng-model="$ctrl.model.CronExpression" id="schedule_cron" name="schedule_cron" placeholder="0 2 * * *" required />\n      </div>\n    </div>\n    <div class="form-group" ng-show="scheduleForm.schedule_cron.$invalid">\n      <div class="col-sm-12 small text-warning">\n        <div ng-messages="scheduleForm.schedule_cron.$error">\n          <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n        </div>\n      </div>\n    </div>\n    <div class="form-group">\n      <span class="col-sm-12 text-muted small">\n        <p>\n          You can refer to the <a href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format" target="_blank">following documentation</a> to get more information\n          about the supported cron expression format.\n        </p>\n        <p>\n          <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i> Edge endpoint schedules are managed by <code>cron</code> on the\n          underlying host. You need to use a valid cron expression that is different from the documentation above.\n        </p>\n      </span>\n    </div>\n  </div>\n  \x3c!-- !advanced-schedule --\x3e\n  \x3c!-- !cron-input --\x3e\n  <div class="col-sm-12 form-section-title">\n    Job configuration\n  </div>\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      <p> <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i> This configuration will be ignored for Edge endpoint schedules. </p>\n    </span>\n  </div>\n  \x3c!-- image-input --\x3e\n  <div class="form-group">\n    <label for="schedule_image" class="col-sm-2 control-label text-left">Image</label>\n    <div class="col-sm-10">\n      <input type="text" class="form-control" ng-model="$ctrl.model.Job.Image" id="schedule_image" name="schedule_image" placeholder="e.g. ubuntu:latest" required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="scheduleForm.schedule_image.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="scheduleForm.schedule_image.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !image-input --\x3e\n  \x3c!-- retry-policy --\x3e\n  <div class="form-group">\n    <label for="retrycount" class="col-sm-2 control-label text-left">\n      Retry count\n      <portainer-tooltip position="bottom" message="Number of retries when it\'s not possible to reach the endpoint."></portainer-tooltip>\n    </label>\n    <div class="col-sm-10 col-md-4">\n      <input type="number" class="form-control" ng-model="$ctrl.model.Job.RetryCount" id="retrycount" name="retrycount" placeholder="3" />\n    </div>\n    <label for="retryinterval" class="col-sm-2 control-label text-left">\n      Retry interval\n      <portainer-tooltip position="bottom" message="Retry interval in seconds."></portainer-tooltip>\n    </label>\n    <div class="col-sm-10 col-md-4">\n      <input type="number" class="form-control" ng-model="$ctrl.model.Job.RetryInterval" id="retryinterval" name="retryinterval" placeholder="30" />\n    </div>\n  </div>\n  \x3c!-- !retry-policy --\x3e\n  \x3c!-- execution-method --\x3e\n  <div ng-if="!$ctrl.model.Id">\n    <div class="col-sm-12 form-section-title">\n      Job content\n    </div>\n    <div class="form-group"></div>\n    <div class="form-group" style="margin-bottom: 0;">\n      <div class="boxselector_wrapper">\n        <div>\n          <input type="radio" id="method_editor" ng-model="$ctrl.model.Job.Method" value="editor" />\n          <label for="method_editor">\n            <div class="boxselector_header">\n              <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n              Web editor\n            </div>\n            <p>Use our Web editor</p>\n          </label>\n        </div>\n        <div>\n          <input type="radio" id="method_upload" ng-model="$ctrl.model.Job.Method" value="upload" />\n          <label for="method_upload">\n            <div class="boxselector_header">\n              <i class="fa fa-upload" aria-hidden="true" style="margin-right: 2px;"></i>\n              Upload\n            </div>\n            <p>Upload from your computer</p>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !execution-method --\x3e\n  \x3c!-- web-editor --\x3e\n  <div ng-show="$ctrl.model.Job.Method === \'editor\'">\n    <div class="col-sm-12 form-section-title">\n      Web editor\n    </div>\n    <div class="form-group">\n      <span class="col-sm-12 text-muted small">\n        <p>\n          This schedule will be executed via a privileged container on the target hosts. You can access the host filesystem under the\n          <code>/host</code> folder.\n        </p>\n        <p>\n          <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i> Edge endpoint schedules are managed by <code>cron</code> on the\n          underlying host. You have full access to the filesystem without having to use the <code>/host</code> folder.\n        </p>\n      </span>\n    </div>\n    <div class="form-group">\n      <div class="col-sm-12">\n        <code-editor\n          identifier="execute-schedule-editor"\n          placeholder="# Define or paste the content of your script file here"\n          on-change="($ctrl.editorUpdate)"\n          value="$ctrl.model.Job.FileContent"\n        ></code-editor>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !web-editor --\x3e\n  \x3c!-- upload --\x3e\n  <div ng-show="$ctrl.model.Job.Method === \'upload\'">\n    <div class="col-sm-12 form-section-title">\n      Upload\n    </div>\n    <div class="form-group">\n      <span class="col-sm-12 text-muted small">\n        You can upload a script file from your computer.\n      </span>\n    </div>\n    <div class="form-group">\n      <div class="col-sm-12">\n        <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.model.Job.File">Select file</button>\n        <span style="margin-left: 5px;">\n          {{ $ctrl.model.Job.File.name }}\n          <i class="fa fa-times red-icon" ng-if="!$ctrl.model.Job.File" aria-hidden="true"></i>\n        </span>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !upload --\x3e\n  <div class="col-sm-12 form-section-title">\n    Target endpoints\n  </div>\n  \x3c!-- node-selection --\x3e\n  <multi-endpoint-selector\n    ng-if="$ctrl.endpoints && $ctrl.groups && $ctrl.tags"\n    style="margin-top: 55px; display: block;"\n    model="$ctrl.model.Job.Endpoints"\n    endpoints="$ctrl.endpoints"\n    groups="$ctrl.groups"\n    tags="$ctrl.tags"\n  ></multi-endpoint-selector>\n  \x3c!-- !node-selection --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    Actions\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button\n        type="button"\n        class="btn btn-primary btn-sm"\n        ng-disabled="$ctrl.actionInProgress || !scheduleForm.$valid\n        || $ctrl.model.Job.Endpoints.length === 0\n        || ($ctrl.model.Job.Method === \'upload\' && !$ctrl.model.Job.File)"\n        ng-click="$ctrl.action()"\n        button-spinner="$ctrl.actionInProgress"\n      >\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">In progress...</span>\n      </button>\n      <span class="text-danger" ng-if="$ctrl.state.formValidationError" style="margin-left: 5px;">\n        {{ $ctrl.state.formValidationError }}\n      </span>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(1287);angular.module("portainer.app").component("templateForm",{templateUrl:a,controller:"TemplateFormController",bindings:{model:"=",categories:"<",networks:"<",formAction:"<",formActionLabel:"@",actionInProgress:"<",showTypeSelector:"<"}})},function(e,t){var n="app/portainer/components/forms/template-form/templateForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="templateForm">\n  \x3c!-- title-input --\x3e\n  <div class="form-group" ng-class="{ \'has-error\': templateForm.template_title.$invalid }">\n    <label for="template_title" class="col-sm-3 col-lg-2 control-label text-left">Title</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="template_title" ng-model="$ctrl.model.Title" placeholder="e.g. my-template" required auto-focus />\n    </div>\n  </div>\n  <div class="form-group" ng-show="templateForm.template_title.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="templateForm.template_title.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !title-input --\x3e\n  \x3c!-- description-input --\x3e\n  <div class="form-group" ng-class="{ \'has-error\': templateForm.template_description.$invalid }">\n    <label for="template_description" class="col-sm-3 col-lg-2 control-label text-left">Description</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="template_description" ng-model="$ctrl.model.Description" placeholder="e.g. template description..." required />\n    </div>\n  </div>\n  <div class="form-group" ng-show="templateForm.template_description.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="templateForm.template_description.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !description-input --\x3e\n  <div class="col-sm-12 form-section-title interactive" ng-click="$ctrl.state.collapseTemplate = !$ctrl.state.collapseTemplate">\n    Template\n    <span class="small space-left">\n      <a ng-if="$ctrl.state.collapseTemplate"><i class="fa fa-plus" aria-hidden="true"></i> expand</a>\n      <a ng-if="!$ctrl.state.collapseTemplate"><i class="fa fa-minus" aria-hidden="true"></i> collapse</a>\n    </span>\n  </div>\n  \x3c!-- template-details --\x3e\n  <div uib-collapse="$ctrl.state.collapseTemplate">\n    <div ng-if="$ctrl.showTypeSelector">\n      <div class="form-group"></div>\n      <div class="form-group" style="margin-bottom: 0;">\n        <div class="boxselector_wrapper">\n          <div>\n            <input type="radio" id="template_container" ng-model="$ctrl.model.Type" ng-value="1" />\n            <label for="template_container">\n              <div class="boxselector_header">\n                <i class="fa fa-server" aria-hidden="true" style="margin-right: 2px;"></i>\n                Container\n              </div>\n              <p>Container template</p>\n            </label>\n          </div>\n          <div>\n            <input type="radio" id="template_swarm_stack" ng-model="$ctrl.model.Type" ng-value="2" />\n            <label for="template_swarm_stack">\n              <div class="boxselector_header">\n                <i class="fa fa-th-list" aria-hidden="true" style="margin-right: 2px;"></i>\n                Swarm stack\n              </div>\n              <p>Stack template (Swarm)</p>\n            </label>\n          </div>\n          <div>\n            <input type="radio" id="template_compose_stack" ng-model="$ctrl.model.Type" ng-value="3" />\n            <label for="template_compose_stack">\n              <div class="boxselector_header">\n                <i class="fa fa-th-list" aria-hidden="true" style="margin-right: 2px;"></i>\n                Compose stack\n              </div>\n              <p>Stack template (Compose)</p>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    \x3c!-- name --\x3e\n    <div class="form-group">\n      <label for="template_name" class="col-sm-3 col-lg-2 control-label text-left">\n        Name\n        <portainer-tooltip position="bottom" message="Default name that will be associated to the template"></portainer-tooltip>\n      </label>\n      <div class="col-sm-9 col-lg-10">\n        <input type="text" class="form-control" name="template_name" ng-model="$ctrl.model.Name" placeholder="e.g. myApp" />\n      </div>\n    </div>\n    \x3c!-- !name --\x3e\n    \x3c!-- logo --\x3e\n    <div class="form-group">\n      <label for="template_logo" class="col-sm-3 col-lg-2 control-label text-left">\n        Logo URL\n        <portainer-tooltip position="bottom" message="Recommended size: 60x60"></portainer-tooltip>\n      </label>\n      <div class="col-sm-9 col-lg-10">\n        <input type="text" class="form-control" name="template_logo" ng-model="$ctrl.model.Logo" placeholder="e.g. https://portainer.io/images/logos/nginx.png" />\n      </div>\n    </div>\n    \x3c!-- !logo --\x3e\n    \x3c!-- note --\x3e\n    <div class="form-group">\n      <label for="template_note" class="col-sm-3 col-lg-2 control-label text-left">\n        Note\n        <portainer-tooltip position="bottom" message="Usage/extra information about the template. Supports HTML."></portainer-tooltip>\n      </label>\n      <div class="col-sm-9 col-lg-10">\n        <textarea\n          class="form-control"\n          name="template_note"\n          ng-model="$ctrl.model.Note"\n          placeholder="You can use this field to specify extra information. <br/> It supports <b>HTML</b>."\n        ></textarea>\n      </div>\n    </div>\n    \x3c!-- !note --\x3e\n    \x3c!-- platform --\x3e\n    <div class="form-group">\n      <label for="template_platform" class="col-sm-3 col-lg-2 control-label text-left">\n        Platform\n      </label>\n      <div class="col-sm-9 col-lg-10">\n        <select class="form-control" name="template_platform" ng-model="$ctrl.model.Platform">\n          <option value="">Multi-platform</option>\n          <option value="linux">Linux</option>\n          <option value="windows">Windows</option>\n        </select>\n      </div>\n    </div>\n    \x3c!-- !platform --\x3e\n    \x3c!-- categories --\x3e\n    <div class="form-group">\n      <label for="template_categories" class="col-sm-3 col-lg-2 control-label text-left">\n        Categories\n      </label>\n      <div class="col-sm-9 col-lg-10">\n        <ui-select multiple tagging tagging-label="(new category)" ng-model="$ctrl.model.Categories" sortable="true" style="width: 300px;" title="Choose a category">\n          <ui-select-match placeholder="Select categories...">{{ $item }}</ui-select-match>\n          <ui-select-choices repeat="category in $ctrl.categories | filter:$select.search">\n            {{ category }}\n          </ui-select-choices>\n        </ui-select>\n      </div>\n    </div>\n    \x3c!-- !categories --\x3e\n    \x3c!-- administrator-only --\x3e\n    <div class="form-group">\n      <div class="col-sm-12">\n        <label for="tls" class="control-label text-left">\n          Administrator template\n          <portainer-tooltip position="bottom" message="This template will only be available to administrator users."></portainer-tooltip>\n        </label>\n        <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="$ctrl.model.AdministratorOnly" /><i></i> </label>\n      </div>\n    </div>\n    \x3c!-- administrator-only --\x3e\n  </div>\n  \x3c!-- !template-details --\x3e\n  <div ng-if="$ctrl.model.Type === 2 || $ctrl.model.Type === 3">\n    <div class="col-sm-12 form-section-title interactive" ng-click="$ctrl.state.collapseStack = !$ctrl.state.collapseStack">\n      Stack\n      <span class="small space-left">\n        <a ng-if="$ctrl.state.collapseStack"><i class="fa fa-plus" aria-hidden="true"></i> expand</a>\n        <a ng-if="!$ctrl.state.collapseStack"><i class="fa fa-minus" aria-hidden="true"></i> collapse</a>\n      </span>\n    </div>\n    \x3c!-- stack-details --\x3e\n    <div uib-collapse="$ctrl.state.collapseStack">\n      \x3c!-- repository-url --\x3e\n      <div class="form-group" ng-class="{ \'has-error\': templateForm.template_repository_url.$invalid }">\n        <label for="template_repository_url" class="col-sm-3 col-lg-2 control-label text-left">Repository URL</label>\n        <div class="col-sm-9 col-lg-10">\n          <input\n            type="text"\n            class="form-control"\n            name="template_repository_url"\n            ng-model="$ctrl.model.Repository.url"\n            placeholder="https://github.com/portainer/portainer-compose"\n            required\n          />\n        </div>\n      </div>\n      <div class="form-group" ng-show="templateForm.template_repository_url.$invalid">\n        <div class="col-sm-12 small text-warning">\n          <div ng-messages="templateForm.template_repository_url.$error">\n            <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This field is required.</p>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !repository-url --\x3e\n      \x3c!-- composefile-path --\x3e\n      <div class="form-group">\n        <label for="template_repository_path" class="col-sm-3 col-lg-2 control-label text-left">\n          Compose file path\n        </label>\n        <div class="col-sm-9 col-lg-10">\n          <input type="text" class="form-control" name="template_repository_path" ng-model="$ctrl.model.Repository.stackfile" placeholder="docker-compose.yml" />\n        </div>\n      </div>\n      \x3c!-- !composefile-path --\x3e\n    </div>\n    \x3c!-- !stack-details --\x3e\n  </div>\n  <div ng-if="$ctrl.model.Type === 1">\n    <div class="col-sm-12 form-section-title interactive" ng-click="$ctrl.state.collapseContainer = !$ctrl.state.collapseContainer">\n      Container\n      <span class="small space-left">\n        <a ng-if="$ctrl.state.collapseContainer"><i class="fa fa-plus" aria-hidden="true"></i> expand</a>\n        <a ng-if="!$ctrl.state.collapseContainer"><i class="fa fa-minus" aria-hidden="true"></i> collapse</a>\n      </span>\n    </div>\n    \x3c!-- container-details --\x3e\n    <div uib-collapse="$ctrl.state.collapseContainer">\n      <por-image-registry model="$ctrl.model.RegistryModel" auto-complete="true" label-class="col-sm-1" input-class="col-sm-11"></por-image-registry>\n      \x3c!-- command --\x3e\n      <div class="form-group">\n        <label for="template_command" class="col-sm-3 col-lg-2 control-label text-left">\n          Command\n          <portainer-tooltip\n            position="bottom"\n            message="The command to run in the container. If not specified, the container will use the default command specified in its Dockerfile."\n          ></portainer-tooltip>\n        </label>\n        <div class="col-sm-9 col-lg-10">\n          <input type="text" class="form-control" name="template_command" ng-model="$ctrl.model.Command" placeholder=\'/bin/bash -c \\"echo hello\\" && exit 777\' />\n        </div>\n      </div>\n      \x3c!-- !command --\x3e\n      \x3c!-- hostname --\x3e\n      <div class="form-group">\n        <label for="template_hostname" class="col-sm-3 col-lg-2 control-label text-left">\n          Hostname\n          <portainer-tooltip position="bottom" message="Set the hostname of the container. Will use Docker default if not specified."></portainer-tooltip>\n        </label>\n        <div class="col-sm-9 col-lg-10">\n          <input type="text" class="form-control" name="template_hostname" ng-model="$ctrl.model.Hostname" placeholder="mycontainername" />\n        </div>\n      </div>\n      \x3c!-- !hostname --\x3e\n      \x3c!-- network --\x3e\n      <div class="form-group">\n        <label for="template_network" class="col-sm-3 col-lg-2 control-label text-left">\n          Network\n        </label>\n        <div class="col-sm-10">\n          <select class="form-control" ng-options="net.Name for net in $ctrl.networks" ng-model="$ctrl.model.Network">\n            <option disabled hidden value="">Select a network</option>\n          </select>\n        </div>\n      </div>\n      \x3c!-- !network --\x3e\n      \x3c!-- port-mapping --\x3e\n      <div class="form-group">\n        <div class="col-sm-12" style="margin-top: 5px;">\n          <label class="control-label text-left">Port mapping</label>\n          <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addPortBinding()">\n            <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional port\n          </span>\n        </div>\n        <div class="col-sm-12" style="margin-top: 10px;" ng-if="$ctrl.model.Ports.length > 0">\n          <span class="small text-muted">Portainer will automatically assign a port if you leave the host port empty.</span>\n        </div>\n        \x3c!-- port-mapping-input-list --\x3e\n        <div class="col-sm-12">\n          <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n            <div ng-repeat="portBinding in $ctrl.model.Ports" style="margin-top: 2px;">\n              \x3c!-- host-port --\x3e\n              <div class="input-group col-sm-4 input-group-sm">\n                <span class="input-group-addon">host</span>\n                <input type="text" class="form-control" ng-model="portBinding.hostPort" placeholder="e.g. 80 or 1.2.3.4:80 (optional)" />\n              </div>\n              \x3c!-- !host-port --\x3e\n              <span style="margin: 0 10px 0 10px;">\n                <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n              </span>\n              \x3c!-- container-port --\x3e\n              <div class="input-group col-sm-4 input-group-sm">\n                <span class="input-group-addon">container</span>\n                <input type="text" class="form-control" ng-model="portBinding.containerPort" placeholder="e.g. 80" />\n              </div>\n              \x3c!-- !container-port --\x3e\n              \x3c!-- protocol-actions --\x3e\n              <div class="input-group col-sm-3 input-group-sm">\n                <div class="btn-group btn-group-sm">\n                  <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                  <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'udp\'">UDP</label>\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removePortBinding($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n              \x3c!-- !protocol-actions --\x3e\n            </div>\n          </div>\n        </div>\n        \x3c!-- !port-mapping-input-list --\x3e\n      </div>\n      \x3c!-- !port-mapping --\x3e\n      \x3c!-- volumes --\x3e\n      <div class="form-group">\n        <div class="col-sm-12" style="margin-top: 5px;">\n          <label class="control-label text-left">Volume mapping</label>\n          <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addVolume()">\n            <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional volume\n          </span>\n        </div>\n        <div class="col-sm-12" style="margin-top: 10px;" ng-if="$ctrl.model.Volumes.length > 0">\n          <span class="small text-muted">Portainer will automatically create and map a local volume when using the <b>auto</b> option.</span>\n        </div>\n        <div ng-repeat="volume in $ctrl.model.Volumes">\n          <div class="col-sm-12" style="margin-top: 10px;">\n            \x3c!-- volume-line1 --\x3e\n            <div class="col-sm-12 form-inline">\n              \x3c!-- container-path --\x3e\n              <div class="input-group input-group-sm col-sm-6">\n                <span class="input-group-addon">container</span>\n                <input type="text" class="form-control" ng-model="volume.container" placeholder="e.g. /path/in/container" />\n              </div>\n              \x3c!-- !container-path --\x3e\n              \x3c!-- volume-type --\x3e\n              <div class="input-group col-sm-5" style="margin-left: 5px;">\n                <div class="btn-group btn-group-sm">\n                  <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'auto\'" ng-click="volume.bind = \'\'">Auto</label>\n                  <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'bind\'" ng-click="volume.bind = \'\'">Bind</label>\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removeVolume($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n              \x3c!-- !volume-type --\x3e\n            </div>\n            \x3c!-- !volume-line1 --\x3e\n            \x3c!-- volume-line2 --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 5px;" ng-if="volume.type !== \'auto\'">\n              <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n              \x3c!-- bind --\x3e\n              <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'bind\'">\n                <span class="input-group-addon">host</span>\n                <input type="text" class="form-control" ng-model="volume.bind" placeholder="e.g. /path/on/host" />\n              </div>\n              \x3c!-- !bind --\x3e\n              \x3c!-- read-only --\x3e\n              <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                <div class="btn-group btn-group-sm">\n                  <label class="btn btn-primary" ng-model="volume.readonly" uib-btn-radio="false">Writable</label>\n                  <label class="btn btn-primary" ng-model="volume.readonly" uib-btn-radio="true">Read-only</label>\n                </div>\n              </div>\n              \x3c!-- !read-only --\x3e\n            </div>\n            \x3c!-- !volume-line2 --\x3e\n          </div>\n        </div>\n      </div>\n      \x3c!-- !volumes --\x3e\n      \x3c!-- labels --\x3e\n      <div class="form-group">\n        <div class="col-sm-12" style="margin-top: 5px;">\n          <label class="control-label text-left">Labels</label>\n          <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addLabel()">\n            <i class="fa fa-plus-circle" aria-hidden="true"></i> add label\n          </span>\n        </div>\n        \x3c!-- labels-input-list --\x3e\n        <div class="col-sm-12">\n          <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n            <div ng-repeat="label in $ctrl.model.Labels" style="margin-top: 2px;">\n              <div class="input-group col-sm-5 input-group-sm">\n                <span class="input-group-addon">name</span>\n                <input type="text" class="form-control" ng-model="label.name" placeholder="e.g. com.example.foo" />\n              </div>\n              <div class="input-group col-sm-5 input-group-sm">\n                <span class="input-group-addon">value</span>\n                <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" />\n              </div>\n              <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removeLabel($index)">\n                <i class="fa fa-trash" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        \x3c!-- !labels-input-list --\x3e\n      </div>\n      \x3c!-- !labels --\x3e\n      \x3c!-- restart_policy --\x3e\n      <div class="form-group">\n        <label for="template_restart_policy" class="col-sm-3 col-lg-2 control-label text-left">\n          Restart policy\n        </label>\n        <div class="col-sm-9 col-lg-10">\n          <select class="form-control" name="template_platform" ng-model="$ctrl.model.RestartPolicy">\n            <option value="always">Always</option>\n            <option value="unless-stopped">Unless stopped</option>\n            <option value="on-failure">On failure</option>\n            <option value="no">None</option>\n          </select>\n        </div>\n      </div>\n      \x3c!-- !restart_policy --\x3e\n      \x3c!-- privileged-mode --\x3e\n      <div class="form-group">\n        <div class="col-sm-12">\n          <label for="tls" class="control-label text-left">\n            Privileged mode\n            <portainer-tooltip position="bottom" message="Start the container in privileged mode."></portainer-tooltip>\n          </label>\n          <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="$ctrl.model.Privileged" /><i></i> </label>\n        </div>\n      </div>\n      \x3c!-- !privileged-mode --\x3e\n      \x3c!-- interactive-mode --\x3e\n      <div class="form-group">\n        <div class="col-sm-12">\n          <label for="tls" class="control-label text-left">\n            Interactive mode\n            <portainer-tooltip position="bottom" message="Start the container in foreground (equivalent of -i -t flags)."></portainer-tooltip>\n          </label>\n          <label class="switch" style="margin-left: 20px;"> <input type="checkbox" ng-model="$ctrl.model.Interactive" /><i></i> </label>\n        </div>\n      </div>\n      \x3c!-- !interactive-mode --\x3e\n    </div>\n    \x3c!-- !container-details --\x3e\n  </div>\n  <div class="col-sm-12 form-section-title interactive" ng-click="$ctrl.state.collapseEnv = !$ctrl.state.collapseEnv">\n    Environment\n    <span class="small space-left">\n      <a ng-if="$ctrl.state.collapseEnv"><i class="fa fa-plus" aria-hidden="true"></i> expand</a>\n      <a ng-if="!$ctrl.state.collapseEnv"><i class="fa fa-minus" aria-hidden="true"></i> collapse</a>\n    </span>\n  </div>\n  \x3c!-- environment-details --\x3e\n  <div uib-collapse="$ctrl.state.collapseEnv">\n    \x3c!-- env --\x3e\n    <div class="form-group">\n      <div class="col-sm-12" style="margin-top: 5px;">\n        <label class="control-label text-left">Environment variables</label>\n        <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addEnvVar()">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> add variable\n        </span>\n      </div>\n      \x3c!-- env-var-list --\x3e\n      <div style="margin-top: 10px;">\n        <div class="col-sm-12 template-envvar" ng-repeat="var in $ctrl.model.Env" style="margin-top: 10px;">\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0;">\n            <div class="boxselector_wrapper">\n              <div>\n                <input type="radio" id="preset_var_{{ $index }}" ng-model="var.type" ng-value="1" ng-change="$ctrl.changeEnvVarType(var)" />\n                <label for="preset_var_{{ $index }}">\n                  <div class="boxselector_header">\n                    <i class="fa fa-user-slash" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Preset\n                  </div>\n                  <p>Preset variable</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="text_var_{{ $index }}" ng-model="var.type" ng-value="2" ng-change="$ctrl.changeEnvVarType(var)" />\n                <label for="text_var_{{ $index }}">\n                  <div class="boxselector_header">\n                    <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Text\n                  </div>\n                  <p>Free text value</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="select_var_{{ $index }}" ng-model="var.type" ng-value="3" />\n                <label for="select_var_{{ $index }}">\n                  <div class="boxselector_header">\n                    <i class="fa fa-list-ol" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Select\n                  </div>\n                  <p>Choose value from list</p>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div class="form-group">\n            <label class="col-sm-2 control-label text-left">\n              Name\n            </label>\n            <div class="col-sm-8">\n              <input type="text" class="form-control" ng-model="var.name" placeholder="env_var" />\n            </div>\n            <div class="col-sm-2">\n              <button class="btn btn-sm btn-danger space-left" type="button" ng-click="$ctrl.removeEnvVar($index)">\n                <i class="fa fa-trash" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n          <div ng-if="var.type == 2 || var.type == 3">\n            <div class="form-group">\n              <label class="col-sm-2 control-label text-left">\n                Label\n              </label>\n              <div class="col-sm-10">\n                <input type="text" class="form-control" ng-model="var.label" placeholder="Choose a label" />\n              </div>\n            </div>\n            <div class="form-group">\n              <label class="col-sm-2 control-label text-left" style="margin-top: 2px;">\n                Description\n              </label>\n              <div class="col-sm-10" style="margin-top: 2px;">\n                <input type="text" class="form-control" ng-model="var.description" placeholder="Tooltip" />\n              </div>\n            </div>\n          </div>\n          <div class="form-group" ng-if="var.type === 1 || var.type === 2">\n            <label class="col-sm-2 control-label text-left">\n              Default value\n            </label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" ng-model="var.default" placeholder="default_value" />\n            </div>\n          </div>\n          <div ng-if="var.type === 3" style="margin-bottom: 5px;" class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">Values</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addEnvVarValue(var)">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> add allowed value\n              </span>\n            </div>\n            \x3c!-- envvar-values-list --\x3e\n            <div class="col-sm-12">\n              <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                <div ng-repeat="val in var.select" style="margin-top: 2px;">\n                  <div class="input-group col-sm-5 input-group-sm">\n                    <span class="input-group-addon">name</span>\n                    <input type="text" class="form-control" ng-model="val.text" placeholder="Yes, I agree" />\n                  </div>\n                  <div class="input-group col-sm-5 input-group-sm">\n                    <span class="input-group-addon">value</span>\n                    <input type="text" class="form-control" ng-model="val.value" placeholder="Y" />\n                  </div>\n                  <div class="input-group col-sm-1 input-group-sm">\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removeEnvVarValue(var, $index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                    <input style="margin-left: 5px;" type="checkbox" ng-model="val.default" id="val_default_{{ $index }}" /><label for="val_default_{{ $index }}" class="space-left"\n                      >Default</label\n                    >\n                  </div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- envvar-values-list --\x3e\n          </div>\n          <div class="col-sm-12" ng-show="$ctrl.model.Env.length > 1">\n            <div class="line-separator"></div>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !env-var-list --\x3e\n    </div>\n    \x3c!-- !env --\x3e\n  </div>\n  \x3c!-- !environment-details --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    Actions\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button\n        type="button"\n        class="btn btn-primary btn-sm"\n        ng-click="$ctrl.formAction()"\n        ng-disabled="$ctrl.actionInProgress || !templateForm.$valid"\n        button-spinner="$ctrl.actionInProgress"\n      >\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">In progress...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("TemplateFormController",[function(){this.state={collapseTemplate:!1,collapseContainer:!1,collapseStack:!1,collapseEnv:!1},this.addPortBinding=function(){this.model.Ports.push({containerPort:"",protocol:"tcp"})},this.removePortBinding=function(e){this.model.Ports.splice(e,1)},this.addVolume=function(){this.model.Volumes.push({container:"",bind:"",readonly:!1,type:"auto"})},this.removeVolume=function(e){this.model.Volumes.splice(e,1)},this.addLabel=function(){this.model.Labels.push({name:"",value:""})},this.removeLabel=function(e){this.model.Labels.splice(e,1)},this.addEnvVar=function(){this.model.Env.push({type:1,name:"",label:"",description:"",default:"",preset:!0,select:[]})},this.removeEnvVar=function(e){this.model.Env.splice(e,1)},this.addEnvVarValue=function(e){e.select=e.select||[],e.select.push({name:"",value:""})},this.removeEnvVarValue=function(e,t){e.select.splice(t,1)},this.changeEnvVarType=function(e){e.preset=1===e.type}}])},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(110),i=n(1290);angular.module("portainer.app").component("groupAssociationTable",{templateUrl:i,controller:function(){this.state={orderBy:"Name",reverseOrder:!1,paginatedItemLimit:"10",textFilter:"",loading:!0,pageNumber:1},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e},this.onTextFilterChange=function(){this.paginationChangedAction()},this.onPageChanged=function(e){this.paginationState.pageNumber=e,this.paginationChangedAction()},this.onPaginationLimitChanged=function(){this.paginationChangedAction()},this.paginationChangedAction=function(){this.retrievePage(this.pageType,this.tableType)},this.$onChanges=function(e){e.loaded&&e.loaded.currentValue&&this.paginationChangedAction()},this.tagIdsToTagNames=function(e){return r.default.idsToTagNames(this.tags,e).join(", ")||"-"},this.groupIdToGroupName=function(e){var t=Object(a.a)(this.groups,{Id:e});return t?t.Name:""}},bindings:{paginationState:"=",loaded:"<",pageType:"<",tableType:"@",retrievePage:"<",dataset:"<",entryClick:"<",emptyDatasetMessage:"@",tags:"<",showTags:"<",groups:"<",showGroups:"<",hasBackendPagination:"<"}})},function(e,t){var n="app/portainer/components/group-association-table/groupAssociationTable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <table class="table table-hover">\n    <div class="col-sm-12">\n      <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n      <input\n        type="text"\n        class="searchInput"\n        ng-model="$ctrl.paginationState.filter"\n        ng-change="$ctrl.onTextFilterChange()"\n        ng-model-options="{ debounce: 300 }"\n        placeholder="Search..."\n      />\n    </div>\n    <thead>\n      <tr>\n        <th>\n          Name\n        </th>\n        <th ng-if="$ctrl.showGroups">\n          Group\n        </th>\n        <th ng-if="$ctrl.showTags">\n          Tags\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        ng-if="!$ctrl.hasBackendPagination"\n        ng-click="$ctrl.entryClick(item)"\n        class="interactive"\n        dir-paginate="item in $ctrl.dataset | filter:$ctrl.paginationState.filter | itemsPerPage: $ctrl.paginationState.limit"\n        pagination-id="$ctrl.tableType"\n      >\n        <td>\n          {{ item.Name | truncate: 64 }}\n        </td>\n        <td ng-if="$ctrl.showGroups">\n          {{ $ctrl.groupIdToGroupName(item.GroupId) | truncate: 64 }}\n        </td>\n        <td ng-if="$ctrl.showTags">\n          {{ $ctrl.tagIdsToTagNames(item.TagIds) | arraytostr | truncate: 64 }}\n        </td>\n      </tr>\n      <tr\n        ng-if="$ctrl.hasBackendPagination"\n        ng-click="$ctrl.entryClick(item)"\n        class="interactive"\n        dir-paginate="item in $ctrl.dataset | itemsPerPage: $ctrl.paginationState.limit"\n        pagination-id="$ctrl.tableType"\n        total-items="$ctrl.paginationState.totalCount"\n      >\n        <td>\n          {{ item.Name | truncate: 64 }}\n        </td>\n        <td ng-if="$ctrl.showGroups">\n          {{ $ctrl.groupIdToGroupName(item.GroupId) | truncate: 64 }}\n        </td>\n        <td ng-if="$ctrl.showTags">\n          {{ $ctrl.tagIdsToTagNames(item.TagIds) | truncate: 64 }}\n        </td>\n      </tr>\n\n      <tr ng-if="!$ctrl.dataset">\n        <td colspan="3" class="text-center text-muted">Loading...</td>\n      </tr>\n      <tr ng-if="$ctrl.dataset.length === 0">\n        <td colspan="3" class="text-center text-muted">{{ $ctrl.emptyDatasetMessage }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <div class="footer" ng-if="$ctrl.dataset">\n    <div class="paginationControls">\n      <form class="form-inline">\n        <span class="limitSelector">\n          <span style="margin-right: 5px;">\n            Items per page\n          </span>\n          <select ng-model="$ctrl.paginationState.limit" ng-change="$ctrl.onPaginationLimitChanged()">\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </span>\n        <dir-pagination-controls pagination-id="$ctrl.tableType" max-size="5" on-page-change="$ctrl.onPageChanged(newPageNumber, oldPageNumber)"></dir-pagination-controls>\n      </form>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").directive("rdHeaderContent",["Authentication",function(e){return{requires:"^rdHeader",transclude:!0,link:function(t){t.username=e.getUserDetails().username},template:'<div class="breadcrumb-links"><div class="pull-left" ng-transclude></div><div class="pull-right" ng-if="username"><a ui-sref="portainer.account" style="margin-right: 5px;"><u><i class="fa fa-wrench" aria-hidden="true"></i> my account </u></a><a ui-sref="portainer.auth({logout: true})" class="text-danger" style="margin-right: 25px;"><u><i class="fa fa-sign-out-alt" aria-hidden="true"></i> log out</u></a></div></div>',restrict:"E"}}])},function(e,t){angular.module("portainer.app").directive("rdHeaderTitle",["Authentication",function(e){return{requires:"^rdHeader",scope:{titleText:"@"},link:function(t){t.username=e.getUserDetails().username},transclude:!0,template:'<div class="page white-space-normal">{{titleText}}<span class="header_title_content" ng-transclude></span><span class="pull-right user-box" ng-if="username"><i class="fa fa-user-circle" aria-hidden="true"></i> {{username}}</span><a ui-sref="portainer.support" class="pull-right" style="font-size:14px;margin-right:15px;margin-top:2px;"><span class="fa fa-life-ring fa-fw red-icon"></span>  Portainer support</a></div>',restrict:"E"}}])},function(e,t){angular.module("portainer.app").directive("rdHeader",(function(){return{scope:{ngModel:"="},transclude:!0,template:'<div class="row header"><div id="loadingbar-placeholder"></div><div class="col-xs-12"><div class="meta" ng-transclude></div></div></div>',restrict:"EA"}}))},function(e,t,n){var a=n(1295);angular.module("portainer.app").component("informationPanelOffline",{templateUrl:a,controller:"InformationPanelOfflineController"})},function(e,t){var n="app/portainer/components/information-panel-offline/informationPanelOffline.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<information-panel title-text="Offline mode" cant-dismiss="true">\n  <span class="small">\n    <p class="text-muted">\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      This endpoint is currently offline (read-only). Data shown is based on the latest available snapshot.\n    </p>\n    <p class="text-muted">\n      <i class="fa fa-clock" aria-hidden="true" style="margin-right: 2px;"></i>\n      Last snapshot: {{ $ctrl.snapshotTime | getisodatefromtimestamp }}\n    </p>\n    <button type="button" class="btn btn-xs btn-primary" ng-click="$ctrl.triggerSnapshot()" ng-if="$ctrl.showRefreshButton">\n      <i class="fa fa-sync space-right" aria-hidden="true"></i>Refresh\n    </button>\n  </span>\n</information-panel>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("InformationPanelOfflineController",["$state","EndpointProvider","EndpointService","Authentication","Notifications",function(e,t,n,a,r){var i=this;this.$onInit=function(){var e=t.endpointID();i.showRefreshButton=a.isAdmin(),n.endpoint(e).then((function(e){i.snapshotTime=e.Snapshots[0].Time})).catch((function(e){r.error("Failure",e,"Unable to retrieve endpoint information")}))},this.triggerSnapshot=function(){var a=t.endpointID();n.snapshotEndpoint(a).then((function(){e.reload()})).catch((function(e){r.error("Failure",e,"An error occured during endpoint snapshot")}))}}])},function(e,t,n){var a=n(1298);angular.module("portainer.app").component("informationPanel",{templateUrl:a,bindings:{titleText:"@",dismissAction:"&?"},transclude:!0})},function(e,t){var n="app/portainer/components/information-panel/informationPanel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="col-sm-12 form-section-title">\n          <span style="float: left;">\n            {{ $ctrl.titleText }}\n          </span>\n          <span class="small" style="float: right;" ng-if="$ctrl.dismissAction">\n            <a ng-click="$ctrl.dismissAction()"><i class="fa fa-times"></i> dismiss</a>\n          </span>\n        </div>\n        <div class="form-group">\n          <ng-transclude></ng-transclude>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").directive("rdLoading",(function(){return{restrict:"AE",template:'<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'}}))},function(e,t,n){var a=n(1301);angular.module("portainer.app").component("motdPanel",{templateUrl:a,bindings:{motd:"<",dismissAction:"&?"},transclude:!0})},function(e,t){var n="app/portainer/components/motd-panel/motdPanel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body classes="motd-body">\n        <style ng-if="$ctrl.motd.Style">\n          {{ $ctrl.motd.Style }}\n        </style>\n        <div ng-style="{{ $ctrl.motd.ContentLayout ? $ctrl.motd.ContentLayout : {} }}">\n          <div class="col-sm-12 form-section-title">\n            <span style="float: left;">\n              {{ $ctrl.motd.Title }}\n            </span>\n            <span class="small" style="float: right;" ng-if="$ctrl.dismissAction">\n              <a ng-click="$ctrl.dismissAction()"><i class="fa fa-times"></i> dismiss</a>\n            </span>\n          </div>\n          <div class="form-group">\n            <span class="text-muted">\n              <p ng-bind-html="$ctrl.motd.Message"></p>\n            </span>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1303);angular.module("portainer.app").component("multiEndpointSelector",{templateUrl:a,controller:"MultiEndpointSelectorController",bindings:{model:"=",endpoints:"<",groups:"<",tags:"<"}})},function(e,t){var n="app/portainer/components/multi-endpoint-selector/multiEndpointSelector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<ui-select multiple ng-model="$ctrl.model" close-on-select="false">\n  <ui-select-match placeholder="Select one or multiple endpoint(s)">\n    <span>\n      {{ $item.Name }}\n      <span ng-if="$item.TagIds.length"> - <i class="fa fa-tags"></i> {{ $ctrl.tagIdsToTagNames($item.TagIds) | arraytostr }}</span>\n    </span>\n  </ui-select-match>\n  <ui-select-choices\n    group-by="$ctrl.groupEndpoints"\n    group-filter="$ctrl.sortGroups"\n    repeat="endpoint.Id as endpoint in $ctrl.endpoints | filter: { Name: $select.search }"\n  >\n    <span>\n      {{ endpoint.Name }}\n      <span ng-if="endpoint.TagIds.length"> - <i class="fa fa-tags"></i> {{ $ctrl.tagIdsToTagNames(endpoint.TagIds) | arraytostr }}</span>\n    </span>\n  </ui-select-choices>\n</ui-select>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(250),r=n(5),i=n(39),o=n(110),s=n(1),l=n.n(s);function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.sortGroups=this.sortGroups.bind(this),this.groupEndpoints=this.groupEndpoints.bind(this),this.tagIdsToTagNames=this.tagIdsToTagNames.bind(this)}var t,n,s;return t=e,(n=[{key:"sortGroups",value:function(e){return Object(i.a)(e,["name"])}},{key:"groupEndpoints",value:function(e){for(var t=0;t<this.availableGroups.length;t++){var n=this.availableGroups[t];if(e.GroupId===n.Id)return n.Name}}},{key:"tagIdsToTagNames",value:function(e){return o.default.idsToTagNames(this.tags,e)}},{key:"filterEmptyGroups",value:function(){var e=this;this.availableGroups=Object(r.a)(this.groups,(function(t){return Object(a.a)(e.endpoints,(function(e){return e.GroupId==t.Id}))}))}},{key:"$onInit",value:function(){this.filterEmptyGroups()}},{key:"$onChanges",value:function(e){var t=e.endpoints,n=e.groups;(t||n)&&this.filterEmptyGroups()}}])&&c(t.prototype,n),s&&c(t,s),e}();t.default=d,l.a.module("portainer.app").controller("MultiEndpointSelectorController",d)},function(e,t){angular.module("portainer.app").directive("onEnterKey",[function(){return{restrict:"A",link:function(e,t,n){t.bind("keydown keypress",(function(t){13===t.which&&(t.preventDefault(),e.$apply((function(){e.$eval(n.onEnterKey)})))}))}}}])},function(e,t,n){var a=n(1307);angular.module("portainer.app").component("productItem",{templateUrl:a,bindings:{model:"<",goTo:"<"}})},function(e,t,n){var a="app/portainer/components/product-list/product-item/productItem.html",r='\x3c!-- extension --\x3e\n<div class="blocklist-item" ng-click="$ctrl.goTo($ctrl.model)">\n  <div class="blocklist-item-box">\n    \x3c!-- extension-image --\x3e\n    <span class="blocklist-item-logo">\n      <img class="blocklist-item-logo" ng-if="$ctrl.model.Id == 1 || $ctrl.model.Id == 2 || $ctrl.model.Id == 3" src="'+n(1308)+'" />\n      <img class="blocklist-item-logo" ng-if="$ctrl.model.Id == 4 || $ctrl.model.Id == 5" src="'+n(1309)+'" />\n    </span>\n    \x3c!-- !extension-image --\x3e\n    \x3c!-- extension-details --\x3e\n    <span class="col-sm-12">\n      \x3c!-- blocklist-item-line1 --\x3e\n      <div class="blocklist-item-line">\n        <span>\n          <span class="blocklist-item-title">\n            {{ $ctrl.model.Name }}\n          </span>\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line1 --\x3e\n      \x3c!-- blocklist-item-line2 --\x3e\n      <div class="blocklist-item-line">\n        <span>\n          <span class="blocklist-item-desc">\n            {{ $ctrl.model.ShortDescription }}\n          </span>\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line2 --\x3e\n    </span>\n    \x3c!-- !extension-details --\x3e\n  </div>\n  \x3c!-- !extension --\x3e\n</div>\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t,n){e.exports=n.p+"6b03ffb82223ffdcc7fc093f199f758b.png"},function(e,t,n){e.exports=n.p+"249bec13697c484bcfe40241cabfd053.png"},function(e,t,n){var a=n(1311);angular.module("portainer.app").component("productList",{templateUrl:a,bindings:{titleText:"@",products:"<",goTo:"<"}})},function(e,t){var n="app/portainer/components/product-list/productList.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa fa-bolt" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n\n      <div class="blocklist">\n        <product-item ng-repeat="product in $ctrl.products" model="product" go-to="$ctrl.goTo"></product-item>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1313);angular.module("portainer.app").component("slider",{templateUrl:a,controller:"SliderController",bindings:{model:"=",onChange:"&",floor:"<",ceil:"<",step:"<",precision:"<"}})},function(e,t){var n="app/portainer/components/slider/slider.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <rzslider rz-slider-options="$ctrl.options" rz-slider-model="$ctrl.model"></rzslider>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("SliderController",(function(){var e=this;e.options={floor:e.floor,ceil:e.ceil,step:e.step,precision:e.precision,showSelectionBar:!0,enforceStep:!1,translate:function(t,n,a){return"floor"===a&&0===e.floor||0===t?"unlimited":t},onChange:function(){e.onChange()}}}))},function(e,t){angular.module("portainer.app").controller("StackDuplicationFormController",["Notifications",function(e){var t=this;function n(){return t.formValues.endpoint&&t.formValues.endpoint.Id}t.state={duplicationInProgress:!1,migrationInProgress:!1},t.formValues={endpoint:null,newName:""},t.isFormValidForDuplication=function(){return n()&&t.formValues.newName},t.isFormValidForMigration=n,t.duplicateStack=function(){if(!t.formValues.newName)return void e.error("Failure",null,"Stack name is required for duplication");t.state.duplicationInProgress=!0,t.onDuplicate({endpointId:t.formValues.endpoint.Id,name:t.formValues.newName?t.formValues.newName:void 0}).finally((function(){t.state.duplicationInProgress=!1}))},t.migrateStack=function(){t.state.migrationInProgress=!0,t.onMigrate({endpointId:t.formValues.endpoint.Id,name:t.formValues.newName?t.formValues.newName:void 0}).finally((function(){t.state.migrationInProgress=!1}))},t.isMigrationButtonDisabled=function(){return!t.isFormValidForMigration()||t.state.duplicationInProgress||t.state.migrationInProgress||t.formValues.endpoint&&t.formValues.endpoint.Id===t.currentEndpointId}}])},function(e,t,n){var a=n(1317);angular.module("portainer.app").component("stackDuplicationForm",{templateUrl:a,controller:"StackDuplicationFormController",bindings:{onDuplicate:"&",onMigrate:"&",endpoints:"<",groups:"<",currentEndpointId:"<"}})},function(e,t){var n="app/portainer/components/stack-duplication-form/stack-duplication-form.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div authorization="PortainerStackMigrate">\n  <div class="col-sm-12 form-section-title">\n    Stack duplication / migration\n  </div>\n  <div class="form-group">\n    <span class="small" style="margin-top: 10px;">\n      <p class="text-muted">\n        This feature allows you to duplicate or migrate this stack.\n      </p>\n    </span>\n    <div>\n      <div class="form-group">\n        <input class="form-control" placeholder="Stack name (optional for migration)" aria-placeholder="Stack name" ng-model="$ctrl.formValues.newName" />\n      </div>\n      <endpoint-selector ng-if="$ctrl.endpoints && $ctrl.groups" model="$ctrl.formValues.endpoint" endpoints="$ctrl.endpoints" groups="$ctrl.groups"></endpoint-selector>\n      <button\n        class="btn btn-sm btn-primary"\n        ng-click="$ctrl.migrateStack()"\n        ng-disabled="$ctrl.isMigrationButtonDisabled()"\n        style="margin-top: 7px; margin-left: 0;"\n        button-spinner="$ctrl.state.migrationInProgress"\n      >\n        <span ng-hide="$ctrl.state.migrationInProgress"> <i class="fa fa-long-arrow-alt-right space-right" aria-hidden="true"></i> Migrate </span>\n        <span ng-show="$ctrl.state.migrationInProgress">Migration in progress...</span>\n      </button>\n      <button\n        class="btn btn-sm btn-primary"\n        ng-click="$ctrl.duplicateStack()"\n        ng-disabled="!$ctrl.isFormValidForDuplication() || $ctrl.state.duplicationInProgress || $ctrl.state.migrationInProgress"\n        style="margin-top: 7px; margin-left: 0;"\n        button-spinner="$ctrl.state.duplicationInProgress"\n      >\n        <span ng-hide="$ctrl.state.duplicationInProgress"> <i class="fa fa-clone space-right" aria-hidden="true"></i> Duplicate </span>\n        <span ng-show="$ctrl.state.duplicationInProgress">Duplication in progress...</span>\n      </button>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(1319);angular.module("portainer.app").component("tagSelector",{templateUrl:a,controller:"TagSelectorController",bindings:{tags:"<",model:"=",onCreate:"<",allowCreate:"<"}})},function(e,t){var n="app/portainer/components/tag-selector/tagSelector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-show="$ctrl.model.length > 0" class="col-sm-12" style="padding: 0; margin-bottom: 15px;">\n  <label class="col-sm-3 col-lg-2 control-label text-left">\n    Selected tags\n  </label>\n  <div class="col-sm-9 col-lg-10" style="padding-top: 4px;">\n    <span class="tag space-right interactive" ng-repeat="tag in $ctrl.state.selectedTags" ng-click="$ctrl.removeTag(tag)">\n      {{ tag.Name }}\n      <a title="Remove tag" ng-click="$ctrl.removeTag(tag)" style="margin-left: 2px;">\n        <span class="fa fa-trash-alt white-icon" aria-hidden="true"></span>\n      </a>\n    </span>\n  </div>\n</div>\n<div class="col-sm-12" style="padding: 0;">\n  <label for="tags" class="col-sm-3 col-lg-2 control-label text-left">\n    Tags\n  </label>\n  <div class="col-sm-9 col-lg-10" ng-if="$ctrl.allowCreate || $ctrl.tags.length > 0">\n    <input\n      type="text"\n      ng-model="$ctrl.state.selectedValue"\n      id="tags"\n      class="form-control"\n      placeholder="Select tags..."\n      uib-typeahead="tag.Id as tag.Name for tag in $ctrl.filterTags($viewValue)"\n      typeahead-on-select="$ctrl.selectTag($item, $model, $label)"\n      typeahead-no-results="$ctrl.state.noResult"\n      typeahead-show-hint="true"\n      typeahead-min-length="0"\n    />\n  </div>\n  <div class="col-sm-9 col-lg-10" ng-if="!$ctrl.allowCreate && $ctrl.tags.length === 0">\n    <span class="small text-muted">\n      No tags available.\n    </span>\n  </div>\n</div>\n<div class="col-sm-offset-3 col-lg-offset-2 col-sm-12" ng-if="!$ctrl.allowCreate && $ctrl.state.noResult" style="margin-top: 2px;">\n  <span class="small text-muted">\n    No tags matching your filter.\n  </span>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(4),r=n(2),i=n(6),o=n(5),s=n(25),l=n(1),c=n.n(l);function d(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.state={selectedValue:"",selectedTags:[],noResult:!1}}var t,n,l;return t=e,(n=[{key:"removeTag",value:function(e){Object(s.a)(this.model,(function(t){return e.Id===t})),Object(s.a)(this.state.selectedTags,{Id:e.Id})}},{key:"selectTag",value:function(e){this.state.selectedValue="",e.create&&this.allowCreate?this.onCreate(e.value):(this.state.selectedTags.push(e),this.model.push(e.Id))}},{key:"filterTags",value:function(e){var t=this,n=Object(o.a)(this.tags,(function(e){return!Object(i.a)(t.model,e.Id)}));if(!e)return n.slice(0,7);var a=Object(r.a)(this.tags,(function(t){return t.Name===e}));return n=Object(o.a)(n,(function(t){return Object(i.a)(t.Name.toLowerCase(),e.toLowerCase())})),a||!this.allowCreate?n.slice(0,7):n.slice(0,6).concat({Name:'Create "'.concat(e,'"'),create:!0,value:e})}},{key:"generateSelectedTags",value:function(e,t){this.state.selectedTags=Object(a.a)(e,(function(e){return Object(r.a)(t,(function(t){return t.Id===e}))}))}},{key:"$onInit",value:function(){this.generateSelectedTags(this.model,this.tags)}},{key:"$onChanges",value:function(e){var t=e.tags,n=e.model,a=t&&t.currentValue?t.currentValue:this.tags,r=n&&n.currentValue?n.currentValue:this.model;r&&a&&this.generateSelectedTags(r,a)}}])&&d(t.prototype,n),l&&d(t,l),e}();t.default=u,c.a.module("portainer.app").controller("TagSelectorController",u)},function(e,t,n){var a=n(1322);angular.module("portainer.app").component("templateItem",{templateUrl:a,bindings:{model:"=",onSelect:"<",onDelete:"<",showUpdateAction:"<",showDeleteAction:"<"}})},function(e,t){var n="app/portainer/components/template-list/template-item/templateItem.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'\x3c!-- template --\x3e\n<div ng-class="{ \'blocklist-item--selected\': $ctrl.model.Selected }" class="blocklist-item" ng-click="$ctrl.onSelect($ctrl.model)">\n  <div class="blocklist-item-box">\n    \x3c!-- template-image --\x3e\n    <span ng-if="$ctrl.model.Logo">\n      <img class="blocklist-item-logo" ng-src="{{ $ctrl.model.Logo }}" />\n    </span>\n    <span class="blocklist-item-logo" ng-if="!$ctrl.model.Logo">\n      <i class="fa fa-rocket fa-4x blue-icon" aria-hidden="true"></i>\n    </span>\n    \x3c!-- !template-image --\x3e\n    \x3c!-- template-details --\x3e\n    <span class="col-sm-12">\n      \x3c!-- blocklist-item-line1 --\x3e\n      <div class="blocklist-item-line">\n        <span>\n          <span class="blocklist-item-title">\n            {{ $ctrl.model.Title }}\n          </span>\n          <span class="space-left blocklist-item-subtitle">\n            <span>\n              <i class="fab fa-linux" aria-hidden="true" ng-if="$ctrl.model.Platform === \'linux\' || !$ctrl.model.Platform"></i>\n              <span ng-if="!$ctrl.model.Platform"> &amp; </span>\n              <i class="fab fa-windows" aria-hidden="true" ng-if="$ctrl.model.Platform === \'windows\' || !$ctrl.model.Platform"></i>\n            </span>\n            <span>\n              {{ $ctrl.model.Type === 1 ? \'container\' : \'stack\' }}\n            </span>\n          </span>\n        </span>\n        <span class="text-small">\n          <a ui-sref="portainer.templates.template({ id: $ctrl.model.Id })" class="btn btn-xs btn-primary" ng-click="$event.stopPropagation();" ng-if="$ctrl.showUpdateAction">\n            <i class="fa fa-edit" aria-hidden="true"></i>\n            Update\n          </a>\n          <btn class="btn btn-xs btn-danger" ng-click="$event.stopPropagation(); $ctrl.onDelete($ctrl.model)" ng-if="$ctrl.showDeleteAction">\n            <i class="fa fa-trash" aria-hidden="true"></i> Delete\n          </btn>\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line1 --\x3e\n      \x3c!-- blocklist-item-line2 --\x3e\n      <div class="blocklist-item-line">\n        <span class="blocklist-item-desc">\n          {{ $ctrl.model.Description }}\n        </span>\n        <span class="small text-muted" ng-if="$ctrl.model.Categories.length > 0">\n          {{ $ctrl.model.Categories.join(\', \') }}\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line2 --\x3e\n    </span>\n    \x3c!-- !template-details --\x3e\n  </div>\n  \x3c!-- !template --\x3e\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(6),r=n(44),i=n(39);angular.module("portainer.app").controller("TemplateListController",["DatatableService",function(e){var t=this;this.state={textFilter:"",selectedCategory:"",categories:[],showContainerTemplates:!0},this.onTextFilterChange=function(){e.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.updateCategories=function(){for(var e=[],n=0;n<t.templates.length;n++){var a=t.templates[n];(1===a.Type&&t.state.showContainerTemplates||2===a.Type&&t.showSwarmStacks||3===a.Type&&!t.showSwarmStacks)&&(e=e.concat(a.Categories))}this.state.categories=Object(i.a)(Object(r.a)(e))},this.filterByCategory=function(e){return!t.state.selectedCategory||Object(a.a)(e.Categories,t.state.selectedCategory)},this.filterByType=function(e){return!!(1===e.Type&&t.state.showContainerTemplates||2===e.Type&&t.showSwarmStacks||3===e.Type&&!t.showSwarmStacks)},this.$onInit=function(){this.showSwarmStacks&&(this.state.showContainerTemplates=!1),this.updateCategories();var t=e.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t)}}])},function(e,t,n){var a=n(1325);angular.module("portainer.app").component("templateList",{templateUrl:a,controller:"TemplateListController",bindings:{titleText:"@",titleIcon:"@",templates:"<",tableKey:"@",selectAction:"<",deleteAction:"<",showSwarmStacks:"<",showAddAction:"<",showUpdateAction:"<",showDeleteAction:"<"}})},function(e,t){var n="app/portainer/components/template-list/templateList.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle"> <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }} </div>\n      </div>\n\n      <div class="actionBar">\n        <div>\n          <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.templates.new" ng-if="$ctrl.showAddAction">\n            <i class="fa fa-plus space-right" aria-hidden="true"></i>Add template\n          </button>\n          <span ng-class="{ \'pull-right\': $ctrl.showAddAction }" style="width: 25%;">\n            <ui-select ng-model="$ctrl.state.selectedCategory">\n              <ui-select-match placeholder="Select a category" allow-clear="true">\n                <span>{{ $select.selected }}</span>\n              </ui-select-match>\n              <ui-select-choices repeat="category in ($ctrl.state.categories | filter: $select.search)">\n                <span>{{ category }}</span>\n              </ui-select-choices>\n            </ui-select>\n          </span>\n        </div>\n\n        <div class="small text-muted" style="margin: 15px 0 0 5px;">\n          <label for="show_stacks" class="control-label text-left">\n            Show container templates\n          </label>\n          <label class="switch" style="margin-left: 20px;">\n            <input type="checkbox" name="show_stacks" ng-model="$ctrl.state.showContainerTemplates" ng-change="$ctrl.updateCategories()" /><i></i>\n          </label>\n        </div>\n      </div>\n\n      <div class="searchBar" style="border-top: 2px solid #f6f6f6;">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="Search..."\n          auto-focus\n          ng-model-options="{ debounce: 300 }"\n        />\n      </div>\n\n      <div class="blocklist">\n        <template-item\n          ng-repeat="template in $ctrl.templates | filter: $ctrl.filterByType | filter:$ctrl.filterByCategory | filter:$ctrl.state.textFilter"\n          model="template"\n          show-update-action="$ctrl.showUpdateAction"\n          show-delete-action="$ctrl.showDeleteAction"\n          on-select="($ctrl.selectAction)"\n          on-delete="($ctrl.deleteAction)"\n        ></template-item>\n        <div ng-if="!$ctrl.templates" class="text-center text-muted">\n          Loading...\n        </div>\n        <div ng-if="($ctrl.templates | filter: $ctrl.filterByType | filter: $ctrl.filterByCategory | filter: $ctrl.state.textFilter).length === 0" class="text-center text-muted">\n          No templates available.\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").directive("rdTemplateWidget",(function(){return{scope:{ngModel:"="},transclude:!0,template:'<div class="widget template-widget" id="template-widget" ng-transclude></div>',restrict:"EA"}}))},function(e,t){angular.module("portainer.app").directive("portainerTooltip",[function(){return{scope:{message:"@",position:"@"},template:'<span class="interactive" tooltip-append-to-body="true" tooltip-placement="{{position}}" tooltip-class="portainer-tooltip" uib-tooltip="{{message}}"><i class="fa fa-question-circle tooltip-icon" aria-hidden="true"></i></span>',restrict:"E"}}])},function(e,t){angular.module("portainer.app").directive("rdWidgetBody",(function(){return{requires:"^rdWidget",scope:{loading:"@?",classes:"@?"},transclude:!0,template:'<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',restrict:"E"}}))},function(e,t){angular.module("portainer.app").directive("rdWidgetCustomHeader",(function(){return{requires:"^rdWidget",scope:{titleText:"=",icon:"="},transclude:!0,template:'<div class="widget-header"><div class="row"><span class="pull-left"><img class="custom-header-ico" ng-src="{{icon}}" ng-if="icon"></img><i class="fa fa-rocket" aria-hidden="true" ng-if="!icon"></i> <span class="text-muted"> {{titleText}} </span> </span><span class="pull-right col-xs-6 col-sm-4" ng-transclude></span></div></div>',restrict:"E"}}))},function(e,t){angular.module("portainer.app").directive("rdWidgetFooter",(function(){return{requires:"^rdWidget",transclude:!0,template:'<div class="widget-footer" ng-transclude></div>',restrict:"E"}}))},function(e,t){angular.module("portainer.app").directive("rdWidgetHeader",(function(){return{requires:"^rdWidget",scope:{titleText:"@",icon:"@",classes:"@?"},transclude:!0,template:'<div class="widget-header"><div class="row"><span ng-class="classes" class="pull-left"><i class="fa" ng-class="icon"></i> {{titleText}} </span><span ng-class="classes" class="pull-right" ng-transclude></span></div></div>',restrict:"E"}}))},function(e,t){angular.module("portainer.app").directive("rdWidgetTaskbar",(function(){return{requires:"^rdWidget",scope:{classes:"@?"},transclude:!0,template:'<div class="widget-header"><div class="row"><div ng-class="classes" ng-transclude></div></div></div>',restrict:"E"}}))},function(e,t){angular.module("portainer.app").directive("rdWidget",(function(){return{scope:{ngModel:"="},transclude:!0,template:'<div class="widget" ng-transclude></div>',restrict:"EA"}}))},function(e,t,n){"use strict";n.r(t);var a=n(55),r=n(96),i=n(420),o=n(3),s=n.n(o),l=n(84),c=n.n(l),d=n(7);angular.module("portainer.app").filter("truncate",(function(){return function(e,t,n){return isNaN(t)&&(t=10),void 0===n&&(n="..."),e.length<=t||e.length-n.length<=t?e:String(e).substring(0,t-n.length)+n}})).filter("truncatelr",(function(){return function(e,t,n,a){return t=isNaN(t)?50:t,n=isNaN(n)?25:n,a=isNaN(a)?25:a,e.length<=t?e:e.substring(0,n)+"[...]"+e.substring(e.length-a,e.length)}})).filter("capitalize",(function(){return function(e){return e?Object(i.a)(e):""}})).filter("stripprotocol",(function(){return function(e){return e.replace(/.*?:\/\//g,"")}})).filter("humansize",(function(){return function(e,t,n){if(t||(t=1),n||(n=10),e||0===e)return c()(e,{base:n,round:t})}})).filter("getisodatefromtimestamp",(function(){return function(e){return s.a.unix(e).format("YYYY-MM-DD HH:mm:ss")}})).filter("getisodate",(function(){return function(e){return s()(e).format("YYYY-MM-DD HH:mm:ss")}})).filter("key",(function(){return function(e,t){return e.slice(0,e.indexOf(t))}})).filter("value",(function(){return function(e,t){return e.slice(e.indexOf(t)+1)}})).filter("emptyobject",(function(){return function(e){return Object(r.a)(e)}})).filter("ipaddress",(function(){return function(e){return e.slice(0,e.indexOf("/"))}})).filter("arraytostr",(function(){return function(e,t){return e?Object(a.a)(e,t):""}})).filter("labelsToStr",(function(){return function(e,t){return e?Object(a.a)(e.map((function(e){return e.key+":"+e.value})),t):""}})).filter("endpointtypename",(function(){return function(e){return 1===e?"Docker":2===e?"Agent":3===e?"Azure ACI":4===e?"Edge Agent":""}})).filter("endpointtypeicon",(function(){return function(e){return 3===e?"fab fa-microsoft":4===e?"fa fa-cloud":"fab fa-docker"}})).filter("ownershipicon",(function(){return function(e){switch(e){case d.ResourceControlOwnership.PRIVATE:case d.ResourceControlOwnership.ADMINISTRATORS:return"fa fa-eye-slash";case d.ResourceControlOwnership.RESTRICTED:return"fa fa-users";default:return"fa fa-eye"}}})).filter("endpointstatusbadge",(function(){return function(e){return 2===e?"danger":"success"}}))},function(e,t,n){"use strict";n.r(t);var a=n(2);angular.module("portainer.app").factory("EndpointHelper",[function(){var e={};function t(e,t){return Object(a.a)(t,(function(t){return t.Id===e.GroupId}))}return e.mapGroupNameToEndpoint=function(e,n){for(var a=0;a<e.length;a++){var r=e[a],i=t(r,n);i&&(r.GroupName=i.Name)}},e}])},function(e,t){angular.module("portainer.app").factory("FormHelper",[function(){"use strict";var e={removeInvalidEnvVars:function(e){for(var t=e.length-1;t>=0;t--){var n=e[t];n.value&&n.name||e.splice(t,1)}return e}};return e}])},function(e,t,n){"use strict";n.r(t);var a=n(6),r=n(1),i=n.n(r);function o(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.PREDEFINED_NETWORKS=t}var t,n,r;return e.$inject=["PREDEFINED_NETWORKS"],t=e,(n=[{key:"isSystemNetwork",value:function(e){return Object(a.a)(this.PREDEFINED_NETWORKS,e.Name)}}])&&o(t.prototype,n),r&&o(t,r),e}();t.default=s,i.a.module("portainer.app").service("NetworkHelper",s)},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(9),i=n(4),o=n(1),s=n.n(o),l=n(7),c=n(153);function d(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,o;return t=e,(n=[{key:"RCViewModelToOwnershipParameters",value:function(e,t){if(!t)return new c.ResourceControlOwnershipParameters(!0);var n=!1,a=!1,r=[],o=[];switch(t.Ownership){case l.ResourceControlOwnership.PUBLIC:a=!0;break;case l.ResourceControlOwnership.PRIVATE:r=[e];break;case l.ResourceControlOwnership.RESTRICTED:r=Object(i.a)(t.UserAccesses,(function(e){return e.UserId})),o=Object(i.a)(t.TeamAccesses,(function(e){return e.TeamId}));break;default:n=!0}return new c.ResourceControlOwnershipParameters(n,a,r,o)}},{key:"RCFormDataToOwnershipParameters",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];t.AccessControlEnabled||(t.Ownership=l.ResourceControlOwnership.PUBLIC);var a=!1,r=!1,o=[],s=[];switch(t.Ownership){case l.ResourceControlOwnership.PUBLIC:r=!0;break;case l.ResourceControlOwnership.PRIVATE:o.push(e);break;case l.ResourceControlOwnership.RESTRICTED:o=Object(i.a)(t.AuthorizedUsers,(function(e){return e.Id})),s=Object(i.a)(t.AuthorizedTeams,(function(e){return e.Id}));break;default:a=!0}return new c.ResourceControlOwnershipParameters(a,r,o,s,n)}},{key:"RCPanelDataToOwnershipParameters",value:function(e){var t=e.Ownership===l.ResourceControlOwnership.ADMINISTRATORS,n=e.Ownership===l.ResourceControlOwnership.PUBLIC,a=n||t?[]:Object(i.a)(e.Ownership_Users,(function(e){return e.Id})),r=n||t?[]:Object(i.a)(e.Ownership_Teams,(function(e){return e.Id}));return new c.ResourceControlOwnershipParameters(t,n,a,r)}},{key:"retrieveAuthorizedUsers",value:function(e,t){var n=[];return Object(r.a)(e.UserAccesses,(function(e){var r=Object(a.a)(t,{Id:e.UserId});r&&n.push(r)})),n}},{key:"retrieveAuthorizedTeams",value:function(e,t){var n=[];return Object(r.a)(e.TeamAccesses,(function(e){var r=Object(a.a)(t,{Id:e.TeamId});r&&n.push(r)})),n}},{key:"isLeaderOfAnyRestrictedTeams",value:function(e,t){var n=!1;return Object(r.a)(e,(function(e){if(Object(a.a)(t.TeamAccesses,{TeamId:e.TeamId})&&1===e.Role)return n=!0,!1})),n}}])&&d(t.prototype,n),o&&d(t,o),e}();t.default=u,s.a.module("portainer.app").service("ResourceControlHelper",u)},function(e,t,n){"use strict";n.r(t);var a=n(44);angular.module("portainer.app").factory("StackHelper",[function(){var e={getExternalStackNamesFromContainers:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(r.Labels&&r.Labels["com.docker.compose.project"]){var i=r.Labels["com.docker.compose.project"];t.push(i)}}return Object(a.a)(t)},getExternalStackNamesFromServices:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(r.Labels&&r.Labels["com.docker.stack.namespace"]){var i=r.Labels["com.docker.stack.namespace"];t.push(i)}}return Object(a.a)(t)}};return e}])},function(e,t,n){"use strict";n.r(t);var a=n(44);angular.module("portainer.app").factory("TemplateHelper",[function(){var e={getDefaultContainerConfiguration:function(){return{Env:[],OpenStdin:!1,Tty:!1,ExposedPorts:{},HostConfig:{RestartPolicy:{Name:"no"},PortBindings:{},Binds:[],Privileged:!1,ExtraHosts:[]},Volumes:{},Labels:{}}},portArrayToPortConfiguration:function(e){var t={bindings:{},exposedPorts:{}};return e.forEach((function(e){if(e.containerPort){var n=e.containerPort+"/"+e.protocol,a={};if(e.hostPort&&(a.HostPort=e.hostPort,e.hostPort.indexOf(":")>-1)){var r=e.hostPort.split(":");a.HostIp=r[0],a.HostPort=r[1]}t.bindings[n]=[a],t.exposedPorts[n]={}}})),t},updateContainerConfigurationWithLabels:function(e){var t={};return e.forEach((function(e){e.name&&(e.value?t[e.name]=e.value:t[e.name]="")})),t},EnvToStringArray:function(e){var t=[];return e.forEach((function(e){if(e.value||e.set){var n=e.set?e.set:e.value;t.push(e.name+"="+n)}})),t},getConsoleConfiguration:function(e){var t={openStdin:!1,tty:!1};return!0===e&&(t.openStdin=!0,t.tty=!0),t},createVolumeBindings:function(e,t){e.forEach((function(e){var n;e.container&&("auto"===e.type?n=t.pop().Id+":"+e.container:"auto"!==e.type&&e.bind&&(n=e.bind+":"+e.container),e.readonly&&(n+=":ro"),e.binding=n)}))},determineRequiredGeneratedVolumeCount:function(e){var t=0;return e.forEach((function(e){"auto"===e.type&&++t})),t},getUniqueCategories:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];t=t.concat(r.Categories)}return Object(a.a)(t)}};return e}])},function(e,t){angular.module("portainer.app").factory("URLHelper",["$window",function(e){"use strict";var t={};return t.getParameter=function(t){return e.location.search.replace(/.*?\?/,"").split("&").reduce((function(e,t){var n=t.split("="),a=n[0],r=n[1];return e[a]=r,e}),{})[t]},t.cleanParameters=function(){e.location.replace(e.location.origin+e.location.pathname+e.location.hash)},t}])},function(e,t){angular.module("portainer.app").factory("UserHelper",[function(){"use strict";var e={filterNonAdministratorUsers:function(e){return e.filter((function(e){if(1!==e.Role)return e}))}};return e}])},function(e,t){angular.module("portainer.app").factory("WebhookHelper",["$location","API_ENDPOINT_WEBHOOKS",function(e,t){"use strict";var n={returnWebhookUrl:function(n){var a="http"===e.protocol().toLowerCase()&&80===e.port()||"https"===e.protocol().toLowerCase()&&443===e.port()?"":":"+e.port();return e.protocol()+"://"+e.host()+a+"/"+t+"/"+n}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(6),r=n(82);angular.module("portainer.app").factory("EndpointStatusInterceptor",["$q","EndpointProvider",function(e,t){var n={};function i(e){return Object(r.a)(e,"api/")&&(Object(a.a)(e,"/containers")||Object(a.a)(e,"/images")||Object(a.a)(e,"/volumes")||Object(a.a)(e,"/networks")||Object(a.a)(e,"/info")||Object(a.a)(e,"/version"))}return n.response=function(n){var a=n.config.url;200===n.status&&i(a)&&t.offlineMode()&&t.setOfflineMode(!1);return n||e.when(n)},n.responseError=function(n){var a=n.config.url;502!==n.status&&503!==n.status&&-1!==n.status||!i(a)||t.offlineMode()||t.setOfflineMode(!0);return e.reject(n)},n}])},function(e,t,n){"use strict";function a(e,t,n){this.ResourceID=e,this.Type=t,this.Public=n.Public,this.AdministratorsOnly=n.AdministratorsOnly,this.Users=n.Users,this.Teams=n.Teams,this.SubResourceIDs=n.SubResourceIDs}n.r(t),n.d(t,"ResourceControlCreatePayload",(function(){return a}))},function(e,t,n){"use strict";function a(e){this.Public=e.Public,this.AdministratorsOnly=e.AdministratorsOnly,this.Users=e.Users,this.Teams=e.Teams}n.r(t),n.d(t,"ResourceControlUpdatePayload",(function(){return a}))},function(e,t){angular.module("portainer.app").factory("Auth",["$resource","API_ENDPOINT_AUTH",function(e,t){"use strict";return e(t,{},{login:{method:"POST",ignoreLoadingBar:!0}})}])},function(e,t){angular.module("portainer.app").factory("DockerHub",["$resource","API_ENDPOINT_DOCKERHUB",function(e,t){"use strict";return e(t,{},{get:{method:"GET"},update:{method:"PUT"}})}])},function(e,t,n){"use strict";n.r(t);var a=n(314);angular.module("portainer.app").factory("Endpoints",["$resource","API_ENDPOINT_ENDPOINTS",function(e,t){return e(t+"/:id/:action",{},{query:{method:"GET",params:{start:"@start",limit:"@limit",search:"@search",groupId:"@groupId"},transformResponse:a.default},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},updateAccess:{method:"PUT",params:{id:"@id",action:"access"}},remove:{method:"DELETE",params:{id:"@id"}},snapshots:{method:"POST",params:{action:"snapshot"}},snapshot:{method:"POST",params:{id:"@id",action:"snapshot"}},executeJob:{method:"POST",ignoreLoadingBar:!0,params:{id:"@id",action:"job"}},status:{method:"GET",params:{id:"@id",action:"status"}}})}])},function(e,t){angular.module("portainer.app").factory("Extension",["$resource","API_ENDPOINT_EXTENSIONS",function(e,t){"use strict";return e(t+"/:id/:action",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},delete:{method:"DELETE",params:{id:"@id"}},update:{method:"POST",params:{id:"@id",action:"update"}}})}])},function(e,t){angular.module("portainer.app").factory("EndpointGroups",["$resource","API_ENDPOINT_ENDPOINT_GROUPS",function(e,t){"use strict";return e(t+"/:id/:action",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},updateAccess:{method:"PUT",params:{id:"@id",action:"access"}},addEndpoint:{method:"PUT",params:{id:"@id",action:"@action"}},removeEndpoint:{method:"DELETE",params:{id:"@id",action:"@action"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.app").factory("LegacyExtensions",["$resource","EndpointProvider","API_ENDPOINT_ENDPOINTS",function(e,t,n){"use strict";return e(n+"/:endpointId/extensions/:type",{endpointId:t.endpointID},{register:{method:"POST"},deregister:{method:"DELETE",params:{type:"@type"}}})}])},function(e,t){angular.module("portainer.app").factory("Motd",["$resource","API_ENDPOINT_MOTD",function(e,t){"use strict";return e(t,{},{get:{method:"GET",ignoreLoadingBar:!0}})}])},function(e,t){angular.module("portainer.app").factory("Registries",["$resource","API_ENDPOINT_REGISTRIES",function(e,t){"use strict";return e(t+"/:id/:action",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},updateAccess:{method:"PUT",params:{id:"@id",action:"access"}},remove:{method:"DELETE",params:{id:"@id"}},configure:{method:"POST",params:{id:"@id",action:"configure"}}})}])},function(e,t){angular.module("portainer.app").factory("ResourceControl",["$resource","API_ENDPOINT_RESOURCE_CONTROLS",function(e,t){"use strict";return e(t+"/:id",{},{create:{method:"POST",ignoreLoadingBar:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.app").factory("Schedules",["$resource","API_ENDPOINT_SCHEDULES",function(e,t){"use strict";return e(t+"/:id/:action",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}},file:{method:"GET",params:{id:"@id",action:"file"}},tasks:{method:"GET",isArray:!0,params:{id:"@id",action:"tasks"}}})}])},function(e,t){angular.module("portainer.app").factory("Settings",["$resource","API_ENDPOINT_SETTINGS",function(e,t){"use strict";return e(t+"/:subResource/:action",{},{get:{method:"GET"},update:{method:"PUT",ignoreLoadingBar:!0},publicSettings:{method:"GET",params:{subResource:"public"},ignoreLoadingBar:!0},checkLDAPConnectivity:{method:"PUT",params:{subResource:"authentication",action:"checkLDAP"}}})}])},function(e,t){angular.module("portainer.app").factory("Stack",["$resource","EndpointProvider","API_ENDPOINT_STACKS",function(e,t,n){"use strict";return e(n+"/:id/:action",{},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0},create:{method:"POST",ignoreLoadingBar:!0},update:{method:"PUT",params:{id:"@id"},ignoreLoadingBar:!0},remove:{method:"DELETE",params:{id:"@id",external:"@external",endpointId:"@endpointId"}},getStackFile:{method:"GET",params:{id:"@id",action:"file"}},migrate:{method:"POST",params:{id:"@id",action:"migrate",endpointId:"@endpointId"},ignoreLoadingBar:!0}})}])},function(e,t){angular.module("portainer.app").factory("Status",["$resource","API_ENDPOINT_STATUS",function(e,t){"use strict";return e(t+"/:action",{},{get:{method:"GET"},version:{method:"GET",params:{action:"version"}}})}])},function(e,t){angular.module("portainer.app").factory("Support",["$resource","API_ENDPOINT_SUPPORT",function(e,t){"use strict";return e(t,{},{get:{method:"GET",isArray:!0}})}])},function(e,t){angular.module("portainer.app").factory("Tags",["$resource","API_ENDPOINT_TAGS",function(e,t){"use strict";return e(t+"/:id",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.app").factory("Teams",["$resource","API_ENDPOINT_TEAMS",function(e,t){"use strict";return e(t+"/:id/:entity/:entityId",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}},queryMemberships:{method:"GET",isArray:!0,params:{id:"@id",entity:"memberships"}}})}])},function(e,t){angular.module("portainer.app").factory("TeamMemberships",["$resource","API_ENDPOINT_TEAM_MEMBERSHIPS",function(e,t){"use strict";return e(t+"/:id/:action",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.app").factory("Templates",["$resource","API_ENDPOINT_TEMPLATES",function(e,t){return e(t+"/:id",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.app").factory("Users",["$resource","API_ENDPOINT_USERS",function(e,t){"use strict";return e(t+"/:id/:entity/:entityId",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"},ignoreLoadingBar:!0},updatePassword:{method:"PUT",params:{id:"@id",entity:"passwd"}},remove:{method:"DELETE",params:{id:"@id"}},queryMemberships:{method:"GET",isArray:!0,params:{id:"@id",entity:"memberships"}},checkAdminUser:{method:"GET",params:{id:"admin",entity:"check"},isArray:!0,ignoreLoadingBar:!0},initAdminUser:{method:"POST",params:{id:"admin",entity:"init"},ignoreLoadingBar:!0}})}])},function(e,t){angular.module("portainer.app").factory("Webhooks",["$resource","API_ENDPOINT_WEBHOOKS",function(e,t){"use strict";return e(t+"/:id",{},{query:{method:"GET",isArray:!0},create:{method:"POST"},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(9),r=n(317),i=n(2),o=n(169);angular.module("portainer.app").factory("AccessService",["$q","UserService","TeamService",function(e,t,n){var s={};function l(e,t){if(e.length){var n=Object(i.a)(e,(function(e){return e.Id===t}));return n||{Id:0,Name:"-"}}}function c(e,t,n,a){for(var r=[],i=[],o=0;o<e.length;o++){var s=e[o],c=t&&t[s.Id],d=n&&n[s.Id];c&&d?(s.Role=l(a,t[s.Id].RoleId),s.Override=!0,i.push(s)):c&&!d?(s.Role=l(a,t[s.Id].RoleId),i.push(s)):!c&&d?(s.Role=l(a,n[s.Id].RoleId),s.Inherited=!0,i.push(s),r.push(s)):r.push(s)}return{available:r,authorized:i}}return s.accesses=function(a,r,i,s,l){var d=e.defer();return e.all({users:t.users(!1),teams:n.teams()}).then((function(e){var t=e.users.map((function(e){return new o.UserAccessViewModel(e)})),n=e.teams.map((function(e){return new o.TeamAccessViewModel(e)})),u=c(t,a,i,l),p=c(n,r,s,l),m={availableUsersAndTeams:u.available.concat(p.available),authorizedUsersAndTeams:u.authorized.concat(p.authorized)};d.resolve(m)})).catch((function(e){d.reject({msg:"Unable to retrieve users and teams",err:e})})),d.promise},s.generateAccessPolicies=function(e,t,n,i,o){var s=Object(r.a)(e),l=Object(r.a)(t);return Object(a.a)(n,(function(e){return s[e.Id]={RoleId:o||e.Role.Id}})),Object(a.a)(i,(function(e){return l[e.Id]={RoleId:o||e.Role.Id}})),{userAccessPolicies:s,teamAccessPolicies:l}},s}])},function(e,t,n){"use strict";n.r(t);var a=n(166);angular.module("portainer.app").factory("DockerHubService",["$q","DockerHub",function(e,t){var n={dockerhub:function(){var n=e.defer();return t.get().$promise.then((function(e){var t=new a.DockerHubViewModel(e);n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve DockerHub details",err:e})})),n.promise},update:function(e){return t.update({},e).$promise}};return n}])},function(e,t){angular.module("portainer.app").factory("EndpointService",["$q","Endpoints","FileUploadService",function(e,t,n){"use strict";var a={endpoint:function(e){return t.get({id:e}).$promise},endpoints:function(e,n){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=a.search,i=a.type,o=a.tagIds,s=a.endpointIds,l=a.tagsPartialMatch;return t.query({start:e,limit:n,search:r,type:i,tagIds:JSON.stringify(o),endpointIds:JSON.stringify(s),tagsPartialMatch:l}).$promise},snapshotEndpoints:function(){return t.snapshots({},{}).$promise},snapshotEndpoint:function(e){return t.snapshot({id:e},{}).$promise},endpointsByGroup:function(e,n,a,r){return t.query({start:e,limit:n,search:a,groupId:r}).$promise},updateAccess:function(e,n,a){return t.updateAccess({id:e},{UserAccessPolicies:n,TeamAccessPolicies:a}).$promise},updateEndpoint:function(a,r){var i=e.defer();return n.uploadTLSFilesForEndpoint(a,r.TLSCACert,r.TLSCert,r.TLSKey).then((function(){return i.notify({upload:!1}),t.update({id:a},r).$promise})).then((function(e){i.resolve(e)})).catch((function(e){i.notify({upload:!1}),i.reject({msg:"Unable to update endpoint",err:e})})),i.promise},deleteEndpoint:function(e){return t.remove({id:e}).$promise},createLocalEndpoint:function(){var t=e.defer();return n.createEndpoint("local",1,"","",1,[],!1).then((function(e){t.resolve(e.data)})).catch((function(e){t.reject({msg:"Unable to create endpoint",err:e})})),t.promise},createRemoteEndpoint:function(t,a,r,i,o,s,l,c,d,u,p,m){var g=e.defer(),f=r;return 4!==a&&(f="tcp://"+r),n.createEndpoint(t,a,f,i,o,s,l,c,d,u,p,m).then((function(e){g.resolve(e.data)})).catch((function(e){g.reject({msg:"Unable to create endpoint",err:e})})),g.promise},createAzureEndpoint:function(t,a,r,i,o,s){var l=e.defer();return n.createAzureEndpoint(t,a,r,i,o,s).then((function(e){l.resolve(e.data)})).catch((function(e){l.reject({msg:"Unable to connect to Azure",err:e})})),l.promise},executeJobFromFileUpload:function(e,t,a,r){return n.executeEndpointJob(e,t,a,r)},executeJobFromFileContent:function(e,n,a,r){var i={Image:e,FileContent:n};return t.executeJob({id:a,method:"string",nodeName:r},i).$promise}};return a}])},function(e,t,n){"use strict";n.r(t);var a=n(9),r=n(2),i=n(240);function o(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function s(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function s(e){o(i,a,r,s,l,"next",e)}function l(e){o(i,a,r,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.app").factory("ExtensionService",["$q","Extension","StateManager","$async","FileUploadService",function(e,t,n,o,l){var c={};function d(e){return u.apply(this,arguments)}function u(){return(u=s(regeneratorRuntime.mark((function e(t){var a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t!==c.EXTENSIONS.RBAC){e.next=4;break}return e.abrupt("return",!!n.getExtension(t));case 4:return e.next=6,c.extensions(!1);case 6:return a=e.sent,i=Object(r.a)(a,(function(e){return e.Id===t})),e.abrupt("return",!!i&&i.Enabled);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function p(){return m.apply(this,arguments)}function m(){return(m=s(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,c.extensions(!1);case 2:t=e.sent,Object(a.a)(t,(function(e){return delete e.License})),n.saveExtensions(t);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return c.EXTENSIONS=Object.freeze({REGISTRY_MANAGEMENT:1,OAUTH_AUTHENTICATION:2,RBAC:3}),c.enable=function(e,n){return n?l.uploadExtension(e,n):t.create({license:e}).$promise},c.update=function(e,n){return t.update({id:e,version:n}).$promise},c.delete=function(e){return t.delete({id:e}).$promise},c.extensions=function(n){var a=e.defer();return t.query({store:n}).$promise.then((function(e){var t=e.map((function(e){return new i.ExtensionViewModel(e)}));a.resolve(t)})).catch((function(e){a.reject({msg:"Unable to retrieve extensions",err:e})})),a.promise},c.extension=function(n){var a=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new i.ExtensionViewModel(e);a.resolve(t)})).catch((function(e){a.reject({msg:"Unable to retrieve extension details",err:e})})),a.promise},c.extensionEnabled=function(e){return o(d,e)},c.retrieveAndSaveEnabledExtensions=function(){return o(p)},c}])},function(e,t,n){"use strict";n.r(t);var a=n(116);angular.module("portainer.app").factory("GroupService",["$q","EndpointGroups",function(e,t){var n={group:function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.EndpointGroupModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve group",err:e})})),r.promise},groups:function(){return t.query({}).$promise},createGroup:function(e,n){var r=new a.EndpointGroupCreateRequest(e,n);return t.create(r).$promise},updateGroup:function(e,n){var r=new a.EndpointGroupUpdateRequest(e,n);return t.update(r).$promise},updateAccess:function(e,n,a){return t.updateAccess({id:e},{UserAccessPolicies:n,TeamAccessPolicies:a}).$promise},addEndpoint:function(e,n){return t.addEndpoint({id:e,action:"endpoints/"+n.Id},n).$promise},removeEndpoint:function(e,n){return t.removeEndpoint({id:e,action:"endpoints/"+n}).$promise},deleteGroup:function(e){return t.remove({id:e}).$promise}};return n}])},function(e,t){angular.module("portainer.app").factory("LegacyExtensionService",["LegacyExtensions",function(e){"use strict";var t={registerStoridgeExtension:function(t){var n={Type:1,URL:t};return e.register(n).$promise},deregisterStoridgeExtension:function(){return e.deregister({type:1}).$promise}};return t}])},function(e,t,n){"use strict";n.r(t);var a=n(312);angular.module("portainer.app").factory("MotdService",["$q","Motd",function(e,t){var n={motd:function(){var n=e.defer();return t.get().$promise.then((function(e){var t=new a.MotdViewModel(e);n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve information message",err:e})})),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(82),r=n(6),i=n(2),o=n(33),s=n(9),l=n(30),c=n(21),d=n(69);function u(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],a=!0,r=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return p(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return p(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function m(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function g(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){m(i,a,r,o,s,"next",e)}function s(e){m(i,a,r,o,s,"throw",e)}o(void 0)}))}}angular.module("portainer.app").factory("RegistryService",["$q","$async","Registries","DockerHubService","ImageHelper","FileUploadService",function(e,t,n,p,m,f){var v={};function h(e){var t=e.URL;return e.Type===c.RegistryTypes.GITLAB&&(t=e.URL+"/"+e.Gitlab.ProjectPath),t}function b(e,t,n){var o=new l.PorImageRegistryModel,s=Object(i.a)(t,(function(t){return Object(r.a)(e,h(t))}));if(s){var c=h(s),d=e.lastIndexOf(c)+c.length,u=e.substring(d);Object(a.a)(u,":")||(u=u.substring(1)),o.Registry=s,o.Image=u}else m.imageContainsURL(e)&&(o.UseRegistry=!1),o.Registry=n,o.Image=e;return o}function y(e){return x.apply(this,arguments)}function x(){return(x=g(regeneratorRuntime.mark((function e(t){var n,a,r,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,Promise.all([v.registries(),p.dockerhub()]);case 3:return n=e.sent,a=u(n,2),r=a[0],i=a[1],e.abrupt("return",b(t,r,i));case 10:throw e.prev=10,e.t0=e.catch(0),{msg:"Unable to retrieve the registry associated to the repository",err:e.t0};case 13:case"end":return e.stop()}}),e,null,[[0,10]])})))).apply(this,arguments)}return v.registries=function(){var t=e.defer();return n.query().$promise.then((function(e){var n=e.map((function(e){return new d.RegistryViewModel(e)}));t.resolve(n)})).catch((function(e){t.reject({msg:"Unable to retrieve registries",err:e})})),t.promise},v.registry=function(t){var a=e.defer();return n.get({id:t}).$promise.then((function(e){var t=new d.RegistryViewModel(e);a.resolve(t)})).catch((function(e){a.reject({msg:"Unable to retrieve registry details",err:e})})),a.promise},v.encodedCredentials=function(e){var t={serveraddress:e.URL};return btoa(JSON.stringify(t))},v.updateAccess=function(e,t,a){return n.updateAccess({id:e},{UserAccessPolicies:t,TeamAccessPolicies:a}).$promise},v.deleteRegistry=function(e){return n.remove({id:e}).$promise},v.updateRegistry=function(e){return n.update({id:e.Id},e).$promise},v.configureRegistry=function(e,t){return f.configureRegistry(e,t)},v.createRegistry=function(e){var t=new d.RegistryCreateRequest(e);return n.create(t).$promise},v.createGitlabRegistries=function(t,a){var r=[];return Object(s.a)(a,(function(e){var a=t;a.Name=e.PathWithNamespace,a.Gitlab.ProjectPath=Object(o.a)(e.PathWithNamespace),a.Gitlab.ProjectId=e.Id,a.Password=a.Token;var i=new d.RegistryCreateRequest(a);r.push(n.create(i).$promise)})),e.all(r)},v.retrievePorRegistryModelFromRepositoryWithRegistries=b,v.retrievePorRegistryModelFromRepository=function(e){return t(y,e)},v}])},function(e,t,n){"use strict";n.r(t);var a=n(2);angular.module("portainer.app").factory("ResourceControlService",["$q","ResourceControl","UserService","TeamService","ResourceControlHelper",function(e,t,n,r,i){var o={};function s(e,n){var a={AdministratorsOnly:n.AdministratorsOnly,Public:n.Public,Users:n.Users,Teams:n.Teams};return t.update({id:e},a).$promise}return o.duplicateResourceControl=function(e,t,n){var a=i.RCViewModelToOwnershipParameters(e,t);return s(n.Id,a)},o.applyResourceControlChange=function(e,n,a,r){var o=i.RCPanelDataToOwnershipParameters(r);return a?s(a.Id,o):function(e,n,a){var r={Type:e,Public:a.Public,AdministratorsOnly:a.AdministratorsOnly,ResourceID:n,Users:a.Users,Teams:a.Teams,SubResourceIds:a.SubResourceIDs};return t.create({},r).$promise}(e,n,o)},o.applyResourceControl=function(e,t,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],r=i.RCFormDataToOwnershipParameters(e,t,a);return s(n.Id,r)},o.retrieveOwnershipDetails=function(t){var a=e.defer();if(!t)return a.resolve({authorizedUsers:[],authorizedTeams:[]}),a.promise;return e.all({users:t.UserAccesses.length>0?n.users(!1):[],teams:t.TeamAccesses.length>0?r.teams():[]}).then((function(e){var n=i.retrieveAuthorizedUsers(t,e.users),r=i.retrieveAuthorizedTeams(t,e.teams);a.resolve({authorizedUsers:n,authorizedTeams:r})})).catch((function(e){a.reject({msg:"Unable to retrieve user and team information",err:e})})),a.promise},o.retrieveUserPermissionsOnResource=function(t,r,o){var s=e.defer();if(!o||r)return s.resolve({isPartOfRestrictedUsers:!1,isLeaderOfAnyRestrictedTeams:!1}),s.promise;if(Object(a.a)(o.UserAccesses,{UserId:t}))s.resolve({isPartOfRestrictedUsers:!0,isLeaderOfAnyRestrictedTeams:!1});else{var l=!1;n.userMemberships(t).then((function(e){var t=e;l=i.isLeaderOfAnyRestrictedTeams(t,o),s.resolve({isPartOfRestrictedUsers:!1,isLeaderOfAnyRestrictedTeams:l})})).catch((function(e){s.reject({msg:"Unable to retrieve user memberships",err:e})}))}return s.promise},o}])},function(e,t,n){"use strict";n.r(t);var a=n(71);angular.module("portainer.app").factory("ScheduleService",["$q","Schedules","FileUploadService",function(e,t,n){var r={schedule:function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.ScheduleModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve schedule",err:e})})),r.promise},schedules:function(){var n=e.defer();return t.query().$promise.then((function(e){var t=e.map((function(e){return new a.ScheduleModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve schedules",err:e})})),n.promise},scriptExecutionTasks:function(n){var r=e.defer();return t.tasks({id:n}).$promise.then((function(e){var t=e.map((function(e){return new a.ScriptExecutionTaskModel(e)}));r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve tasks associated to the schedule",err:e})})),r.promise},createScheduleFromFileContent:function(e){var n=new a.ScheduleCreateRequest(e);return t.create({method:"string"},n).$promise},createScheduleFromFileUpload:function(e){var t=new a.ScheduleCreateRequest(e);return n.createSchedule(t)},updateSchedule:function(e){var n=new a.ScheduleUpdateRequest(e);return t.update(n).$promise},deleteSchedule:function(e){return t.remove({id:e}).$promise},getScriptFile:function(e){return t.file({id:e}).$promise}};return r}])},function(e,t,n){"use strict";n.r(t);var a=n(241);angular.module("portainer.app").factory("SettingsService",["$q","Settings",function(e,t){var n={settings:function(){var n=e.defer();return t.get().$promise.then((function(e){var t=new a.SettingsViewModel(e);n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve application settings",err:e})})),n.promise},update:function(e){return t.update({},e).$promise},publicSettings:function(){var n=e.defer();return t.publicSettings().$promise.then((function(e){var t=new a.PublicSettingsViewModel(e);n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve application settings",err:e})})),n.promise},checkLDAPConnectivity:function(e){return t.checkLDAPConnectivity({},e).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(316),r=n(118);angular.module("portainer.app").factory("StackService",["$q","Stack","ResourceControlService","FileUploadService","StackHelper","ServiceService","ContainerService","SwarmService","EndpointProvider",function(e,t,n,i,o,s,l,c,d){var u={stack:function(n){var a=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new r.StackViewModel(e);a.resolve(t)})).catch((function(e){a.reject({msg:"Unable to retrieve stack details",err:e})})),a.promise},getStackFile:function(n){var a=e.defer();return t.getStackFile({id:n}).$promise.then((function(e){a.resolve(e.StackFileContent)})).catch((function(e){a.reject({msg:"Unable to retrieve stack content",err:e})})),a.promise},migrateSwarmStack:function(n,a,r){var i=e.defer();return d.setEndpointID(a),c.swarm().then((function(e){var o=e;if(o.Id!==n.SwarmId)return t.migrate({id:n.Id,endpointId:n.EndpointId},{EndpointID:a,SwarmID:o.Id,Name:r}).$promise;i.reject({msg:"Target endpoint is located in the same Swarm cluster as the current endpoint",err:null})})).then((function(){i.resolve()})).catch((function(e){i.reject({msg:"Unable to migrate stack",err:e})})).finally((function(){d.setEndpointID(n.EndpointId)})),i.promise},migrateComposeStack:function(n,a,r){var i=e.defer();return d.setEndpointID(a),t.migrate({id:n.Id,endpointId:n.EndpointId},{EndpointID:a,Name:r}).$promise.then((function(){i.resolve()})).catch((function(e){d.setEndpointID(n.EndpointId),i.reject({msg:"Unable to migrate stack",err:e})})),i.promise},stacks:function(t,n,a){var r=e.defer(),i=[];return t&&i.push(u.composeStacks(!0,{EndpointID:a})),n&&i.push(u.swarmStacks(!0)),e.all(i).then((function(e){var t=[];e[0]&&(t=t.concat(e[0])),e[1]&&(t=t.concat(e[1])),r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve stacks",err:e})})),r.promise},externalSwarmStacks:function(){var t=e.defer();return s.services().then((function(e){var n=e,a=o.getExternalStackNamesFromServices(n).map((function(e){return new r.ExternalStackViewModel(e,1)}));t.resolve(a)})).catch((function(e){t.reject({msg:"Unable to retrieve external stacks",err:e})})),t.promise},externalComposeStacks:function(){var t=e.defer();return l.containers(1).then((function(e){var n=e,a=o.getExternalStackNamesFromContainers(n).map((function(e){return new r.ExternalStackViewModel(e,2)}));t.resolve(a)})).catch((function(e){t.reject({msg:"Unable to retrieve external stacks",err:e})})),t.promise},composeStacks:function(n,i){var o=e.defer();return e.all({stacks:t.query({filters:i}).$promise,externalStacks:n?u.externalComposeStacks():[]}).then((function(e){var t=e.stacks.map((function(e){return e.External=!1,new r.StackViewModel(e)})),n=e.externalStacks,i=Object(a.a)(t,n,(function(e,t){return e.Name===t.Name}));o.resolve(i)})).catch((function(e){o.reject({msg:"Unable to retrieve stacks",err:e})})),o.promise},swarmStacks:function(n){var i=e.defer();return c.swarm().then((function(a){var r={SwarmID:a.Id};return e.all({stacks:t.query({filters:r}).$promise,externalStacks:n?u.externalSwarmStacks():[]})})).then((function(e){var t=e.stacks.map((function(e){return e.External=!1,new r.StackViewModel(e)})),n=e.externalStacks,o=Object(a.a)(t,n,(function(e,t){return e.Name===t.Name}));i.resolve(o)})).catch((function(e){i.reject({msg:"Unable to retrieve stacks",err:e})})),i.promise},remove:function(n,a,r){var i=e.defer();return t.remove({id:n.Id?n.Id:n.Name,external:a,endpointId:r}).$promise.then((function(){i.resolve()})).catch((function(e){i.reject({msg:"Unable to remove the stack",err:e})})),i.promise},updateStack:function(e,n,a,r){return t.update({endpointId:e.EndpointId},{id:e.Id,StackFileContent:n,Env:a,Prune:r}).$promise},createComposeStackFromFileUpload:function(e,t,n,a){return i.createComposeStack(e,t,n,a)},createSwarmStackFromFileUpload:function(t,n,a,r){var o=e.defer();return c.swarm().then((function(e){var o=e;return i.createSwarmStack(t,o.Id,n,a,r)})).then((function(e){o.resolve(e.data)})).catch((function(e){o.reject({msg:"Unable to create the stack",err:e})})),o.promise},createComposeStackFromFileContent:function(e,n,a,r){var i={Name:e,StackFileContent:n,Env:a};return t.create({method:"string",type:2,endpointId:r},i).$promise},createSwarmStackFromFileContent:function(n,a,r,i){var o=e.defer();return c.swarm().then((function(e){var o={Name:n,SwarmID:e.Id,StackFileContent:a,Env:r};return t.create({method:"string",type:1,endpointId:i},o).$promise})).then((function(e){o.resolve(e)})).catch((function(e){o.reject({msg:"Unable to create the stack",err:e})})),o.promise},createComposeStackFromGitRepository:function(e,n,a,r){var i={Name:e,RepositoryURL:n.RepositoryURL,RepositoryReferenceName:n.RepositoryReferenceName,ComposeFilePathInRepository:n.ComposeFilePathInRepository,RepositoryAuthentication:n.RepositoryAuthentication,RepositoryUsername:n.RepositoryUsername,RepositoryPassword:n.RepositoryPassword,Env:a};return t.create({method:"repository",type:2,endpointId:r},i).$promise},createSwarmStackFromGitRepository:function(n,a,r,i){var o=e.defer();return c.swarm().then((function(e){var o={Name:n,SwarmID:e.Id,RepositoryURL:a.RepositoryURL,RepositoryReferenceName:a.RepositoryReferenceName,ComposeFilePathInRepository:a.ComposeFilePathInRepository,RepositoryAuthentication:a.RepositoryAuthentication,RepositoryUsername:a.RepositoryUsername,RepositoryPassword:a.RepositoryPassword,Env:r};return t.create({method:"repository",type:1,endpointId:i},o).$promise})).then((function(e){o.resolve(e)})).catch((function(e){o.reject({msg:"Unable to create the stack",err:e})})),o.promise},duplicateStack:function(e,t,n,a,r){return(1===r?u.createSwarmStackFromFileContent:u.createComposeStackFromFileContent)(e,t,n,a)}};return u}])},function(e,t,n){"use strict";n.r(t);var a=n(242);angular.module("portainer.app").factory("StatusService",["$q","Status",function(e,t){var n={status:function(){var n=e.defer();return t.get().$promise.then((function(e){var t=new a.StatusViewModel(e);n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve application status",err:e})})),n.promise},version:function(){var n=e.defer();return t.version().$promise.then((function(e){var t=new a.StatusVersionViewModel(e);n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve application version info",err:e})})),n.promise}};return n}])},function(e,t){angular.module("portainer.app").factory("SupportService",["$q","Support",function(e,t){"use strict";var n={supportProducts:function(){var n=e.defer();return t.get().$promise.then((function(e){n.resolve(e)})).catch((function(e){n.reject({msg:"Unable to retrieve support options",err:e})})),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(243);function r(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}angular.module("portainer.app").factory("TagService",["$q","Tags",function(e,t){var n={tags:function(){var n=e.defer();return t.query().$promise.then((function(e){var t=e.map((function(e){return new a.TagViewModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve tags",err:e})})),n.promise},tagNames:function(){var n=e.defer();return t.query().$promise.then((function(e){var t=e.map((function(e){return e.Name}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve tags",err:e})})),n.promise}};return n.createTag=function(){var e,n=(e=regeneratorRuntime.mark((function e(n){var r,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r={Name:n},e.prev=1,e.next=4,t.create({},r).$promise;case 4:return i=e.sent,e.abrupt("return",new a.TagViewModel(i));case 8:throw e.prev=8,e.t0=e.catch(1),{msg:"Unable to create tag",err:e.t0};case 11:case"end":return e.stop()}}),e,null,[[1,8]])})),function(){var t=this,n=arguments;return new Promise((function(a,i){var o=e.apply(t,n);function s(e){r(o,a,i,s,l,"next",e)}function l(e){r(o,a,i,s,l,"throw",e)}s(void 0)}))});return function(e){return n.apply(this,arguments)}}(),n.deleteTag=function(e){return t.remove({id:e}).$promise},n}])},function(e,t,n){"use strict";n.r(t);var a=n(111);angular.module("portainer.app").factory("TeamMembershipService",["$q","TeamMemberships",function(e,t){var n={memberships:function(){var n=e.defer();return t.query().$promise.then((function(e){var t=e.map((function(e){return new a.TeamMembershipModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve team memberships",err:e})})),n.promise},createMembership:function(e,n,a){var r={UserID:e,TeamID:n,Role:a};return t.create({},r).$promise},deleteMembership:function(e){return t.remove({id:e}).$promise},updateMembership:function(e,n,a,r){var i={UserID:n,TeamID:a,Role:r};return t.update({id:e},i).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(244),r=n(111);angular.module("portainer.app").factory("TeamService",["$q","Teams","TeamMembershipService",function(e,t,n){var i={teams:function(){var n=e.defer();return t.query().$promise.then((function(e){var t=e.map((function(e){return new a.TeamViewModel(e)}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve teams",err:e})})),n.promise},team:function(n){var r=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new a.TeamViewModel(e);r.resolve(t)})).catch((function(e){r.reject({msg:"Unable to retrieve team details",err:e})})),r.promise},createTeam:function(a,r){var i=e.defer(),o={Name:a};return t.create({},o).$promise.then((function(t){var a=t.Id,o=[];angular.forEach(r,(function(e){o.push(n.createMembership(e,a,1))})),e.all(o).then((function(){i.resolve()}))})).catch((function(e){i.reject({msg:"Unable to create team",err:e})})),i.promise},deleteTeam:function(e){return t.remove({id:e}).$promise},userMemberships:function(n){var a=e.defer();return t.queryMemberships({id:n}).$promise.then((function(e){var t=e.map((function(e){return new r.TeamMembershipModel(e)}));a.resolve(t)})).catch((function(e){a.reject({msg:"Unable to retrieve user memberships for the team",err:e})})),a.promise}};return i}])},function(e,t,n){"use strict";n.r(t);var a=n(98);angular.module("portainer.app").factory("TemplateService",["$q","Templates","TemplateHelper","RegistryService","DockerHubService","ImageHelper","ContainerHelper",function(e,t,n,r,i,o,s){var l={};return l.templates=function(){var n=e.defer();return e.all({templates:t.query().$promise,registries:r.registries(),dockerhub:i.dockerhub()}).then((function(e){var t=e.templates.map((function(t){var n=new a.TemplateViewModel(t),i=r.retrievePorRegistryModelFromRepositoryWithRegistries(n.RegistryModel.Registry.URL,e.registries,e.dockerhub);return i.Image=n.RegistryModel.Image,n.RegistryModel=i,n}));n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to retrieve templates",err:e})})),n.promise},l.template=function(n){var i,o=e.defer();return t.get({id:n}).$promise.then((function(e){return i=new a.TemplateViewModel(e),r.retrievePorRegistryModelFromRepository(i.RegistryModel.Registry.URL)})).then((function(e){e.Image=i.RegistryModel.Image,i.RegistryModel=e,o.resolve(i)})).catch((function(e){o.reject({msg:"Unable to retrieve template details",err:e})})),o.promise},l.delete=function(e){return t.remove({id:e}).$promise},l.create=function(e){var n=new a.TemplateCreateRequest(e);return t.create(n).$promise},l.update=function(e){var n=new a.TemplateUpdateRequest(e);return t.update(n).$promise},l.createTemplateConfiguration=function(e,t,a){var r=o.createImageConfigForContainer(e.RegistryModel),i=function(e,t,a){var r=n.getDefaultContainerConfiguration();r.HostConfig.NetworkMode=a.Name,r.HostConfig.Privileged=e.Privileged,r.HostConfig.RestartPolicy={Name:e.RestartPolicy},r.HostConfig.ExtraHosts=e.Hosts?e.Hosts:[],r.name=t,r.Hostname=e.Hostname,r.Env=n.EnvToStringArray(e.Env),r.Cmd=s.commandStringToArray(e.Command);var i=n.portArrayToPortConfiguration(e.Ports);r.HostConfig.PortBindings=i.bindings,r.ExposedPorts=i.exposedPorts;var o=n.getConsoleConfiguration(e.Interactive);return r.OpenStdin=o.openStdin,r.Tty=o.tty,r.Labels=n.updateContainerConfigurationWithLabels(e.Labels),r}(e,t,a);return i.Image=r.fromImage,i},l.updateContainerConfigurationWithVolumes=function(e,t,a){var r=t.Volumes;n.createVolumeBindings(r,a),r.forEach((function(t){t.binding&&(e.Volumes[t.container]={},e.HostConfig.Binds.push(t.binding))}))},l}])},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(245),i=n(111);angular.module("portainer.app").factory("UserService",["$q","Users","UserHelper","TeamService","TeamMembershipService",function(e,t,n,o,s){var l={users:function(a){var i=e.defer();return t.query({}).$promise.then((function(e){var t=e.map((function(e){return new r.UserViewModel(e)}));a||(t=n.filterNonAdministratorUsers(t)),i.resolve(t)})).catch((function(e){i.reject({msg:"Unable to retrieve users",err:e})})),i.promise},user:function(n){var a=e.defer();return t.get({id:n}).$promise.then((function(e){var t=new r.UserViewModel(e);a.resolve(t)})).catch((function(e){a.reject({msg:"Unable to retrieve user details",err:e})})),a.promise},createUser:function(n,a,r,i){var o=e.defer(),l={username:n,password:a,role:r};return t.create({},l).$promise.then((function(t){var n=t.Id,a=[];angular.forEach(i,(function(e){a.push(s.createMembership(n,e,2))})),e.all(a).then((function(){o.resolve()}))})).catch((function(e){o.reject({msg:"Unable to create user",err:e})})),o.promise},deleteUser:function(e){return t.remove({id:e}).$promise},updateUser:function(e,n,a){var r={password:n,role:a};return t.update({id:e},r).$promise},updateUserPassword:function(e,n,a){var r={Password:n,NewPassword:a};return t.updatePassword({id:e},r).$promise},userMemberships:function(n){var a=e.defer();return t.queryMemberships({id:n}).$promise.then((function(e){var t=e.map((function(e){return new i.TeamMembershipModel(e)}));a.resolve(t)})).catch((function(e){a.reject({msg:"Unable to retrieve user memberships",err:e})})),a.promise},userLeadingTeams:function(t){var n=e.defer();return e.all({teams:o.teams(),memberships:l.userMemberships(t)}).then((function(e){var t=e.memberships,r=e.teams.filter((function(e){var n=Object(a.a)(t,{TeamId:e.Id});if(n&&1===n.Role)return e}));n.resolve(r)})).catch((function(e){n.reject({msg:"Unable to retrieve user teams",err:e})})),n.promise},initAdministrator:function(e,n){return t.initAdminUser({Username:e,Password:n}).$promise},administratorExists:function(){var n=e.defer();return t.checkAdminUser({}).$promise.then((function(){n.resolve(!0)})).catch((function(e){404===e.status&&n.resolve(!1),n.reject({msg:"Unable to verify administrator account existence",err:e})})),n.promise}};return l}])},function(e,t,n){"use strict";n.r(t);var a=n(313);angular.module("portainer.app").factory("WebhookService",["$q","Webhooks",function(e,t){var n={webhooks:function(n,r){var i=e.defer(),o={ResourceID:n,EndpointID:r};return t.query({filters:o}).$promise.then((function(e){var t=e.map((function(e){return new a.WebhookViewModel(e)}));i.resolve(t)})).catch((function(e){i.reject({msg:"Unable to retrieve webhooks",err:e})})),i.promise},createServiceWebhook:function(e,n){return t.create({ResourceID:e,EndpointID:n,WebhookType:1}).$promise},deleteWebhook:function(e){return t.remove({id:e}).$promise}};return n}])},function(e,t){function n(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return a(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}angular.module("portainer").factory("$async",["$q",function(e){return function(t){for(var a=e.defer(),r=function(a){var r=e.defer();return t.apply(void 0,n(a)).then(r.resolve).catch(r.reject),r.promise},i=arguments.length,o=new Array(i>1?i-1:0),s=1;s<i;s++)o[s-1]=arguments[s];return r(o).then(a.resolve).catch(a.reject),a.promise}}])},function(e,t){function n(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function a(e){return function(){var t=this,a=arguments;return new Promise((function(r,i){var o=e.apply(t,a);function s(e){n(o,r,i,s,l,"next",e)}function l(e){n(o,r,i,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.app").factory("Authentication",["$async","$state","Auth","OAuth","jwtHelper","LocalStorage","StateManager","EndpointProvider","UserService",function(e,t,n,r,i,o,s,l,c){"use strict";var d={},u={};function p(){return m.apply(this,arguments)}function m(){return(m=a(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,!(t=o.getJWT())){e.next=5;break}return e.next=5,x(t);case 5:e.next=10;break;case 7:throw e.prev=7,e.t0=e.catch(0),e.t0;case 10:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}function g(e){return f.apply(this,arguments)}function f(){return(f=a(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.validate({code:t}).$promise;case 2:return n=e.sent,e.next=5,x(n.jwt);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function v(e,t){return h.apply(this,arguments)}function h(){return(h=a(regeneratorRuntime.mark((function e(t,a){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.login({username:t,password:a}).$promise;case 2:return r=e.sent,e.next=5,x(r.jwt);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function b(){return y.apply(this,arguments)}function y(){return(y=a(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,c.user(u.ID);case 2:t=e.sent,u.endpointAuthorizations=t.EndpointAuthorizations,u.portainerAuthorizations=t.PortainerAuthorizations;case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function x(e){return w.apply(this,arguments)}function w(){return(w=a(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.storeJWT(t),n=i.decodeToken(t),u.username=n.username,u.ID=n.id,u.role=n.role,e.next=7,b();case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function k(){return 1===u.role}return d.init=function(){return e(p)},d.OAuthLogin=function(t){return e(g,t)},d.login=function(t,n){return e(v,t,n)},d.logout=function(){s.clean(),l.clean(),o.cleanAuthData(),o.storeLoginStateUUID("")},d.isAuthenticated=function(){var e=o.getJWT();return e&&!i.isTokenExpired(e)},d.getUserDetails=function(){return u},d.isAdmin=k,d.hasAuthorizations=function(e){var t=l.endpointID();if(k())return!0;if(!u.endpointAuthorizations||u.endpointAuthorizations&&!u.endpointAuthorizations[t])return!1;for(var n=0;n<e.length;n++){var a=e[n];if(u.endpointAuthorizations[t][a])return!0}return!1},d}])},function(e,t,n){"use strict";n.r(t);var a=n(100),r=n.n(a),i=n(84),o=n.n(i);angular.module("portainer.app").factory("ChartService",[function(){var e={};function t(e,t,n,a){return{animation:{duration:0},responsiveAnimationDuration:0,responsive:!0,tooltips:{mode:"index",intersect:!1,position:e,callbacks:{label:function(e,n){var a=n.datasets[e.datasetIndex].label;return t(a,e.yLabel)}}},hover:{animationDuration:0},scales:{yAxes:[{stacked:a,ticks:{beginAtZero:!0,callback:n}}]}}}function n(e,t){e.data.datasets[0].data.length>t&&(e.data.labels.pop(),e.data.datasets[0].data.pop(),e.data.datasets[1].data.pop())}function a(e,t){return e+": "+(t>5?o()(t,{base:10,round:1}):t.toFixed(1)+"B")}function i(e){return e>5?o()(e,{base:10,round:1}):e.toFixed(1)+"B"}function s(e){return e>1?Math.round(e)+"%":e.toFixed(1)+"%"}function l(e,t){return e+": "+(t>1?Math.round(t):t.toFixed(1))+"%"}return e.CreateCPUChart=function(e){return function(e,n,a,i){return new r.a(e,{type:"line",data:{labels:[],datasets:[{label:n,data:[],fill:!0,backgroundColor:"rgba(151,187,205,0.4)",borderColor:"rgba(151,187,205,0.6)",pointBackgroundColor:"rgba(151,187,205,1)",pointBorderColor:"rgba(151,187,205,1)",pointRadius:2,borderWidth:2}]},options:t("nearest",a,i)})}(e,"CPU",l,s)},e.CreateMemoryChart=function(e){return function(e,n,a){return new r.a(e,{type:"line",data:{labels:[],datasets:[{label:"Memory",data:[],fill:!0,backgroundColor:"rgba(151,187,205,0.4)",borderColor:"rgba(151,187,205,0.6)",pointBackgroundColor:"rgba(151,187,205,1)",pointBorderColor:"rgba(151,187,205,1)",pointRadius:2,borderWidth:2},{label:"Cache",data:[],fill:!0,backgroundColor:"rgba(255,180,174,0.4)",borderColor:"rgba(255,180,174,0.6)",pointBackgroundColor:"rgba(255,180,174,1)",pointBorderColor:"rgba(255,180,174,1)",pointRadius:2,borderWidth:2}]},options:t("nearest",n,a,!0)})}(e,a,i)},e.CreateNetworkChart=function(e){return new r.a(e,{type:"line",data:{labels:[],datasets:[{label:"RX on eth0",data:[],fill:!1,backgroundColor:"rgba(151,187,205,0.4)",borderColor:"rgba(151,187,205,0.6)",pointBackgroundColor:"rgba(151,187,205,1)",pointBorderColor:"rgba(151,187,205,1)",pointRadius:2,borderWidth:2},{label:"TX on eth0",data:[],fill:!1,backgroundColor:"rgba(255,180,174,0.4)",borderColor:"rgba(255,180,174,0.6)",pointBackgroundColor:"rgba(255,180,174,1)",pointBorderColor:"rgba(255,180,174,1)",pointRadius:2,borderWidth:2}]},options:t("average",a,i)})},e.UpdateMemoryChart=function(e,t,a,r){r.data.labels.push(e),r.data.datasets[0].data.push(t),a?r.data.datasets[1].data.push(a):r.data.datasets.splice(1,1),n(r),r.update(0)},e.UpdateCPUChart=function(e,t,n){n.data.labels.push(e),n.data.datasets[0].data.push(t),n.data.datasets[0].data.length>600&&(n.data.labels.pop(),n.data.datasets[0].data.pop()),n.update(0)},e.UpdateNetworkChart=function(e,t,a,r){r.data.labels.push(e),r.data.datasets[0].data.push(t),r.data.datasets[1].data.push(a),n(r),r.update(0)},e}])},function(e,t,n){"use strict";n.r(t);var a=n(423),r=n(131),i=n.n(r);n(1391),n(1392),n(1393),n(1419);angular.module("portainer.app").factory("CodeMirrorService",(function(){var e={},t={lineNumbers:!0},n={mode:"text/x-yaml",gutters:["CodeMirror-lint-markers"],lint:!0,extraKeys:{Tab:function(e){var t=Array(e.getOption("indentUnit")+1).join(" ");e.replaceSelection(t)}}};return e.applyCodeMirrorOnElement=function(e,r,o){var s=angular.copy(t);r&&Object(a.a)(s,n),o&&(s.readOnly=!0);var l=i.a.fromTextArea(e,s);return l.setSize("100%",500),l},e}))},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){angular.module("portainer.app").factory("DatatableService",["LocalStorage",function(e){"use strict";var t={setDataTableSettings:function(t,n){e.storeDataTableSettings(t,n)},getDataTableSettings:function(t){return e.getDataTableSettings(t)},setDataTableTextFilters:function(t,n){e.storeDataTableTextFilters(t,n)},getDataTableTextFilters:function(t){return e.getDataTableTextFilters(t)},setDataTableFilters:function(t,n){e.storeDataTableFilters(t,n)},getDataTableFilters:function(t){return e.getDataTableFilters(t)},getDataTableOrder:function(t){return e.getDataTableOrder(t)},setDataTableOrder:function(t,n,a){var r={orderBy:n,reverse:a};e.storeDataTableOrder(t,r)},setDataTableExpandedItems:function(t,n){e.storeDataTableExpandedItems(t,n)},setColumnVisibilitySettings:function(t,n){e.storeColumnVisibilitySettings(t,n)},getDataTableExpandedItems:function(t){return e.getDataTableExpandedItems(t)},setDataTableSelectedItems:function(t,n){e.storeDataTableSelectedItems(t,n)},getDataTableSelectedItems:function(t){return e.getDataTableSelectedItems(t)},getColumnVisibilitySettings:function(t){return e.getColumnVisibilitySettings(t)}};return t}])},function(e,t,n){"use strict";n.r(t);var a=n(2);angular.module("portainer.app").factory("EndpointProvider",["LocalStorage",function(e){var t={},n={};return t.initialize=function(){var t=e.getEndpointID(),a=e.getEndpointPublicURL(),r=e.getOfflineMode();t&&(n.ID=t),a&&(n.PublicURL=a),r&&(n.OfflineMode=r)},t.clean=function(){e.cleanEndpointData(),n={}},t.endpoint=function(){return n},t.endpointID=function(){return void 0===n.ID&&(n.ID=e.getEndpointID()),n.ID},t.setEndpointID=function(t){n.ID=t,e.storeEndpointID(t)},t.endpointPublicURL=function(){return void 0===n.PublicURL&&(n.PublicURL=e.getEndpointPublicURL()),n.PublicURL},t.setEndpointPublicURL=function(t){n.PublicURL=t,e.storeEndpointPublicURL(t)},t.endpoints=function(){return e.getEndpoints()},t.setEndpoints=function(t){e.storeEndpoints(t)},t.offlineMode=function(){return n.OfflineMode},t.setOfflineMode=function(t){n.OfflineMode=t,e.storeOfflineMode(t)},t.setOfflineModeFromStatus=function(t){var a=1!==t;n.OfflineMode=a,e.storeOfflineMode(a)},t.currentEndpoint=function(){var t=n.ID,r=e.getEndpoints();return Object(a.a)(r,(function(e){return e.Id===t}))},t}])},function(e,t,n){"use strict";n.r(t);var a=n(11);angular.module("portainer.app").factory("FileUploadService",["$q","Upload","EndpointProvider",function(e,t,n){var r={};function i(e,n){return t.upload({url:e,data:{file:n}})}return r.buildImage=function(e,r,i){var o=n.endpointID();return t.http({url:"api/endpoints/"+o+"/docker/build",headers:{"Content-Type":r.type},data:r,params:{t:e,dockerfile:i},ignoreLoadingBar:!0,transformResponse:function(e){return Object(a.jsonObjectsToArrayHandler)(e)}})},r.loadImages=function(e){var r=n.endpointID();return t.http({url:"api/endpoints/"+r+"/docker/images/load",headers:{"Content-Type":e.type},data:e,ignoreLoadingBar:!0,transformResponse:a.genericHandler})},r.createSchedule=function(e){return t.upload({url:"api/schedules?method=file",data:{file:e.File,Name:e.Name,CronExpression:e.CronExpression,Image:e.Image,Endpoints:t.json(e.Endpoints),RetryCount:e.RetryCount,RetryInterval:e.RetryInterval}})},r.createSwarmStack=function(e,n,a,r,i){return t.upload({url:"api/stacks?method=file&type=1&endpointId="+i,data:{file:a,Name:e,SwarmID:n,Env:t.json(r)},ignoreLoadingBar:!0})},r.createComposeStack=function(e,n,a,r){return t.upload({url:"api/stacks?method=file&type=2&endpointId="+r,data:{file:n,Name:e,Env:t.json(a)},ignoreLoadingBar:!0})},r.createEdgeStack=function(e,n,a){return t.upload({url:"api/edge_stacks?method=file",data:{file:n,Name:e,EdgeGroups:t.json(a)},ignoreLoadingBar:!0})},r.configureRegistry=function(e,n){return t.upload({url:"api/registries/"+e+"/configure",data:n})},r.executeEndpointJob=function(e,n,a,r){return t.upload({url:"api/endpoints/"+a+"/job?method=file&nodeName="+r,data:{File:n,Image:e},ignoreLoadingBar:!0})},r.createEndpoint=function(e,n,a,r,i,o,s,l,c,d,u,p){return t.upload({url:"api/endpoints",data:{Name:e,EndpointType:n,URL:a,PublicURL:r,GroupID:i,TagIds:t.json(o),TLS:s,TLSSkipVerify:l,TLSSkipClientVerify:c,TLSCACertFile:d,TLSCertFile:u,TLSKeyFile:p},ignoreLoadingBar:!0})},r.createAzureEndpoint=function(e,n,a,r,i,o){return t.upload({url:"api/endpoints",data:{Name:e,EndpointType:3,GroupID:i,TagIds:t.json(o),AzureApplicationID:n,AzureTenantID:a,AzureAuthenticationKey:r},ignoreLoadingBar:!0})},r.uploadLDAPTLSFiles=function(t,n,a){var r=[];return t&&r.push(i("api/upload/tls/ca?folder=ldap",t)),n&&r.push(i("api/upload/tls/cert?folder=ldap",n)),a&&r.push(i("api/upload/tls/key?folder=ldap",a)),e.all(r)},r.uploadTLSFilesForEndpoint=function(t,n,a,r){var o=[];return n&&o.push(i("api/upload/tls/ca?folder="+t,n)),a&&o.push(i("api/upload/tls/cert?folder="+t,a)),r&&o.push(i("api/upload/tls/key?folder="+t,r)),e.all(o)},r.uploadExtension=function(e,n){var a={License:e,file:n,ArchiveFileName:n.name};return t.upload({url:"api/extensions/upload",data:a,ignoreLoadingBar:!0})},r}])},function(e,t,n){"use strict";n.r(t);var a=n(7);angular.module("portainer.app").factory("FormValidator",[function(){var e={validateAccessControl:function(e,t){return e.AccessControlEnabled?t&&e.Ownership===a.ResourceControlOwnership.RESTRICTED&&0===e.AuthorizedUsers.length&&0===e.AuthorizedTeams.length?"You must specify at least one team or user.":t||e.Ownership!==a.ResourceControlOwnership.RESTRICTED||0!==e.AuthorizedTeams.length?"":"You must specify at least a team.":""}};return e}])},function(e,t){angular.module("portainer.app").factory("HttpRequestHelper",[function(){"use strict";var e={},t={agentTargetQueue:[],agentManagerOperation:!1};return e.registryAuthenticationHeader=function(){return t.registryAuthentication},e.setRegistryAuthenticationHeader=function(e){t.registryAuthentication=e},e.portainerAgentTargetHeader=function(){return 0===t.agentTargetQueue.length?t.agentTargetLastValue:(1===t.agentTargetQueue.length&&(t.agentTargetLastValue=t.agentTargetQueue[0]),t.agentTargetQueue.shift())},e.setPortainerAgentTargetHeader=function(e){e&&t.agentTargetQueue.push(e)},e.setPortainerAgentManagerOperation=function(e){t.agentManagerOperation=e},e.portainerAgentManagerOperation=function(){return t.agentManagerOperation},e.resetAgentHeaders=function(){t.agentTargetQueue=[],delete t.agentTargetLastValue,t.agentManagerOperation=!1},e}])},function(e,t,n){"use strict";n.r(t);var a=n(6);angular.module("portainer.app").factory("LegacyExtensionManager",["$q","PluginService","SystemService","NodeService","LegacyExtensionService",function(e,t,n,r,i){var o={};function s(){var n=e.defer();return t.volumePlugins().then((function(t){var n=t;return Object(a.a)(n,"cio:latest")?function(){var t=e.defer();return r.getActiveManager().then((function(e){var t="tcp://"+e.Addr+":8282";return i.registerStoridgeExtension(t)})).then((function(e){t.resolve(e)})).catch((function(e){t.reject({msg:"An error occured during Storidge extension initialization",err:e})})),t.promise}():i.deregisterStoridgeExtension()})).then((function(e){n.resolve(e)})).catch((function(e){n.reject({msg:"An error occured during Storidge extension check",err:e})})),n.promise}return o.initEndpointExtensions=function(t){var a=e.defer();return 1!==t.Status?(a.resolve([]),a.promise):(n.version().then((function(t){var n=parseFloat(t.ApiVersion);return e.all([n>=1.25?s():{}])})).then((function(e){var t=e;a.resolve(t)})).catch((function(e){a.reject({msg:"Unable to connect to the Docker environment",err:e})})),a.promise)},o}])},function(e,t){angular.module("portainer.app").factory("LocalStorage",["localStorageService",function(e){return{storeEndpointID:function(t){e.set("ENDPOINT_ID",t)},getEndpointID:function(){return e.get("ENDPOINT_ID")},storeEndpointPublicURL:function(t){e.set("ENDPOINT_PUBLIC_URL",t)},getEndpointPublicURL:function(){return e.get("ENDPOINT_PUBLIC_URL")},storeLoginStateUUID:function(t){e.set("LOGIN_STATE_UUID",t)},getLoginStateUUID:function(){return e.get("LOGIN_STATE_UUID")},storeOfflineMode:function(t){e.set("ENDPOINT_OFFLINE_MODE",t)},getOfflineMode:function(){return e.get("ENDPOINT_OFFLINE_MODE")},storeEndpoints:function(t){e.set("ENDPOINTS_DATA",t)},getEndpoints:function(){return e.get("ENDPOINTS_DATA")},storeEndpointState:function(t){e.set("ENDPOINT_STATE",t)},getEndpointState:function(){return e.get("ENDPOINT_STATE")},storeApplicationState:function(t){e.set("APPLICATION_STATE",t)},getApplicationState:function(){return e.get("APPLICATION_STATE")},storeUIState:function(t){e.set("UI_STATE",t)},getUIState:function(){return e.get("UI_STATE")},storeExtensionState:function(t){e.set("EXTENSION_STATE",t)},getExtensionState:function(){return e.get("EXTENSION_STATE")},storeJWT:function(t){e.set("JWT",t)},getJWT:function(){return e.get("JWT")},deleteJWT:function(){e.remove("JWT")},storePaginationLimit:function(t,n){e.set("datatable_pagination_"+t,n)},getPaginationLimit:function(t){return e.get("datatable_pagination_"+t)},getDataTableOrder:function(t){return e.get("datatable_order_"+t)},storeDataTableOrder:function(t,n){e.set("datatable_order_"+t,n)},getDataTableTextFilters:function(t){return e.get("datatable_text_filter_"+t)},storeDataTableTextFilters:function(t,n){e.set("datatable_text_filter_"+t,n)},getDataTableFilters:function(t){return e.get("datatable_filters_"+t)},storeDataTableFilters:function(t,n){e.set("datatable_filters_"+t,n)},getDataTableSettings:function(t){return e.get("datatable_settings_"+t)},storeDataTableSettings:function(t,n){e.set("datatable_settings_"+t,n)},getDataTableExpandedItems:function(t){return e.get("datatable_expandeditems_"+t)},storeDataTableExpandedItems:function(t,n){e.set("datatable_expandeditems_"+t,n)},getDataTableSelectedItems:function(t){return e.get("datatable_selecteditems_"+t)},storeDataTableSelectedItems:function(t,n){e.set("datatable_selecteditems_"+t,n)},storeSwarmVisualizerSettings:function(t,n){e.set("swarmvisualizer_"+t,n)},getSwarmVisualizerSettings:function(t){return e.get("swarmvisualizer_"+t)},storeColumnVisibilitySettings:function(t,n){e.set("col_visibility_"+t,n)},getColumnVisibilitySettings:function(t){return e.get("col_visibility_"+t)},storeJobImage:function(t){e.set("job_image",t)},getJobImage:function(){return e.get("job_image")},storeToolbarToggle:function(t){e.set("toolbar_toggle",t)},getToolbarToggle:function(){return e.get("toolbar_toggle")},storeLogoutReason:function(t){return e.set("logout_reason",t)},getLogoutReason:function(){return e.get("logout_reason")},cleanLogoutReason:function(){return e.remove("logout_reason")},clean:function(){e.clearAll()},cleanAuthData:function(){e.remove("JWT","EXTENSION_STATE","APPLICATION_STATE","LOGIN_STATE_UUID")},cleanEndpointData:function(){e.remove("ENDPOINT_ID","ENDPOINT_PUBLIC_URL","ENDPOINT_OFFLINE_MODE","ENDPOINTS_DATA","ENDPOINT_STATE")}}}])},function(e,t,n){"use strict";n.r(t);var a=n(176),r=n.n(a);angular.module("portainer.app").factory("ModalService",["$sanitize",function(e){var t={},n=function(e){e.css({top:"50%","margin-top":function(){return-e.height()/2}})},a=function(t){return{confirm:{label:e(t.buttons.confirm.label),className:e(t.buttons.confirm.className)},cancel:{label:t.buttons.cancel&&t.buttons.cancel.label?e(t.buttons.cancel.label):"Cancel"}}};function i(e,t){var i=r.a.prompt({title:e.title,inputType:e.inputType,inputOptions:e.inputOptions,buttons:a(e),callback:e.callback});n(i),i.find(".bootbox-body").prepend("<p>"+e.message+"</p>"),i.find(".bootbox-input-checkbox").prop("checked",t)}return t.enlargeImage=function(t){t=e(t),r.a.dialog({message:'<img src="'+t+'" style="width:100%" />',className:"image-zoom-modal",onEscape:!0})},t.confirm=function(e){var t=r.a.confirm({title:e.title,message:e.message,buttons:a(e),callback:e.callback});n(t)},t.confirmAccessControlUpdate=function(e){t.confirm({title:"Are you sure ?",message:"Changing the ownership of this resource will potentially restrict its management to some users.",buttons:{confirm:{label:"Change ownership",className:"btn-primary"}},callback:e})},t.confirmImageForceRemoval=function(e){t.confirm({title:"Are you sure?",message:"Forcing the removal of the image will remove the image even if it has multiple tags or if it is used by stopped containers.",buttons:{confirm:{label:"Remove the image",className:"btn-danger"}},callback:e})},t.cancelRegistryRepositoryAction=function(e){t.confirm({title:"Are you sure?",message:"WARNING: interrupting this operation before it has finished will result in the loss of all tags. Are you sure you want to do this?",buttons:{confirm:{label:"Stop",className:"btn-danger"}},callback:e})},t.confirmDeletion=function(n,a){n=e(n),t.confirm({title:"Are you sure ?",message:n,buttons:{confirm:{label:"Remove",className:"btn-danger"}},callback:a})},t.confirmContainerDeletion=function(e,t){var i,o;i={title:e,inputType:"checkbox",inputOptions:[{text:"Automatically remove non-persistent volumes<i></i>",value:"1"}],buttons:{confirm:{label:"Remove",className:"btn-danger"}},callback:t},o=r.a.prompt({title:i.title,inputType:i.inputType,inputOptions:i.inputOptions,buttons:a(i),callback:i.callback}),n(o)},t.confirmContainerRecreation=function(e){i({title:"Are you sure?",message:"You're about to re-create this container, any non-persisted data will be lost. This container will be removed and another one will be created using the same configuration.",inputType:"checkbox",inputOptions:[{text:"Pull latest image<i></i>",value:"1"}],buttons:{confirm:{label:"Recreate",className:"btn-danger"}},callback:e},!1)},t.confirmEndpointSnapshot=function(e){t.confirm({title:"Are you sure?",message:"Triggering a manual refresh will poll each endpoint to retrieve its information, this may take a few moments.",buttons:{confirm:{label:"Continue",className:"btn-primary"}},callback:e})},t.confirmImageExport=function(e){t.confirm({title:"Caution",message:"The export may take several minutes, do not navigate away whilst the export is in progress.",buttons:{confirm:{label:"Continue",className:"btn-primary"}},callback:e})},t.confirmServiceForceUpdate=function(e,t){i({title:"Are you sure ?",message:e,inputType:"checkbox",inputOptions:[{text:"Pull latest image version<i></i>",value:"1"}],buttons:{confirm:{label:"Update",className:"btn-primary"}},callback:t},!1)},t}])},function(e,t,n){"use strict";n.r(t);var a=n(149),r=n.n(a);angular.module("portainer.app").factory("Notifications",["$sanitize",function(e){var t={success:function(t,n){r.a.success(e(n),e(t))},warning:function(t,n){r.a.warning(e(n),e(t),{timeOut:6e3})},error:function(t,n,a){var i=a;n.err&&n.err.data&&n.err.data.details?i=n.err.data.details:n.data&&n.data.details?i=n.data.details:n.data&&n.data.message?i=n.data.message:n.data&&n.data.content?i=n.data.content:n.message?i=n.message:n.err&&n.err.data&&n.err.data.message?i=n.err.data.message:n.err&&n.err.data&&n.err.data.length>0&&n.err.data[0].message?i=n.err.data[0].message:n.err&&n.err.data&&n.err.data.err?i=n.err.data.err:n.data&&n.data.err?i=n.data.err:n.msg&&(i=n.msg),"Invalid JWT token"!==i&&r.a.error(e(i),e(t),{timeOut:6e3})}};return t}])},function(e,t){angular.module("portainer.app").factory("PaginationService",["LocalStorage","PAGINATION_MAX_ITEMS",function(e,t){"use strict";var n={getPaginationLimit:function(n){var a=t,r=e.getPaginationLimit(n);return null!==r&&(a=r),""+a},setPaginationLimit:function(t,n){e.storePaginationLimit(t,n)}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3),i=n.n(r);angular.module("portainer.app").factory("StateManager",["$q","SystemService","InfoHelper","EndpointProvider","LocalStorage","SettingsService","StatusService","APPLICATION_CACHE_VALIDITY","AgentPingService",function(e,t,n,r,o,s,l,c,d){var u={},p={loading:!0,application:{},endpoint:{},UI:{dismissedInfoPanels:{},dismissedInfoHash:""},extensions:[]};function m(){var t=e.defer();return e.all({settings:s.publicSettings(),status:l.status()}).then((function(e){!function(e,t){p.application.authentication=e.Authentication,p.application.analytics=e.Analytics,p.application.endpointManagement=e.EndpointManagement,p.application.snapshot=e.Snapshot,p.application.version=e.Version,p.application.logo=t.LogoURL,p.application.snapshotInterval=t.SnapshotInterval,p.application.enableHostManagementFeatures=t.EnableHostManagementFeatures,p.application.enableVolumeBrowserForNonAdminUsers=t.AllowVolumeBrowserForRegularUsers,p.application.enableEdgeComputeFeatures=t.EnableEdgeComputeFeatures,p.application.allowStackManagementForRegularUsers=t.AllowStackManagementForRegularUsers,p.application.allowBindMountsForRegularUsers=t.AllowBindMountsForRegularUsers,p.application.allowPrivilegedModeForRegularUsers=t.AllowPrivilegedModeForRegularUsers,p.application.allowDeviceMappingForRegularUsers=t.AllowDeviceMappingForRegularUsers,p.application.allowHostNamespaceForRegularUsers=t.AllowHostNamespaceForRegularUsers,p.application.allowContainerCapabilitiesForRegularUsers=t.AllowContainerCapabilitiesForRegularUsers,p.application.validity=i()().unix()}(e.status,e.settings),o.storeApplicationState(p.application),t.resolve(p)})).catch((function(e){t.reject({msg:"Unable to retrieve server settings and status",err:e})})).finally((function(){p.loading=!1})),t.promise}return u.setVersionInfo=function(e){p.application.versionStatus=e,o.storeApplicationState(p.application)},u.dismissInformationPanel=function(e){p.UI.dismissedInfoPanels[e]=!0,o.storeUIState(p.UI)},u.dismissImportantInformation=function(e){p.UI.dismissedInfoHash=e,o.storeUIState(p.UI)},u.getState=function(){return p},u.clean=function(){p.endpoint={},p.extensions=[]},u.updateLogo=function(e){p.application.logo=e,o.storeApplicationState(p.application)},u.updateSnapshotInterval=function(e){p.application.snapshotInterval=e,o.storeApplicationState(p.application)},u.updateEnableHostManagementFeatures=function(e){p.application.enableHostManagementFeatures=e,o.storeApplicationState(p.application)},u.updateEnableVolumeBrowserForNonAdminUsers=function(e){p.application.enableVolumeBrowserForNonAdminUsers=e,o.storeApplicationState(p.application)},u.updateEnableEdgeComputeFeatures=function(e){p.application.enableEdgeComputeFeatures=e,o.storeApplicationState(p.application)},u.updateAllowStackManagementForRegularUsers=function(e){p.application.allowStackManagementForRegularUsers=e,o.storeApplicationState(p.application)},u.updateAllowDeviceMappingForRegularUsers=function(e){p.application.allowDeviceMappingForRegularUsers=e,o.storeApplicationState(p.application)},u.updateAllowHostNamespaceForRegularUsers=function(e){p.application.allowHostNamespaceForRegularUsers=e,o.storeApplicationState(p.application)},u.updateAllowBindMountsForRegularUsers=function(e){p.application.allowBindMountsForRegularUsers=e,o.storeApplicationState(p.application)},u.updateAllowPrivilegedModeForRegularUsers=function(e){p.application.allowPrivilegedModeForRegularUsers=e,o.storeApplicationState(p.application)},u.updateAllowContainerCapabilitiesForRegularUsers=function(e){p.application.allowContainerCapabilitiesForRegularUsers=e,o.storeApplicationState(p.application)},u.initialize=function(){var t=e.defer(),n=o.getUIState();n&&(p.UI=n);var a=o.getExtensionState();a&&(p.extensions=a);var r=o.getEndpointState();r&&(p.endpoint=r);var s=o.getApplicationState();s?i()().unix()-s.validity>c?m().then((function(){return t.resolve(p)})).catch((function(e){return t.reject(e)})):(p.application=s,p.loading=!1,t.resolve(p)):m().then((function(){return t.resolve(p)})).catch((function(e){return t.reject(e)}));return t.promise},u.updateEndpointState=function(a,r){var i=e.defer();return 3===a.Type?(p.endpoint.name=a.Name,p.endpoint.mode={provider:"AZURE"},o.storeEndpointState(p.endpoint),i.resolve(),i.promise):(e.all({version:1===a.Status?t.version():e.when(a.Snapshots[0].SnapshotRaw.Version),info:1===a.Status?t.info():e.when(a.Snapshots[0].SnapshotRaw.Info)}).then((function(e){var t=n.determineEndpointMode(e.info,a.Type),i=parseFloat(e.version.ApiVersion);if(p.endpoint.mode=t,p.endpoint.name=a.Name,p.endpoint.type=a.Type,p.endpoint.apiVersion=i,p.endpoint.extensions=function(e){for(var t=[],n=0;n<e.length;n++){1===e[n].Type&&t.push("storidge")}return t}(r),t.agentProxy&&1===a.Status)return d.ping().then((function(e){p.endpoint.agentApiVersion=e.version}))})).then((function(){o.storeEndpointState(p.endpoint),i.resolve()})).catch((function(e){i.reject({msg:"Unable to connect to the Docker endpoint",err:e})})).finally((function(){p.loading=!1})),i.promise)},u.getAgentApiVersion=function(){return p.endpoint.agentApiVersion},u.saveExtensions=function(e){p.extensions=e,o.storeExtensionState(p.extensions)},u.getExtensions=function(){return p.extensions},u.getExtension=function(e){return Object(a.a)(p.extensions,{Id:e,Enabled:!0})},u}])},function(e,t){angular.module("portainer.app").controller("AccountController",["$scope","$state","Authentication","UserService","Notifications","SettingsService",function(e,t,n,a,r,i){e.formValues={currentPassword:"",newPassword:"",confirmPassword:""},e.updatePassword=function(){a.updateUserPassword(e.userID,e.formValues.currentPassword,e.formValues.newPassword).then((function(){r.success("Success","Password successfully updated"),t.reload()})).catch((function(e){r.error("Failure",e,e.msg)}))},e.userID=n.getUserDetails().ID,i.publicSettings().then((function(t){e.AuthenticationMethod=t.AuthenticationMethod})).catch((function(e){r.error("Failure",e,"Unable to retrieve application settings")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),i=n(246),o=n.n(i);function s(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function l(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){s(i,a,r,o,l,"next",e)}function l(e){s(i,a,r,o,l,"throw",e)}o(void 0)}))}}function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(t,n,a,r,i,o,s,l,c,d,u,p,m,g,f,v){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$async=t,this.$scope=n,this.$state=a,this.$stateParams=r,this.$window=o,this.$sanitize=i,this.Authentication=s,this.UserService=l,this.EndpointService=c,this.ExtensionService=d,this.StateManager=u,this.Notifications=p,this.SettingsService=m,this.URLHelper=g,this.LocalStorage=f,this.StatusService=v,this.logo=this.StateManager.getState().application.logo,this.formValues={Username:"",Password:""},this.state={AuthenticationError:"",loginInProgress:!0,OAuthProvider:""},this.retrieveAndSaveEnabledExtensionsAsync=this.retrieveAndSaveEnabledExtensionsAsync.bind(this),this.checkForEndpointsAsync=this.checkForEndpointsAsync.bind(this),this.checkForLatestVersionAsync=this.checkForLatestVersionAsync.bind(this),this.postLoginSteps=this.postLoginSteps.bind(this),this.oAuthLoginAsync=this.oAuthLoginAsync.bind(this),this.retryLoginSanitizeAsync=this.retryLoginSanitizeAsync.bind(this),this.internalLoginAsync=this.internalLoginAsync.bind(this),this.authenticateUserAsync=this.authenticateUserAsync.bind(this),this.manageOauthCodeReturn=this.manageOauthCodeReturn.bind(this),this.authEnabledFlowAsync=this.authEnabledFlowAsync.bind(this),this.onInit=this.onInit.bind(this)}var t,n,a,r,i,s,d,u,p,m,g,f,v,h;return e.$inject=["$async","$scope","$state","$stateParams","$sanitize","$window","Authentication","UserService","EndpointService","ExtensionService","StateManager","Notifications","SettingsService","URLHelper","LocalStorage","StatusService"],t=e,(n=[{key:"logout",value:function(e){this.Authentication.logout(),this.state.loginInProgress=!1,this.generateOAuthLoginURI(),this.LocalStorage.storeLogoutReason(e),this.$window.location.reload()}},{key:"error",value:function(e,t){this.state.AuthenticationError=t,e||(e={}),this.Notifications.error("Failure",e,t),this.state.loginInProgress=!1}},{key:"determineOauthProvider",value:function(e){return-1!==e.indexOf("login.microsoftonline.com")?"Microsoft":-1!==e.indexOf("accounts.google.com")?"Google":-1!==e.indexOf("github.com")?"Github":"OAuth"}},{key:"generateState",value:function(){var e=o()();return this.LocalStorage.storeLoginStateUUID(e),"&state="+e}},{key:"generateOAuthLoginURI",value:function(){this.OAuthLoginURI=this.state.OAuthLoginURI+this.generateState()}},{key:"hasValidState",value:function(e){var t=this.LocalStorage.getLoginStateUUID();return t&&e&&t===e}},{key:"retrieveAndSaveEnabledExtensionsAsync",value:(h=l(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.ExtensionService.retrieveAndSaveEnabledExtensions();case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),this.error(e.t0,"Unable to retrieve enabled extensions");case 8:case"end":return e.stop()}}),e,this,[[0,5]])}))),function(){return h.apply(this,arguments)})},{key:"checkForEndpointsAsync",value:(v=l(regeneratorRuntime.mark((function e(t){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.EndpointService.endpoints(0,1);case 3:if(n=e.sent,a=t||this.Authentication.isAdmin(),0!==n.value.length||!a){e.next=9;break}return e.abrupt("return",this.$state.go("portainer.init.endpoint"));case 9:return e.abrupt("return",this.$state.go("portainer.home"));case 10:e.next=15;break;case 12:e.prev=12,e.t0=e.catch(0),this.error(e.t0,"Unable to retrieve endpoints");case 15:case"end":return e.stop()}}),e,this,[[0,12]])}))),function(e){return v.apply(this,arguments)})},{key:"checkForLatestVersionAsync",value:(f=l(regeneratorRuntime.mark((function e(){var t,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t={UpdateAvailable:!1,LatestVersion:""},e.prev=1,e.next=4,this.StatusService.version();case 4:(n=e.sent).UpdateAvailable&&(t.UpdateAvailable=!0,t.LatestVersion=n.LatestVersion);case 6:return e.prev=6,this.StateManager.setVersionInfo(t),e.finish(6);case 9:case"end":return e.stop()}}),e,this,[[1,,6,9]])}))),function(){return f.apply(this,arguments)})},{key:"postLoginSteps",value:(g=l(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.retrieveAndSaveEnabledExtensionsAsync();case 2:return e.next=4,this.checkForEndpointsAsync(!1);case 4:return e.next=6,this.checkForLatestVersionAsync();case 6:case"end":return e.stop()}}),e,this)}))),function(){return g.apply(this,arguments)})},{key:"oAuthLoginAsync",value:(m=l(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.Authentication.OAuthLogin(t);case 3:this.URLHelper.cleanParameters(),e.next=9;break;case 6:e.prev=6,e.t0=e.catch(0),this.error(e.t0,"Unable to login via OAuth");case 9:case"end":return e.stop()}}),e,this,[[0,6]])}))),function(e){return m.apply(this,arguments)})},{key:"retryLoginSanitizeAsync",value:(p=l(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.internalLoginAsync(this.$sanitize(t),this.$sanitize(n));case 3:this.$state.go("portainer.updatePassword"),e.next=9;break;case 6:e.prev=6,e.t0=e.catch(0),this.error(e.t0,"Invalid credentials");case 9:case"end":return e.stop()}}),e,this,[[0,6]])}))),function(e,t){return p.apply(this,arguments)})},{key:"internalLoginAsync",value:(u=l(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.Authentication.login(t,n);case 2:return e.next=4,this.postLoginSteps();case 4:case"end":return e.stop()}}),e,this)}))),function(e,t){return u.apply(this,arguments)})},{key:"authenticateUserAsync",value:(d=l(regeneratorRuntime.mark((function e(){var t,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=this.formValues.Username,n=this.formValues.Password,this.state.loginInProgress=!0,e.next=6,this.internalLoginAsync(t,n);case 6:e.next=14;break;case 8:if(e.prev=8,e.t0=e.catch(0),!this.state.permissionsError){e.next=12;break}return e.abrupt("return");case 12:return e.next=14,this.retryLoginSanitizeAsync(t,n);case 14:case"end":return e.stop()}}),e,this,[[0,8]])}))),function(){return d.apply(this,arguments)})},{key:"authenticateUser",value:function(){return this.$async(this.authenticateUserAsync)}},{key:"manageOauthCodeReturn",value:(s=l(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.hasValidState(n)){e.next=5;break}return e.next=3,this.oAuthLoginAsync(t);case 3:e.next=6;break;case 5:this.error(null,"Invalid OAuth state, try again.");case 6:case"end":return e.stop()}}),e,this)}))),function(e,t){return s.apply(this,arguments)})},{key:"authEnabledFlowAsync",value:(i=l(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.UserService.administratorExists();case 3:e.sent||this.$state.go("portainer.init.admin"),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),this.error(e.t0,"Unable to verify administrator account existence");case 10:case"end":return e.stop()}}),e,this,[[0,7]])}))),function(){return i.apply(this,arguments)})},{key:"onInit",value:(r=l(regeneratorRuntime.mark((function e(){var t,n,a,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.SettingsService.publicSettings();case 3:if(t=e.sent,this.AuthenticationMethod=t.AuthenticationMethod,this.state.OAuthProvider=this.determineOauthProvider(t.OAuthLoginURI),this.state.OAuthLoginURI=t.OAuthLoginURI,n=this.URLHelper.getParameter("code"),a=this.URLHelper.getParameter("state"),!n||!a){e.next=14;break}return e.next=12,this.manageOauthCodeReturn(n,a);case 12:return this.generateOAuthLoginURI(),e.abrupt("return");case 14:if(this.generateOAuthLoginURI(),!this.$stateParams.logout&&!this.$stateParams.error){e.next=18;break}return this.logout(this.$stateParams.error),e.abrupt("return");case 18:if((r=this.LocalStorage.getLogoutReason())&&(this.state.AuthenticationError=r,this.LocalStorage.cleanLogoutReason()),!this.Authentication.isAuthenticated()){e.next=23;break}return e.next=23,this.postLoginSteps();case 23:if(this.state.loginInProgress=!1,this.$scope.applicationState.application.authentication){e.next=30;break}return e.next=28,this.checkForEndpointsAsync(!0);case 28:e.next=32;break;case 30:return e.next=32,this.authEnabledFlowAsync();case 32:e.next=37;break;case 34:e.prev=34,e.t0=e.catch(0),this.Notifications.error("Failure",e.t0,"Unable to retrieve public settings");case 37:case"end":return e.stop()}}),e,this,[[0,34]])}))),function(){return r.apply(this,arguments)})},{key:"$onInit",value:function(){return this.$async(this.onInit)}}])&&c(t.prototype,n),a&&c(t,a),e}();t.default=d,r.a.module("portainer.app").controller("AuthenticationController",d)},,,function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function o(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var o=e.apply(t,n);function s(e){i(o,a,r,s,l,"next",e)}function l(e){i(o,a,r,s,l,"throw",e)}s(void 0)}))}}function s(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var l=function(){function e(t,n,a,r,i,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$state=t,this.$transition$=n,this.Notifications=a,this.EndpointService=r,this.GroupService=i,this.$async=o,this.updateAccess=this.updateAccess.bind(this),this.updateAccessAsync=this.updateAccessAsync.bind(this)}var t,n,a,r,i;return e.$inject=["$state","$transition$","Notifications","EndpointService","GroupService","$async"],t=e,(n=[{key:"$onInit",value:(i=o(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.state={actionInProgress:!1},e.prev=1,e.next=4,this.EndpointService.endpoint(this.$transition$.params().id);case 4:return this.endpoint=e.sent,e.next=7,this.GroupService.group(this.endpoint.GroupId);case 7:this.group=e.sent,e.next=13;break;case 10:e.prev=10,e.t0=e.catch(1),this.Notifications.error("Failure",e.t0,"Unable to retrieve endpoint information");case 13:case"end":return e.stop()}}),e,this,[[1,10]])}))),function(){return i.apply(this,arguments)})},{key:"updateAccess",value:function(){return this.$async(this.updateAccessAsync)}},{key:"updateAccessAsync",value:(r=o(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,this.state.actionInProgress=!0,e.next=4,this.EndpointService.updateEndpoint(this.$transition$.params().id,this.endpoint);case 4:this.Notifications.success("Access successfully updated"),this.$state.reload(),e.next=12;break;case 8:e.prev=8,e.t0=e.catch(0),this.state.actionInProgress=!1,this.Notifications.error("Failure",e.t0,"Unable to update accesses");case 12:case"end":return e.stop()}}),e,this,[[0,8]])}))),function(){return r.apply(this,arguments)})}])&&s(t.prototype,n),a&&s(t,a),e}();t.default=l,r.a.module("portainer.app").controller("EndpointAccessController",l)},function(e,t,n){"use strict";n.r(t),function(e){var t=n(168);function a(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function r(e){return function(){var t=this,n=arguments;return new Promise((function(r,i){var o=e.apply(t,n);function s(e){a(o,r,i,s,l,"next",e)}function l(e){a(o,r,i,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.app").controller("CreateEndpointController",["$async","$q","$scope","$state","$filter","clipboard","EndpointService","GroupService","TagService","Notifications","Authentication",function(n,a,i,o,s,l,c,d,u,p,m){function g(e){return f.apply(this,arguments)}function f(){return(f=r(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,u.createTag(t);case 3:n=e.sent,i.availableTags=i.availableTags.concat(n),i.formValues.TagIds=i.formValues.TagIds.concat(n.Id),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),p.error("Failue",e.t0,"Unable to create tag");case 11:case"end":return e.stop()}}),e,null,[[0,8]])})))).apply(this,arguments)}function v(e,t,n,a,r,s,l,d,u,m,g,f){i.state.actionInProgress=!0,c.createRemoteEndpoint(e,t,n,a,r,s,l,d,u,m,g,f).then((function(n){p.success("Endpoint created",e),4===t?o.go("portainer.endpoints.endpoint",{id:n.Id}):o.go("portainer.endpoints",{},{reload:!0})})).catch((function(e){p.error("Failure",e,"Unable to create endpoint")})).finally((function(){i.state.actionInProgress=!1}))}i.state={EnvironmentType:"agent",actionInProgress:!1,allowCreateTag:m.isAdmin()},i.formValues={Name:"",URL:"",PublicURL:"",GroupId:1,SecurityFormData:new t.EndpointSecurityFormData,AzureApplicationId:"",AzureTenantId:"",AzureAuthenticationKey:"",TagIds:[]},i.copyAgentCommand=function(){l.copyText("curl -L https://downloads.portainer.io/agent-stack.yml -o agent-stack.yml && docker stack deploy --compose-file=agent-stack.yml portainer-agent"),e("#copyNotification").show(),e("#copyNotification").fadeOut(2e3)},i.setDefaultPortainerInstanceURL=function(){i.formValues.URL=window.location.origin},i.resetEndpointURL=function(){i.formValues.URL=""},i.addDockerEndpoint=function(){var e=i.formValues.Name,t=s("stripprotocol")(i.formValues.URL),n=""===i.formValues.PublicURL?t.split(":")[0]:i.formValues.PublicURL,a=i.formValues.GroupId,r=i.formValues.TagIds,o=i.formValues.SecurityFormData,l=o.TLS,c=o.TLSMode,d=l&&("tls_client_noca"===c||"tls_only"===c),u=l&&("tls_ca"===c||"tls_only"===c);v(e,1,t,n,a,r,l,d,u,d?null:o.TLSCACert,u?null:o.TLSCert,u?null:o.TLSKey)},i.addAgentEndpoint=function(){var e=i.formValues.Name,t=s("stripprotocol")(i.formValues.URL),n=""===i.formValues.PublicURL?t.split(":")[0]:i.formValues.PublicURL;v(e,2,t,n,i.formValues.GroupId,i.formValues.TagIds,!0,!0,!0,null,null,null)},i.addEdgeAgentEndpoint=function(){var e=i.formValues.Name,t=i.formValues.GroupId,n=i.formValues.TagIds;v(e,4,i.formValues.URL,"",t,n,!1,!1,!1,null,null,null)},i.addAzureEndpoint=function(){!function(e,t,n,a,r,s){i.state.actionInProgress=!0,c.createAzureEndpoint(e,t,n,a,r,s).then((function(){p.success("Endpoint created",e),o.go("portainer.endpoints",{},{reload:!0})})).catch((function(e){p.error("Failure",e,"Unable to create endpoint")})).finally((function(){i.state.actionInProgress=!1}))}(i.formValues.Name,i.formValues.AzureApplicationId,i.formValues.AzureTenantId,i.formValues.AzureAuthenticationKey,i.formValues.GroupId,i.formValues.TagIds)},i.onCreateTag=function(e){return n(g,e)},a.all({groups:d.groups(),tags:u.tags()}).then((function(e){i.groups=e.groups,i.availableTags=e.tags})).catch((function(e){p.error("Failure",e,"Unable to load groups")}))}])}.call(this,n(19))},function(e,t,n){"use strict";n.r(t),function(e){var t=n(22),a=n(246),r=n.n(a),i=n(168);function o(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function s(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function s(e){o(i,a,r,s,l,"next",e)}function l(e){o(i,a,r,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.app").controller("EndpointController",["$async","$q","$scope","$state","$transition$","$filter","clipboard","EndpointService","GroupService","TagService","EndpointProvider","Notifications","Authentication",function(n,a,o,l,c,d,u,p,m,g,f,v,h){function b(e){return y.apply(this,arguments)}function y(){return(y=s(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,g.createTag(t);case 3:n=e.sent,o.availableTags=o.availableTags.concat(n),o.endpoint.TagIds=o.endpoint.TagIds.concat(n.Id),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),v.error("Failue",e.t0,"Unable to create tag");case 11:case"end":return e.stop()}}),e,null,[[0,8]])})))).apply(this,arguments)}function x(e,t){return"docker network create \\\n  --driver overlay \\\n  portainer_agent_network;\n\ndocker service create \\\n  --name portainer_edge_agent \\\n  --network portainer_agent_network \\\n  -e AGENT_CLUSTER_ADDR=tasks.portainer_edge_agent \\\n  -e EDGE=1 \\\n  -e EDGE_ID=".concat(e," \\\n  -e EDGE_KEY=").concat(t," \\\n  -e CAP_HOST_MANAGEMENT=1 \\\n  --mode global \\\n  --constraint 'node.platform.os == linux' \\\n  --mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock \\\n  --mount type=bind,src=//var/lib/docker/volumes,dst=/var/lib/docker/volumes \\\n  --mount type=bind,src=//,dst=/host \\\n  --mount type=volume,src=portainer_agent_data,dst=/data \\\n  portainer/agent")}o.applicationState.application.endpointManagement||l.go("portainer.endpoints"),o.state={uploadInProgress:!1,actionInProgress:!1,deploymentTab:0,allowCreate:h.isAdmin()},o.formValues={SecurityFormData:new i.EndpointSecurityFormData},o.copyEdgeAgentDeploymentCommand=function(){0===o.state.deploymentTab?u.copyText("docker run -d -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker/volumes:/var/lib/docker/volumes -v /:/host --restart always -e EDGE=1 -e EDGE_ID="+o.randomEdgeID+" -e EDGE_KEY="+o.endpoint.EdgeKey+" -e CAP_HOST_MANAGEMENT=1 -v portainer_agent_data:/data --name portainer_edge_agent portainer/agent"):u.copyText("docker network create --driver overlay portainer_agent_network; docker service create --name portainer_edge_agent --network portainer_agent_network -e AGENT_CLUSTER_ADDR=tasks.portainer_edge_agent -e EDGE=1 -e EDGE_ID="+o.randomEdgeID+" -e EDGE_KEY="+o.endpoint.EdgeKey+" -e CAP_HOST_MANAGEMENT=1 --mode global --constraint 'node.platform.os == linux' --mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock --mount type=bind,src=//var/lib/docker/volumes,dst=/var/lib/docker/volume --mount type=bind,src=//,dst=/host --mount type=volume,src=portainer_agent_data,dst=/data portainer/agent"),e("#copyNotificationDeploymentCommand").show().fadeOut(2500)},o.copyEdgeAgentKey=function(){u.copyText(o.endpoint.EdgeKey),e("#copyNotificationEdgeKey").show().fadeOut(2500)},o.onCreateTag=function(e){return n(b,e)},o.updateEndpoint=function(){var e=o.endpoint,t=o.formValues.SecurityFormData,n=t.TLS,a=t.TLSMode,r=n&&("tls_client_noca"===a||"tls_only"===a),i=n&&("tls_ca"===a||"tls_only"===a),s={Name:e.Name,PublicURL:e.PublicURL,GroupID:e.GroupId,TagIds:e.TagIds,TLS:n,TLSSkipVerify:r,TLSSkipClientVerify:i,TLSCACert:r||t.TLSCACert===e.TLSConfig.TLSCACert?null:t.TLSCACert,TLSCert:i||t.TLSCert===e.TLSConfig.TLSCert?null:t.TLSCert,TLSKey:i||t.TLSKey===e.TLSConfig.TLSKey?null:t.TLSKey,AzureApplicationID:e.AzureCredentials.ApplicationID,AzureTenantID:e.AzureCredentials.TenantID,AzureAuthenticationKey:e.AzureCredentials.AuthenticationKey};"local"!==o.endpointType&&3!==e.Type&&(s.URL="tcp://"+e.URL),o.state.actionInProgress=!0,p.updateEndpoint(e.Id,s).then((function(){v.success("Endpoint updated",o.endpoint.Name),f.setEndpointPublicURL(e.PublicURL),l.go("portainer.endpoints",{},{reload:!0})}),(function(e){v.error("Failure",e,"Unable to update endpoint"),o.state.actionInProgress=!1}),(function(e){e.upload&&(o.state.uploadInProgress=e.upload)}))},a.all({endpoint:p.endpoint(c.params().id),groups:m.groups(),tags:g.tags()}).then((function(e){var n,a,i=e.endpoint;0===i.URL.indexOf("unix://")||0===i.URL.indexOf("npipe://")?o.endpointType="local":o.endpointType="remote",i.URL=d("stripprotocol")(i.URL),4===i.Type&&(o.edgeKeyDetails=function(e){var n={};if(""===e)return n;var a=Object(t.a)(atob(e),"|");return n.instanceURL=a[0],n.tunnelServerAddr=a[1],n}(i.EdgeKey),o.randomEdgeID=r()(),o.dockerCommands={standalone:(n=o.randomEdgeID,a=i.EdgeKey,"docker run -d -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v /var/lib/docker/volumes:/var/lib/docker/volumes \\\n  -v /:/host \\\n  --restart always \\\n  -e EDGE=1 \\\n  -e EDGE_ID=".concat(n," \\\n  -e EDGE_KEY=").concat(a," \\\n  -e CAP_HOST_MANAGEMENT=1 \\\n  -v portainer_agent_data:/data \\\n  --name portainer_edge_agent \\\n  portainer/agent")),swarm:x(o.randomEdgeID,i.EdgeKey)}),o.endpoint=i,o.groups=e.groups,o.availableTags=e.tags})).catch((function(e){v.error("Failure",e,"Unable to retrieve endpoint details")}))}])}.call(this,n(19))},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a);function i(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=function(e,t){if(!e)return;if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e))){var t=0,n=function(){};return{s:n,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,i=!0,s=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return i=e.done,e},e:function(e){s=!0,r=e},f:function(){try{i||null==a.return||a.return()}finally{if(s)throw r}}}}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function s(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function l(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){s(i,a,r,o,l,"next",e)}function l(e){s(i,a,r,o,l,"throw",e)}o(void 0)}))}}function c(e,t,n,a,r,o,s,c){function d(e){return u.apply(this,arguments)}function u(){return(u=l(regeneratorRuntime.mark((function e(t){var a,o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a=i(t),e.prev=1,a.s();case 3:if((o=a.n()).done){e.next=16;break}return s=o.value,e.prev=5,e.next=8,r.deleteEndpoint(s.Id);case 8:c.success("Endpoint successfully removed",s.Name),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(5),c.error("Failure",e.t0,"Unable to remove endpoint");case 14:e.next=3;break;case 16:e.next=21;break;case 18:e.prev=18,e.t1=e.catch(1),a.e(e.t1);case 21:return e.prev=21,a.f(),e.finish(21);case 24:n.reload();case 25:case"end":return e.stop()}}),e,null,[[1,18,21,24],[5,11]])})))).apply(this,arguments)}t.removeAction=function(e){return a(d,e)},t.getPaginatedEndpoints=function(t,n,a){var i=e.defer();return e.all({endpoints:r.endpoints(t,n,{search:a}),groups:o.groups()}).then((function(e){var t=e.endpoints.value,n=e.groups;s.mapGroupNameToEndpoint(t,n),i.resolve({endpoints:t,totalCount:e.endpoints.totalCount})})).catch((function(e){c.error("Failure",e,"Unable to retrieve endpoint information")})),i.promise}}c.$inject=["$q","$scope","$state","$async","EndpointService","GroupService","EndpointHelper","Notifications"],r.a.module("portainer.app").controller("EndpointsController",c)},function(e,t,n){"use strict";n.r(t);var a=n(9),r=n(3),i=n.n(r);angular.module("portainer.app").controller("ExtensionsController",["$scope","$state","ExtensionService","Notifications",function(e,t,n,r){e.state={actionInProgress:!1,currentDate:i()().format("YYYY-MM-dd"),updateLicense:!1},e.formValues={License:"",ExtensionFile:null},e.enableExtension=function(){var a=e.formValues.License,i=e.formValues.ExtensionFile;e.state.actionInProgress=!0,n.enable(a,i).then((function(){return n.retrieveAndSaveEnabledExtensions()})).then((function(){r.success("Extension successfully enabled"),t.reload()})).catch((function(e){r.error("Failure",e,"Unable to enable extension")})).finally((function(){e.state.actionInProgress=!1}))},e.isValidLicenseFormat=function(t){var n=!0;if(e.formValues.License){isNaN(e.formValues.License[0])&&(n=!1);var r=e.formValues.License[0];e.state.updateLicense=!1,Object(a.a)(e.extensions,(function(t){r===""+t.Id&&t.Enabled&&(e.state.updateLicense=!0)})),t.extension_license.$setValidity("invalidLicense",n)}},n.extensions(!0).then((function(t){e.extensions=t})).catch((function(t){e.extensions=[],r.error("Failure",t,"Unable to access extension store")}))}])},function(e,t){angular.module("portainer.app").controller("ExtensionController",["$q","$scope","$transition$","$state","ExtensionService","Notifications","ModalService",function(e,t,n,a,r,i,o){t.state={onlineUpdateInProgress:!1,offlineUpdateInProgress:!1,deleteInProgress:!1,offlineUpdate:!1},t.formValues={instances:1,extensionFile:null},t.updateExtensionOnline=function(e){t.state.onlineUpdateInProgress=!0,r.update(e.Id,e.Version).then((function(){i.success("Extension successfully updated"),a.reload()})).catch((function(e){i.error("Failure",e,"Unable to update extension")})).finally((function(){t.state.onlineUpdateInProgress=!1}))},t.updateExtensionOffline=function(e){t.state.offlineUpdateInProgress=!0;var n=t.formValues.ExtensionFile;r.enable(e.License.LicenseKey,n).then((function(){i.success("Extension successfully updated"),a.reload()})).catch((function(e){i.error("Failure",e,"Unable to update extension")})).finally((function(){t.state.offlineUpdateInProgress=!1}))},t.deleteExtension=function(e){t.state.deleteInProgress=!0,r.delete(e.Id).then((function(){i.success("Extension successfully deleted"),a.go("portainer.extensions")})).catch((function(e){i.error("Failure",e,"Unable to delete extension")})).finally((function(){t.state.deleteInProgress=!1}))},t.enlargeImage=function(e){o.enlargeImage(e)},r.extension(n.params().id).then((function(e){t.extension=e})).catch((function(e){i.error("Failure",e,"Unable to retrieve extension information")}))}])},function(e,t){angular.module("portainer.app").controller("GroupAccessController",["$scope","$state","$transition$","GroupService","Notifications",function(e,t,n,a,r){var i;e.updateAccess=function(){e.state.actionInProgress=!0,a.updateGroup(e.group,e.group.AssociatedEndpoints).then((function(){r.success("Access successfully updated"),t.reload()})).catch((function(t){e.state.actionInProgress=!1,r.error("Failure",t,"Unable to update accesses")}))},i=n.params().id,e.state={actionInProgress:!1},a.group(i).then((function(t){e.group=t})).catch((function(e){r.error("Failure",e,"Unable to load view")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(116);function r(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function i(e){return function(){var t=this,n=arguments;return new Promise((function(a,i){var o=e.apply(t,n);function s(e){r(o,a,i,s,l,"next",e)}function l(e){r(o,a,i,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.app").controller("CreateGroupController",["$async","$scope","$state","GroupService","TagService","Notifications",function(e,t,n,r,o,s){function l(e){return c.apply(this,arguments)}function c(){return(c=i(regeneratorRuntime.mark((function e(n){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,o.createTag(n);case 3:a=e.sent,t.availableTags=t.availableTags.concat(a),t.model.TagIds=t.model.TagIds.concat(a.Id),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),s.error("Failue",e.t0,"Unable to create tag");case 11:case"end":return e.stop()}}),e,null,[[0,8]])})))).apply(this,arguments)}t.state={actionInProgress:!1},t.create=function(){for(var e=t.model,a=[],i=0;i<t.associatedEndpoints.length;i++){var o=t.associatedEndpoints[i];a.push(o.Id)}t.state.actionInProgress=!0,r.createGroup(e,a).then((function(){s.success("Group successfully created"),n.go("portainer.groups",{},{reload:!0})})).catch((function(e){s.error("Failure",e,"Unable to create group")})).finally((function(){t.state.actionInProgress=!1}))},t.onCreateTag=function(t){return e(l,t)},o.tags().then((function(e){t.availableTags=e,t.associatedEndpoints=[],t.model=new a.EndpointGroupDefaultModel,t.loaded=!0})).catch((function(e){s.error("Failure",e,"Unable to retrieve tags")}))}])},function(e,t){function n(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function a(e){return function(){var t=this,a=arguments;return new Promise((function(r,i){var o=e.apply(t,a);function s(e){n(o,r,i,s,l,"next",e)}function l(e){n(o,r,i,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.app").controller("GroupController",["$q","$async","$scope","$state","$transition$","GroupService","TagService","Notifications",function(e,t,n,r,i,o,s,l){function c(e){return d.apply(this,arguments)}function d(){return(d=a(regeneratorRuntime.mark((function e(t){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,s.createTag(t);case 3:a=e.sent,n.availableTags=n.availableTags.concat(a),n.group.TagIds=n.group.TagIds.concat(a.Id),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),l.error("Failue",e.t0,"Unable to create tag");case 11:case"end":return e.stop()}}),e,null,[[0,8]])})))).apply(this,arguments)}var u;n.state={actionInProgress:!1},n.update=function(){var e=n.group;n.state.actionInProgress=!0,o.updateGroup(e).then((function(){l.success("Group successfully updated"),r.go("portainer.groups",{},{reload:!0})})).catch((function(e){l.error("Failure",e,"Unable to update group")})).finally((function(){n.state.actionInProgress=!1}))},n.onCreateTag=function(e){return t(c,e)},u=i.params().id,e.all({group:o.group(u),tags:s.tags()}).then((function(e){n.group=e.group,n.availableTags=e.tags,n.loaded=!0})).catch((function(e){l.error("Failure",e,"Unable to load group details")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(25),r=n(1),i=n.n(r);function o(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=function(e,t){if(!e)return;if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}(e))){var t=0,n=function(){};return{s:n,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,i=!0,o=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return i=e.done,e},e:function(e){o=!0,r=e},f:function(){try{i||null==a.return||a.return()}finally{if(o)throw r}}}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function l(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function c(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){l(i,a,r,o,s,"next",e)}function s(e){l(i,a,r,o,s,"throw",e)}o(void 0)}))}}function d(e,t,n,r,i){function s(e){return l.apply(this,arguments)}function l(){return(l=c(regeneratorRuntime.mark((function n(s){var l,c,d;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:l=o(s),n.prev=1,l.s();case 3:if((c=l.n()).done){n.next=17;break}return d=c.value,n.prev=5,n.next=8,r.deleteGroup(d.Id);case 8:i.success("Endpoint group successfully removed",d.Name),Object(a.a)(e.groups,d),n.next=15;break;case 12:n.prev=12,n.t0=n.catch(5),i.error("Failure",n.t0,"Unable to remove group");case 15:n.next=3;break;case 17:n.next=22;break;case 19:n.prev=19,n.t1=n.catch(1),l.e(n.t1);case 22:return n.prev=22,l.f(),n.finish(22);case 25:t.reload();case 26:case"end":return n.stop()}}),n,null,[[1,19,22,25],[5,12]])})))).apply(this,arguments)}e.removeAction=function(e){return n(s,e)},r.groups().then((function(t){e.groups=t})).catch((function(t){i.error("Failure",t,"Unable to retrieve endpoint groups"),e.groups=[]}))}d.$inject=["$scope","$state","$async","GroupService","Notifications"],i.a.module("portainer.app").controller("GroupsController",d)},function(e,t){function n(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function a(e){return function(){var t=this,a=arguments;return new Promise((function(r,i){var o=e.apply(t,a);function s(e){n(o,r,i,s,l,"next",e)}function l(e){n(o,r,i,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.app").controller("HomeController",["$q","$scope","$state","TagService","Authentication","EndpointService","EndpointHelper","GroupService","Notifications","EndpointProvider","StateManager","LegacyExtensionManager","ModalService","MotdService","SystemService",function(e,t,n,r,i,o,s,l,c,d,u,p,m,g,f){function v(e){return 2===e.Status&&e.Snapshots[0]&&!0===e.Snapshots[0].Swarm?(t.state.connectingToEdgeEndpoint=!1,void c.error("Failure","","Endpoint is unreachable. Connect to another swarm manager.")):2!==e.Status||e.Snapshots[0]?(d.setEndpointID(e.Id),d.setEndpointPublicURL(e.PublicURL),d.setOfflineModeFromStatus(e.Status),void p.initEndpointExtensions(e).then((function(t){var n=t;return u.updateEndpointState(e,n)})).then((function(){n.go("docker.dashboard")})).catch((function(e){c.error("Failure",e,"Unable to connect to the Docker endpoint"),n.reload()})).finally((function(){t.state.connectingToEdgeEndpoint=!1}))):(t.state.connectingToEdgeEndpoint=!1,void c.error("Failure","","Endpoint is unreachable and there is no snapshot available for offline browsing."))}function h(t,n,a){var r=e.defer();return e.all({endpoints:o.endpoints(t,n,{search:a}),groups:l.groups()}).then((function(e){var t=e.endpoints.value,n=e.groups;s.mapGroupNameToEndpoint(t,n),d.setEndpoints(t),r.resolve({endpoints:t,totalCount:e.endpoints.totalCount})})).catch((function(e){c.error("Failure",e,"Unable to retrieve endpoint information")})),r.promise}function b(){return(b=a(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.isAdmin=i.isAdmin(),g.motd().then((function(e){t.motd=e})),h(0,100).then((function(e){var n=e.totalCount;t.totalCount=n,t.endpoints=n>100?[]:e.endpoints})),e.prev=3,e.next=6,r.tags();case 6:t.tags=e.sent,e.next=12;break;case 9:e.prev=9,e.t0=e.catch(3),c.error("Failed loading tags",e.t0);case 12:case"end":return e.stop()}}),e,null,[[3,9]])})))).apply(this,arguments)}t.state={connectingToEdgeEndpoint:!1},t.goToEdit=function(e){n.go("portainer.endpoints.endpoint",{id:e})},t.goToDashboard=function(a){return 3===a.Type?function(e){d.setEndpointID(e.Id),d.setEndpointPublicURL(e.PublicURL),d.setOfflineModeFromStatus(e.Status),u.updateEndpointState(e,[]).then((function(){n.go("azure.dashboard")})).catch((function(e){c.error("Failure",e,"Unable to connect to the Azure endpoint")}))}(a):4===a.Type?function(e){if(!e.EdgeID)return void n.go("portainer.endpoints.endpoint",{id:e.Id});t.state.connectingToEdgeEndpoint=!0,f.ping(e.Id).then((function(){e.Status=1})).catch((function(){e.Status=2})).finally((function(){v(e)}))}(a):void function(t){var n=e.defer(),a=1;return f.ping(t.Id).then((function(){a=1})).catch((function(){a=2})).finally((function(){if(t.Status===a)return n.resolve(t),n.promise;o.updateEndpoint(t.Id,{Status:a}).then((function(){t.Status=a,n.resolve(t)})).catch((function(e){n.reject({msg:"Unable to update endpoint status",err:e})}))})),n.promise}(a).then((function(e){return v(a=e)})).catch((function(e){c.error("Failure",e,"Unable to verify endpoint status")}))},t.dismissImportantInformation=function(e){u.dismissImportantInformation(e)},t.dismissInformationPanel=function(e){u.dismissInformationPanel(e)},t.triggerSnapshot=function(){m.confirmEndpointSnapshot((function(e){e&&o.snapshotEndpoints().then((function(){c.success("Success","Endpoints updated"),n.reload()})).catch((function(e){c.error("Failure",e,"An error occured during endpoint snapshot")}))}))},t.getPaginatedEndpoints=h,function(){b.apply(this,arguments)}()}])},function(e,t){function n(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function a(e){return function(){var t=this,a=arguments;return new Promise((function(r,i){var o=e.apply(t,a);function s(e){n(o,r,i,s,l,"next",e)}function l(e){n(o,r,i,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.app").controller("InitAdminController",["$async","$scope","$state","Notifications","Authentication","StateManager","UserService","EndpointService","ExtensionService",function(e,t,n,r,i,o,s,l,c){function d(){return u.apply(this,arguments)}function u(){return(u=a(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,c.retrieveAndSaveEnabledExtensions();case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),r.error("Failure",e.t0,"Unable to retrieve enabled extensions");case 8:case"end":return e.stop()}}),e,null,[[0,5]])})))).apply(this,arguments)}t.logo=o.getState().application.logo,t.formValues={Username:"admin",Password:"",ConfirmPassword:""},t.state={actionInProgress:!1},t.createAdminUser=function(){var a=t.formValues.Username,o=t.formValues.Password;t.state.actionInProgress=!0,s.initAdministrator(a,o).then((function(){return i.login(a,o)})).then((function(){return e(d)})).then((function(){return l.endpoints(0,100)})).then((function(e){0===e.value.length?n.go("portainer.init.endpoint"):n.go("portainer.home")})).catch((function(e){r.error("Failure",e,"Unable to create administrator user")})).finally((function(){t.state.actionInProgress=!1}))},s.administratorExists().then((function(e){e&&n.go("portainer.home")})).catch((function(e){r.error("Failure",e,"Unable to verify administrator account existence")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(96);angular.module("portainer.app").controller("InitEndpointController",["$scope","$state","EndpointService","StateManager","Notifications",function(e,t,n,r,i){function o(a,r,o,s,l,c,d,u,p,m){e.state.actionInProgress=!0,n.createRemoteEndpoint(a,r,o,s,1,[],l,c,d,u,p,m).then((function(){t.go("portainer.home")})).catch((function(e){i.error("Failure",e,"Unable to connect to the Docker environment")})).finally((function(){e.state.actionInProgress=!1}))}Object(a.a)(e.applicationState.endpoint)||t.go("portainer.home"),e.logo=r.getState().application.logo,e.state={uploadInProgress:!1,actionInProgress:!1},e.formValues={EndpointType:"remote",Name:"",URL:"",TLS:!1,TLSSkipVerify:!1,TLSSKipClientVerify:!1,TLSCACert:null,TLSCert:null,TLSKey:null,AzureApplicationId:"",AzureTenantId:"",AzureAuthenticationKey:""},e.createLocalEndpoint=function(){e.state.actionInProgress=!0,n.createLocalEndpoint().then((function(){t.go("portainer.home")})).catch((function(e){i.error("Failure",e,"Unable to connect to the Docker environment")})).finally((function(){e.state.actionInProgress=!1}))},e.createAzureEndpoint=function(){!function(a,r,o,s){e.state.actionInProgress=!0,n.createAzureEndpoint(a,r,o,s,1,[]).then((function(){t.go("portainer.home")})).catch((function(e){i.error("Failure",e,"Unable to connect to the Azure environment")})).finally((function(){e.state.actionInProgress=!1}))}(e.formValues.Name,e.formValues.AzureApplicationId,e.formValues.AzureTenantId,e.formValues.AzureAuthenticationKey)},e.createAgentEndpoint=function(){var t=e.formValues.Name,n=e.formValues.URL,a=n.split(":")[0];o(t,2,n,a,!0,!0,!0,null,null,null)},e.createRemoteEndpoint=function(){var t=e.formValues.Name,n=e.formValues.URL,a=n.split(":")[0],r=e.formValues.TLS,i=r&&e.formValues.TLSSkipVerify,s=r&&e.formValues.TLSSKipClientVerify;o(t,1,n,a,r,i,s,i?null:e.formValues.TLSCACert,s?null:e.formValues.TLSCert,s?null:e.formValues.TLSKey)}}])},function(e,t){angular.module("portainer.app").controller("MainController",["$scope","LocalStorage","StateManager","EndpointProvider",function(e,t,n,a){e.getWidth=function(){return window.innerWidth},e.applicationState=n.getState(),e.endpointState=a.endpoint(),e.$watch(e.getWidth,(function(n){if(n>=992){var a=t.getToolbarToggle();e.toggle="boolean"!=typeof a||a}else e.toggle=!1})),e.toggleSidebar=function(){e.toggle=!e.toggle,t.storeToolbarToggle(e.toggle)},window.onresize=function(){e.$apply()}}])},function(e,t){angular.module("portainer.app").controller("RegistryAccessController",["$scope","$state","$transition$","RegistryService","Notifications",function(e,t,n,a,r){e.updateAccess=function(){e.state.actionInProgress=!0,a.updateRegistry(e.registry).then((function(){r.success("Access successfully updated"),t.reload()})).catch((function(t){e.state.actionInProgress=!1,r.error("Failure",t,"Unable to update accesses")}))},e.state={actionInProgress:!1},a.registry(n.params().id).then((function(t){e.registry=t})).catch((function(e){r.error("Failure",e,"Unable to retrieve registry details")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(21),r=n(69);angular.module("portainer.app").controller("CreateRegistryController",["$scope","$state","RegistryService","Notifications","RegistryGitlabService","ExtensionService",function(e,t,n,i,o,s){function l(){e.model.URL="https://registry.gitlab.com",e.model.Gitlab.InstanceURL="https://gitlab.com"}e.selectQuayRegistry=function(){e.model.Name="Quay",e.model.URL="quay.io",e.model.Authentication=!0},e.selectAzureRegistry=function(){e.model.Name="",e.model.URL="",e.model.Authentication=!0},e.selectCustomRegistry=function(){e.model.Name="",e.model.URL="",e.model.Authentication=!1},e.selectGitlabRegistry=function(){e.model.Name="",e.model.Authentication=!0,e.model.Gitlab={},l()},e.create=function(){e.state.actionInProgress=!0,n.createRegistry(e.model).then((function(){i.success("Registry successfully created"),t.go("portainer.registries")})).catch((function(e){i.error("Failure",e,"Unable to create registry")})).finally((function(){e.state.actionInProgress=!1}))},e.useDefaultGitlabConfiguration=l,e.retrieveGitlabRegistries=function(){e.state.actionInProgress=!0,o.projects(e.model.Gitlab.InstanceURL,e.model.Token).then((function(t){e.gitlabProjects=t})).catch((function(e){i.error("Failure",e,"Unable to retrieve projects")})).finally((function(){e.state.actionInProgress=!1}))},e.createGitlabRegistries=function(){e.state.actionInProgress=!0,n.createGitlabRegistries(e.model,e.state.gitlab.selectedItems).then((function(){i.success("Registries successfully created"),t.go("portainer.registries")})).catch((function(e){i.error("Failure",e,"Unable to create registries")})).finally((function(){e.state.actionInProgress=!1}))},e.state={actionInProgress:!1,overrideConfiguration:!1,gitlab:{}},e.RegistryTypes=a.RegistryTypes,e.model=new r.RegistryDefaultModel,s.extensionEnabled(s.EXTENSIONS.REGISTRY_MANAGEMENT).then((function(t){return e.registryExtensionEnabled=t}))}])},function(e,t){angular.module("portainer.app").controller("RegistryController",["$scope","$state","$transition$","$filter","RegistryService","Notifications",function(e,t,n,a,r,i){var o;e.state={actionInProgress:!1},e.formValues={Password:""},e.updateRegistry=function(){var n=e.registry;n.Password=e.formValues.Password,e.state.actionInProgress=!0,r.updateRegistry(n).then((function(){i.success("Registry successfully updated"),t.go("portainer.registries")})).catch((function(e){i.error("Failure",e,"Unable to update registry")})).finally((function(){e.state.actionInProgress=!1}))},o=n.params().id,r.registry(o).then((function(t){e.registry=t})).catch((function(e){i.error("Failure",e,"Unable to retrieve registry details")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(6);angular.module("portainer.app").controller("RegistriesController",["$q","$scope","$state","RegistryService","DockerHubService","ModalService","Notifications","ExtensionService","Authentication",function(e,t,n,r,i,o,s,l,c){t.state={actionInProgress:!1},t.formValues={dockerHubPassword:""};var d=["quay.io"];t.canBrowse=function(e){return!Object(a.a)(d,e.URL)},t.updateDockerHub=function(){var e=t.dockerhub;e.Password=t.formValues.dockerHubPassword,t.state.actionInProgress=!0,i.update(e).then((function(){s.success("DockerHub registry updated")})).catch((function(e){s.error("Failure",e,"Unable to update DockerHub details")})).finally((function(){t.state.actionInProgress=!1}))},t.removeAction=function(e){o.confirmDeletion("Do you want to remove the selected registries?",(function(a){a&&function(e){var a=e.length;angular.forEach(e,(function(e){r.deleteRegistry(e.Id).then((function(){s.success("Registry successfully removed",e.Name);var n=t.registries.indexOf(e);t.registries.splice(n,1)})).catch((function(e){s.error("Failure",e,"Unable to remove registry")})).finally((function(){0===--a&&n.reload()}))}))}(e)}))},e.all({registries:r.registries(),dockerhub:i.dockerhub(),registryManagement:l.extensionEnabled(l.EXTENSIONS.REGISTRY_MANAGEMENT)}).then((function(e){t.registries=e.registries,t.dockerhub=e.dockerhub,t.registryManagementAvailable=e.registryManagement,t.applicationState.application.authentication&&(t.isAdmin=c.isAdmin())})).catch((function(e){t.registries=[],s.error("Failure",e,"Unable to retrieve registries")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(71);angular.module("portainer.app").controller("CreateScheduleController",["$q","$scope","$state","Notifications","EndpointService","GroupService","ScheduleService","TagService",function(e,t,n,r,i,o,s,l){t.state={actionInProgress:!1},t.create=function(){var e=t.model;t.state.actionInProgress=!0,function(e){if("editor"===e.Job.Method)return s.createScheduleFromFileContent(e);return s.createScheduleFromFileUpload(e)}(e).then((function(){r.success("Schedule successfully created"),n.go("portainer.schedules",{},{reload:!0})})).catch((function(e){r.error("Failure",e,"Unable to create schedule")})).finally((function(){t.state.actionInProgress=!1}))},t.model=new a.ScheduleDefaultModel,e.all({endpoints:i.endpoints(),groups:o.groups(),tags:l.tags()}).then((function(e){t.endpoints=e.endpoints.value,t.groups=e.groups,t.tags=e.tags})).catch((function(e){r.error("Failure",e,"Unable to retrieve endpoint list")}))}])},function(e,t){angular.module("portainer.app").controller("ScheduleController",["$q","$scope","$transition$","$state","Notifications","EndpointService","GroupService","ScheduleService","EndpointProvider","HostBrowserService","FileSaver","TagService",function(e,t,n,a,r,i,o,s,l,c,d,u){var p;t.state={actionInProgress:!1},t.update=function(){var e=t.schedule;t.state.actionInProgress=!0,s.updateSchedule(e).then((function(){r.success("Schedule successfully updated"),a.go("portainer.schedules",{},{reload:!0})})).catch((function(e){r.error("Failure",e,"Unable to update schedule")})).finally((function(){t.state.actionInProgress=!1}))},t.goToContainerLogs=function(e,t){l.setEndpointID(e),a.go("docker.containers.container.logs",{id:t})},t.getEdgeTaskLogs=function(e,t){var n=l.endpointID();l.setEndpointID(e);var a="/host/opt/portainer/scripts/"+t+".log";c.get(a).then((function(e){var n=new Blob([e.file],{type:"text/plain;charset=utf-8"});d.saveAs(n,t+".log")})).catch((function(e){r.error("Failure",e,"Unable to download file")})).finally((function(){l.setEndpointID(n)}))},p=n.params().id,e.all({schedule:s.schedule(p),file:s.getScriptFile(p),tasks:s.scriptExecutionTasks(p),endpoints:i.endpoints(),groups:o.groups(),tags:u.tags()}).then((function(e){var n=e.schedule;n.Job.FileContent=e.file.ScheduleFileContent;var a=e.endpoints.value;!function(e,t){for(var n=0;n<e.length;n++)for(var a=e[n],r=0;r<t.length;r++){var i=t[r];if(a.EndpointId===i.Id){a.Endpoint=i;break}}}(e.tasks,a),t.schedule=n,t.tasks=e.tasks,t.endpoints=e.endpoints.value,t.groups=e.groups,t.tags=e.tags})).catch((function(e){r.error("Failure",e,"Unable to retrieve endpoint list")}))}])},function(e,t){angular.module("portainer.app").controller("SchedulesController",["$scope","$state","Notifications","ModalService","ScheduleService",function(e,t,n,a,r){e.removeAction=function(i){a.confirmDeletion("Do you want to remove the selected schedule(s) ?",(function(a){var o,s;a&&(s=(o=i).length,angular.forEach(o,(function(a){r.deleteSchedule(a.Id).then((function(){n.success("Schedule successfully removed",a.Name);var t=e.schedules.indexOf(a);e.schedules.splice(t,1)})).catch((function(e){n.error("Failure",e,"Unable to remove schedule "+a.Name)})).finally((function(){0==--s&&t.reload()}))})))}))},r.schedules().then((function(t){e.schedules=t})).catch((function(t){n.error("Failure",t,"Unable to retrieve schedules"),e.schedules=[]}))}])},function(e,t){angular.module("portainer.app").controller("SettingsAuthenticationController",["$q","$scope","$state","Notifications","SettingsService","FileUploadService","TeamService","ExtensionService",function(e,t,n,a,r,i,o,s){function l(e,t){-1===e.LDAPSettings.URL.indexOf(":")&&(e.LDAPSettings.URL+=t?":636":":389")}t.state={successfulConnectivityCheck:!1,failedConnectivityCheck:!1,uploadInProgress:!1,connectivityCheckInProgress:!1,actionInProgress:!1},t.formValues={TLSCACert:"",LDAPSettings:{AnonymousMode:!0,ReaderDN:"",URL:"",TLSConfig:{TLS:!1,TLSSkipVerify:!1},StartTLS:!1,SearchSettings:[{BaseDN:"",Filter:"",UserNameAttribute:""}],GroupSearchSettings:[{GroupBaseDN:"",GroupFilter:"",GroupAttribute:""}],AutoCreateUsers:!0}},t.goToOAuthExtensionView=function(){n.go("portainer.extensions.extension",{id:2})},t.isOauthEnabled=function(){return t.settings&&3===t.settings.AuthenticationMethod},t.addSearchConfiguration=function(){t.formValues.LDAPSettings.SearchSettings.push({BaseDN:"",UserNameAttribute:"",Filter:""})},t.removeSearchConfiguration=function(e){t.formValues.LDAPSettings.SearchSettings.splice(e,1)},t.addGroupSearchConfiguration=function(){t.formValues.LDAPSettings.GroupSearchSettings.push({GroupBaseDN:"",GroupAttribute:"",GroupFilter:""})},t.removeGroupSearchConfiguration=function(e){t.formValues.LDAPSettings.GroupSearchSettings.splice(e,1)},t.LDAPConnectivityCheck=function(){var n=angular.copy(t.settings),o=t.formValues.TLSCACert!==n.LDAPSettings.TLSConfig.TLSCACert?t.formValues.TLSCACert:null;t.formValues.LDAPSettings.AnonymousMode&&(n.LDAPSettings.ReaderDN="",n.LDAPSettings.Password="");var s=(t.formValues.LDAPSettings.TLSConfig.TLS||t.formValues.LDAPSettings.StartTLS)&&!t.formValues.LDAPSettings.TLSConfig.TLSSkipVerify;t.state.uploadInProgress=s,t.state.connectivityCheckInProgress=!0,e.when(!s||i.uploadLDAPTLSFiles(o,null,null)).then((function(){return l(n,t.formValues.LDAPSettings.TLSConfig.TLS),r.checkLDAPConnectivity(n)})).then((function(){t.state.failedConnectivityCheck=!1,t.state.successfulConnectivityCheck=!0,a.success("Connection to LDAP successful")})).catch((function(e){t.state.failedConnectivityCheck=!0,t.state.successfulConnectivityCheck=!1,a.error("Failure",e,"Connection to LDAP failed")})).finally((function(){t.state.uploadInProgress=!1,t.state.connectivityCheckInProgress=!1}))},t.saveSettings=function(){var n=angular.copy(t.settings),o=t.formValues.TLSCACert!==n.LDAPSettings.TLSConfig.TLSCACert?t.formValues.TLSCACert:null;t.formValues.LDAPSettings.AnonymousMode&&(n.LDAPSettings.ReaderDN="",n.LDAPSettings.Password="");var s=(t.formValues.LDAPSettings.TLSConfig.TLS||t.formValues.LDAPSettings.StartTLS)&&!t.formValues.LDAPSettings.TLSConfig.TLSSkipVerify;t.state.uploadInProgress=s,t.state.actionInProgress=!0,e.when(!s||i.uploadLDAPTLSFiles(o,null,null)).then((function(){return l(n,t.formValues.LDAPSettings.TLSConfig.TLS),r.update(n)})).then((function(){a.success("Authentication settings updated")})).catch((function(e){a.error("Failure",e,"Unable to update authentication settings")})).finally((function(){t.state.uploadInProgress=!1,t.state.actionInProgress=!1}))},e.all({settings:r.settings(),teams:o.teams(),oauthAuthentication:s.extensionEnabled(s.EXTENSIONS.OAUTH_AUTHENTICATION)}).then((function(e){var n=e.settings;t.teams=e.teams,t.settings=n,t.formValues.LDAPSettings=n.LDAPSettings,t.OAuthSettings=n.OAuthSettings,t.formValues.TLSCACert=n.LDAPSettings.TLSConfig.TLSCACert,t.oauthAuthenticationAvailable=e.oauthAuthentication})).catch((function(e){a.error("Failure",e,"Unable to retrieve application settings")}))}])},function(e,t){angular.module("portainer.app").controller("SettingsController",["$scope","$state","Notifications","SettingsService","StateManager",function(e,t,n,a,r){function i(i){a.update(i).then((function(){n.success("Settings updated"),r.updateLogo(i.LogoURL),r.updateSnapshotInterval(i.SnapshotInterval),r.updateEnableHostManagementFeatures(i.EnableHostManagementFeatures),r.updateEnableVolumeBrowserForNonAdminUsers(i.AllowVolumeBrowserForRegularUsers),r.updateEnableEdgeComputeFeatures(i.EnableEdgeComputeFeatures),r.updateAllowStackManagementForRegularUsers(i.AllowStackManagementForRegularUsers),r.updateAllowHostNamespaceForRegularUsers(i.AllowHostNamespaceForRegularUsers),r.updateAllowDeviceMappingForRegularUsers(i.AllowDeviceMappingForRegularUsers),r.updateAllowPrivilegedModeForRegularUsers(i.AllowPrivilegedModeForRegularUsers),r.updateAllowBindMountsForRegularUsers(i.AllowBindMountsForRegularUsers),r.updateAllowContainerCapabilitiesForRegularUsers(i.AllowContainerCapabilitiesForRegularUsers),t.reload()})).catch((function(e){n.error("Failure",e,"Unable to update settings")})).finally((function(){e.state.actionInProgress=!1}))}e.state={actionInProgress:!1,availableEdgeAgentCheckinOptions:[{key:"5 seconds",value:5},{key:"10 seconds",value:10},{key:"30 seconds",value:30}]},e.formValues={customLogo:!1,externalTemplates:!1,restrictBindMounts:!1,restrictPrivilegedMode:!1,labelName:"",labelValue:"",enableHostManagementFeatures:!1,enableVolumeBrowser:!1,enableEdgeComputeFeatures:!1,allowStackManagementForRegularUsers:!1,restrictHostNamespaceForRegularUsers:!1,allowDeviceMappingForRegularUsers:!1,disableContainerCapabilitiesForRegularUsers:!1},e.isContainerEditDisabled=function(){var e=this.formValues,t=e.restrictBindMounts,n=e.restrictHostNamespaceForRegularUsers,a=e.restrictPrivilegedMode,r=e.disableDeviceMappingForRegularUsers,i=e.disableContainerCapabilitiesForRegularUsers;return t||n||a||r||i},e.removeFilteredContainerLabel=function(t){var n=e.settings;n.BlackListedLabels.splice(t,1),i(n)},e.addFilteredContainerLabel=function(){var t=e.settings,n={name:e.formValues.labelName,value:e.formValues.labelValue};t.BlackListedLabels.push(n),i(t)},e.saveApplicationSettings=function(){var t=e.settings;e.formValues.customLogo||(t.LogoURL=""),e.formValues.externalTemplates||(t.TemplatesURL=""),t.AllowBindMountsForRegularUsers=!e.formValues.restrictBindMounts,t.AllowPrivilegedModeForRegularUsers=!e.formValues.restrictPrivilegedMode,t.AllowVolumeBrowserForRegularUsers=e.formValues.enableVolumeBrowser,t.EnableHostManagementFeatures=e.formValues.enableHostManagementFeatures,t.EnableEdgeComputeFeatures=e.formValues.enableEdgeComputeFeatures,t.AllowStackManagementForRegularUsers=!e.formValues.disableStackManagementForRegularUsers,t.AllowHostNamespaceForRegularUsers=!e.formValues.restrictHostNamespaceForRegularUsers,t.AllowDeviceMappingForRegularUsers=!e.formValues.disableDeviceMappingForRegularUsers,t.AllowContainerCapabilitiesForRegularUsers=!e.formValues.disableContainerCapabilitiesForRegularUsers,e.state.actionInProgress=!0,i(t)},a.settings().then((function(t){var n=t;e.settings=n,""!==n.LogoURL&&(e.formValues.customLogo=!0),""!==n.TemplatesURL&&(e.formValues.externalTemplates=!0),e.formValues.restrictBindMounts=!n.AllowBindMountsForRegularUsers,e.formValues.restrictPrivilegedMode=!n.AllowPrivilegedModeForRegularUsers,e.formValues.enableVolumeBrowser=n.AllowVolumeBrowserForRegularUsers,e.formValues.enableHostManagementFeatures=n.EnableHostManagementFeatures,e.formValues.enableEdgeComputeFeatures=n.EnableEdgeComputeFeatures,e.formValues.disableStackManagementForRegularUsers=!n.AllowStackManagementForRegularUsers,e.formValues.restrictHostNamespaceForRegularUsers=!n.AllowHostNamespaceForRegularUsers,e.formValues.disableDeviceMappingForRegularUsers=!n.AllowDeviceMappingForRegularUsers,e.formValues.disableContainerCapabilitiesForRegularUsers=!n.AllowContainerCapabilitiesForRegularUsers})).catch((function(e){n.error("Failure",e,"Unable to retrieve application settings")}))}])},function(e,t){function n(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function a(e){return function(){var t=this,a=arguments;return new Promise((function(r,i){var o=e.apply(t,a);function s(e){n(o,r,i,s,l,"next",e)}function l(e){n(o,r,i,s,l,"throw",e)}s(void 0)}))}}angular.module("portainer.app").controller("SidebarController",["$q","$scope","$transitions","StateManager","Notifications","Authentication","UserService","ExtensionService",function(e,t,n,r,i,o,s,l){function c(e){var n=!1;angular.forEach(e,(function(e){1===e.Role&&(n=!0)})),t.isTeamLeader=n}function d(){return(d=a(regeneratorRuntime.mark((function n(){var a,l;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t.uiVersion=r.getState().application.version,t.logo=r.getState().application.logo,n.next=4,u();case 4:t.showStacks=n.sent,t.applicationState.application.authentication&&(a=o.getUserDetails(),l=o.isAdmin(),t.isAdmin=l,e.when(l?[]:s.userMemberships(a.ID)).then((function(e){c(e)})).catch((function(e){i.error("Failure",e,"Unable to retrieve user memberships")})));case 7:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function u(){return p.apply(this,arguments)}function p(){return(p=a(regeneratorRuntime.mark((function e(){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=!t.applicationState.application.authentication||o.isAdmin(),a=t.applicationState.application.allowStackManagementForRegularUsers,!n&&!a){e.next=4;break}return e.abrupt("return",!0);case 4:return e.next=6,l.extensionEnabled(l.EXTENSIONS.RBAC);case 6:if(!e.sent){e.next=9;break}return e.abrupt("return",o.hasAuthorizations(["EndpointResourcesAccess"]));case 9:return e.abrupt("return",!1);case 10:case"end":return e.stop()}}),e)})))).apply(this,arguments)}!function(){d.apply(this,arguments)}(),n.onEnter({},a(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u();case 2:t.showStacks=e.sent;case 3:case"end":return e.stop()}}),e)}))))}])},function(e,t,n){"use strict";n.r(t);var a=n(32);angular.module("portainer.app").controller("CreateStackController",["$scope","$state","StackService","Authentication","Notifications","FormValidator","ResourceControlService","FormHelper","EndpointProvider",function(e,t,n,r,i,o,s,l,c){function d(t,a){var r=l.removeInvalidEnvVars(e.formValues.Env),i=c.endpointID();if("editor"===a){var o=e.formValues.StackFileContent;return n.createSwarmStackFromFileContent(t,o,r,i)}if("upload"===a){var s=e.formValues.StackFile;return n.createSwarmStackFromFileUpload(t,s,r,i)}if("repository"===a){var d={RepositoryURL:e.formValues.RepositoryURL,RepositoryReferenceName:e.formValues.RepositoryReferenceName,ComposeFilePathInRepository:e.formValues.ComposeFilePathInRepository,RepositoryAuthentication:e.formValues.RepositoryAuthentication,RepositoryUsername:e.formValues.RepositoryUsername,RepositoryPassword:e.formValues.RepositoryPassword};return n.createSwarmStackFromGitRepository(t,d,r,i)}}function u(t,a){var r=l.removeInvalidEnvVars(e.formValues.Env),i=c.endpointID();if("editor"===a){var o=e.formValues.StackFileContent;return n.createComposeStackFromFileContent(t,o,r,i)}if("upload"===a){var s=e.formValues.StackFile;return n.createComposeStackFromFileUpload(t,s,r,i)}if("repository"===a){var d={RepositoryURL:e.formValues.RepositoryURL,RepositoryReferenceName:e.formValues.RepositoryReferenceName,ComposeFilePathInRepository:e.formValues.ComposeFilePathInRepository,RepositoryAuthentication:e.formValues.RepositoryAuthentication,RepositoryUsername:e.formValues.RepositoryUsername,RepositoryPassword:e.formValues.RepositoryPassword};return n.createComposeStackFromGitRepository(t,d,r,i)}}var p;e.formValues={Name:"",StackFileContent:"",StackFile:null,RepositoryURL:"",RepositoryReferenceName:"",RepositoryAuthentication:!1,RepositoryUsername:"",RepositoryPassword:"",Env:[],ComposeFilePathInRepository:"docker-compose.yml",AccessControlData:new a.AccessControlFormData},e.state={Method:"editor",formValidationError:"",actionInProgress:!1,StackType:null},e.addEnvironmentVariable=function(){e.formValues.Env.push({name:"",value:""})},e.removeEnvironmentVariable=function(t){e.formValues.Env.splice(t,1)},e.deployStack=function(){var n=e.formValues.Name,a=e.state.Method,l=e.formValues.AccessControlData,c=r.getUserDetails(),p=r.isAdmin();if("editor"!==a||""!==e.formValues.StackFileContent){if(function(t,n){var a;return e.state.formValidationError="",!(a=o.validateAccessControl(t,n))||(e.state.formValidationError=a,!1)}(l,p)){var m=d;2===e.state.StackType&&(m=u),e.state.actionInProgress=!0,m(n,a).then((function(e){e.data&&(e=e.data);var t=c.ID,n=e.ResourceControl;return s.applyResourceControl(t,l,n)})).then((function(){i.success("Stack successfully deployed"),t.go("portainer.stacks")})).catch((function(e){i.error("Deployment error",e,"Unable to deploy stack")})).finally((function(){e.state.actionInProgress=!1}))}}else e.state.formValidationError="Stack file content must not be empty"},e.editorUpdate=function(t){e.formValues.StackFileContent=t.getValue()},p=e.applicationState.endpoint.mode,e.state.StackType=2,"DOCKER_SWARM_MODE"===p.provider&&"MANAGER"===p.role&&(e.state.StackType=1)}])},function(e,t){angular.module("portainer.app").controller("StackController",["$q","$scope","$state","$transition$","StackService","NodeService","ServiceService","TaskService","ContainerService","ServiceHelper","TaskHelper","Notifications","FormHelper","EndpointProvider","EndpointService","GroupService","ModalService",function(e,t,n,a,r,i,o,s,l,c,d,u,p,m,g,f,v){function h(t,n){var a={label:["com.docker.stack.namespace="+t]};return e.all({services:o.services(a),tasks:s.tasks(a),containers:n?l.containers(1):[],nodes:i.nodes()})}function b(e,n){var a=e.services,r=e.tasks;if(n)for(var i=e.containers,o=0;o<r.length;o++){var s=r[o];d.associateContainerToTask(s,i)}for(var l=0;l<a.length;l++){var u=a[l];c.associateTasksToService(u,r)}t.nodes=e.nodes,t.tasks=r,t.services=a}function y(t){var n={label:["com.docker.compose.project="+t]};return e.all({containers:l.containers(1,n)})}function x(e){t.containers=e.containers}function w(e){var n=a.params().type;!n||"1"!==n&&"2"!==n?u.error("Failure",null,"Invalid type URL parameter."):"1"===n?function(e){var n=t.applicationState.endpoint.mode.agentProxy;h(e,n).then((function(e){b(e,n)})).catch((function(e){u.error("Failure",e,"Unable to retrieve stack details")}))}(e):function(e){y(e).then((function(e){x(e)})).catch((function(e){u.error("Failure",e,"Unable to retrieve stack details")}))}(e)}t.state={actionInProgress:!1,migrationInProgress:!1,externalStack:!1,showEditorTab:!1},t.formValues={Prune:!1,Endpoint:null},t.duplicateStack=function(e,a){var i=t.stack,o=p.removeInvalidEnvVars(i.Env);return m.setEndpointID(a),r.duplicateStack(e,t.stackFileContent,o,a,i.Type).then((function(){u.success("Stack successfully duplicated"),n.go("portainer.stacks",{},{reload:!0}),m.setEndpointID(i.EndpointId)})).catch((function(e){u.error("Failure",e,"Unable to duplicate stack")}))},t.showEditor=function(){t.state.showEditorTab=!0},t.migrateStack=function(a,i){return e((function(e){v.confirm({title:"Are you sure?",message:"This action will deploy a new instance of this stack on the target endpoint, please note that this does NOT relocate the content of any persistent volumes that may be attached to this stack.",buttons:{confirm:{label:"Migrate",className:"btn-danger"}},callback:function(o){return o?e(function(e,a){var i=t.stack,o=a,s=r.migrateSwarmStack;2===i.Type&&(s=r.migrateComposeStack);var l=m.endpointID();0===i.EndpointId&&(i.EndpointId=l);return t.state.migrationInProgress=!0,s(i,o,e).then((function(){u.success("Stack successfully migrated",i.Name),n.go("portainer.stacks",{},{reload:!0})})).catch((function(e){u.error("Failure",e,"Unable to migrate stack")})).finally((function(){t.state.migrationInProgress=!1}))}(a,i)):e()}})}))},t.removeStack=function(){v.confirmDeletion("Do you want to remove the stack? Associated services will be removed as well.",(function(e){var i,o;e&&(i=m.endpointID(),o=t.stack,r.remove(o,a.params().external,i).then((function(){u.success("Stack successfully removed",o.Name),n.go("portainer.stacks")})).catch((function(e){u.error("Failure",e,"Unable to remove stack "+o.Name)})))}))},t.deployStack=function(){var e=t.stackFileContent,a=p.removeInvalidEnvVars(t.stack.Env),i=t.formValues.Prune,o=t.stack,s=m.endpointID();0===o.EndpointId&&(o.EndpointId=s),t.state.actionInProgress=!0,r.updateStack(o,e,a,i).then((function(){u.success("Stack successfully deployed"),n.reload()})).catch((function(e){u.error("Failure",e,"Unable to create stack")})).finally((function(){t.state.actionInProgress=!1}))},t.addEnvironmentVariable=function(){t.stack.Env.push({name:"",value:""})},t.removeEnvironmentVariable=function(e){t.stack.Env.splice(e,1)},t.editorUpdate=function(e){t.stackFileContent=e.getValue()},function(){var n=a.params().name;t.stackName=n;var i,o,s=a.params().external;if(t.currentEndpointId=m.endpointID(),"true"===s)t.state.externalStack=!0,w(n);else{var l=a.params().id;i=l,o=t.applicationState.endpoint.mode.agentProxy,g.endpoints().then((function(e){t.endpoints=e.value})).catch((function(e){u.error("Failure",e,"Unable to retrieve endpoints")})),e.all({stack:r.stack(i),groups:f.groups()}).then((function(n){var a=n.stack;return t.groups=n.groups,t.stack=a,e.all({stackFile:r.getStackFile(i),resources:1===a.Type?h(a.Name,o):y(a.Name)})})).then((function(e){t.stackFileContent=e.stackFile,1===t.stack.Type?b(e.resources,o):x(e.resources)})).catch((function(e){u.error("Failure",e,"Unable to retrieve stack details")}))}}()}])},function(e,t){function n(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function a(e){return function(){var t=this,a=arguments;return new Promise((function(r,i){var o=e.apply(t,a);function s(e){n(o,r,i,s,l,"next",e)}function l(e){n(o,r,i,s,l,"throw",e)}s(void 0)}))}}function r(e,t,n,r,i,o,s,l,c){function d(){var t=e.applicationState.endpoint.mode,a=o.endpointID();r.stacks(!0,"DOCKER_SWARM_MODE"===t.provider&&"MANAGER"===t.role,a).then((function(t){var n=t;e.stacks=n,e.offlineMode=o.offlineMode()})).catch((function(t){e.stacks=[],n.error("Failure",t,"Unable to retrieve stacks")}))}function u(){return p.apply(this,arguments)}function p(){return(p=a(regeneratorRuntime.mark((function e(){var t,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(t=l.getState().application).allowStackManagementForRegularUsers){e.next=3;break}return e.abrupt("return",!0);case 3:if(n=!0,t.authentication&&(n=s.isAdmin()),!n){e.next=7;break}return e.abrupt("return",!0);case 7:return e.next=9,c.extensionEnabled(c.EXTENSIONS.RBAC);case 9:if(e.sent){e.next=12;break}return e.abrupt("return",!1);case 12:return e.abrupt("return",s.hasAuthorizations(["EndpointResourcesAccess"]));case 13:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function m(){return(m=a(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return d(),t.next=3,u();case 3:e.createEnabled=t.sent;case 4:case"end":return t.stop()}}),t)})))).apply(this,arguments)}e.removeAction=function(a){i.confirmDeletion("Do you want to remove the selected stack(s)? Associated services will be removed as well.",(function(i){var s,l,c;i&&(s=a,l=o.endpointID(),c=s.length,angular.forEach(s,(function(a){r.remove(a,a.External,l).then((function(){n.success("Stack successfully removed",a.Name);var t=e.stacks.indexOf(a);e.stacks.splice(t,1)})).catch((function(e){n.error("Failure",e,"Unable to remove stack "+a.Name)})).finally((function(){0==--c&&t.reload()}))})))}))},e.offlineMode=!1,e.createEnabled=!1,e.getStacks=d,function(){m.apply(this,arguments)}()}r.$inject=["$scope","$state","Notifications","StackService","ModalService","EndpointProvider","Authentication","StateManager","ExtensionService"],angular.module("portainer.app").controller("StacksController",r)},function(e,t){angular.module("portainer.app").controller("SupportProductController",["$scope","$transition$",function(e,t){e.formValues={hostCount:0},e.state={minHosts:0,placeholder:0,supportType:""},e.isBuyButtonEnabled=function(){return!e.formValues.hostCount||e.formValues.hostCount<e.state.minHosts},e.product=t.params().product,1==e.product.Id&&(e.formValues.hostCount=1,e.state.minHosts=1,e.state.placeholder=1,e.state.supportType="Person"),2!=e.product.Id&&3!=e.product.Id||(e.formValues.hostCount=4,e.state.minHosts=4,e.state.placeholder=4,e.state.supportType="Host"),4!=e.product.Id&&5!=e.product.Id||(e.formValues.hostCount=10,e.state.minHosts=10,e.state.placeholder=10,e.state.supportType="Host")}])},function(e,t){angular.module("portainer.app").controller("SupportController",["$scope","$state","SupportService","Notifications",function(e,t,n,a){e.goToProductView=function(e){t.go("portainer.support.product",{product:e})},n.supportProducts().then((function(t){e.products=t})).catch((function(e){a.error("Failure",e,"Unable to fetch support options")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(25),r=n(1),i=n.n(r);function o(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=function(e,t){if(!e)return;if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}(e))){var t=0,n=function(){};return{s:n,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,i=!0,o=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return i=e.done,e},e:function(e){o=!0,r=e},f:function(){try{i||null==a.return||a.return()}finally{if(o)throw r}}}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function l(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function c(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function o(e){l(i,a,r,o,s,"next",e)}function s(e){l(i,a,r,o,s,"throw",e)}o(void 0)}))}}function d(e,t,n,r,i){function s(e){return l.apply(this,arguments)}function l(){return(l=c(regeneratorRuntime.mark((function n(s){var l,c,d;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:l=o(s),n.prev=1,l.s();case 3:if((c=l.n()).done){n.next=17;break}return d=c.value,n.prev=5,n.next=8,r.deleteTag(d.Id);case 8:i.success("Tag successfully removed",d.Name),Object(a.a)(e.tags,d),n.next=15;break;case 12:n.prev=12,n.t0=n.catch(5),i.error("Failure",n.t0,"Unable to remove tag");case 15:n.next=3;break;case 17:n.next=22;break;case 19:n.prev=19,n.t1=n.catch(1),l.e(n.t1);case 22:return n.prev=22,l.f(),n.finish(22);case 25:t.reload();case 26:case"end":return n.stop()}}),n,null,[[1,19,22,25],[5,12]])})))).apply(this,arguments)}e.state={actionInProgress:!1},e.formValues={Name:""},e.checkNameValidity=function(t){for(var n=!0,a=0;a<e.tags.length;a++)if(e.formValues.Name===e.tags[a].Name){n=!1;break}t.name.$setValidity("validName",n)},e.removeAction=function(e){return n(s,e)},e.createTag=function(){var n=e.formValues.Name;r.createTag(n).then((function(){i.success("Tag successfully created",n),t.reload()})).catch((function(e){i.error("Failure",e,"Unable to create tag")}))},r.tags().then((function(t){e.tags=t})).catch((function(t){i.error("Failure",t,"Unable to retrieve tags"),e.tags=[]}))}d.$inject=["$scope","$state","$async","TagService","Notifications"],i.a.module("portainer.app").controller("TagsController",d)},function(e,t){angular.module("portainer.app").controller("TeamController",["$q","$scope","$state","$transition$","TeamService","UserService","TeamMembershipService","ModalService","Notifications","PaginationService","Authentication",function(e,t,n,a,r,i,o,s,l,c,d){function u(e,t){for(var n=0,a=t.length;n<a;n++)if(t[n].Id===e)return void t.splice(n,1)}t.state={pagination_count_users:c.getPaginationLimit("team_available_users"),pagination_count_members:c.getPaginationLimit("team_members")},t.sortTypeUsers="Username",t.sortReverseUsers=!0,t.users=[],t.teamMembers=[],t.leaderCount=0,t.orderUsers=function(e){t.sortReverseUsers=t.sortTypeUsers===e&&!t.sortReverseUsers,t.sortTypeUsers=e},t.changePaginationCountUsers=function(){c.setPaginationLimit("team_available_users",t.state.pagination_count_users)},t.sortTypeGroupMembers="TeamRole",t.sortReverseGroupMembers=!1,t.orderGroupMembers=function(e){t.sortReverseGroupMembers=t.sortTypeGroupMembers===e&&!t.sortReverseGroupMembers,t.sortTypeGroupMembers=e},t.changePaginationCountGroupMembers=function(){c.setPaginationLimit("team_members",t.state.pagination_count_members)},t.deleteTeam=function(){s.confirmDeletion("Do you want to delete this team? Users in this team will not be deleted.",(function(e){e&&r.deleteTeam(t.team.Id).then((function(){l.success("Team successfully deleted",t.team.Name),n.go("portainer.teams")})).catch((function(e){l.error("Failure",e,"Unable to remove team")}))}))},t.promoteToLeader=function(e){o.updateMembership(e.MembershipId,e.Id,t.team.Id,1).then((function(){t.leaderCount++,e.TeamRole="Leader",l.success("User is now team leader",e.Username)})).catch((function(e){l.error("Failure",e,"Unable to update user role")}))},t.demoteToMember=function(e){o.updateMembership(e.MembershipId,e.Id,t.team.Id,2).then((function(){e.TeamRole="Member",t.leaderCount--,l.success("User is now team member",e.Username)})).catch((function(e){l.error("Failure",e,"Unable to update user role")}))},t.addAllUsers=function(){var n=[];angular.forEach(t.users,(function(e){n.push(o.createMembership(e.Id,t.team.Id,2))})),e.all(n).then((function(e){for(var n=t.users,a=0;a<n.length;a++){var r=n[a];r.MembershipId=e[a].Id,r.TeamRole="Member"}t.teamMembers=t.teamMembers.concat(n),t.users=[],l.success("All users successfully added")})).catch((function(e){l.error("Failure",e,"Unable to update team members")}))},t.addUser=function(e){o.createMembership(e.Id,t.team.Id,2).then((function(n){u(e.Id,t.users),e.TeamRole="Member",e.MembershipId=n.Id,t.teamMembers.push(e),l.success("User added to team",e.Username)})).catch((function(e){l.error("Failure",e,"Unable to update team members")}))},t.removeAllUsers=function(){var n=[];angular.forEach(t.teamMembers,(function(e){n.push(o.deleteMembership(e.MembershipId))})),e.all(n).then((function(){t.users=t.users.concat(t.teamMembers),t.teamMembers=[],t.leaderCount=0,l.success("All users successfully removed")})).catch((function(e){l.error("Failure",e,"Unable to update team members")}))},t.removeUser=function(e){o.deleteMembership(e.MembershipId).then((function(){u(e.Id,t.teamMembers),"Leader"===e.TeamRole&&t.leaderCount--,t.users.push(e),l.success("User removed from team",e.Username)})).catch((function(e){l.error("Failure",e,"Unable to update team members")}))},t.isAdmin=d.isAdmin(),e.all({team:r.team(a.params().id),users:i.users(!1),memberships:r.userMemberships(a.params().id)}).then((function(e){var n=e.users;t.team=e.team,function(e,n){for(var a=0;a<e.length;a++){for(var r=e[a],i=!1,o=0;o<n.length;o++){var s=n[o];if(r.Id===s.UserId){i=!0,1===s.Role?(r.TeamRole="Leader",t.leaderCount++):r.TeamRole="Member",r.MembershipId=s.Id,t.teamMembers.push(r);break}}i||t.users.push(r)}}(n,e.memberships)})).catch((function(e){l.error("Failure",e,"Unable to retrieve team details")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(31);angular.module("portainer.app").controller("TeamsController",["$q","$scope","$state","TeamService","UserService","ModalService","Notifications","Authentication",function(e,t,n,r,i,o,s,l){var c,d;t.state={actionInProgress:!1},t.formValues={Name:"",Leaders:[]},t.checkNameValidity=function(e){for(var n=!0,a=0;a<t.teams.length;a++)if(t.formValues.Name===t.teams[a].Name){n=!1;break}e.team_name.$setValidity("validName",n)},t.addTeam=function(){var e=t.formValues.Name,a=[];angular.forEach(t.formValues.Leaders,(function(e){a.push(e.Id)})),t.state.actionInProgress=!0,r.createTeam(e,a).then((function(){s.success("Team successfully created",e),n.reload()})).catch((function(e){s.error("Failure",e,"Unable to create team")})).finally((function(){t.state.actionInProgress=!1}))},t.removeAction=function(e){o.confirmDeletion("Do you want to delete the selected team(s)? Users in the team(s) will not be deleted.",(function(a){a&&function(e){var a=e.length;angular.forEach(e,(function(e){r.deleteTeam(e.Id).then((function(){s.success("Team successfully removed",e.Name);var n=t.teams.indexOf(e);t.teams.splice(n,1)})).catch((function(e){s.error("Failure",e,"Unable to remove team")})).finally((function(){0===--a&&n.reload()}))}))}(e)}))},c=l.getUserDetails(),d=l.isAdmin(),t.isAdmin=d,e.all({users:i.users(!1),teams:d?r.teams():i.userLeadingTeams(c.ID)}).then((function(e){var n=e.teams;t.teams=n,t.users=Object(a.a)(e.users,"Username","asc")})).catch((function(e){t.teams=[],t.users=[],s.error("Failure",e,"Unable to retrieve teams")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(98);angular.module("portainer.app").controller("CreateTemplateController",["$q","$scope","$state","TemplateService","TemplateHelper","NetworkService","Notifications",function(e,t,n,r,i,o,s){t.state={actionInProgress:!1},t.create=function(){var e=t.model;t.state.actionInProgress=!0,r.create(e).then((function(){s.success("Template successfully created",e.Title),n.go("portainer.templates")})).catch((function(e){s.error("Failure",e,"Unable to create template")})).finally((function(){t.state.actionInProgress=!1}))},function(){t.model=new a.TemplateDefaultModel;var n=t.applicationState.endpoint.mode.provider,l=t.applicationState.endpoint.apiVersion;e.all({templates:r.templates(),networks:o.networks("DOCKER_STANDALONE"===n||"DOCKER_SWARM_MODE"===n,!1,"DOCKER_SWARM_MODE"===n&&l>=1.25)}).then((function(e){t.categories=i.getUniqueCategories(e.templates),t.networks=e.networks})).catch((function(e){s.error("Failure",e,"Unable to retrieve template details")}))}()}])},function(e,t,n){"use strict";n.r(t);var a=n(2);angular.module("portainer.app").controller("TemplateController",["$q","$scope","$state","$transition$","TemplateService","TemplateHelper","NetworkService","Notifications",function(e,t,n,r,i,o,s,l){var c,d,u;t.state={actionInProgress:!1},t.update=function(){var e=t.template;t.state.actionInProgress=!0,i.update(e).then((function(){l.success("Template successfully updated",e.Title),n.go("portainer.templates")})).catch((function(e){l.error("Failure",e,"Unable to update template")})).finally((function(){t.state.actionInProgress=!1}))},c=t.applicationState.endpoint.mode.provider,d=t.applicationState.endpoint.apiVersion,u=r.params().id,e.all({templates:i.templates(),template:i.template(u),networks:s.networks("DOCKER_STANDALONE"===c||"DOCKER_SWARM_MODE"===c,!1,"DOCKER_SWARM_MODE"===c&&d>=1.25)}).then((function(e){var n=e.template;n.Network?n.Network=Object(a.a)(e.networks,(function(e){return e.Name===n.Network})):n.Network=Object(a.a)(e.networks,(function(e){return"bridge"===e.Name})),t.categories=o.getUniqueCategories(e.templates),t.template=e.template,t.networks=e.networks})).catch((function(e){l.error("Failure",e,"Unable to retrieve template details")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(31),r=n(2),i=n(4),o=n(5),s=n(32);angular.module("portainer.app").controller("TemplatesController",["$scope","$q","$state","$transition$","$anchorScroll","ContainerService","ImageService","NetworkService","TemplateService","TemplateHelper","VolumeService","Notifications","ResourceControlService","Authentication","FormValidator","SettingsService","StackService","EndpointProvider","ModalService",function(e,t,n,l,c,d,u,p,m,g,f,v,h,b,y,x,w,k,S){function C(t,a,r){var i=function(t){var n=e.formValues.network,a=e.formValues.name;return m.createTemplateConfiguration(t,a,n)}(t),o=g.determineRequiredGeneratedVolumeCount(t.Volumes),s=[];f.createXAutoGeneratedLocalVolumes(o).then((function(e){return angular.forEach(e,(function(e){var t=e.Id;s.push(t)})),m.updateContainerConfigurationWithVolumes(i,t,e),u.pullImage(t.RegistryModel,!0)})).then((function(){return d.createAndStartContainer(i)})).then((function(e){var t=e.Portainer.ResourceControl;return h.applyResourceControl(a,r,t,s)})).then((function(){v.success("Container successfully created"),n.go("docker.containers",{},{reload:!0})})).catch((function(e){v.error("Failure",e,e.msg)})).finally((function(){e.state.actionInProgress=!1}))}e.state={selectedTemplate:null,showAdvancedOptions:!1,formValidationError:"",actionInProgress:!1,templateManagement:!0},e.formValues={network:"",name:"",AccessControlData:new s.AccessControlFormData},e.addVolume=function(){e.state.selectedTemplate.Volumes.push({containerPath:"",bind:"",readonly:!1,type:"auto"})},e.removeVolume=function(t){e.state.selectedTemplate.Volumes.splice(t,1)},e.addPortBinding=function(){e.state.selectedTemplate.Ports.push({hostPort:"",containerPort:"",protocol:"tcp"})},e.removePortBinding=function(t){e.state.selectedTemplate.Ports.splice(t,1)},e.addExtraHost=function(){e.state.selectedTemplate.Hosts.push("")},e.removeExtraHost=function(t){e.state.selectedTemplate.Hosts.splice(t,1)},e.addLabel=function(){e.state.selectedTemplate.Labels.push({name:"",value:""})},e.removeLabel=function(t){e.state.selectedTemplate.Labels.splice(t,1)},e.createTemplate=function(){var t=b.getUserDetails().ID,a=e.formValues.AccessControlData;if(function(t,n){var a;return e.state.formValidationError="",!(a=y.validateAccessControl(t,n))||(e.state.formValidationError=a,!1)}(a,e.isAdmin)){var r=e.state.selectedTemplate;e.state.actionInProgress=!0,2===r.Type?function(t,a,r){var s=e.formValues.name,l=Object(o.a)(Object(i.a)(t.Env,(function(e){return{name:e.name,value:e.preset||!e.value?e.default:e.value}})),(function(e){return e.value&&e.name})),c={RepositoryURL:t.Repository.url,ComposeFilePathInRepository:t.Repository.stackfile},d=k.endpointID();w.createSwarmStackFromGitRepository(s,c,l,d).then((function(e){var t=e.ResourceControl;return h.applyResourceControl(a,r,t)})).then((function(){v.success("Stack successfully deployed"),n.go("portainer.stacks")})).catch((function(e){v.warning("Deployment error",e.data.err)})).finally((function(){e.state.actionInProgress=!1}))}(r,t,a):3===r.Type?function(t,a,r){for(var i=e.formValues.name,o=0;o<t.Env.length;o++){var s=t.Env[o];s.preset&&(s.value=s.default)}var l={RepositoryURL:t.Repository.url,ComposeFilePathInRepository:t.Repository.stackfile},c=k.endpointID();w.createComposeStackFromGitRepository(i,l,t.Env,c).then((function(e){var t=e.ResourceControl;return h.applyResourceControl(a,r,t)})).then((function(){v.success("Stack successfully deployed"),n.go("portainer.stacks")})).catch((function(e){v.warning("Deployment error",e.data.err)})).finally((function(){e.state.actionInProgress=!1}))}(r,t,a):C(r,t,a)}},e.unselectTemplate=function(t){t.Selected=!1,e.state.selectedTemplate=null},e.selectTemplate=function(t){e.state.selectedTemplate&&e.unselectTemplate(e.state.selectedTemplate),t.Selected=!0,t.Network?e.formValues.network=Object(r.a)(e.availableNetworks,(function(e){return e.Name===t.Network})):e.formValues.network=Object(r.a)(e.availableNetworks,(function(e){return"bridge"===e.Name})),e.formValues.name=t.Name?t.Name:"",e.state.selectedTemplate=t,c("view-top")},e.deleteTemplate=function(t){S.confirmDeletion("Do you want to delete this template?",(function(n){n&&function(t){m.delete(t.Id).then((function(){v.success("Template successfully deleted");var n=e.templates.indexOf(t);e.templates.splice(n,1)})).catch((function(e){v.error("Failure",e,"Unable to remove template")}))}(t)}))},function(){e.isAdmin=b.isAdmin();var n=e.applicationState.endpoint.mode,r=e.applicationState.endpoint.apiVersion;t.all({templates:m.templates(),volumes:f.getVolumes(),networks:p.networks("DOCKER_STANDALONE"===n.provider||"DOCKER_SWARM_MODE"===n.provider,!1,"DOCKER_SWARM_MODE"===n.provider&&r>=1.25),settings:x.publicSettings()}).then((function(t){var n=t.templates;e.templates=n,e.availableVolumes=Object(a.a)(t.volumes.Volumes,[function(e){return e.Name.toLowerCase()}],["asc"]);var r=t.networks;e.availableNetworks=r;var i=t.settings;e.allowBindMounts=i.AllowBindMountsForRegularUsers,e.state.templateManagement=!i.ExternalTemplates})).catch((function(t){e.templates=[],v.error("Failure",t,"An error occured during apps initialization.")}))}()}])},function(e,t){angular.module("portainer.app").controller("UpdatePasswordController",["$scope","$state","$transition$","$sanitize","UserService","Authentication","Notifications",function(e,t,n,a,r,i,o){e.formValues={CurrentPassword:"",Password:"",ConfirmPassword:""},e.state={actionInProgress:!1},e.updatePassword=function(){var n=i.getUserDetails().ID;e.state.actionInProgress=!0,r.updateUserPassword(n,a(e.formValues.CurrentPassword),e.formValues.Password).then((function(){t.go("portainer.home")})).catch((function(e){o.error("Failure",e,"Unable to update password")})).finally((function(){e.state.actionInProgress=!1}))},i.isAuthenticated()||t.go("portainer.auth")}])},function(e,t){angular.module("portainer.app").controller("UserController",["$q","$scope","$state","$transition$","UserService","ModalService","Notifications","SettingsService","Authentication",function(e,t,n,a,r,i,o,s,l){t.state={updatePasswordError:""},t.formValues={newPassword:"",confirmPassword:"",Administrator:!1},t.deleteUser=function(){i.confirmDeletion("Do you want to remove this user? This user will not be able to login into Portainer anymore.",(function(e){e&&r.deleteUser(t.user.Id).then((function(){o.success("User successfully deleted",t.user.Username),n.go("portainer.users")})).catch((function(e){o.error("Failure",e,"Unable to remove user")}))}))},t.updatePermissions=function(){var e=t.formValues.Administrator?1:2;r.updateUser(t.user.Id,void 0,e,0).then((function(){var a=1===e?"administrator":"user";o.success("Permissions successfully updated",t.user.Username+" is now "+a),n.reload()})).catch((function(e){o.error("Failure",e,"Unable to update user permissions")}))},t.updatePassword=function(){r.updateUser(t.user.Id,t.formValues.newPassword,void 0,-1).then((function(){o.success("Password successfully updated"),n.reload()})).catch((function(e){o.error("Failure",e,"Unable to update user password")}))},t.isAdmin=l.isAdmin(),e.all({user:r.user(a.params().id),settings:s.publicSettings()}).then((function(e){var n=e.user;t.user=n,t.formValues.Administrator=1===n.Role,t.AuthenticationMethod=e.settings.AuthenticationMethod})).catch((function(e){o.error("Failure",e,"Unable to retrieve user information")}))}])},function(e,t,n){"use strict";n.r(t);var a=n(31);angular.module("portainer.app").controller("UsersController",["$q","$scope","$state","UserService","TeamService","TeamMembershipService","ModalService","Notifications","Authentication","SettingsService",function(e,t,n,r,i,o,s,l,c,d){var u,p;t.state={userCreationError:"",validUsername:!1,actionInProgress:!1},t.formValues={Username:"",Password:"",ConfirmPassword:"",Administrator:!1,Teams:[]},t.checkUsernameValidity=function(){for(var e=!0,n=0;n<t.users.length;n++)if(t.formValues.Username===t.users[n].Username){e=!1;break}t.state.validUsername=e,t.state.userCreationError=e?"":"Username already taken"},t.addUser=function(){t.state.actionInProgress=!0,t.state.userCreationError="";var e=t.formValues.Username,a=t.formValues.Password,i=t.formValues.Administrator?1:2,o=[];angular.forEach(t.formValues.Teams,(function(e){o.push(e.Id)})),r.createUser(e,a,i,o).then((function(){l.success("User successfully created",e),n.reload()})).catch((function(e){l.error("Failure",e,"Unable to create user")})).finally((function(){t.state.actionInProgress=!1}))},t.removeAction=function(e){s.confirmDeletion("Do you want to remove the selected users? They will not be able to login into Portainer anymore.",(function(a){a&&function(e){var a=e.length;angular.forEach(e,(function(e){r.deleteUser(e.Id).then((function(){l.success("User successfully removed",e.Username);var n=t.users.indexOf(e);t.users.splice(n,1)})).catch((function(e){l.error("Failure",e,"Unable to remove user")})).finally((function(){0===--a&&n.reload()}))}))}(e)}))},u=c.getUserDetails(),p=c.isAdmin(),t.isAdmin=p,e.all({users:r.users(!0),teams:p?i.teams():r.userLeadingTeams(u.ID),memberships:o.memberships(),settings:d.publicSettings()}).then((function(e){var n=e.users;!function(e,t){for(var n=0;n<e.length;n++){var a=e[n];a.isTeamLeader=!1;for(var r=0;r<t.length;r++){var i=t[r];if(a.Id===i.UserId&&1===i.Role){a.isTeamLeader=!0,a.RoleName="team leader";break}}}}(n,e.memberships),t.users=n,t.teams=Object(a.a)(e.teams,"Name","asc"),t.AuthenticationMethod=e.settings.AuthenticationMethod})).catch((function(e){l.error("Failure",e,"Unable to retrieve users and teams"),t.users=[],t.teams=[]}))}])},function(e,t,n){"use strict";n.r(t);n(1474),n(1475),n(1476),n(1477),n(1478),n(1479),n(1480),n(1481),n(1482),n(1483),n(1484),n(1485),n(1486),n(1487),n(1488);var a=n(1),r=n.n(a);n(3),n(1489),n(1511),n(1513),n(1515),n(1517),n(1519),n(1521),n(1523),n(1525),n(1527),n(1529),n(1530),n(1531),n(1533),n(1534),n(1535),n(1536),n(1537),n(1538),n(1539),n(1541),n(1542);window.angular=r.a}]);